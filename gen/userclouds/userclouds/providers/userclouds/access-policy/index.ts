// https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface AccessPolicyConfig extends cdktf.TerraformMetaArguments {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#components AccessPolicy#components}
  */
  readonly components?: AccessPolicyComponents[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#description AccessPolicy#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#id AccessPolicy#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Whether this policy is autogenerated from an accessor or mutator.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#is_autogenerated AccessPolicy#is_autogenerated}
  */
  readonly isAutogenerated?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#name AccessPolicy#name}
  */
  readonly name: string;
  /**
  * Valid values: `composite_and`, `composite_or`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#policy_type AccessPolicy#policy_type}
  */
  readonly policyType: string;
  /**
  * What context is required for this policy to be executed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#required_context AccessPolicy#required_context}
  */
  readonly requiredContext?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#tag_ids AccessPolicy#tag_ids}
  */
  readonly tagIds?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#thresholds AccessPolicy#thresholds}
  */
  readonly thresholds?: AccessPolicyThresholds;
}
export interface AccessPolicyComponents {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#policy AccessPolicy#policy}
  */
  readonly policy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#template AccessPolicy#template}
  */
  readonly template?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#template_parameters AccessPolicy#template_parameters}
  */
  readonly templateParameters?: string;
}

export function accessPolicyComponentsToTerraform(struct?: AccessPolicyComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    policy: cdktf.stringToTerraform(struct!.policy),
    template: cdktf.stringToTerraform(struct!.template),
    template_parameters: cdktf.stringToTerraform(struct!.templateParameters),
  }
}


export function accessPolicyComponentsToHclTerraform(struct?: AccessPolicyComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    policy: {
      value: cdktf.stringToHclTerraform(struct!.policy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    template: {
      value: cdktf.stringToHclTerraform(struct!.template),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    template_parameters: {
      value: cdktf.stringToHclTerraform(struct!.templateParameters),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class AccessPolicyComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): AccessPolicyComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._policy !== undefined) {
      hasAnyValues = true;
      internalValueResult.policy = this._policy;
    }
    if (this._template !== undefined) {
      hasAnyValues = true;
      internalValueResult.template = this._template;
    }
    if (this._templateParameters !== undefined) {
      hasAnyValues = true;
      internalValueResult.templateParameters = this._templateParameters;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: AccessPolicyComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._policy = undefined;
      this._template = undefined;
      this._templateParameters = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._policy = value.policy;
      this._template = value.template;
      this._templateParameters = value.templateParameters;
    }
  }

  // policy - computed: true, optional: true, required: false
  private _policy?: string; 
  public get policy() {
    return this.getStringAttribute('policy');
  }
  public set policy(value: string) {
    this._policy = value;
  }
  public resetPolicy() {
    this._policy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policyInput() {
    return this._policy;
  }

  // template - computed: true, optional: true, required: false
  private _template?: string; 
  public get template() {
    return this.getStringAttribute('template');
  }
  public set template(value: string) {
    this._template = value;
  }
  public resetTemplate() {
    this._template = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get templateInput() {
    return this._template;
  }

  // template_parameters - computed: true, optional: true, required: false
  private _templateParameters?: string; 
  public get templateParameters() {
    return this.getStringAttribute('template_parameters');
  }
  public set templateParameters(value: string) {
    this._templateParameters = value;
  }
  public resetTemplateParameters() {
    this._templateParameters = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get templateParametersInput() {
    return this._templateParameters;
  }
}

export class AccessPolicyComponentsList extends cdktf.ComplexList {
  public internalValue? : AccessPolicyComponents[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): AccessPolicyComponentsOutputReference {
    return new AccessPolicyComponentsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface AccessPolicyThresholds {
  /**
  * If true, we return '429 Too Many Requests' if max_executions is exceeded for the past max_execution_duration_seconds seconds.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#announce_max_execution_failure AccessPolicy#announce_max_execution_failure}
  */
  readonly announceMaxExecutionFailure?: boolean | cdktf.IResolvable;
  /**
  * If true, we return '400 Bad Request' if the action would involve more than max_results_per_execution results.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#announce_max_result_failure AccessPolicy#announce_max_result_failure}
  */
  readonly announceMaxResultFailure?: boolean | cdktf.IResolvable;
  /**
  * Specifies the duration in seconds over which we limit the max executions. If max_executions is non-zero, this value must be between 5 and 60, inclusive.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#max_execution_duration_seconds AccessPolicy#max_execution_duration_seconds}
  */
  readonly maxExecutionDurationSeconds?: number;
  /**
  * If non-zero, specifies the maximum number of executions for the past max_execution_duration_seconds seconds.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#max_executions AccessPolicy#max_executions}
  */
  readonly maxExecutions?: number;
  /**
  * If non-zero, specifies the max number of results that an action can involve.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#max_results_per_execution AccessPolicy#max_results_per_execution}
  */
  readonly maxResultsPerExecution?: number;
}

export function accessPolicyThresholdsToTerraform(struct?: AccessPolicyThresholds | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    announce_max_execution_failure: cdktf.booleanToTerraform(struct!.announceMaxExecutionFailure),
    announce_max_result_failure: cdktf.booleanToTerraform(struct!.announceMaxResultFailure),
    max_execution_duration_seconds: cdktf.numberToTerraform(struct!.maxExecutionDurationSeconds),
    max_executions: cdktf.numberToTerraform(struct!.maxExecutions),
    max_results_per_execution: cdktf.numberToTerraform(struct!.maxResultsPerExecution),
  }
}


export function accessPolicyThresholdsToHclTerraform(struct?: AccessPolicyThresholds | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    announce_max_execution_failure: {
      value: cdktf.booleanToHclTerraform(struct!.announceMaxExecutionFailure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    announce_max_result_failure: {
      value: cdktf.booleanToHclTerraform(struct!.announceMaxResultFailure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    max_execution_duration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.maxExecutionDurationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_executions: {
      value: cdktf.numberToHclTerraform(struct!.maxExecutions),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_results_per_execution: {
      value: cdktf.numberToHclTerraform(struct!.maxResultsPerExecution),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class AccessPolicyThresholdsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): AccessPolicyThresholds | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._announceMaxExecutionFailure !== undefined) {
      hasAnyValues = true;
      internalValueResult.announceMaxExecutionFailure = this._announceMaxExecutionFailure;
    }
    if (this._announceMaxResultFailure !== undefined) {
      hasAnyValues = true;
      internalValueResult.announceMaxResultFailure = this._announceMaxResultFailure;
    }
    if (this._maxExecutionDurationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxExecutionDurationSeconds = this._maxExecutionDurationSeconds;
    }
    if (this._maxExecutions !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxExecutions = this._maxExecutions;
    }
    if (this._maxResultsPerExecution !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxResultsPerExecution = this._maxResultsPerExecution;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: AccessPolicyThresholds | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._announceMaxExecutionFailure = undefined;
      this._announceMaxResultFailure = undefined;
      this._maxExecutionDurationSeconds = undefined;
      this._maxExecutions = undefined;
      this._maxResultsPerExecution = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._announceMaxExecutionFailure = value.announceMaxExecutionFailure;
      this._announceMaxResultFailure = value.announceMaxResultFailure;
      this._maxExecutionDurationSeconds = value.maxExecutionDurationSeconds;
      this._maxExecutions = value.maxExecutions;
      this._maxResultsPerExecution = value.maxResultsPerExecution;
    }
  }

  // announce_max_execution_failure - computed: true, optional: true, required: false
  private _announceMaxExecutionFailure?: boolean | cdktf.IResolvable; 
  public get announceMaxExecutionFailure() {
    return this.getBooleanAttribute('announce_max_execution_failure');
  }
  public set announceMaxExecutionFailure(value: boolean | cdktf.IResolvable) {
    this._announceMaxExecutionFailure = value;
  }
  public resetAnnounceMaxExecutionFailure() {
    this._announceMaxExecutionFailure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get announceMaxExecutionFailureInput() {
    return this._announceMaxExecutionFailure;
  }

  // announce_max_result_failure - computed: true, optional: true, required: false
  private _announceMaxResultFailure?: boolean | cdktf.IResolvable; 
  public get announceMaxResultFailure() {
    return this.getBooleanAttribute('announce_max_result_failure');
  }
  public set announceMaxResultFailure(value: boolean | cdktf.IResolvable) {
    this._announceMaxResultFailure = value;
  }
  public resetAnnounceMaxResultFailure() {
    this._announceMaxResultFailure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get announceMaxResultFailureInput() {
    return this._announceMaxResultFailure;
  }

  // max_execution_duration_seconds - computed: true, optional: true, required: false
  private _maxExecutionDurationSeconds?: number; 
  public get maxExecutionDurationSeconds() {
    return this.getNumberAttribute('max_execution_duration_seconds');
  }
  public set maxExecutionDurationSeconds(value: number) {
    this._maxExecutionDurationSeconds = value;
  }
  public resetMaxExecutionDurationSeconds() {
    this._maxExecutionDurationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxExecutionDurationSecondsInput() {
    return this._maxExecutionDurationSeconds;
  }

  // max_executions - computed: true, optional: true, required: false
  private _maxExecutions?: number; 
  public get maxExecutions() {
    return this.getNumberAttribute('max_executions');
  }
  public set maxExecutions(value: number) {
    this._maxExecutions = value;
  }
  public resetMaxExecutions() {
    this._maxExecutions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxExecutionsInput() {
    return this._maxExecutions;
  }

  // max_results_per_execution - computed: true, optional: true, required: false
  private _maxResultsPerExecution?: number; 
  public get maxResultsPerExecution() {
    return this.getNumberAttribute('max_results_per_execution');
  }
  public set maxResultsPerExecution(value: number) {
    this._maxResultsPerExecution = value;
  }
  public resetMaxResultsPerExecution() {
    this._maxResultsPerExecution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxResultsPerExecutionInput() {
    return this._maxResultsPerExecution;
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy userclouds_access_policy}
*/
export class AccessPolicy extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "userclouds_access_policy";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a AccessPolicy resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the AccessPolicy to import
  * @param importFromId The id of the existing AccessPolicy that should be imported. Refer to the {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the AccessPolicy to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "userclouds_access_policy", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/userclouds/userclouds/0.1.8/docs/resources/access_policy userclouds_access_policy} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options AccessPolicyConfig
  */
  public constructor(scope: Construct, id: string, config: AccessPolicyConfig) {
    super(scope, id, {
      terraformResourceType: 'userclouds_access_policy',
      terraformGeneratorMetadata: {
        providerName: 'userclouds',
        providerVersion: '0.1.8'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._components.internalValue = config.components;
    this._description = config.description;
    this._id = config.id;
    this._isAutogenerated = config.isAutogenerated;
    this._name = config.name;
    this._policyType = config.policyType;
    this._requiredContext = config.requiredContext;
    this._tagIds = config.tagIds;
    this._thresholds.internalValue = config.thresholds;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // components - computed: true, optional: true, required: false
  private _components = new AccessPolicyComponentsList(this, "components", false);
  public get components() {
    return this._components;
  }
  public putComponents(value: AccessPolicyComponents[] | cdktf.IResolvable) {
    this._components.internalValue = value;
  }
  public resetComponents() {
    this._components.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // description - computed: true, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // id - computed: true, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // is_autogenerated - computed: true, optional: true, required: false
  private _isAutogenerated?: boolean | cdktf.IResolvable; 
  public get isAutogenerated() {
    return this.getBooleanAttribute('is_autogenerated');
  }
  public set isAutogenerated(value: boolean | cdktf.IResolvable) {
    this._isAutogenerated = value;
  }
  public resetIsAutogenerated() {
    this._isAutogenerated = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isAutogeneratedInput() {
    return this._isAutogenerated;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // policy_type - computed: false, optional: false, required: true
  private _policyType?: string; 
  public get policyType() {
    return this.getStringAttribute('policy_type');
  }
  public set policyType(value: string) {
    this._policyType = value;
  }
  // Temporarily expose input value. Use with caution.
  public get policyTypeInput() {
    return this._policyType;
  }

  // required_context - computed: true, optional: true, required: false
  private _requiredContext?: { [key: string]: string }; 
  public get requiredContext() {
    return this.getStringMapAttribute('required_context');
  }
  public set requiredContext(value: { [key: string]: string }) {
    this._requiredContext = value;
  }
  public resetRequiredContext() {
    this._requiredContext = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredContextInput() {
    return this._requiredContext;
  }

  // tag_ids - computed: true, optional: true, required: false
  private _tagIds?: string[]; 
  public get tagIds() {
    return this.getListAttribute('tag_ids');
  }
  public set tagIds(value: string[]) {
    this._tagIds = value;
  }
  public resetTagIds() {
    this._tagIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagIdsInput() {
    return this._tagIds;
  }

  // thresholds - computed: true, optional: true, required: false
  private _thresholds = new AccessPolicyThresholdsOutputReference(this, "thresholds");
  public get thresholds() {
    return this._thresholds;
  }
  public putThresholds(value: AccessPolicyThresholds) {
    this._thresholds.internalValue = value;
  }
  public resetThresholds() {
    this._thresholds.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get thresholdsInput() {
    return this._thresholds.internalValue;
  }

  // version - computed: true, optional: false, required: false
  public get version() {
    return this.getNumberAttribute('version');
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      components: cdktf.listMapper(accessPolicyComponentsToTerraform, false)(this._components.internalValue),
      description: cdktf.stringToTerraform(this._description),
      id: cdktf.stringToTerraform(this._id),
      is_autogenerated: cdktf.booleanToTerraform(this._isAutogenerated),
      name: cdktf.stringToTerraform(this._name),
      policy_type: cdktf.stringToTerraform(this._policyType),
      required_context: cdktf.hashMapper(cdktf.stringToTerraform)(this._requiredContext),
      tag_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(this._tagIds),
      thresholds: accessPolicyThresholdsToTerraform(this._thresholds.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      components: {
        value: cdktf.listMapperHcl(accessPolicyComponentsToHclTerraform, false)(this._components.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "AccessPolicyComponentsList",
      },
      description: {
        value: cdktf.stringToHclTerraform(this._description),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      id: {
        value: cdktf.stringToHclTerraform(this._id),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      is_autogenerated: {
        value: cdktf.booleanToHclTerraform(this._isAutogenerated),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      name: {
        value: cdktf.stringToHclTerraform(this._name),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      policy_type: {
        value: cdktf.stringToHclTerraform(this._policyType),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      required_context: {
        value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(this._requiredContext),
        isBlock: false,
        type: "map",
        storageClassType: "stringMap",
      },
      tag_ids: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._tagIds),
        isBlock: false,
        type: "list",
        storageClassType: "stringList",
      },
      thresholds: {
        value: accessPolicyThresholdsToHclTerraform(this._thresholds.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "AccessPolicyThresholds",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
