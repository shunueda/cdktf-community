// https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface VulnerabilityReportConfig extends cdktf.TerraformMetaArguments {
  /**
  * Boolean value specifies whether a report is authoritative (or) not. Default value: false
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#authoritative VulnerabilityReport#authoritative}
  */
  readonly authoritative?: boolean | cdktf.IResolvable;
  /**
  * The timestamp (rfc3339 timestamp) at which this report was exported
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#exported_at VulnerabilityReport#exported_at}
  */
  readonly exportedAt?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#id VulnerabilityReport#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * User-generated name of the vulnerability report. The name should be up to 255 characters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#name VulnerabilityReport#name}
  */
  readonly name: string;
  /**
  * Vulnerability Report ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#reference_id VulnerabilityReport#reference_id}
  */
  readonly referenceId: string;
  /**
  * A string representing the type of the report
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#report_type VulnerabilityReport#report_type}
  */
  readonly reportType: string;
  /**
  * The IPs on which the scan was performed. IPv6 and IPv4. Max Items allowed: 100000
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#scanned_ips VulnerabilityReport#scanned_ips}
  */
  readonly scannedIps?: string[];
  /**
  * detected_vulnerabilities block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#detected_vulnerabilities VulnerabilityReport#detected_vulnerabilities}
  */
  readonly detectedVulnerabilities?: VulnerabilityReportDetectedVulnerabilities[] | cdktf.IResolvable;
}
export interface VulnerabilityReportDetectedVulnerabilitiesVulnerability {
  /**
  * URI of Vulnerability
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#href VulnerabilityReport#href}
  */
  readonly href: string;
}

export function vulnerabilityReportDetectedVulnerabilitiesVulnerabilityToTerraform(struct?: VulnerabilityReportDetectedVulnerabilitiesVulnerabilityOutputReference | VulnerabilityReportDetectedVulnerabilitiesVulnerability): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    href: cdktf.stringToTerraform(struct!.href),
  }
}


export function vulnerabilityReportDetectedVulnerabilitiesVulnerabilityToHclTerraform(struct?: VulnerabilityReportDetectedVulnerabilitiesVulnerabilityOutputReference | VulnerabilityReportDetectedVulnerabilitiesVulnerability): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    href: {
      value: cdktf.stringToHclTerraform(struct!.href),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class VulnerabilityReportDetectedVulnerabilitiesVulnerabilityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): VulnerabilityReportDetectedVulnerabilitiesVulnerability | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._href !== undefined) {
      hasAnyValues = true;
      internalValueResult.href = this._href;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: VulnerabilityReportDetectedVulnerabilitiesVulnerability | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._href = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._href = value.href;
    }
  }

  // href - computed: false, optional: false, required: true
  private _href?: string; 
  public get href() {
    return this.getStringAttribute('href');
  }
  public set href(value: string) {
    this._href = value;
  }
  // Temporarily expose input value. Use with caution.
  public get hrefInput() {
    return this._href;
  }
}
export interface VulnerabilityReportDetectedVulnerabilitiesWorkload {
  /**
  * URI of Workload
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#href VulnerabilityReport#href}
  */
  readonly href: string;
}

export function vulnerabilityReportDetectedVulnerabilitiesWorkloadToTerraform(struct?: VulnerabilityReportDetectedVulnerabilitiesWorkloadOutputReference | VulnerabilityReportDetectedVulnerabilitiesWorkload): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    href: cdktf.stringToTerraform(struct!.href),
  }
}


export function vulnerabilityReportDetectedVulnerabilitiesWorkloadToHclTerraform(struct?: VulnerabilityReportDetectedVulnerabilitiesWorkloadOutputReference | VulnerabilityReportDetectedVulnerabilitiesWorkload): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    href: {
      value: cdktf.stringToHclTerraform(struct!.href),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class VulnerabilityReportDetectedVulnerabilitiesWorkloadOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): VulnerabilityReportDetectedVulnerabilitiesWorkload | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._href !== undefined) {
      hasAnyValues = true;
      internalValueResult.href = this._href;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: VulnerabilityReportDetectedVulnerabilitiesWorkload | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._href = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._href = value.href;
    }
  }

  // href - computed: false, optional: false, required: true
  private _href?: string; 
  public get href() {
    return this.getStringAttribute('href');
  }
  public set href(value: string) {
    this._href = value;
  }
  // Temporarily expose input value. Use with caution.
  public get hrefInput() {
    return this._href;
  }
}
export interface VulnerabilityReportDetectedVulnerabilities {
  /**
  * external data reference json string for vulnerability
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#external_data_reference VulnerabilityReport#external_data_reference}
  */
  readonly externalDataReference?: string;
  /**
  * The IP address of the host where the vulnerability is found. IPv4 or IPv6
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#ip_address VulnerabilityReport#ip_address}
  */
  readonly ipAddress: string;
  /**
  * The port that is associated with the vulnerability
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#port VulnerabilityReport#port}
  */
  readonly port?: string;
  /**
  * The protocol that is associated with the vulnerability
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#proto VulnerabilityReport#proto}
  */
  readonly proto?: string;
  /**
  * Detected vulnerability state. Allowed values are "active", and "fixed". Default value: "active"
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#state VulnerabilityReport#state}
  */
  readonly state?: string;
  /**
  * vulnerability block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#vulnerability VulnerabilityReport#vulnerability}
  */
  readonly vulnerability: VulnerabilityReportDetectedVulnerabilitiesVulnerability;
  /**
  * workload block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#workload VulnerabilityReport#workload}
  */
  readonly workload: VulnerabilityReportDetectedVulnerabilitiesWorkload;
}

export function vulnerabilityReportDetectedVulnerabilitiesToTerraform(struct?: VulnerabilityReportDetectedVulnerabilities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    external_data_reference: cdktf.stringToTerraform(struct!.externalDataReference),
    ip_address: cdktf.stringToTerraform(struct!.ipAddress),
    port: cdktf.stringToTerraform(struct!.port),
    proto: cdktf.stringToTerraform(struct!.proto),
    state: cdktf.stringToTerraform(struct!.state),
    vulnerability: vulnerabilityReportDetectedVulnerabilitiesVulnerabilityToTerraform(struct!.vulnerability),
    workload: vulnerabilityReportDetectedVulnerabilitiesWorkloadToTerraform(struct!.workload),
  }
}


export function vulnerabilityReportDetectedVulnerabilitiesToHclTerraform(struct?: VulnerabilityReportDetectedVulnerabilities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    external_data_reference: {
      value: cdktf.stringToHclTerraform(struct!.externalDataReference),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_address: {
      value: cdktf.stringToHclTerraform(struct!.ipAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    proto: {
      value: cdktf.stringToHclTerraform(struct!.proto),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    state: {
      value: cdktf.stringToHclTerraform(struct!.state),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vulnerability: {
      value: vulnerabilityReportDetectedVulnerabilitiesVulnerabilityToHclTerraform(struct!.vulnerability),
      isBlock: true,
      type: "list",
      storageClassType: "VulnerabilityReportDetectedVulnerabilitiesVulnerabilityList",
    },
    workload: {
      value: vulnerabilityReportDetectedVulnerabilitiesWorkloadToHclTerraform(struct!.workload),
      isBlock: true,
      type: "list",
      storageClassType: "VulnerabilityReportDetectedVulnerabilitiesWorkloadList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class VulnerabilityReportDetectedVulnerabilitiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): VulnerabilityReportDetectedVulnerabilities | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._externalDataReference !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalDataReference = this._externalDataReference;
    }
    if (this._ipAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipAddress = this._ipAddress;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._proto !== undefined) {
      hasAnyValues = true;
      internalValueResult.proto = this._proto;
    }
    if (this._state !== undefined) {
      hasAnyValues = true;
      internalValueResult.state = this._state;
    }
    if (this._vulnerability?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vulnerability = this._vulnerability?.internalValue;
    }
    if (this._workload?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.workload = this._workload?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: VulnerabilityReportDetectedVulnerabilities | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._externalDataReference = undefined;
      this._ipAddress = undefined;
      this._port = undefined;
      this._proto = undefined;
      this._state = undefined;
      this._vulnerability.internalValue = undefined;
      this._workload.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._externalDataReference = value.externalDataReference;
      this._ipAddress = value.ipAddress;
      this._port = value.port;
      this._proto = value.proto;
      this._state = value.state;
      this._vulnerability.internalValue = value.vulnerability;
      this._workload.internalValue = value.workload;
    }
  }

  // external_data_reference - computed: false, optional: true, required: false
  private _externalDataReference?: string; 
  public get externalDataReference() {
    return this.getStringAttribute('external_data_reference');
  }
  public set externalDataReference(value: string) {
    this._externalDataReference = value;
  }
  public resetExternalDataReference() {
    this._externalDataReference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalDataReferenceInput() {
    return this._externalDataReference;
  }

  // ip_address - computed: false, optional: false, required: true
  private _ipAddress?: string; 
  public get ipAddress() {
    return this.getStringAttribute('ip_address');
  }
  public set ipAddress(value: string) {
    this._ipAddress = value;
  }
  // Temporarily expose input value. Use with caution.
  public get ipAddressInput() {
    return this._ipAddress;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // proto - computed: false, optional: true, required: false
  private _proto?: string; 
  public get proto() {
    return this.getStringAttribute('proto');
  }
  public set proto(value: string) {
    this._proto = value;
  }
  public resetProto() {
    this._proto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protoInput() {
    return this._proto;
  }

  // state - computed: false, optional: true, required: false
  private _state?: string; 
  public get state() {
    return this.getStringAttribute('state');
  }
  public set state(value: string) {
    this._state = value;
  }
  public resetState() {
    this._state = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stateInput() {
    return this._state;
  }

  // vulnerability - computed: false, optional: false, required: true
  private _vulnerability = new VulnerabilityReportDetectedVulnerabilitiesVulnerabilityOutputReference(this, "vulnerability");
  public get vulnerability() {
    return this._vulnerability;
  }
  public putVulnerability(value: VulnerabilityReportDetectedVulnerabilitiesVulnerability) {
    this._vulnerability.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get vulnerabilityInput() {
    return this._vulnerability.internalValue;
  }

  // workload - computed: false, optional: false, required: true
  private _workload = new VulnerabilityReportDetectedVulnerabilitiesWorkloadOutputReference(this, "workload");
  public get workload() {
    return this._workload;
  }
  public putWorkload(value: VulnerabilityReportDetectedVulnerabilitiesWorkload) {
    this._workload.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get workloadInput() {
    return this._workload.internalValue;
  }
}

export class VulnerabilityReportDetectedVulnerabilitiesList extends cdktf.ComplexList {
  public internalValue? : VulnerabilityReportDetectedVulnerabilities[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): VulnerabilityReportDetectedVulnerabilitiesOutputReference {
    return new VulnerabilityReportDetectedVulnerabilitiesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report illumio-core_vulnerability_report}
*/
export class VulnerabilityReport extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "illumio-core_vulnerability_report";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a VulnerabilityReport resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the VulnerabilityReport to import
  * @param importFromId The id of the existing VulnerabilityReport that should be imported. Refer to the {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the VulnerabilityReport to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "illumio-core_vulnerability_report", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/illumio/illumio-core/1.1.6/docs/resources/vulnerability_report illumio-core_vulnerability_report} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options VulnerabilityReportConfig
  */
  public constructor(scope: Construct, id: string, config: VulnerabilityReportConfig) {
    super(scope, id, {
      terraformResourceType: 'illumio-core_vulnerability_report',
      terraformGeneratorMetadata: {
        providerName: 'illumio-core',
        providerVersion: '1.1.6'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._authoritative = config.authoritative;
    this._exportedAt = config.exportedAt;
    this._id = config.id;
    this._name = config.name;
    this._referenceId = config.referenceId;
    this._reportType = config.reportType;
    this._scannedIps = config.scannedIps;
    this._detectedVulnerabilities.internalValue = config.detectedVulnerabilities;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // authoritative - computed: false, optional: true, required: false
  private _authoritative?: boolean | cdktf.IResolvable; 
  public get authoritative() {
    return this.getBooleanAttribute('authoritative');
  }
  public set authoritative(value: boolean | cdktf.IResolvable) {
    this._authoritative = value;
  }
  public resetAuthoritative() {
    this._authoritative = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authoritativeInput() {
    return this._authoritative;
  }

  // created_at - computed: true, optional: false, required: false
  public get createdAt() {
    return this.getStringAttribute('created_at');
  }

  // created_by - computed: true, optional: false, required: false
  private _createdBy = new cdktf.StringMap(this, "created_by");
  public get createdBy() {
    return this._createdBy;
  }

  // exported_at - computed: false, optional: true, required: false
  private _exportedAt?: string; 
  public get exportedAt() {
    return this.getStringAttribute('exported_at');
  }
  public set exportedAt(value: string) {
    this._exportedAt = value;
  }
  public resetExportedAt() {
    this._exportedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exportedAtInput() {
    return this._exportedAt;
  }

  // href - computed: true, optional: false, required: false
  public get href() {
    return this.getStringAttribute('href');
  }

  // id - computed: true, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // num_vulnerabilities - computed: true, optional: false, required: false
  public get numVulnerabilities() {
    return this.getNumberAttribute('num_vulnerabilities');
  }

  // reference_id - computed: false, optional: false, required: true
  private _referenceId?: string; 
  public get referenceId() {
    return this.getStringAttribute('reference_id');
  }
  public set referenceId(value: string) {
    this._referenceId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get referenceIdInput() {
    return this._referenceId;
  }

  // report_type - computed: false, optional: false, required: true
  private _reportType?: string; 
  public get reportType() {
    return this.getStringAttribute('report_type');
  }
  public set reportType(value: string) {
    this._reportType = value;
  }
  // Temporarily expose input value. Use with caution.
  public get reportTypeInput() {
    return this._reportType;
  }

  // scanned_ips - computed: false, optional: true, required: false
  private _scannedIps?: string[]; 
  public get scannedIps() {
    return cdktf.Fn.tolist(this.getListAttribute('scanned_ips'));
  }
  public set scannedIps(value: string[]) {
    this._scannedIps = value;
  }
  public resetScannedIps() {
    this._scannedIps = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scannedIpsInput() {
    return this._scannedIps;
  }

  // updated_at - computed: true, optional: false, required: false
  public get updatedAt() {
    return this.getStringAttribute('updated_at');
  }

  // updated_by - computed: true, optional: false, required: false
  private _updatedBy = new cdktf.StringMap(this, "updated_by");
  public get updatedBy() {
    return this._updatedBy;
  }

  // detected_vulnerabilities - computed: false, optional: true, required: false
  private _detectedVulnerabilities = new VulnerabilityReportDetectedVulnerabilitiesList(this, "detected_vulnerabilities", true);
  public get detectedVulnerabilities() {
    return this._detectedVulnerabilities;
  }
  public putDetectedVulnerabilities(value: VulnerabilityReportDetectedVulnerabilities[] | cdktf.IResolvable) {
    this._detectedVulnerabilities.internalValue = value;
  }
  public resetDetectedVulnerabilities() {
    this._detectedVulnerabilities.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get detectedVulnerabilitiesInput() {
    return this._detectedVulnerabilities.internalValue;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      authoritative: cdktf.booleanToTerraform(this._authoritative),
      exported_at: cdktf.stringToTerraform(this._exportedAt),
      id: cdktf.stringToTerraform(this._id),
      name: cdktf.stringToTerraform(this._name),
      reference_id: cdktf.stringToTerraform(this._referenceId),
      report_type: cdktf.stringToTerraform(this._reportType),
      scanned_ips: cdktf.listMapper(cdktf.stringToTerraform, false)(this._scannedIps),
      detected_vulnerabilities: cdktf.listMapper(vulnerabilityReportDetectedVulnerabilitiesToTerraform, true)(this._detectedVulnerabilities.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      authoritative: {
        value: cdktf.booleanToHclTerraform(this._authoritative),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      exported_at: {
        value: cdktf.stringToHclTerraform(this._exportedAt),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      id: {
        value: cdktf.stringToHclTerraform(this._id),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      name: {
        value: cdktf.stringToHclTerraform(this._name),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      reference_id: {
        value: cdktf.stringToHclTerraform(this._referenceId),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      report_type: {
        value: cdktf.stringToHclTerraform(this._reportType),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      scanned_ips: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._scannedIps),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      detected_vulnerabilities: {
        value: cdktf.listMapperHcl(vulnerabilityReportDetectedVulnerabilitiesToHclTerraform, true)(this._detectedVulnerabilities.internalValue),
        isBlock: true,
        type: "set",
        storageClassType: "VulnerabilityReportDetectedVulnerabilitiesList",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
