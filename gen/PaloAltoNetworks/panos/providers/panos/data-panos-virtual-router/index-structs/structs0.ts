import * as cdktf from 'cdktf';
export interface DataPanosVirtualRouterAdministrativeDistances {
  /**
  * administrative distance used for eBGP routes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ebgp DataPanosVirtualRouter#ebgp}
  */
  readonly ebgp?: number;
  /**
  * administrative distance used for iBGP routes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ibgp DataPanosVirtualRouter#ibgp}
  */
  readonly ibgp?: number;
  /**
  * administrative distance used for OSPF external routes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ospf_ext DataPanosVirtualRouter#ospf_ext}
  */
  readonly ospfExt?: number;
  /**
  * administrative distance used for OSPF internal routes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ospf_int DataPanosVirtualRouter#ospf_int}
  */
  readonly ospfInt?: number;
  /**
  * administrative distance used for OSPFv3 external routes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ospfv3_ext DataPanosVirtualRouter#ospfv3_ext}
  */
  readonly ospfv3Ext?: number;
  /**
  * administrative distance used for OSPFv3 internal routes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ospfv3_int DataPanosVirtualRouter#ospfv3_int}
  */
  readonly ospfv3Int?: number;
  /**
  * administrative distance used for RIP routes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#rip DataPanosVirtualRouter#rip}
  */
  readonly rip?: number;
  /**
  * administrative distance used for static routes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#static DataPanosVirtualRouter#static}
  */
  readonly static?: number;
  /**
  * administrative distance used for ipv6 static routes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#static_ipv6 DataPanosVirtualRouter#static_ipv6}
  */
  readonly staticIpv6?: number;
}

export function dataPanosVirtualRouterAdministrativeDistancesToTerraform(struct?: DataPanosVirtualRouterAdministrativeDistances | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ebgp: cdktf.numberToTerraform(struct!.ebgp),
    ibgp: cdktf.numberToTerraform(struct!.ibgp),
    ospf_ext: cdktf.numberToTerraform(struct!.ospfExt),
    ospf_int: cdktf.numberToTerraform(struct!.ospfInt),
    ospfv3_ext: cdktf.numberToTerraform(struct!.ospfv3Ext),
    ospfv3_int: cdktf.numberToTerraform(struct!.ospfv3Int),
    rip: cdktf.numberToTerraform(struct!.rip),
    static: cdktf.numberToTerraform(struct!.static),
    static_ipv6: cdktf.numberToTerraform(struct!.staticIpv6),
  }
}


export function dataPanosVirtualRouterAdministrativeDistancesToHclTerraform(struct?: DataPanosVirtualRouterAdministrativeDistances | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ebgp: {
      value: cdktf.numberToHclTerraform(struct!.ebgp),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ibgp: {
      value: cdktf.numberToHclTerraform(struct!.ibgp),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ospf_ext: {
      value: cdktf.numberToHclTerraform(struct!.ospfExt),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ospf_int: {
      value: cdktf.numberToHclTerraform(struct!.ospfInt),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ospfv3_ext: {
      value: cdktf.numberToHclTerraform(struct!.ospfv3Ext),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ospfv3_int: {
      value: cdktf.numberToHclTerraform(struct!.ospfv3Int),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rip: {
      value: cdktf.numberToHclTerraform(struct!.rip),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    static: {
      value: cdktf.numberToHclTerraform(struct!.static),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    static_ipv6: {
      value: cdktf.numberToHclTerraform(struct!.staticIpv6),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterAdministrativeDistancesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterAdministrativeDistances | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._ebgp !== undefined) {
      hasAnyValues = true;
      internalValueResult.ebgp = this._ebgp;
    }
    if (this._ibgp !== undefined) {
      hasAnyValues = true;
      internalValueResult.ibgp = this._ibgp;
    }
    if (this._ospfExt !== undefined) {
      hasAnyValues = true;
      internalValueResult.ospfExt = this._ospfExt;
    }
    if (this._ospfInt !== undefined) {
      hasAnyValues = true;
      internalValueResult.ospfInt = this._ospfInt;
    }
    if (this._ospfv3Ext !== undefined) {
      hasAnyValues = true;
      internalValueResult.ospfv3Ext = this._ospfv3Ext;
    }
    if (this._ospfv3Int !== undefined) {
      hasAnyValues = true;
      internalValueResult.ospfv3Int = this._ospfv3Int;
    }
    if (this._rip !== undefined) {
      hasAnyValues = true;
      internalValueResult.rip = this._rip;
    }
    if (this._static !== undefined) {
      hasAnyValues = true;
      internalValueResult.static = this._static;
    }
    if (this._staticIpv6 !== undefined) {
      hasAnyValues = true;
      internalValueResult.staticIpv6 = this._staticIpv6;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterAdministrativeDistances | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._ebgp = undefined;
      this._ibgp = undefined;
      this._ospfExt = undefined;
      this._ospfInt = undefined;
      this._ospfv3Ext = undefined;
      this._ospfv3Int = undefined;
      this._rip = undefined;
      this._static = undefined;
      this._staticIpv6 = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._ebgp = value.ebgp;
      this._ibgp = value.ibgp;
      this._ospfExt = value.ospfExt;
      this._ospfInt = value.ospfInt;
      this._ospfv3Ext = value.ospfv3Ext;
      this._ospfv3Int = value.ospfv3Int;
      this._rip = value.rip;
      this._static = value.static;
      this._staticIpv6 = value.staticIpv6;
    }
  }

  // ebgp - computed: true, optional: true, required: false
  private _ebgp?: number; 
  public get ebgp() {
    return this.getNumberAttribute('ebgp');
  }
  public set ebgp(value: number) {
    this._ebgp = value;
  }
  public resetEbgp() {
    this._ebgp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ebgpInput() {
    return this._ebgp;
  }

  // ibgp - computed: true, optional: true, required: false
  private _ibgp?: number; 
  public get ibgp() {
    return this.getNumberAttribute('ibgp');
  }
  public set ibgp(value: number) {
    this._ibgp = value;
  }
  public resetIbgp() {
    this._ibgp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ibgpInput() {
    return this._ibgp;
  }

  // ospf_ext - computed: true, optional: true, required: false
  private _ospfExt?: number; 
  public get ospfExt() {
    return this.getNumberAttribute('ospf_ext');
  }
  public set ospfExt(value: number) {
    this._ospfExt = value;
  }
  public resetOspfExt() {
    this._ospfExt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ospfExtInput() {
    return this._ospfExt;
  }

  // ospf_int - computed: true, optional: true, required: false
  private _ospfInt?: number; 
  public get ospfInt() {
    return this.getNumberAttribute('ospf_int');
  }
  public set ospfInt(value: number) {
    this._ospfInt = value;
  }
  public resetOspfInt() {
    this._ospfInt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ospfIntInput() {
    return this._ospfInt;
  }

  // ospfv3_ext - computed: true, optional: true, required: false
  private _ospfv3Ext?: number; 
  public get ospfv3Ext() {
    return this.getNumberAttribute('ospfv3_ext');
  }
  public set ospfv3Ext(value: number) {
    this._ospfv3Ext = value;
  }
  public resetOspfv3Ext() {
    this._ospfv3Ext = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ospfv3ExtInput() {
    return this._ospfv3Ext;
  }

  // ospfv3_int - computed: true, optional: true, required: false
  private _ospfv3Int?: number; 
  public get ospfv3Int() {
    return this.getNumberAttribute('ospfv3_int');
  }
  public set ospfv3Int(value: number) {
    this._ospfv3Int = value;
  }
  public resetOspfv3Int() {
    this._ospfv3Int = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ospfv3IntInput() {
    return this._ospfv3Int;
  }

  // rip - computed: true, optional: true, required: false
  private _rip?: number; 
  public get rip() {
    return this.getNumberAttribute('rip');
  }
  public set rip(value: number) {
    this._rip = value;
  }
  public resetRip() {
    this._rip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ripInput() {
    return this._rip;
  }

  // static - computed: true, optional: true, required: false
  private _static?: number; 
  public get static() {
    return this.getNumberAttribute('static');
  }
  public set static(value: number) {
    this._static = value;
  }
  public resetStatic() {
    this._static = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get staticInput() {
    return this._static;
  }

  // static_ipv6 - computed: true, optional: true, required: false
  private _staticIpv6?: number; 
  public get staticIpv6() {
    return this.getNumberAttribute('static_ipv6');
  }
  public set staticIpv6(value: number) {
    this._staticIpv6 = value;
  }
  public resetStaticIpv6() {
    this._staticIpv6 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get staticIpv6Input() {
    return this._staticIpv6;
  }
}
export interface DataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobin {
}

export function dataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobinToTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobin | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobinToHclTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobin | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobinOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobin | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobin | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterEcmpAlgorithmIpHash {
  /**
  * User-specified hash seed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#hash_seed DataPanosVirtualRouter#hash_seed}
  */
  readonly hashSeed?: number;
  /**
  * only use source address for hash
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#src_only DataPanosVirtualRouter#src_only}
  */
  readonly srcOnly?: boolean | cdktf.IResolvable;
  /**
  * use source/destination port for hash
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#use_port DataPanosVirtualRouter#use_port}
  */
  readonly usePort?: boolean | cdktf.IResolvable;
}

export function dataPanosVirtualRouterEcmpAlgorithmIpHashToTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithmIpHash | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    hash_seed: cdktf.numberToTerraform(struct!.hashSeed),
    src_only: cdktf.booleanToTerraform(struct!.srcOnly),
    use_port: cdktf.booleanToTerraform(struct!.usePort),
  }
}


export function dataPanosVirtualRouterEcmpAlgorithmIpHashToHclTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithmIpHash | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    hash_seed: {
      value: cdktf.numberToHclTerraform(struct!.hashSeed),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    src_only: {
      value: cdktf.booleanToHclTerraform(struct!.srcOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_port: {
      value: cdktf.booleanToHclTerraform(struct!.usePort),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterEcmpAlgorithmIpHashOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterEcmpAlgorithmIpHash | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._hashSeed !== undefined) {
      hasAnyValues = true;
      internalValueResult.hashSeed = this._hashSeed;
    }
    if (this._srcOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.srcOnly = this._srcOnly;
    }
    if (this._usePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePort = this._usePort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterEcmpAlgorithmIpHash | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._hashSeed = undefined;
      this._srcOnly = undefined;
      this._usePort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._hashSeed = value.hashSeed;
      this._srcOnly = value.srcOnly;
      this._usePort = value.usePort;
    }
  }

  // hash_seed - computed: true, optional: true, required: false
  private _hashSeed?: number; 
  public get hashSeed() {
    return this.getNumberAttribute('hash_seed');
  }
  public set hashSeed(value: number) {
    this._hashSeed = value;
  }
  public resetHashSeed() {
    this._hashSeed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hashSeedInput() {
    return this._hashSeed;
  }

  // src_only - computed: true, optional: true, required: false
  private _srcOnly?: boolean | cdktf.IResolvable; 
  public get srcOnly() {
    return this.getBooleanAttribute('src_only');
  }
  public set srcOnly(value: boolean | cdktf.IResolvable) {
    this._srcOnly = value;
  }
  public resetSrcOnly() {
    this._srcOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get srcOnlyInput() {
    return this._srcOnly;
  }

  // use_port - computed: true, optional: true, required: false
  private _usePort?: boolean | cdktf.IResolvable; 
  public get usePort() {
    return this.getBooleanAttribute('use_port');
  }
  public set usePort(value: boolean | cdktf.IResolvable) {
    this._usePort = value;
  }
  public resetUsePort() {
    this._usePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePortInput() {
    return this._usePort;
  }
}
export interface DataPanosVirtualRouterEcmpAlgorithmIpModulo {
}

export function dataPanosVirtualRouterEcmpAlgorithmIpModuloToTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithmIpModulo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterEcmpAlgorithmIpModuloToHclTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithmIpModulo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterEcmpAlgorithmIpModuloOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterEcmpAlgorithmIpModulo | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterEcmpAlgorithmIpModulo | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterface {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * interface ECMP weight
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#weight DataPanosVirtualRouter#weight}
  */
  readonly weight?: number;
}

export function dataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterfaceToTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterface | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterfaceToHclTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterface | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterfaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterface | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterface | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._weight = value.weight;
    }
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // weight - computed: true, optional: true, required: false
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  public resetWeight() {
    this._weight = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}

export class DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterfaceList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterface[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterfaceOutputReference {
    return new DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterfaceOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobin {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#interface DataPanosVirtualRouter#interface}
  */
  readonly interface?: DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterface[] | cdktf.IResolvable;
}

export function dataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinToTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobin | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    interface: cdktf.listMapper(dataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterfaceToTerraform, false)(struct!.interface),
  }
}


export function dataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinToHclTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobin | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    interface: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterfaceToHclTerraform, false)(struct!.interface),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterfaceList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobin | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._interface?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.interface = this._interface?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobin | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._interface.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._interface.internalValue = value.interface;
    }
  }

  // interface - computed: true, optional: true, required: false
  private _interface = new DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterfaceList(this, "interface", false);
  public get interface() {
    return this._interface;
  }
  public putInterface(value: DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinInterface[] | cdktf.IResolvable) {
    this._interface.internalValue = value;
  }
  public resetInterface() {
    this._interface.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get interfaceInput() {
    return this._interface.internalValue;
  }
}
export interface DataPanosVirtualRouterEcmpAlgorithm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#balanced_round_robin DataPanosVirtualRouter#balanced_round_robin}
  */
  readonly balancedRoundRobin?: DataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobin;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ip_hash DataPanosVirtualRouter#ip_hash}
  */
  readonly ipHash?: DataPanosVirtualRouterEcmpAlgorithmIpHash;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ip_modulo DataPanosVirtualRouter#ip_modulo}
  */
  readonly ipModulo?: DataPanosVirtualRouterEcmpAlgorithmIpModulo;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#weighted_round_robin DataPanosVirtualRouter#weighted_round_robin}
  */
  readonly weightedRoundRobin?: DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobin;
}

export function dataPanosVirtualRouterEcmpAlgorithmToTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    balanced_round_robin: dataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobinToTerraform(struct!.balancedRoundRobin),
    ip_hash: dataPanosVirtualRouterEcmpAlgorithmIpHashToTerraform(struct!.ipHash),
    ip_modulo: dataPanosVirtualRouterEcmpAlgorithmIpModuloToTerraform(struct!.ipModulo),
    weighted_round_robin: dataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinToTerraform(struct!.weightedRoundRobin),
  }
}


export function dataPanosVirtualRouterEcmpAlgorithmToHclTerraform(struct?: DataPanosVirtualRouterEcmpAlgorithm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    balanced_round_robin: {
      value: dataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobinToHclTerraform(struct!.balancedRoundRobin),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobin",
    },
    ip_hash: {
      value: dataPanosVirtualRouterEcmpAlgorithmIpHashToHclTerraform(struct!.ipHash),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterEcmpAlgorithmIpHash",
    },
    ip_modulo: {
      value: dataPanosVirtualRouterEcmpAlgorithmIpModuloToHclTerraform(struct!.ipModulo),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterEcmpAlgorithmIpModulo",
    },
    weighted_round_robin: {
      value: dataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinToHclTerraform(struct!.weightedRoundRobin),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobin",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterEcmpAlgorithmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterEcmpAlgorithm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._balancedRoundRobin?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.balancedRoundRobin = this._balancedRoundRobin?.internalValue;
    }
    if (this._ipHash?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipHash = this._ipHash?.internalValue;
    }
    if (this._ipModulo?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipModulo = this._ipModulo?.internalValue;
    }
    if (this._weightedRoundRobin?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.weightedRoundRobin = this._weightedRoundRobin?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterEcmpAlgorithm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._balancedRoundRobin.internalValue = undefined;
      this._ipHash.internalValue = undefined;
      this._ipModulo.internalValue = undefined;
      this._weightedRoundRobin.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._balancedRoundRobin.internalValue = value.balancedRoundRobin;
      this._ipHash.internalValue = value.ipHash;
      this._ipModulo.internalValue = value.ipModulo;
      this._weightedRoundRobin.internalValue = value.weightedRoundRobin;
    }
  }

  // balanced_round_robin - computed: true, optional: true, required: false
  private _balancedRoundRobin = new DataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobinOutputReference(this, "balanced_round_robin");
  public get balancedRoundRobin() {
    return this._balancedRoundRobin;
  }
  public putBalancedRoundRobin(value: DataPanosVirtualRouterEcmpAlgorithmBalancedRoundRobin) {
    this._balancedRoundRobin.internalValue = value;
  }
  public resetBalancedRoundRobin() {
    this._balancedRoundRobin.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get balancedRoundRobinInput() {
    return this._balancedRoundRobin.internalValue;
  }

  // ip_hash - computed: true, optional: true, required: false
  private _ipHash = new DataPanosVirtualRouterEcmpAlgorithmIpHashOutputReference(this, "ip_hash");
  public get ipHash() {
    return this._ipHash;
  }
  public putIpHash(value: DataPanosVirtualRouterEcmpAlgorithmIpHash) {
    this._ipHash.internalValue = value;
  }
  public resetIpHash() {
    this._ipHash.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipHashInput() {
    return this._ipHash.internalValue;
  }

  // ip_modulo - computed: true, optional: true, required: false
  private _ipModulo = new DataPanosVirtualRouterEcmpAlgorithmIpModuloOutputReference(this, "ip_modulo");
  public get ipModulo() {
    return this._ipModulo;
  }
  public putIpModulo(value: DataPanosVirtualRouterEcmpAlgorithmIpModulo) {
    this._ipModulo.internalValue = value;
  }
  public resetIpModulo() {
    this._ipModulo.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipModuloInput() {
    return this._ipModulo.internalValue;
  }

  // weighted_round_robin - computed: true, optional: true, required: false
  private _weightedRoundRobin = new DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobinOutputReference(this, "weighted_round_robin");
  public get weightedRoundRobin() {
    return this._weightedRoundRobin;
  }
  public putWeightedRoundRobin(value: DataPanosVirtualRouterEcmpAlgorithmWeightedRoundRobin) {
    this._weightedRoundRobin.internalValue = value;
  }
  public resetWeightedRoundRobin() {
    this._weightedRoundRobin.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get weightedRoundRobinInput() {
    return this._weightedRoundRobin.internalValue;
  }
}
export interface DataPanosVirtualRouterEcmp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#algorithm DataPanosVirtualRouter#algorithm}
  */
  readonly algorithm?: DataPanosVirtualRouterEcmpAlgorithm;
  /**
  * enable Equal Cost Multipath routing, change this configuration will result in a virtual router restart
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Maxmum number of ECMP paths supported, change this configuration will result in a virtual router restart
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#max_paths DataPanosVirtualRouter#max_paths}
  */
  readonly maxPaths?: number;
  /**
  * force VPN traffic to exit interface that the source-ip belongs to
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#strict_source_path DataPanosVirtualRouter#strict_source_path}
  */
  readonly strictSourcePath?: boolean | cdktf.IResolvable;
  /**
  * allows return packets to egress out of the ingress interface of the flow
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#symmetric_return DataPanosVirtualRouter#symmetric_return}
  */
  readonly symmetricReturn?: boolean | cdktf.IResolvable;
}

export function dataPanosVirtualRouterEcmpToTerraform(struct?: DataPanosVirtualRouterEcmp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    algorithm: dataPanosVirtualRouterEcmpAlgorithmToTerraform(struct!.algorithm),
    enable: cdktf.booleanToTerraform(struct!.enable),
    max_paths: cdktf.numberToTerraform(struct!.maxPaths),
    strict_source_path: cdktf.booleanToTerraform(struct!.strictSourcePath),
    symmetric_return: cdktf.booleanToTerraform(struct!.symmetricReturn),
  }
}


export function dataPanosVirtualRouterEcmpToHclTerraform(struct?: DataPanosVirtualRouterEcmp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    algorithm: {
      value: dataPanosVirtualRouterEcmpAlgorithmToHclTerraform(struct!.algorithm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterEcmpAlgorithm",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    max_paths: {
      value: cdktf.numberToHclTerraform(struct!.maxPaths),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    strict_source_path: {
      value: cdktf.booleanToHclTerraform(struct!.strictSourcePath),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    symmetric_return: {
      value: cdktf.booleanToHclTerraform(struct!.symmetricReturn),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterEcmpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterEcmp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._algorithm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.algorithm = this._algorithm?.internalValue;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._maxPaths !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxPaths = this._maxPaths;
    }
    if (this._strictSourcePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.strictSourcePath = this._strictSourcePath;
    }
    if (this._symmetricReturn !== undefined) {
      hasAnyValues = true;
      internalValueResult.symmetricReturn = this._symmetricReturn;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterEcmp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._algorithm.internalValue = undefined;
      this._enable = undefined;
      this._maxPaths = undefined;
      this._strictSourcePath = undefined;
      this._symmetricReturn = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._algorithm.internalValue = value.algorithm;
      this._enable = value.enable;
      this._maxPaths = value.maxPaths;
      this._strictSourcePath = value.strictSourcePath;
      this._symmetricReturn = value.symmetricReturn;
    }
  }

  // algorithm - computed: true, optional: true, required: false
  private _algorithm = new DataPanosVirtualRouterEcmpAlgorithmOutputReference(this, "algorithm");
  public get algorithm() {
    return this._algorithm;
  }
  public putAlgorithm(value: DataPanosVirtualRouterEcmpAlgorithm) {
    this._algorithm.internalValue = value;
  }
  public resetAlgorithm() {
    this._algorithm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get algorithmInput() {
    return this._algorithm.internalValue;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // max_paths - computed: true, optional: true, required: false
  private _maxPaths?: number; 
  public get maxPaths() {
    return this.getNumberAttribute('max_paths');
  }
  public set maxPaths(value: number) {
    this._maxPaths = value;
  }
  public resetMaxPaths() {
    this._maxPaths = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxPathsInput() {
    return this._maxPaths;
  }

  // strict_source_path - computed: true, optional: true, required: false
  private _strictSourcePath?: boolean | cdktf.IResolvable; 
  public get strictSourcePath() {
    return this.getBooleanAttribute('strict_source_path');
  }
  public set strictSourcePath(value: boolean | cdktf.IResolvable) {
    this._strictSourcePath = value;
  }
  public resetStrictSourcePath() {
    this._strictSourcePath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get strictSourcePathInput() {
    return this._strictSourcePath;
  }

  // symmetric_return - computed: true, optional: true, required: false
  private _symmetricReturn?: boolean | cdktf.IResolvable; 
  public get symmetricReturn() {
    return this.getBooleanAttribute('symmetric_return');
  }
  public set symmetricReturn(value: boolean | cdktf.IResolvable) {
    this._symmetricReturn = value;
  }
  public resetSymmetricReturn() {
    this._symmetricReturn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get symmetricReturnInput() {
    return this._symmetricReturn;
  }
}
export interface DataPanosVirtualRouterLocationNgfw {
  /**
  * The NGFW device
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ngfw_device DataPanosVirtualRouter#ngfw_device}
  */
  readonly ngfwDevice?: string;
}

export function dataPanosVirtualRouterLocationNgfwToTerraform(struct?: DataPanosVirtualRouterLocationNgfw | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ngfw_device: cdktf.stringToTerraform(struct!.ngfwDevice),
  }
}


export function dataPanosVirtualRouterLocationNgfwToHclTerraform(struct?: DataPanosVirtualRouterLocationNgfw | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ngfw_device: {
      value: cdktf.stringToHclTerraform(struct!.ngfwDevice),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterLocationNgfwOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterLocationNgfw | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._ngfwDevice !== undefined) {
      hasAnyValues = true;
      internalValueResult.ngfwDevice = this._ngfwDevice;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterLocationNgfw | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._ngfwDevice = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._ngfwDevice = value.ngfwDevice;
    }
  }

  // ngfw_device - computed: true, optional: true, required: false
  private _ngfwDevice?: string; 
  public get ngfwDevice() {
    return this.getStringAttribute('ngfw_device');
  }
  public set ngfwDevice(value: string) {
    this._ngfwDevice = value;
  }
  public resetNgfwDevice() {
    this._ngfwDevice = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ngfwDeviceInput() {
    return this._ngfwDevice;
  }
}
export interface DataPanosVirtualRouterLocationTemplate {
  /**
  * Specific Panorama template
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name?: string;
  /**
  * The NGFW device
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ngfw_device DataPanosVirtualRouter#ngfw_device}
  */
  readonly ngfwDevice?: string;
  /**
  * Specific Panorama device
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#panorama_device DataPanosVirtualRouter#panorama_device}
  */
  readonly panoramaDevice?: string;
}

export function dataPanosVirtualRouterLocationTemplateToTerraform(struct?: DataPanosVirtualRouterLocationTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    ngfw_device: cdktf.stringToTerraform(struct!.ngfwDevice),
    panorama_device: cdktf.stringToTerraform(struct!.panoramaDevice),
  }
}


export function dataPanosVirtualRouterLocationTemplateToHclTerraform(struct?: DataPanosVirtualRouterLocationTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ngfw_device: {
      value: cdktf.stringToHclTerraform(struct!.ngfwDevice),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    panorama_device: {
      value: cdktf.stringToHclTerraform(struct!.panoramaDevice),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterLocationTemplateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterLocationTemplate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._ngfwDevice !== undefined) {
      hasAnyValues = true;
      internalValueResult.ngfwDevice = this._ngfwDevice;
    }
    if (this._panoramaDevice !== undefined) {
      hasAnyValues = true;
      internalValueResult.panoramaDevice = this._panoramaDevice;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterLocationTemplate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._ngfwDevice = undefined;
      this._panoramaDevice = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._ngfwDevice = value.ngfwDevice;
      this._panoramaDevice = value.panoramaDevice;
    }
  }

  // name - computed: true, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // ngfw_device - computed: true, optional: true, required: false
  private _ngfwDevice?: string; 
  public get ngfwDevice() {
    return this.getStringAttribute('ngfw_device');
  }
  public set ngfwDevice(value: string) {
    this._ngfwDevice = value;
  }
  public resetNgfwDevice() {
    this._ngfwDevice = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ngfwDeviceInput() {
    return this._ngfwDevice;
  }

  // panorama_device - computed: true, optional: true, required: false
  private _panoramaDevice?: string; 
  public get panoramaDevice() {
    return this.getStringAttribute('panorama_device');
  }
  public set panoramaDevice(value: string) {
    this._panoramaDevice = value;
  }
  public resetPanoramaDevice() {
    this._panoramaDevice = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get panoramaDeviceInput() {
    return this._panoramaDevice;
  }
}
export interface DataPanosVirtualRouterLocationTemplateStack {
  /**
  * Specific Panorama template stack
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name?: string;
  /**
  * The NGFW device
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ngfw_device DataPanosVirtualRouter#ngfw_device}
  */
  readonly ngfwDevice?: string;
  /**
  * Specific Panorama device
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#panorama_device DataPanosVirtualRouter#panorama_device}
  */
  readonly panoramaDevice?: string;
}

export function dataPanosVirtualRouterLocationTemplateStackToTerraform(struct?: DataPanosVirtualRouterLocationTemplateStack | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    ngfw_device: cdktf.stringToTerraform(struct!.ngfwDevice),
    panorama_device: cdktf.stringToTerraform(struct!.panoramaDevice),
  }
}


export function dataPanosVirtualRouterLocationTemplateStackToHclTerraform(struct?: DataPanosVirtualRouterLocationTemplateStack | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ngfw_device: {
      value: cdktf.stringToHclTerraform(struct!.ngfwDevice),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    panorama_device: {
      value: cdktf.stringToHclTerraform(struct!.panoramaDevice),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterLocationTemplateStackOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterLocationTemplateStack | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._ngfwDevice !== undefined) {
      hasAnyValues = true;
      internalValueResult.ngfwDevice = this._ngfwDevice;
    }
    if (this._panoramaDevice !== undefined) {
      hasAnyValues = true;
      internalValueResult.panoramaDevice = this._panoramaDevice;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterLocationTemplateStack | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._ngfwDevice = undefined;
      this._panoramaDevice = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._ngfwDevice = value.ngfwDevice;
      this._panoramaDevice = value.panoramaDevice;
    }
  }

  // name - computed: true, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // ngfw_device - computed: true, optional: true, required: false
  private _ngfwDevice?: string; 
  public get ngfwDevice() {
    return this.getStringAttribute('ngfw_device');
  }
  public set ngfwDevice(value: string) {
    this._ngfwDevice = value;
  }
  public resetNgfwDevice() {
    this._ngfwDevice = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ngfwDeviceInput() {
    return this._ngfwDevice;
  }

  // panorama_device - computed: true, optional: true, required: false
  private _panoramaDevice?: string; 
  public get panoramaDevice() {
    return this.getStringAttribute('panorama_device');
  }
  public set panoramaDevice(value: string) {
    this._panoramaDevice = value;
  }
  public resetPanoramaDevice() {
    this._panoramaDevice = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get panoramaDeviceInput() {
    return this._panoramaDevice;
  }
}
export interface DataPanosVirtualRouterLocation {
  /**
  * Located in a specific NGFW device
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ngfw DataPanosVirtualRouter#ngfw}
  */
  readonly ngfw?: DataPanosVirtualRouterLocationNgfw;
  /**
  * Located in a specific template
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#template DataPanosVirtualRouter#template}
  */
  readonly template?: DataPanosVirtualRouterLocationTemplate;
  /**
  * Located in a specific template stack
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#template_stack DataPanosVirtualRouter#template_stack}
  */
  readonly templateStack?: DataPanosVirtualRouterLocationTemplateStack;
}

export function dataPanosVirtualRouterLocationToTerraform(struct?: DataPanosVirtualRouterLocation | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ngfw: dataPanosVirtualRouterLocationNgfwToTerraform(struct!.ngfw),
    template: dataPanosVirtualRouterLocationTemplateToTerraform(struct!.template),
    template_stack: dataPanosVirtualRouterLocationTemplateStackToTerraform(struct!.templateStack),
  }
}


export function dataPanosVirtualRouterLocationToHclTerraform(struct?: DataPanosVirtualRouterLocation | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ngfw: {
      value: dataPanosVirtualRouterLocationNgfwToHclTerraform(struct!.ngfw),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterLocationNgfw",
    },
    template: {
      value: dataPanosVirtualRouterLocationTemplateToHclTerraform(struct!.template),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterLocationTemplate",
    },
    template_stack: {
      value: dataPanosVirtualRouterLocationTemplateStackToHclTerraform(struct!.templateStack),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterLocationTemplateStack",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterLocationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterLocation | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._ngfw?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ngfw = this._ngfw?.internalValue;
    }
    if (this._template?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.template = this._template?.internalValue;
    }
    if (this._templateStack?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.templateStack = this._templateStack?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterLocation | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._ngfw.internalValue = undefined;
      this._template.internalValue = undefined;
      this._templateStack.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._ngfw.internalValue = value.ngfw;
      this._template.internalValue = value.template;
      this._templateStack.internalValue = value.templateStack;
    }
  }

  // ngfw - computed: false, optional: true, required: false
  private _ngfw = new DataPanosVirtualRouterLocationNgfwOutputReference(this, "ngfw");
  public get ngfw() {
    return this._ngfw;
  }
  public putNgfw(value: DataPanosVirtualRouterLocationNgfw) {
    this._ngfw.internalValue = value;
  }
  public resetNgfw() {
    this._ngfw.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ngfwInput() {
    return this._ngfw.internalValue;
  }

  // template - computed: false, optional: true, required: false
  private _template = new DataPanosVirtualRouterLocationTemplateOutputReference(this, "template");
  public get template() {
    return this._template;
  }
  public putTemplate(value: DataPanosVirtualRouterLocationTemplate) {
    this._template.internalValue = value;
  }
  public resetTemplate() {
    this._template.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get templateInput() {
    return this._template.internalValue;
  }

  // template_stack - computed: false, optional: true, required: false
  private _templateStack = new DataPanosVirtualRouterLocationTemplateStackOutputReference(this, "template_stack");
  public get templateStack() {
    return this._templateStack;
  }
  public putTemplateStack(value: DataPanosVirtualRouterLocationTemplateStack) {
    this._templateStack.internalValue = value;
  }
  public resetTemplateStack() {
    this._templateStack.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get templateStackInput() {
    return this._templateStack.internalValue;
  }
}
export interface DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticast {
  /**
  * group-address/prefix
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#group_address DataPanosVirtualRouter#group_address}
  */
  readonly groupAddress?: string;
  /**
  * included
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#included DataPanosVirtualRouter#included}
  */
  readonly included?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticastToTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticast | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    group_address: cdktf.stringToTerraform(struct!.groupAddress),
    included: cdktf.booleanToTerraform(struct!.included),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticastToHclTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticast | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    group_address: {
      value: cdktf.stringToHclTerraform(struct!.groupAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    included: {
      value: cdktf.booleanToHclTerraform(struct!.included),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticastOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticast | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._groupAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupAddress = this._groupAddress;
    }
    if (this._included !== undefined) {
      hasAnyValues = true;
      internalValueResult.included = this._included;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticast | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._groupAddress = undefined;
      this._included = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._groupAddress = value.groupAddress;
      this._included = value.included;
      this._name = value.name;
    }
  }

  // group_address - computed: true, optional: true, required: false
  private _groupAddress?: string; 
  public get groupAddress() {
    return this.getStringAttribute('group_address');
  }
  public set groupAddress(value: string) {
    this._groupAddress = value;
  }
  public resetGroupAddress() {
    this._groupAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupAddressInput() {
    return this._groupAddress;
  }

  // included - computed: true, optional: true, required: false
  private _included?: boolean | cdktf.IResolvable; 
  public get included() {
    return this.getBooleanAttribute('included');
  }
  public set included(value: boolean | cdktf.IResolvable) {
    this._included = value;
  }
  public resetIncluded() {
    this._included = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includedInput() {
    return this._included;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticastList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticast[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticastOutputReference {
    return new DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticastOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticast {
  /**
  * group-address/prefix
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#group_address DataPanosVirtualRouter#group_address}
  */
  readonly groupAddress?: string;
  /**
  * included
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#included DataPanosVirtualRouter#included}
  */
  readonly included?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * source-address/prefix
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#source_address DataPanosVirtualRouter#source_address}
  */
  readonly sourceAddress?: string;
}

export function dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticastToTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticast | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    group_address: cdktf.stringToTerraform(struct!.groupAddress),
    included: cdktf.booleanToTerraform(struct!.included),
    name: cdktf.stringToTerraform(struct!.name),
    source_address: cdktf.stringToTerraform(struct!.sourceAddress),
  }
}


export function dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticastToHclTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticast | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    group_address: {
      value: cdktf.stringToHclTerraform(struct!.groupAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    included: {
      value: cdktf.booleanToHclTerraform(struct!.included),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    source_address: {
      value: cdktf.stringToHclTerraform(struct!.sourceAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticastOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticast | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._groupAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupAddress = this._groupAddress;
    }
    if (this._included !== undefined) {
      hasAnyValues = true;
      internalValueResult.included = this._included;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._sourceAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceAddress = this._sourceAddress;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticast | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._groupAddress = undefined;
      this._included = undefined;
      this._name = undefined;
      this._sourceAddress = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._groupAddress = value.groupAddress;
      this._included = value.included;
      this._name = value.name;
      this._sourceAddress = value.sourceAddress;
    }
  }

  // group_address - computed: true, optional: true, required: false
  private _groupAddress?: string; 
  public get groupAddress() {
    return this.getStringAttribute('group_address');
  }
  public set groupAddress(value: string) {
    this._groupAddress = value;
  }
  public resetGroupAddress() {
    this._groupAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupAddressInput() {
    return this._groupAddress;
  }

  // included - computed: true, optional: true, required: false
  private _included?: boolean | cdktf.IResolvable; 
  public get included() {
    return this.getBooleanAttribute('included');
  }
  public set included(value: boolean | cdktf.IResolvable) {
    this._included = value;
  }
  public resetIncluded() {
    this._included = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includedInput() {
    return this._included;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // source_address - computed: true, optional: true, required: false
  private _sourceAddress?: string; 
  public get sourceAddress() {
    return this.getStringAttribute('source_address');
  }
  public set sourceAddress(value: string) {
    this._sourceAddress = value;
  }
  public resetSourceAddress() {
    this._sourceAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceAddressInput() {
    return this._sourceAddress;
  }
}

export class DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticastList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticast[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticastOutputReference {
    return new DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticastOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterMulticastInterfaceGroupGroupPermission {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#any_source_multicast DataPanosVirtualRouter#any_source_multicast}
  */
  readonly anySourceMulticast?: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticast[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#source_specific_multicast DataPanosVirtualRouter#source_specific_multicast}
  */
  readonly sourceSpecificMulticast?: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticast[] | cdktf.IResolvable;
}

export function dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionToTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermission | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    any_source_multicast: cdktf.listMapper(dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticastToTerraform, false)(struct!.anySourceMulticast),
    source_specific_multicast: cdktf.listMapper(dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticastToTerraform, false)(struct!.sourceSpecificMulticast),
  }
}


export function dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionToHclTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermission | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    any_source_multicast: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticastToHclTerraform, false)(struct!.anySourceMulticast),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticastList",
    },
    source_specific_multicast: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticastToHclTerraform, false)(struct!.sourceSpecificMulticast),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticastList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastInterfaceGroupGroupPermission | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._anySourceMulticast?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.anySourceMulticast = this._anySourceMulticast?.internalValue;
    }
    if (this._sourceSpecificMulticast?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceSpecificMulticast = this._sourceSpecificMulticast?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermission | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._anySourceMulticast.internalValue = undefined;
      this._sourceSpecificMulticast.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._anySourceMulticast.internalValue = value.anySourceMulticast;
      this._sourceSpecificMulticast.internalValue = value.sourceSpecificMulticast;
    }
  }

  // any_source_multicast - computed: true, optional: true, required: false
  private _anySourceMulticast = new DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticastList(this, "any_source_multicast", false);
  public get anySourceMulticast() {
    return this._anySourceMulticast;
  }
  public putAnySourceMulticast(value: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionAnySourceMulticast[] | cdktf.IResolvable) {
    this._anySourceMulticast.internalValue = value;
  }
  public resetAnySourceMulticast() {
    this._anySourceMulticast.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get anySourceMulticastInput() {
    return this._anySourceMulticast.internalValue;
  }

  // source_specific_multicast - computed: true, optional: true, required: false
  private _sourceSpecificMulticast = new DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticastList(this, "source_specific_multicast", false);
  public get sourceSpecificMulticast() {
    return this._sourceSpecificMulticast;
  }
  public putSourceSpecificMulticast(value: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionSourceSpecificMulticast[] | cdktf.IResolvable) {
    this._sourceSpecificMulticast.internalValue = value;
  }
  public resetSourceSpecificMulticast() {
    this._sourceSpecificMulticast.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceSpecificMulticastInput() {
    return this._sourceSpecificMulticast.internalValue;
  }
}
export interface DataPanosVirtualRouterMulticastInterfaceGroupIgmp {
  /**
  * enable IGMP
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * leave group immediately when a leave message is received
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#immediate_leave DataPanosVirtualRouter#immediate_leave}
  */
  readonly immediateLeave?: boolean | cdktf.IResolvable;
  /**
  * interval between group/source specific query messages (including those sent in response of leave group messages)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#last_member_query_interval DataPanosVirtualRouter#last_member_query_interval}
  */
  readonly lastMemberQueryInterval?: number;
  /**
  * maximum number of groups allowed on this interface
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#max_groups DataPanosVirtualRouter#max_groups}
  */
  readonly maxGroups?: string;
  /**
  * maximum query response time for general group membership queries in seconds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#max_query_response_time DataPanosVirtualRouter#max_query_response_time}
  */
  readonly maxQueryResponseTime?: number;
  /**
  * maximum number of source-specific memberships allowed on this interface
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#max_sources DataPanosVirtualRouter#max_sources}
  */
  readonly maxSources?: string;
  /**
  * interval between group/source specific query messages
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#query_interval DataPanosVirtualRouter#query_interval}
  */
  readonly queryInterval?: number;
  /**
  * robustness variable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#robustness DataPanosVirtualRouter#robustness}
  */
  readonly robustness?: string;
  /**
  * drop IGMP packets without Router Alert option
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#router_alert_policing DataPanosVirtualRouter#router_alert_policing}
  */
  readonly routerAlertPolicing?: boolean | cdktf.IResolvable;
  /**
  * IGMP version number
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#version DataPanosVirtualRouter#version}
  */
  readonly version?: string;
}

export function dataPanosVirtualRouterMulticastInterfaceGroupIgmpToTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupIgmp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enable: cdktf.booleanToTerraform(struct!.enable),
    immediate_leave: cdktf.booleanToTerraform(struct!.immediateLeave),
    last_member_query_interval: cdktf.numberToTerraform(struct!.lastMemberQueryInterval),
    max_groups: cdktf.stringToTerraform(struct!.maxGroups),
    max_query_response_time: cdktf.numberToTerraform(struct!.maxQueryResponseTime),
    max_sources: cdktf.stringToTerraform(struct!.maxSources),
    query_interval: cdktf.numberToTerraform(struct!.queryInterval),
    robustness: cdktf.stringToTerraform(struct!.robustness),
    router_alert_policing: cdktf.booleanToTerraform(struct!.routerAlertPolicing),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataPanosVirtualRouterMulticastInterfaceGroupIgmpToHclTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupIgmp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    immediate_leave: {
      value: cdktf.booleanToHclTerraform(struct!.immediateLeave),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    last_member_query_interval: {
      value: cdktf.numberToHclTerraform(struct!.lastMemberQueryInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_groups: {
      value: cdktf.stringToHclTerraform(struct!.maxGroups),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_query_response_time: {
      value: cdktf.numberToHclTerraform(struct!.maxQueryResponseTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_sources: {
      value: cdktf.stringToHclTerraform(struct!.maxSources),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    query_interval: {
      value: cdktf.numberToHclTerraform(struct!.queryInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    robustness: {
      value: cdktf.stringToHclTerraform(struct!.robustness),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    router_alert_policing: {
      value: cdktf.booleanToHclTerraform(struct!.routerAlertPolicing),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastInterfaceGroupIgmpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastInterfaceGroupIgmp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._immediateLeave !== undefined) {
      hasAnyValues = true;
      internalValueResult.immediateLeave = this._immediateLeave;
    }
    if (this._lastMemberQueryInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.lastMemberQueryInterval = this._lastMemberQueryInterval;
    }
    if (this._maxGroups !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxGroups = this._maxGroups;
    }
    if (this._maxQueryResponseTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxQueryResponseTime = this._maxQueryResponseTime;
    }
    if (this._maxSources !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxSources = this._maxSources;
    }
    if (this._queryInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryInterval = this._queryInterval;
    }
    if (this._robustness !== undefined) {
      hasAnyValues = true;
      internalValueResult.robustness = this._robustness;
    }
    if (this._routerAlertPolicing !== undefined) {
      hasAnyValues = true;
      internalValueResult.routerAlertPolicing = this._routerAlertPolicing;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastInterfaceGroupIgmp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enable = undefined;
      this._immediateLeave = undefined;
      this._lastMemberQueryInterval = undefined;
      this._maxGroups = undefined;
      this._maxQueryResponseTime = undefined;
      this._maxSources = undefined;
      this._queryInterval = undefined;
      this._robustness = undefined;
      this._routerAlertPolicing = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enable = value.enable;
      this._immediateLeave = value.immediateLeave;
      this._lastMemberQueryInterval = value.lastMemberQueryInterval;
      this._maxGroups = value.maxGroups;
      this._maxQueryResponseTime = value.maxQueryResponseTime;
      this._maxSources = value.maxSources;
      this._queryInterval = value.queryInterval;
      this._robustness = value.robustness;
      this._routerAlertPolicing = value.routerAlertPolicing;
      this._version = value.version;
    }
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // immediate_leave - computed: true, optional: true, required: false
  private _immediateLeave?: boolean | cdktf.IResolvable; 
  public get immediateLeave() {
    return this.getBooleanAttribute('immediate_leave');
  }
  public set immediateLeave(value: boolean | cdktf.IResolvable) {
    this._immediateLeave = value;
  }
  public resetImmediateLeave() {
    this._immediateLeave = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get immediateLeaveInput() {
    return this._immediateLeave;
  }

  // last_member_query_interval - computed: true, optional: true, required: false
  private _lastMemberQueryInterval?: number; 
  public get lastMemberQueryInterval() {
    return this.getNumberAttribute('last_member_query_interval');
  }
  public set lastMemberQueryInterval(value: number) {
    this._lastMemberQueryInterval = value;
  }
  public resetLastMemberQueryInterval() {
    this._lastMemberQueryInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lastMemberQueryIntervalInput() {
    return this._lastMemberQueryInterval;
  }

  // max_groups - computed: true, optional: true, required: false
  private _maxGroups?: string; 
  public get maxGroups() {
    return this.getStringAttribute('max_groups');
  }
  public set maxGroups(value: string) {
    this._maxGroups = value;
  }
  public resetMaxGroups() {
    this._maxGroups = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxGroupsInput() {
    return this._maxGroups;
  }

  // max_query_response_time - computed: true, optional: true, required: false
  private _maxQueryResponseTime?: number; 
  public get maxQueryResponseTime() {
    return this.getNumberAttribute('max_query_response_time');
  }
  public set maxQueryResponseTime(value: number) {
    this._maxQueryResponseTime = value;
  }
  public resetMaxQueryResponseTime() {
    this._maxQueryResponseTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxQueryResponseTimeInput() {
    return this._maxQueryResponseTime;
  }

  // max_sources - computed: true, optional: true, required: false
  private _maxSources?: string; 
  public get maxSources() {
    return this.getStringAttribute('max_sources');
  }
  public set maxSources(value: string) {
    this._maxSources = value;
  }
  public resetMaxSources() {
    this._maxSources = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxSourcesInput() {
    return this._maxSources;
  }

  // query_interval - computed: true, optional: true, required: false
  private _queryInterval?: number; 
  public get queryInterval() {
    return this.getNumberAttribute('query_interval');
  }
  public set queryInterval(value: number) {
    this._queryInterval = value;
  }
  public resetQueryInterval() {
    this._queryInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryIntervalInput() {
    return this._queryInterval;
  }

  // robustness - computed: true, optional: true, required: false
  private _robustness?: string; 
  public get robustness() {
    return this.getStringAttribute('robustness');
  }
  public set robustness(value: string) {
    this._robustness = value;
  }
  public resetRobustness() {
    this._robustness = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get robustnessInput() {
    return this._robustness;
  }

  // router_alert_policing - computed: true, optional: true, required: false
  private _routerAlertPolicing?: boolean | cdktf.IResolvable; 
  public get routerAlertPolicing() {
    return this.getBooleanAttribute('router_alert_policing');
  }
  public set routerAlertPolicing(value: boolean | cdktf.IResolvable) {
    this._routerAlertPolicing = value;
  }
  public resetRouterAlertPolicing() {
    this._routerAlertPolicing = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routerAlertPolicingInput() {
    return this._routerAlertPolicing;
  }

  // version - computed: true, optional: true, required: false
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  public resetVersion() {
    this._version = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighbors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighborsToTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighbors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighborsToHclTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighbors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighborsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighbors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighbors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighborsList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighbors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighborsOutputReference {
    return new DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighborsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterMulticastInterfaceGroupPim {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#allowed_neighbors DataPanosVirtualRouter#allowed_neighbors}
  */
  readonly allowedNeighbors?: DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighbors[] | cdktf.IResolvable;
  /**
  * interval between PIM Assert messages, in seconds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#assert_interval DataPanosVirtualRouter#assert_interval}
  */
  readonly assertInterval?: number;
  /**
  * interface is bootstrap border
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#bsr_border DataPanosVirtualRouter#bsr_border}
  */
  readonly bsrBorder?: boolean | cdktf.IResolvable;
  /**
  * Designated Router priority
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#dr_priority DataPanosVirtualRouter#dr_priority}
  */
  readonly drPriority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * interval between PIM Hello messages, in seconds, a value of 0 represents an 'infinite' interval
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#hello_interval DataPanosVirtualRouter#hello_interval}
  */
  readonly helloInterval?: number;
  /**
  * interval between PIM Join/Prune messages, in seconds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#join_prune_interval DataPanosVirtualRouter#join_prune_interval}
  */
  readonly joinPruneInterval?: number;
}

export function dataPanosVirtualRouterMulticastInterfaceGroupPimToTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupPim | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allowed_neighbors: cdktf.listMapper(dataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighborsToTerraform, false)(struct!.allowedNeighbors),
    assert_interval: cdktf.numberToTerraform(struct!.assertInterval),
    bsr_border: cdktf.booleanToTerraform(struct!.bsrBorder),
    dr_priority: cdktf.numberToTerraform(struct!.drPriority),
    enable: cdktf.booleanToTerraform(struct!.enable),
    hello_interval: cdktf.numberToTerraform(struct!.helloInterval),
    join_prune_interval: cdktf.numberToTerraform(struct!.joinPruneInterval),
  }
}


export function dataPanosVirtualRouterMulticastInterfaceGroupPimToHclTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroupPim | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allowed_neighbors: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighborsToHclTerraform, false)(struct!.allowedNeighbors),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighborsList",
    },
    assert_interval: {
      value: cdktf.numberToHclTerraform(struct!.assertInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    bsr_border: {
      value: cdktf.booleanToHclTerraform(struct!.bsrBorder),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    dr_priority: {
      value: cdktf.numberToHclTerraform(struct!.drPriority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    hello_interval: {
      value: cdktf.numberToHclTerraform(struct!.helloInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    join_prune_interval: {
      value: cdktf.numberToHclTerraform(struct!.joinPruneInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastInterfaceGroupPimOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastInterfaceGroupPim | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowedNeighbors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowedNeighbors = this._allowedNeighbors?.internalValue;
    }
    if (this._assertInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.assertInterval = this._assertInterval;
    }
    if (this._bsrBorder !== undefined) {
      hasAnyValues = true;
      internalValueResult.bsrBorder = this._bsrBorder;
    }
    if (this._drPriority !== undefined) {
      hasAnyValues = true;
      internalValueResult.drPriority = this._drPriority;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._helloInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.helloInterval = this._helloInterval;
    }
    if (this._joinPruneInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.joinPruneInterval = this._joinPruneInterval;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastInterfaceGroupPim | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowedNeighbors.internalValue = undefined;
      this._assertInterval = undefined;
      this._bsrBorder = undefined;
      this._drPriority = undefined;
      this._enable = undefined;
      this._helloInterval = undefined;
      this._joinPruneInterval = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowedNeighbors.internalValue = value.allowedNeighbors;
      this._assertInterval = value.assertInterval;
      this._bsrBorder = value.bsrBorder;
      this._drPriority = value.drPriority;
      this._enable = value.enable;
      this._helloInterval = value.helloInterval;
      this._joinPruneInterval = value.joinPruneInterval;
    }
  }

  // allowed_neighbors - computed: true, optional: true, required: false
  private _allowedNeighbors = new DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighborsList(this, "allowed_neighbors", false);
  public get allowedNeighbors() {
    return this._allowedNeighbors;
  }
  public putAllowedNeighbors(value: DataPanosVirtualRouterMulticastInterfaceGroupPimAllowedNeighbors[] | cdktf.IResolvable) {
    this._allowedNeighbors.internalValue = value;
  }
  public resetAllowedNeighbors() {
    this._allowedNeighbors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowedNeighborsInput() {
    return this._allowedNeighbors.internalValue;
  }

  // assert_interval - computed: true, optional: true, required: false
  private _assertInterval?: number; 
  public get assertInterval() {
    return this.getNumberAttribute('assert_interval');
  }
  public set assertInterval(value: number) {
    this._assertInterval = value;
  }
  public resetAssertInterval() {
    this._assertInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get assertIntervalInput() {
    return this._assertInterval;
  }

  // bsr_border - computed: true, optional: true, required: false
  private _bsrBorder?: boolean | cdktf.IResolvable; 
  public get bsrBorder() {
    return this.getBooleanAttribute('bsr_border');
  }
  public set bsrBorder(value: boolean | cdktf.IResolvable) {
    this._bsrBorder = value;
  }
  public resetBsrBorder() {
    this._bsrBorder = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bsrBorderInput() {
    return this._bsrBorder;
  }

  // dr_priority - computed: true, optional: true, required: false
  private _drPriority?: number; 
  public get drPriority() {
    return this.getNumberAttribute('dr_priority');
  }
  public set drPriority(value: number) {
    this._drPriority = value;
  }
  public resetDrPriority() {
    this._drPriority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get drPriorityInput() {
    return this._drPriority;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // hello_interval - computed: true, optional: true, required: false
  private _helloInterval?: number; 
  public get helloInterval() {
    return this.getNumberAttribute('hello_interval');
  }
  public set helloInterval(value: number) {
    this._helloInterval = value;
  }
  public resetHelloInterval() {
    this._helloInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get helloIntervalInput() {
    return this._helloInterval;
  }

  // join_prune_interval - computed: true, optional: true, required: false
  private _joinPruneInterval?: number; 
  public get joinPruneInterval() {
    return this.getNumberAttribute('join_prune_interval');
  }
  public set joinPruneInterval(value: number) {
    this._joinPruneInterval = value;
  }
  public resetJoinPruneInterval() {
    this._joinPruneInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get joinPruneIntervalInput() {
    return this._joinPruneInterval;
  }
}
export interface DataPanosVirtualRouterMulticastInterfaceGroup {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#description DataPanosVirtualRouter#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#group_permission DataPanosVirtualRouter#group_permission}
  */
  readonly groupPermission?: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermission;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#igmp DataPanosVirtualRouter#igmp}
  */
  readonly igmp?: DataPanosVirtualRouterMulticastInterfaceGroupIgmp;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#interface DataPanosVirtualRouter#interface}
  */
  readonly interface?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#pim DataPanosVirtualRouter#pim}
  */
  readonly pim?: DataPanosVirtualRouterMulticastInterfaceGroupPim;
}

export function dataPanosVirtualRouterMulticastInterfaceGroupToTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroup | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    description: cdktf.stringToTerraform(struct!.description),
    group_permission: dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionToTerraform(struct!.groupPermission),
    igmp: dataPanosVirtualRouterMulticastInterfaceGroupIgmpToTerraform(struct!.igmp),
    interface: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.interface),
    name: cdktf.stringToTerraform(struct!.name),
    pim: dataPanosVirtualRouterMulticastInterfaceGroupPimToTerraform(struct!.pim),
  }
}


export function dataPanosVirtualRouterMulticastInterfaceGroupToHclTerraform(struct?: DataPanosVirtualRouterMulticastInterfaceGroup | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    group_permission: {
      value: dataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionToHclTerraform(struct!.groupPermission),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterMulticastInterfaceGroupGroupPermission",
    },
    igmp: {
      value: dataPanosVirtualRouterMulticastInterfaceGroupIgmpToHclTerraform(struct!.igmp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterMulticastInterfaceGroupIgmp",
    },
    interface: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.interface),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pim: {
      value: dataPanosVirtualRouterMulticastInterfaceGroupPimToHclTerraform(struct!.pim),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterMulticastInterfaceGroupPim",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastInterfaceGroupOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastInterfaceGroup | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._groupPermission?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupPermission = this._groupPermission?.internalValue;
    }
    if (this._igmp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.igmp = this._igmp?.internalValue;
    }
    if (this._interface !== undefined) {
      hasAnyValues = true;
      internalValueResult.interface = this._interface;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._pim?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.pim = this._pim?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastInterfaceGroup | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._description = undefined;
      this._groupPermission.internalValue = undefined;
      this._igmp.internalValue = undefined;
      this._interface = undefined;
      this._name = undefined;
      this._pim.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._description = value.description;
      this._groupPermission.internalValue = value.groupPermission;
      this._igmp.internalValue = value.igmp;
      this._interface = value.interface;
      this._name = value.name;
      this._pim.internalValue = value.pim;
    }
  }

  // description - computed: true, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // group_permission - computed: true, optional: true, required: false
  private _groupPermission = new DataPanosVirtualRouterMulticastInterfaceGroupGroupPermissionOutputReference(this, "group_permission");
  public get groupPermission() {
    return this._groupPermission;
  }
  public putGroupPermission(value: DataPanosVirtualRouterMulticastInterfaceGroupGroupPermission) {
    this._groupPermission.internalValue = value;
  }
  public resetGroupPermission() {
    this._groupPermission.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupPermissionInput() {
    return this._groupPermission.internalValue;
  }

  // igmp - computed: true, optional: true, required: false
  private _igmp = new DataPanosVirtualRouterMulticastInterfaceGroupIgmpOutputReference(this, "igmp");
  public get igmp() {
    return this._igmp;
  }
  public putIgmp(value: DataPanosVirtualRouterMulticastInterfaceGroupIgmp) {
    this._igmp.internalValue = value;
  }
  public resetIgmp() {
    this._igmp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get igmpInput() {
    return this._igmp.internalValue;
  }

  // interface - computed: true, optional: true, required: false
  private _interface?: string[]; 
  public get interface() {
    return this.getListAttribute('interface');
  }
  public set interface(value: string[]) {
    this._interface = value;
  }
  public resetInterface() {
    this._interface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get interfaceInput() {
    return this._interface;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // pim - computed: true, optional: true, required: false
  private _pim = new DataPanosVirtualRouterMulticastInterfaceGroupPimOutputReference(this, "pim");
  public get pim() {
    return this._pim;
  }
  public putPim(value: DataPanosVirtualRouterMulticastInterfaceGroupPim) {
    this._pim.internalValue = value;
  }
  public resetPim() {
    this._pim.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pimInput() {
    return this._pim.internalValue;
  }
}

export class DataPanosVirtualRouterMulticastInterfaceGroupList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterMulticastInterfaceGroup[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterMulticastInterfaceGroupOutputReference {
    return new DataPanosVirtualRouterMulticastInterfaceGroupOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterMulticastRpExternalRp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#group_addresses DataPanosVirtualRouter#group_addresses}
  */
  readonly groupAddresses?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Override learned RP for the same group
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#override DataPanosVirtualRouter#override}
  */
  readonly override?: boolean | cdktf.IResolvable;
}

export function dataPanosVirtualRouterMulticastRpExternalRpToTerraform(struct?: DataPanosVirtualRouterMulticastRpExternalRp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    group_addresses: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.groupAddresses),
    name: cdktf.stringToTerraform(struct!.name),
    override: cdktf.booleanToTerraform(struct!.override),
  }
}


export function dataPanosVirtualRouterMulticastRpExternalRpToHclTerraform(struct?: DataPanosVirtualRouterMulticastRpExternalRp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    group_addresses: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.groupAddresses),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    override: {
      value: cdktf.booleanToHclTerraform(struct!.override),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastRpExternalRpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastRpExternalRp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._groupAddresses !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupAddresses = this._groupAddresses;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._override !== undefined) {
      hasAnyValues = true;
      internalValueResult.override = this._override;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastRpExternalRp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._groupAddresses = undefined;
      this._name = undefined;
      this._override = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._groupAddresses = value.groupAddresses;
      this._name = value.name;
      this._override = value.override;
    }
  }

  // group_addresses - computed: true, optional: true, required: false
  private _groupAddresses?: string[]; 
  public get groupAddresses() {
    return this.getListAttribute('group_addresses');
  }
  public set groupAddresses(value: string[]) {
    this._groupAddresses = value;
  }
  public resetGroupAddresses() {
    this._groupAddresses = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupAddressesInput() {
    return this._groupAddresses;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // override - computed: true, optional: true, required: false
  private _override?: boolean | cdktf.IResolvable; 
  public get override() {
    return this.getBooleanAttribute('override');
  }
  public set override(value: boolean | cdktf.IResolvable) {
    this._override = value;
  }
  public resetOverride() {
    this._override = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get overrideInput() {
    return this._override;
  }
}

export class DataPanosVirtualRouterMulticastRpExternalRpList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterMulticastRpExternalRp[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterMulticastRpExternalRpOutputReference {
    return new DataPanosVirtualRouterMulticastRpExternalRpOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterMulticastRpLocalRpCandidateRp {
  /**
  * candidate RP address
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#address DataPanosVirtualRouter#address}
  */
  readonly address?: string;
  /**
  * The time interval in seconds between candidate rp advertisements
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#advertisement_interval DataPanosVirtualRouter#advertisement_interval}
  */
  readonly advertisementInterval?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#group_addresses DataPanosVirtualRouter#group_addresses}
  */
  readonly groupAddresses?: string[];
  /**
  * candidate RP interface
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#interface DataPanosVirtualRouter#interface}
  */
  readonly interface?: string;
  /**
  * The priority for this candidate rt
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#priority DataPanosVirtualRouter#priority}
  */
  readonly priority?: number;
}

export function dataPanosVirtualRouterMulticastRpLocalRpCandidateRpToTerraform(struct?: DataPanosVirtualRouterMulticastRpLocalRpCandidateRp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    advertisement_interval: cdktf.numberToTerraform(struct!.advertisementInterval),
    group_addresses: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.groupAddresses),
    interface: cdktf.stringToTerraform(struct!.interface),
    priority: cdktf.numberToTerraform(struct!.priority),
  }
}


export function dataPanosVirtualRouterMulticastRpLocalRpCandidateRpToHclTerraform(struct?: DataPanosVirtualRouterMulticastRpLocalRpCandidateRp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    advertisement_interval: {
      value: cdktf.numberToHclTerraform(struct!.advertisementInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    group_addresses: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.groupAddresses),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    interface: {
      value: cdktf.stringToHclTerraform(struct!.interface),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastRpLocalRpCandidateRpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastRpLocalRpCandidateRp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._advertisementInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertisementInterval = this._advertisementInterval;
    }
    if (this._groupAddresses !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupAddresses = this._groupAddresses;
    }
    if (this._interface !== undefined) {
      hasAnyValues = true;
      internalValueResult.interface = this._interface;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastRpLocalRpCandidateRp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._advertisementInterval = undefined;
      this._groupAddresses = undefined;
      this._interface = undefined;
      this._priority = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._advertisementInterval = value.advertisementInterval;
      this._groupAddresses = value.groupAddresses;
      this._interface = value.interface;
      this._priority = value.priority;
    }
  }

  // address - computed: true, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // advertisement_interval - computed: true, optional: true, required: false
  private _advertisementInterval?: number; 
  public get advertisementInterval() {
    return this.getNumberAttribute('advertisement_interval');
  }
  public set advertisementInterval(value: number) {
    this._advertisementInterval = value;
  }
  public resetAdvertisementInterval() {
    this._advertisementInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertisementIntervalInput() {
    return this._advertisementInterval;
  }

  // group_addresses - computed: true, optional: true, required: false
  private _groupAddresses?: string[]; 
  public get groupAddresses() {
    return this.getListAttribute('group_addresses');
  }
  public set groupAddresses(value: string[]) {
    this._groupAddresses = value;
  }
  public resetGroupAddresses() {
    this._groupAddresses = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupAddressesInput() {
    return this._groupAddresses;
  }

  // interface - computed: true, optional: true, required: false
  private _interface?: string; 
  public get interface() {
    return this.getStringAttribute('interface');
  }
  public set interface(value: string) {
    this._interface = value;
  }
  public resetInterface() {
    this._interface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get interfaceInput() {
    return this._interface;
  }

  // priority - computed: true, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }
}
export interface DataPanosVirtualRouterMulticastRpLocalRpStaticRp {
  /**
  * local RP address
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#address DataPanosVirtualRouter#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#group_addresses DataPanosVirtualRouter#group_addresses}
  */
  readonly groupAddresses?: string[];
  /**
  * local RP interface
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#interface DataPanosVirtualRouter#interface}
  */
  readonly interface?: string;
  /**
  * Override learned RP for the same group
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#override DataPanosVirtualRouter#override}
  */
  readonly override?: boolean | cdktf.IResolvable;
}

export function dataPanosVirtualRouterMulticastRpLocalRpStaticRpToTerraform(struct?: DataPanosVirtualRouterMulticastRpLocalRpStaticRp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    group_addresses: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.groupAddresses),
    interface: cdktf.stringToTerraform(struct!.interface),
    override: cdktf.booleanToTerraform(struct!.override),
  }
}


export function dataPanosVirtualRouterMulticastRpLocalRpStaticRpToHclTerraform(struct?: DataPanosVirtualRouterMulticastRpLocalRpStaticRp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    group_addresses: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.groupAddresses),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    interface: {
      value: cdktf.stringToHclTerraform(struct!.interface),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    override: {
      value: cdktf.booleanToHclTerraform(struct!.override),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastRpLocalRpStaticRpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastRpLocalRpStaticRp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._groupAddresses !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupAddresses = this._groupAddresses;
    }
    if (this._interface !== undefined) {
      hasAnyValues = true;
      internalValueResult.interface = this._interface;
    }
    if (this._override !== undefined) {
      hasAnyValues = true;
      internalValueResult.override = this._override;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastRpLocalRpStaticRp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._groupAddresses = undefined;
      this._interface = undefined;
      this._override = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._groupAddresses = value.groupAddresses;
      this._interface = value.interface;
      this._override = value.override;
    }
  }

  // address - computed: true, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // group_addresses - computed: true, optional: true, required: false
  private _groupAddresses?: string[]; 
  public get groupAddresses() {
    return this.getListAttribute('group_addresses');
  }
  public set groupAddresses(value: string[]) {
    this._groupAddresses = value;
  }
  public resetGroupAddresses() {
    this._groupAddresses = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupAddressesInput() {
    return this._groupAddresses;
  }

  // interface - computed: true, optional: true, required: false
  private _interface?: string; 
  public get interface() {
    return this.getStringAttribute('interface');
  }
  public set interface(value: string) {
    this._interface = value;
  }
  public resetInterface() {
    this._interface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get interfaceInput() {
    return this._interface;
  }

  // override - computed: true, optional: true, required: false
  private _override?: boolean | cdktf.IResolvable; 
  public get override() {
    return this.getBooleanAttribute('override');
  }
  public set override(value: boolean | cdktf.IResolvable) {
    this._override = value;
  }
  public resetOverride() {
    this._override = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get overrideInput() {
    return this._override;
  }
}
export interface DataPanosVirtualRouterMulticastRpLocalRp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#candidate_rp DataPanosVirtualRouter#candidate_rp}
  */
  readonly candidateRp?: DataPanosVirtualRouterMulticastRpLocalRpCandidateRp;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#static_rp DataPanosVirtualRouter#static_rp}
  */
  readonly staticRp?: DataPanosVirtualRouterMulticastRpLocalRpStaticRp;
}

export function dataPanosVirtualRouterMulticastRpLocalRpToTerraform(struct?: DataPanosVirtualRouterMulticastRpLocalRp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    candidate_rp: dataPanosVirtualRouterMulticastRpLocalRpCandidateRpToTerraform(struct!.candidateRp),
    static_rp: dataPanosVirtualRouterMulticastRpLocalRpStaticRpToTerraform(struct!.staticRp),
  }
}


export function dataPanosVirtualRouterMulticastRpLocalRpToHclTerraform(struct?: DataPanosVirtualRouterMulticastRpLocalRp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    candidate_rp: {
      value: dataPanosVirtualRouterMulticastRpLocalRpCandidateRpToHclTerraform(struct!.candidateRp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterMulticastRpLocalRpCandidateRp",
    },
    static_rp: {
      value: dataPanosVirtualRouterMulticastRpLocalRpStaticRpToHclTerraform(struct!.staticRp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterMulticastRpLocalRpStaticRp",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastRpLocalRpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastRpLocalRp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._candidateRp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.candidateRp = this._candidateRp?.internalValue;
    }
    if (this._staticRp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.staticRp = this._staticRp?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastRpLocalRp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._candidateRp.internalValue = undefined;
      this._staticRp.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._candidateRp.internalValue = value.candidateRp;
      this._staticRp.internalValue = value.staticRp;
    }
  }

  // candidate_rp - computed: true, optional: true, required: false
  private _candidateRp = new DataPanosVirtualRouterMulticastRpLocalRpCandidateRpOutputReference(this, "candidate_rp");
  public get candidateRp() {
    return this._candidateRp;
  }
  public putCandidateRp(value: DataPanosVirtualRouterMulticastRpLocalRpCandidateRp) {
    this._candidateRp.internalValue = value;
  }
  public resetCandidateRp() {
    this._candidateRp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get candidateRpInput() {
    return this._candidateRp.internalValue;
  }

  // static_rp - computed: true, optional: true, required: false
  private _staticRp = new DataPanosVirtualRouterMulticastRpLocalRpStaticRpOutputReference(this, "static_rp");
  public get staticRp() {
    return this._staticRp;
  }
  public putStaticRp(value: DataPanosVirtualRouterMulticastRpLocalRpStaticRp) {
    this._staticRp.internalValue = value;
  }
  public resetStaticRp() {
    this._staticRp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get staticRpInput() {
    return this._staticRp.internalValue;
  }
}
export interface DataPanosVirtualRouterMulticastRp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#external_rp DataPanosVirtualRouter#external_rp}
  */
  readonly externalRp?: DataPanosVirtualRouterMulticastRpExternalRp[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#local_rp DataPanosVirtualRouter#local_rp}
  */
  readonly localRp?: DataPanosVirtualRouterMulticastRpLocalRp;
}

export function dataPanosVirtualRouterMulticastRpToTerraform(struct?: DataPanosVirtualRouterMulticastRp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    external_rp: cdktf.listMapper(dataPanosVirtualRouterMulticastRpExternalRpToTerraform, false)(struct!.externalRp),
    local_rp: dataPanosVirtualRouterMulticastRpLocalRpToTerraform(struct!.localRp),
  }
}


export function dataPanosVirtualRouterMulticastRpToHclTerraform(struct?: DataPanosVirtualRouterMulticastRp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    external_rp: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterMulticastRpExternalRpToHclTerraform, false)(struct!.externalRp),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterMulticastRpExternalRpList",
    },
    local_rp: {
      value: dataPanosVirtualRouterMulticastRpLocalRpToHclTerraform(struct!.localRp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterMulticastRpLocalRp",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastRpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastRp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._externalRp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalRp = this._externalRp?.internalValue;
    }
    if (this._localRp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localRp = this._localRp?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastRp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._externalRp.internalValue = undefined;
      this._localRp.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._externalRp.internalValue = value.externalRp;
      this._localRp.internalValue = value.localRp;
    }
  }

  // external_rp - computed: true, optional: true, required: false
  private _externalRp = new DataPanosVirtualRouterMulticastRpExternalRpList(this, "external_rp", false);
  public get externalRp() {
    return this._externalRp;
  }
  public putExternalRp(value: DataPanosVirtualRouterMulticastRpExternalRp[] | cdktf.IResolvable) {
    this._externalRp.internalValue = value;
  }
  public resetExternalRp() {
    this._externalRp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalRpInput() {
    return this._externalRp.internalValue;
  }

  // local_rp - computed: true, optional: true, required: false
  private _localRp = new DataPanosVirtualRouterMulticastRpLocalRpOutputReference(this, "local_rp");
  public get localRp() {
    return this._localRp;
  }
  public putLocalRp(value: DataPanosVirtualRouterMulticastRpLocalRp) {
    this._localRp.internalValue = value;
  }
  public resetLocalRp() {
    this._localRp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localRpInput() {
    return this._localRp.internalValue;
  }
}
export interface DataPanosVirtualRouterMulticastSptThreshold {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#threshold DataPanosVirtualRouter#threshold}
  */
  readonly threshold?: string;
}

export function dataPanosVirtualRouterMulticastSptThresholdToTerraform(struct?: DataPanosVirtualRouterMulticastSptThreshold | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    threshold: cdktf.stringToTerraform(struct!.threshold),
  }
}


export function dataPanosVirtualRouterMulticastSptThresholdToHclTerraform(struct?: DataPanosVirtualRouterMulticastSptThreshold | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    threshold: {
      value: cdktf.stringToHclTerraform(struct!.threshold),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastSptThresholdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastSptThreshold | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._threshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.threshold = this._threshold;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastSptThreshold | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._threshold = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._threshold = value.threshold;
    }
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // threshold - computed: true, optional: true, required: false
  private _threshold?: string; 
  public get threshold() {
    return this.getStringAttribute('threshold');
  }
  public set threshold(value: string) {
    this._threshold = value;
  }
  public resetThreshold() {
    this._threshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get thresholdInput() {
    return this._threshold;
  }
}

export class DataPanosVirtualRouterMulticastSptThresholdList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterMulticastSptThreshold[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterMulticastSptThresholdOutputReference {
    return new DataPanosVirtualRouterMulticastSptThresholdOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterMulticastSsmAddressSpace {
  /**
  * group-address/prefix
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#group_address DataPanosVirtualRouter#group_address}
  */
  readonly groupAddress?: string;
  /**
  * included
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#included DataPanosVirtualRouter#included}
  */
  readonly included?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterMulticastSsmAddressSpaceToTerraform(struct?: DataPanosVirtualRouterMulticastSsmAddressSpace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    group_address: cdktf.stringToTerraform(struct!.groupAddress),
    included: cdktf.booleanToTerraform(struct!.included),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterMulticastSsmAddressSpaceToHclTerraform(struct?: DataPanosVirtualRouterMulticastSsmAddressSpace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    group_address: {
      value: cdktf.stringToHclTerraform(struct!.groupAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    included: {
      value: cdktf.booleanToHclTerraform(struct!.included),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastSsmAddressSpaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterMulticastSsmAddressSpace | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._groupAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupAddress = this._groupAddress;
    }
    if (this._included !== undefined) {
      hasAnyValues = true;
      internalValueResult.included = this._included;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticastSsmAddressSpace | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._groupAddress = undefined;
      this._included = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._groupAddress = value.groupAddress;
      this._included = value.included;
      this._name = value.name;
    }
  }

  // group_address - computed: true, optional: true, required: false
  private _groupAddress?: string; 
  public get groupAddress() {
    return this.getStringAttribute('group_address');
  }
  public set groupAddress(value: string) {
    this._groupAddress = value;
  }
  public resetGroupAddress() {
    this._groupAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupAddressInput() {
    return this._groupAddress;
  }

  // included - computed: true, optional: true, required: false
  private _included?: boolean | cdktf.IResolvable; 
  public get included() {
    return this.getBooleanAttribute('included');
  }
  public set included(value: boolean | cdktf.IResolvable) {
    this._included = value;
  }
  public resetIncluded() {
    this._included = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includedInput() {
    return this._included;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterMulticastSsmAddressSpaceList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterMulticastSsmAddressSpace[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterMulticastSsmAddressSpaceOutputReference {
    return new DataPanosVirtualRouterMulticastSsmAddressSpaceOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterMulticast {
  /**
  * enable multicast protocol
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#interface_group DataPanosVirtualRouter#interface_group}
  */
  readonly interfaceGroup?: DataPanosVirtualRouterMulticastInterfaceGroup[] | cdktf.IResolvable;
  /**
  * time to wait before aging out a multicast route after data stops, in seconds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#route_ageout_time DataPanosVirtualRouter#route_ageout_time}
  */
  readonly routeAgeoutTime?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#rp DataPanosVirtualRouter#rp}
  */
  readonly rp?: DataPanosVirtualRouterMulticastRp;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#spt_threshold DataPanosVirtualRouter#spt_threshold}
  */
  readonly sptThreshold?: DataPanosVirtualRouterMulticastSptThreshold[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ssm_address_space DataPanosVirtualRouter#ssm_address_space}
  */
  readonly ssmAddressSpace?: DataPanosVirtualRouterMulticastSsmAddressSpace[] | cdktf.IResolvable;
}

export function dataPanosVirtualRouterMulticastToTerraform(struct?: DataPanosVirtualRouterMulticast | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enable: cdktf.booleanToTerraform(struct!.enable),
    interface_group: cdktf.listMapper(dataPanosVirtualRouterMulticastInterfaceGroupToTerraform, false)(struct!.interfaceGroup),
    route_ageout_time: cdktf.numberToTerraform(struct!.routeAgeoutTime),
    rp: dataPanosVirtualRouterMulticastRpToTerraform(struct!.rp),
    spt_threshold: cdktf.listMapper(dataPanosVirtualRouterMulticastSptThresholdToTerraform, false)(struct!.sptThreshold),
    ssm_address_space: cdktf.listMapper(dataPanosVirtualRouterMulticastSsmAddressSpaceToTerraform, false)(struct!.ssmAddressSpace),
  }
}


export function dataPanosVirtualRouterMulticastToHclTerraform(struct?: DataPanosVirtualRouterMulticast | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    interface_group: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterMulticastInterfaceGroupToHclTerraform, false)(struct!.interfaceGroup),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterMulticastInterfaceGroupList",
    },
    route_ageout_time: {
      value: cdktf.numberToHclTerraform(struct!.routeAgeoutTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rp: {
      value: dataPanosVirtualRouterMulticastRpToHclTerraform(struct!.rp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterMulticastRp",
    },
    spt_threshold: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterMulticastSptThresholdToHclTerraform, false)(struct!.sptThreshold),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterMulticastSptThresholdList",
    },
    ssm_address_space: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterMulticastSsmAddressSpaceToHclTerraform, false)(struct!.ssmAddressSpace),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterMulticastSsmAddressSpaceList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterMulticastOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterMulticast | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._interfaceGroup?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.interfaceGroup = this._interfaceGroup?.internalValue;
    }
    if (this._routeAgeoutTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeAgeoutTime = this._routeAgeoutTime;
    }
    if (this._rp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rp = this._rp?.internalValue;
    }
    if (this._sptThreshold?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sptThreshold = this._sptThreshold?.internalValue;
    }
    if (this._ssmAddressSpace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssmAddressSpace = this._ssmAddressSpace?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterMulticast | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enable = undefined;
      this._interfaceGroup.internalValue = undefined;
      this._routeAgeoutTime = undefined;
      this._rp.internalValue = undefined;
      this._sptThreshold.internalValue = undefined;
      this._ssmAddressSpace.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enable = value.enable;
      this._interfaceGroup.internalValue = value.interfaceGroup;
      this._routeAgeoutTime = value.routeAgeoutTime;
      this._rp.internalValue = value.rp;
      this._sptThreshold.internalValue = value.sptThreshold;
      this._ssmAddressSpace.internalValue = value.ssmAddressSpace;
    }
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // interface_group - computed: true, optional: true, required: false
  private _interfaceGroup = new DataPanosVirtualRouterMulticastInterfaceGroupList(this, "interface_group", false);
  public get interfaceGroup() {
    return this._interfaceGroup;
  }
  public putInterfaceGroup(value: DataPanosVirtualRouterMulticastInterfaceGroup[] | cdktf.IResolvable) {
    this._interfaceGroup.internalValue = value;
  }
  public resetInterfaceGroup() {
    this._interfaceGroup.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get interfaceGroupInput() {
    return this._interfaceGroup.internalValue;
  }

  // route_ageout_time - computed: true, optional: true, required: false
  private _routeAgeoutTime?: number; 
  public get routeAgeoutTime() {
    return this.getNumberAttribute('route_ageout_time');
  }
  public set routeAgeoutTime(value: number) {
    this._routeAgeoutTime = value;
  }
  public resetRouteAgeoutTime() {
    this._routeAgeoutTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeAgeoutTimeInput() {
    return this._routeAgeoutTime;
  }

  // rp - computed: true, optional: true, required: false
  private _rp = new DataPanosVirtualRouterMulticastRpOutputReference(this, "rp");
  public get rp() {
    return this._rp;
  }
  public putRp(value: DataPanosVirtualRouterMulticastRp) {
    this._rp.internalValue = value;
  }
  public resetRp() {
    this._rp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rpInput() {
    return this._rp.internalValue;
  }

  // spt_threshold - computed: true, optional: true, required: false
  private _sptThreshold = new DataPanosVirtualRouterMulticastSptThresholdList(this, "spt_threshold", false);
  public get sptThreshold() {
    return this._sptThreshold;
  }
  public putSptThreshold(value: DataPanosVirtualRouterMulticastSptThreshold[] | cdktf.IResolvable) {
    this._sptThreshold.internalValue = value;
  }
  public resetSptThreshold() {
    this._sptThreshold.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sptThresholdInput() {
    return this._sptThreshold.internalValue;
  }

  // ssm_address_space - computed: true, optional: true, required: false
  private _ssmAddressSpace = new DataPanosVirtualRouterMulticastSsmAddressSpaceList(this, "ssm_address_space", false);
  public get ssmAddressSpace() {
    return this._ssmAddressSpace;
  }
  public putSsmAddressSpace(value: DataPanosVirtualRouterMulticastSsmAddressSpace[] | cdktf.IResolvable) {
    this._ssmAddressSpace.internalValue = value;
  }
  public resetSsmAddressSpace() {
    this._ssmAddressSpace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmAddressSpaceInput() {
    return this._ssmAddressSpace.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpAuthProfile {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * shared secret for the TCP MD5 authentication
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#secret DataPanosVirtualRouter#secret}
  */
  readonly secret?: string;
}

export function dataPanosVirtualRouterProtocolBgpAuthProfileToTerraform(struct?: DataPanosVirtualRouterProtocolBgpAuthProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    secret: cdktf.stringToTerraform(struct!.secret),
  }
}


export function dataPanosVirtualRouterProtocolBgpAuthProfileToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpAuthProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpAuthProfileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpAuthProfile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpAuthProfile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._secret = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._secret = value.secret;
    }
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // secret - computed: true, optional: true, required: false
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  public resetSecret() {
    this._secret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }
}

export class DataPanosVirtualRouterProtocolBgpAuthProfileList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpAuthProfile[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpAuthProfileOutputReference {
    return new DataPanosVirtualRouterProtocolBgpAuthProfileOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpDampeningProfile {
  /**
  * cutoff threshold value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#cutoff DataPanosVirtualRouter#cutoff}
  */
  readonly cutoff?: number;
  /**
  * Decay half-life while reachable (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#decay_half_life_reachable DataPanosVirtualRouter#decay_half_life_reachable}
  */
  readonly decayHalfLifeReachable?: number;
  /**
  * Decay half-life while unreachable (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#decay_half_life_unreachable DataPanosVirtualRouter#decay_half_life_unreachable}
  */
  readonly decayHalfLifeUnreachable?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * maximum of hold-down time (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#max_hold_time DataPanosVirtualRouter#max_hold_time}
  */
  readonly maxHoldTime?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * reuse threshold value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#reuse DataPanosVirtualRouter#reuse}
  */
  readonly reuse?: number;
}

export function dataPanosVirtualRouterProtocolBgpDampeningProfileToTerraform(struct?: DataPanosVirtualRouterProtocolBgpDampeningProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cutoff: cdktf.numberToTerraform(struct!.cutoff),
    decay_half_life_reachable: cdktf.numberToTerraform(struct!.decayHalfLifeReachable),
    decay_half_life_unreachable: cdktf.numberToTerraform(struct!.decayHalfLifeUnreachable),
    enable: cdktf.booleanToTerraform(struct!.enable),
    max_hold_time: cdktf.numberToTerraform(struct!.maxHoldTime),
    name: cdktf.stringToTerraform(struct!.name),
    reuse: cdktf.numberToTerraform(struct!.reuse),
  }
}


export function dataPanosVirtualRouterProtocolBgpDampeningProfileToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpDampeningProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cutoff: {
      value: cdktf.numberToHclTerraform(struct!.cutoff),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    decay_half_life_reachable: {
      value: cdktf.numberToHclTerraform(struct!.decayHalfLifeReachable),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    decay_half_life_unreachable: {
      value: cdktf.numberToHclTerraform(struct!.decayHalfLifeUnreachable),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    max_hold_time: {
      value: cdktf.numberToHclTerraform(struct!.maxHoldTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reuse: {
      value: cdktf.numberToHclTerraform(struct!.reuse),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpDampeningProfileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpDampeningProfile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cutoff !== undefined) {
      hasAnyValues = true;
      internalValueResult.cutoff = this._cutoff;
    }
    if (this._decayHalfLifeReachable !== undefined) {
      hasAnyValues = true;
      internalValueResult.decayHalfLifeReachable = this._decayHalfLifeReachable;
    }
    if (this._decayHalfLifeUnreachable !== undefined) {
      hasAnyValues = true;
      internalValueResult.decayHalfLifeUnreachable = this._decayHalfLifeUnreachable;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._maxHoldTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxHoldTime = this._maxHoldTime;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._reuse !== undefined) {
      hasAnyValues = true;
      internalValueResult.reuse = this._reuse;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpDampeningProfile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cutoff = undefined;
      this._decayHalfLifeReachable = undefined;
      this._decayHalfLifeUnreachable = undefined;
      this._enable = undefined;
      this._maxHoldTime = undefined;
      this._name = undefined;
      this._reuse = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cutoff = value.cutoff;
      this._decayHalfLifeReachable = value.decayHalfLifeReachable;
      this._decayHalfLifeUnreachable = value.decayHalfLifeUnreachable;
      this._enable = value.enable;
      this._maxHoldTime = value.maxHoldTime;
      this._name = value.name;
      this._reuse = value.reuse;
    }
  }

  // cutoff - computed: true, optional: true, required: false
  private _cutoff?: number; 
  public get cutoff() {
    return this.getNumberAttribute('cutoff');
  }
  public set cutoff(value: number) {
    this._cutoff = value;
  }
  public resetCutoff() {
    this._cutoff = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cutoffInput() {
    return this._cutoff;
  }

  // decay_half_life_reachable - computed: true, optional: true, required: false
  private _decayHalfLifeReachable?: number; 
  public get decayHalfLifeReachable() {
    return this.getNumberAttribute('decay_half_life_reachable');
  }
  public set decayHalfLifeReachable(value: number) {
    this._decayHalfLifeReachable = value;
  }
  public resetDecayHalfLifeReachable() {
    this._decayHalfLifeReachable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decayHalfLifeReachableInput() {
    return this._decayHalfLifeReachable;
  }

  // decay_half_life_unreachable - computed: true, optional: true, required: false
  private _decayHalfLifeUnreachable?: number; 
  public get decayHalfLifeUnreachable() {
    return this.getNumberAttribute('decay_half_life_unreachable');
  }
  public set decayHalfLifeUnreachable(value: number) {
    this._decayHalfLifeUnreachable = value;
  }
  public resetDecayHalfLifeUnreachable() {
    this._decayHalfLifeUnreachable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decayHalfLifeUnreachableInput() {
    return this._decayHalfLifeUnreachable;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // max_hold_time - computed: true, optional: true, required: false
  private _maxHoldTime?: number; 
  public get maxHoldTime() {
    return this.getNumberAttribute('max_hold_time');
  }
  public set maxHoldTime(value: number) {
    this._maxHoldTime = value;
  }
  public resetMaxHoldTime() {
    this._maxHoldTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxHoldTimeInput() {
    return this._maxHoldTime;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // reuse - computed: true, optional: true, required: false
  private _reuse?: number; 
  public get reuse() {
    return this.getNumberAttribute('reuse');
  }
  public set reuse(value: number) {
    this._reuse = value;
  }
  public resetReuse() {
    this._reuse = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reuseInput() {
    return this._reuse;
  }
}

export class DataPanosVirtualRouterProtocolBgpDampeningProfileList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpDampeningProfile[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpDampeningProfileOutputReference {
    return new DataPanosVirtualRouterProtocolBgpDampeningProfileOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpGlobalBfd {
  /**
  * BFD profile
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#profile DataPanosVirtualRouter#profile}
  */
  readonly profile?: string;
}

export function dataPanosVirtualRouterProtocolBgpGlobalBfdToTerraform(struct?: DataPanosVirtualRouterProtocolBgpGlobalBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    profile: cdktf.stringToTerraform(struct!.profile),
  }
}


export function dataPanosVirtualRouterProtocolBgpGlobalBfdToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpGlobalBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    profile: {
      value: cdktf.stringToHclTerraform(struct!.profile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpGlobalBfdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpGlobalBfd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._profile !== undefined) {
      hasAnyValues = true;
      internalValueResult.profile = this._profile;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpGlobalBfd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._profile = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._profile = value.profile;
    }
  }

  // profile - computed: true, optional: true, required: false
  private _profile?: string; 
  public get profile() {
    return this.getStringAttribute('profile');
  }
  public set profile(value: string) {
    this._profile = value;
  }
  public resetProfile() {
    this._profile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profileInput() {
    return this._profile;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupPeerBfd {
  /**
  * BFD profile
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#profile DataPanosVirtualRouter#profile}
  */
  readonly profile?: string;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerBfdToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    profile: cdktf.stringToTerraform(struct!.profile),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerBfdToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    profile: {
      value: cdktf.stringToHclTerraform(struct!.profile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupPeerBfdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupPeerBfd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._profile !== undefined) {
      hasAnyValues = true;
      internalValueResult.profile = this._profile;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerBfd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._profile = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._profile = value.profile;
    }
  }

  // profile - computed: true, optional: true, required: false
  private _profile?: string; 
  public get profile() {
    return this.getStringAttribute('profile');
  }
  public set profile(value: string) {
    this._profile = value;
  }
  public resetProfile() {
    this._profile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profileInput() {
    return this._profile;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnection {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#allow DataPanosVirtualRouter#allow}
  */
  readonly allow?: boolean | cdktf.IResolvable;
  /**
  * restrict remote port for incoming BGP connections
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remote_port DataPanosVirtualRouter#remote_port}
  */
  readonly remotePort?: number;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnectionToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnection | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow: cdktf.booleanToTerraform(struct!.allow),
    remote_port: cdktf.numberToTerraform(struct!.remotePort),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnectionToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnection | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow: {
      value: cdktf.booleanToHclTerraform(struct!.allow),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    remote_port: {
      value: cdktf.numberToHclTerraform(struct!.remotePort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnectionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnection | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allow !== undefined) {
      hasAnyValues = true;
      internalValueResult.allow = this._allow;
    }
    if (this._remotePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.remotePort = this._remotePort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnection | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allow = undefined;
      this._remotePort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allow = value.allow;
      this._remotePort = value.remotePort;
    }
  }

  // allow - computed: true, optional: true, required: false
  private _allow?: boolean | cdktf.IResolvable; 
  public get allow() {
    return this.getBooleanAttribute('allow');
  }
  public set allow(value: boolean | cdktf.IResolvable) {
    this._allow = value;
  }
  public resetAllow() {
    this._allow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowInput() {
    return this._allow;
  }

  // remote_port - computed: true, optional: true, required: false
  private _remotePort?: number; 
  public get remotePort() {
    return this.getNumberAttribute('remote_port');
  }
  public set remotePort(value: number) {
    this._remotePort = value;
  }
  public resetRemotePort() {
    this._remotePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remotePortInput() {
    return this._remotePort;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnection {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#allow DataPanosVirtualRouter#allow}
  */
  readonly allow?: boolean | cdktf.IResolvable;
  /**
  * use specific local port for outgoing BGP connections
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#local_port DataPanosVirtualRouter#local_port}
  */
  readonly localPort?: number;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnectionToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnection | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow: cdktf.booleanToTerraform(struct!.allow),
    local_port: cdktf.numberToTerraform(struct!.localPort),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnectionToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnection | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow: {
      value: cdktf.booleanToHclTerraform(struct!.allow),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    local_port: {
      value: cdktf.numberToHclTerraform(struct!.localPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnectionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnection | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allow !== undefined) {
      hasAnyValues = true;
      internalValueResult.allow = this._allow;
    }
    if (this._localPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.localPort = this._localPort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnection | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allow = undefined;
      this._localPort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allow = value.allow;
      this._localPort = value.localPort;
    }
  }

  // allow - computed: true, optional: true, required: false
  private _allow?: boolean | cdktf.IResolvable; 
  public get allow() {
    return this.getBooleanAttribute('allow');
  }
  public set allow(value: boolean | cdktf.IResolvable) {
    this._allow = value;
  }
  public resetAllow() {
    this._allow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowInput() {
    return this._allow;
  }

  // local_port - computed: true, optional: true, required: false
  private _localPort?: number; 
  public get localPort() {
    return this.getNumberAttribute('local_port');
  }
  public set localPort(value: number) {
    this._localPort = value;
  }
  public resetLocalPort() {
    this._localPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localPortInput() {
    return this._localPort;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptions {
  /**
  * Authentication options
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#authentication DataPanosVirtualRouter#authentication}
  */
  readonly authentication?: string;
  /**
  * hold time (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#hold_time DataPanosVirtualRouter#hold_time}
  */
  readonly holdTime?: string;
  /**
  * idle hold time (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#idle_hold_time DataPanosVirtualRouter#idle_hold_time}
  */
  readonly idleHoldTime?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#incoming_bgp_connection DataPanosVirtualRouter#incoming_bgp_connection}
  */
  readonly incomingBgpConnection?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnection;
  /**
  * keep-alive interval (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#keep_alive_interval DataPanosVirtualRouter#keep_alive_interval}
  */
  readonly keepAliveInterval?: string;
  /**
  * Minimum Route Advertisement Interval (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#min_route_adv_interval DataPanosVirtualRouter#min_route_adv_interval}
  */
  readonly minRouteAdvInterval?: number;
  /**
  * IP TTL value used for sending BGP packet. set to 0 means eBGP use 2, iBGP use 255
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#multihop DataPanosVirtualRouter#multihop}
  */
  readonly multihop?: number;
  /**
  * open delay time (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#open_delay_time DataPanosVirtualRouter#open_delay_time}
  */
  readonly openDelayTime?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#outgoing_bgp_connection DataPanosVirtualRouter#outgoing_bgp_connection}
  */
  readonly outgoingBgpConnection?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnection;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    authentication: cdktf.stringToTerraform(struct!.authentication),
    hold_time: cdktf.stringToTerraform(struct!.holdTime),
    idle_hold_time: cdktf.numberToTerraform(struct!.idleHoldTime),
    incoming_bgp_connection: dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnectionToTerraform(struct!.incomingBgpConnection),
    keep_alive_interval: cdktf.stringToTerraform(struct!.keepAliveInterval),
    min_route_adv_interval: cdktf.numberToTerraform(struct!.minRouteAdvInterval),
    multihop: cdktf.numberToTerraform(struct!.multihop),
    open_delay_time: cdktf.numberToTerraform(struct!.openDelayTime),
    outgoing_bgp_connection: dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnectionToTerraform(struct!.outgoingBgpConnection),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    authentication: {
      value: cdktf.stringToHclTerraform(struct!.authentication),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hold_time: {
      value: cdktf.stringToHclTerraform(struct!.holdTime),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    idle_hold_time: {
      value: cdktf.numberToHclTerraform(struct!.idleHoldTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    incoming_bgp_connection: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnectionToHclTerraform(struct!.incomingBgpConnection),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnection",
    },
    keep_alive_interval: {
      value: cdktf.stringToHclTerraform(struct!.keepAliveInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    min_route_adv_interval: {
      value: cdktf.numberToHclTerraform(struct!.minRouteAdvInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    multihop: {
      value: cdktf.numberToHclTerraform(struct!.multihop),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    open_delay_time: {
      value: cdktf.numberToHclTerraform(struct!.openDelayTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    outgoing_bgp_connection: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnectionToHclTerraform(struct!.outgoingBgpConnection),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnection",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authentication !== undefined) {
      hasAnyValues = true;
      internalValueResult.authentication = this._authentication;
    }
    if (this._holdTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.holdTime = this._holdTime;
    }
    if (this._idleHoldTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.idleHoldTime = this._idleHoldTime;
    }
    if (this._incomingBgpConnection?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.incomingBgpConnection = this._incomingBgpConnection?.internalValue;
    }
    if (this._keepAliveInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.keepAliveInterval = this._keepAliveInterval;
    }
    if (this._minRouteAdvInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.minRouteAdvInterval = this._minRouteAdvInterval;
    }
    if (this._multihop !== undefined) {
      hasAnyValues = true;
      internalValueResult.multihop = this._multihop;
    }
    if (this._openDelayTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.openDelayTime = this._openDelayTime;
    }
    if (this._outgoingBgpConnection?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.outgoingBgpConnection = this._outgoingBgpConnection?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authentication = undefined;
      this._holdTime = undefined;
      this._idleHoldTime = undefined;
      this._incomingBgpConnection.internalValue = undefined;
      this._keepAliveInterval = undefined;
      this._minRouteAdvInterval = undefined;
      this._multihop = undefined;
      this._openDelayTime = undefined;
      this._outgoingBgpConnection.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authentication = value.authentication;
      this._holdTime = value.holdTime;
      this._idleHoldTime = value.idleHoldTime;
      this._incomingBgpConnection.internalValue = value.incomingBgpConnection;
      this._keepAliveInterval = value.keepAliveInterval;
      this._minRouteAdvInterval = value.minRouteAdvInterval;
      this._multihop = value.multihop;
      this._openDelayTime = value.openDelayTime;
      this._outgoingBgpConnection.internalValue = value.outgoingBgpConnection;
    }
  }

  // authentication - computed: true, optional: true, required: false
  private _authentication?: string; 
  public get authentication() {
    return this.getStringAttribute('authentication');
  }
  public set authentication(value: string) {
    this._authentication = value;
  }
  public resetAuthentication() {
    this._authentication = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticationInput() {
    return this._authentication;
  }

  // hold_time - computed: true, optional: true, required: false
  private _holdTime?: string; 
  public get holdTime() {
    return this.getStringAttribute('hold_time');
  }
  public set holdTime(value: string) {
    this._holdTime = value;
  }
  public resetHoldTime() {
    this._holdTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get holdTimeInput() {
    return this._holdTime;
  }

  // idle_hold_time - computed: true, optional: true, required: false
  private _idleHoldTime?: number; 
  public get idleHoldTime() {
    return this.getNumberAttribute('idle_hold_time');
  }
  public set idleHoldTime(value: number) {
    this._idleHoldTime = value;
  }
  public resetIdleHoldTime() {
    this._idleHoldTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idleHoldTimeInput() {
    return this._idleHoldTime;
  }

  // incoming_bgp_connection - computed: true, optional: true, required: false
  private _incomingBgpConnection = new DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnectionOutputReference(this, "incoming_bgp_connection");
  public get incomingBgpConnection() {
    return this._incomingBgpConnection;
  }
  public putIncomingBgpConnection(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsIncomingBgpConnection) {
    this._incomingBgpConnection.internalValue = value;
  }
  public resetIncomingBgpConnection() {
    this._incomingBgpConnection.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get incomingBgpConnectionInput() {
    return this._incomingBgpConnection.internalValue;
  }

  // keep_alive_interval - computed: true, optional: true, required: false
  private _keepAliveInterval?: string; 
  public get keepAliveInterval() {
    return this.getStringAttribute('keep_alive_interval');
  }
  public set keepAliveInterval(value: string) {
    this._keepAliveInterval = value;
  }
  public resetKeepAliveInterval() {
    this._keepAliveInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keepAliveIntervalInput() {
    return this._keepAliveInterval;
  }

  // min_route_adv_interval - computed: true, optional: true, required: false
  private _minRouteAdvInterval?: number; 
  public get minRouteAdvInterval() {
    return this.getNumberAttribute('min_route_adv_interval');
  }
  public set minRouteAdvInterval(value: number) {
    this._minRouteAdvInterval = value;
  }
  public resetMinRouteAdvInterval() {
    this._minRouteAdvInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minRouteAdvIntervalInput() {
    return this._minRouteAdvInterval;
  }

  // multihop - computed: true, optional: true, required: false
  private _multihop?: number; 
  public get multihop() {
    return this.getNumberAttribute('multihop');
  }
  public set multihop(value: number) {
    this._multihop = value;
  }
  public resetMultihop() {
    this._multihop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get multihopInput() {
    return this._multihop;
  }

  // open_delay_time - computed: true, optional: true, required: false
  private _openDelayTime?: number; 
  public get openDelayTime() {
    return this.getNumberAttribute('open_delay_time');
  }
  public set openDelayTime(value: number) {
    this._openDelayTime = value;
  }
  public resetOpenDelayTime() {
    this._openDelayTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get openDelayTimeInput() {
    return this._openDelayTime;
  }

  // outgoing_bgp_connection - computed: true, optional: true, required: false
  private _outgoingBgpConnection = new DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnectionOutputReference(this, "outgoing_bgp_connection");
  public get outgoingBgpConnection() {
    return this._outgoingBgpConnection;
  }
  public putOutgoingBgpConnection(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutgoingBgpConnection) {
    this._outgoingBgpConnection.internalValue = value;
  }
  public resetOutgoingBgpConnection() {
    this._outgoingBgpConnection.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get outgoingBgpConnectionInput() {
    return this._outgoingBgpConnection.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddress {
  /**
  * interface to accept BGP session
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#interface DataPanosVirtualRouter#interface}
  */
  readonly interface?: string;
  /**
  * specify exact IP address if interface has multiple addresses
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ip DataPanosVirtualRouter#ip}
  */
  readonly ip?: string;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddressToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    interface: cdktf.stringToTerraform(struct!.interface),
    ip: cdktf.stringToTerraform(struct!.ip),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddressToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    interface: {
      value: cdktf.stringToHclTerraform(struct!.interface),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddressOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddress | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._interface !== undefined) {
      hasAnyValues = true;
      internalValueResult.interface = this._interface;
    }
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddress | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._interface = undefined;
      this._ip = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._interface = value.interface;
      this._ip = value.ip;
    }
  }

  // interface - computed: true, optional: true, required: false
  private _interface?: string; 
  public get interface() {
    return this.getStringAttribute('interface');
  }
  public set interface(value: string) {
    this._interface = value;
  }
  public resetInterface() {
    this._interface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get interfaceInput() {
    return this._interface;
  }

  // ip - computed: true, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddress {
  /**
  * bgp peer FQDN address object configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#fqdn DataPanosVirtualRouter#fqdn}
  */
  readonly fqdn?: string;
  /**
  * peer address configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ip DataPanosVirtualRouter#ip}
  */
  readonly ip?: string;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddressToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fqdn: cdktf.stringToTerraform(struct!.fqdn),
    ip: cdktf.stringToTerraform(struct!.ip),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddressToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fqdn: {
      value: cdktf.stringToHclTerraform(struct!.fqdn),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddressOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddress | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fqdn !== undefined) {
      hasAnyValues = true;
      internalValueResult.fqdn = this._fqdn;
    }
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddress | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fqdn = undefined;
      this._ip = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fqdn = value.fqdn;
      this._ip = value.ip;
    }
  }

  // fqdn - computed: true, optional: true, required: false
  private _fqdn?: string; 
  public get fqdn() {
    return this.getStringAttribute('fqdn');
  }
  public set fqdn(value: string) {
    this._fqdn = value;
  }
  public resetFqdn() {
    this._fqdn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fqdnInput() {
    return this._fqdn;
  }

  // ip - computed: true, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifier {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#multicast DataPanosVirtualRouter#multicast}
  */
  readonly multicast?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#unicast DataPanosVirtualRouter#unicast}
  */
  readonly unicast?: boolean | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifierToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifier | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    multicast: cdktf.booleanToTerraform(struct!.multicast),
    unicast: cdktf.booleanToTerraform(struct!.unicast),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifierToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifier | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    multicast: {
      value: cdktf.booleanToHclTerraform(struct!.multicast),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    unicast: {
      value: cdktf.booleanToHclTerraform(struct!.unicast),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifierOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifier | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._multicast !== undefined) {
      hasAnyValues = true;
      internalValueResult.multicast = this._multicast;
    }
    if (this._unicast !== undefined) {
      hasAnyValues = true;
      internalValueResult.unicast = this._unicast;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifier | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._multicast = undefined;
      this._unicast = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._multicast = value.multicast;
      this._unicast = value.unicast;
    }
  }

  // multicast - computed: true, optional: true, required: false
  private _multicast?: boolean | cdktf.IResolvable; 
  public get multicast() {
    return this.getBooleanAttribute('multicast');
  }
  public set multicast(value: boolean | cdktf.IResolvable) {
    this._multicast = value;
  }
  public resetMulticast() {
    this._multicast = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get multicastInput() {
    return this._multicast;
  }

  // unicast - computed: true, optional: true, required: false
  private _unicast?: boolean | cdktf.IResolvable; 
  public get unicast() {
    return this.getBooleanAttribute('unicast');
  }
  public set unicast(value: boolean | cdktf.IResolvable) {
    this._unicast = value;
  }
  public resetUnicast() {
    this._unicast = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get unicastInput() {
    return this._unicast;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupPeer {
  /**
  * select AFI for this peer
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#address_family_identifier DataPanosVirtualRouter#address_family_identifier}
  */
  readonly addressFamilyIdentifier?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#bfd DataPanosVirtualRouter#bfd}
  */
  readonly bfd?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerBfd;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#connection_options DataPanosVirtualRouter#connection_options}
  */
  readonly connectionOptions?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptions;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable_mp_bgp DataPanosVirtualRouter#enable_mp_bgp}
  */
  readonly enableMpBgp?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable_sender_side_loop_detection DataPanosVirtualRouter#enable_sender_side_loop_detection}
  */
  readonly enableSenderSideLoopDetection?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#local_address DataPanosVirtualRouter#local_address}
  */
  readonly localAddress?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddress;
  /**
  * maximum of prefixes to receive from peer
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#max_prefixes DataPanosVirtualRouter#max_prefixes}
  */
  readonly maxPrefixes?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#peer_address DataPanosVirtualRouter#peer_address}
  */
  readonly peerAddress?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddress;
  /**
  * peer AS number
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#peer_as DataPanosVirtualRouter#peer_as}
  */
  readonly peerAs?: string;
  /**
  * peering type that affects NOPEER community value handling
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#peering_type DataPanosVirtualRouter#peering_type}
  */
  readonly peeringType?: string;
  /**
  * this peer is reflector client
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#reflector_client DataPanosVirtualRouter#reflector_client}
  */
  readonly reflectorClient?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#subsequent_address_family_identifier DataPanosVirtualRouter#subsequent_address_family_identifier}
  */
  readonly subsequentAddressFamilyIdentifier?: DataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifier;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address_family_identifier: cdktf.stringToTerraform(struct!.addressFamilyIdentifier),
    bfd: dataPanosVirtualRouterProtocolBgpPeerGroupPeerBfdToTerraform(struct!.bfd),
    connection_options: dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsToTerraform(struct!.connectionOptions),
    enable: cdktf.booleanToTerraform(struct!.enable),
    enable_mp_bgp: cdktf.booleanToTerraform(struct!.enableMpBgp),
    enable_sender_side_loop_detection: cdktf.booleanToTerraform(struct!.enableSenderSideLoopDetection),
    local_address: dataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddressToTerraform(struct!.localAddress),
    max_prefixes: cdktf.stringToTerraform(struct!.maxPrefixes),
    name: cdktf.stringToTerraform(struct!.name),
    peer_address: dataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddressToTerraform(struct!.peerAddress),
    peer_as: cdktf.stringToTerraform(struct!.peerAs),
    peering_type: cdktf.stringToTerraform(struct!.peeringType),
    reflector_client: cdktf.stringToTerraform(struct!.reflectorClient),
    subsequent_address_family_identifier: dataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifierToTerraform(struct!.subsequentAddressFamilyIdentifier),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupPeerToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupPeer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address_family_identifier: {
      value: cdktf.stringToHclTerraform(struct!.addressFamilyIdentifier),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    bfd: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupPeerBfdToHclTerraform(struct!.bfd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupPeerBfd",
    },
    connection_options: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsToHclTerraform(struct!.connectionOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptions",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_mp_bgp: {
      value: cdktf.booleanToHclTerraform(struct!.enableMpBgp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_sender_side_loop_detection: {
      value: cdktf.booleanToHclTerraform(struct!.enableSenderSideLoopDetection),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    local_address: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddressToHclTerraform(struct!.localAddress),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddress",
    },
    max_prefixes: {
      value: cdktf.stringToHclTerraform(struct!.maxPrefixes),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    peer_address: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddressToHclTerraform(struct!.peerAddress),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddress",
    },
    peer_as: {
      value: cdktf.stringToHclTerraform(struct!.peerAs),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    peering_type: {
      value: cdktf.stringToHclTerraform(struct!.peeringType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reflector_client: {
      value: cdktf.stringToHclTerraform(struct!.reflectorClient),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subsequent_address_family_identifier: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifierToHclTerraform(struct!.subsequentAddressFamilyIdentifier),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifier",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupPeerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupPeer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addressFamilyIdentifier !== undefined) {
      hasAnyValues = true;
      internalValueResult.addressFamilyIdentifier = this._addressFamilyIdentifier;
    }
    if (this._bfd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bfd = this._bfd?.internalValue;
    }
    if (this._connectionOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionOptions = this._connectionOptions?.internalValue;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._enableMpBgp !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableMpBgp = this._enableMpBgp;
    }
    if (this._enableSenderSideLoopDetection !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableSenderSideLoopDetection = this._enableSenderSideLoopDetection;
    }
    if (this._localAddress?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localAddress = this._localAddress?.internalValue;
    }
    if (this._maxPrefixes !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxPrefixes = this._maxPrefixes;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._peerAddress?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.peerAddress = this._peerAddress?.internalValue;
    }
    if (this._peerAs !== undefined) {
      hasAnyValues = true;
      internalValueResult.peerAs = this._peerAs;
    }
    if (this._peeringType !== undefined) {
      hasAnyValues = true;
      internalValueResult.peeringType = this._peeringType;
    }
    if (this._reflectorClient !== undefined) {
      hasAnyValues = true;
      internalValueResult.reflectorClient = this._reflectorClient;
    }
    if (this._subsequentAddressFamilyIdentifier?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.subsequentAddressFamilyIdentifier = this._subsequentAddressFamilyIdentifier?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addressFamilyIdentifier = undefined;
      this._bfd.internalValue = undefined;
      this._connectionOptions.internalValue = undefined;
      this._enable = undefined;
      this._enableMpBgp = undefined;
      this._enableSenderSideLoopDetection = undefined;
      this._localAddress.internalValue = undefined;
      this._maxPrefixes = undefined;
      this._name = undefined;
      this._peerAddress.internalValue = undefined;
      this._peerAs = undefined;
      this._peeringType = undefined;
      this._reflectorClient = undefined;
      this._subsequentAddressFamilyIdentifier.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addressFamilyIdentifier = value.addressFamilyIdentifier;
      this._bfd.internalValue = value.bfd;
      this._connectionOptions.internalValue = value.connectionOptions;
      this._enable = value.enable;
      this._enableMpBgp = value.enableMpBgp;
      this._enableSenderSideLoopDetection = value.enableSenderSideLoopDetection;
      this._localAddress.internalValue = value.localAddress;
      this._maxPrefixes = value.maxPrefixes;
      this._name = value.name;
      this._peerAddress.internalValue = value.peerAddress;
      this._peerAs = value.peerAs;
      this._peeringType = value.peeringType;
      this._reflectorClient = value.reflectorClient;
      this._subsequentAddressFamilyIdentifier.internalValue = value.subsequentAddressFamilyIdentifier;
    }
  }

  // address_family_identifier - computed: true, optional: true, required: false
  private _addressFamilyIdentifier?: string; 
  public get addressFamilyIdentifier() {
    return this.getStringAttribute('address_family_identifier');
  }
  public set addressFamilyIdentifier(value: string) {
    this._addressFamilyIdentifier = value;
  }
  public resetAddressFamilyIdentifier() {
    this._addressFamilyIdentifier = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressFamilyIdentifierInput() {
    return this._addressFamilyIdentifier;
  }

  // bfd - computed: true, optional: true, required: false
  private _bfd = new DataPanosVirtualRouterProtocolBgpPeerGroupPeerBfdOutputReference(this, "bfd");
  public get bfd() {
    return this._bfd;
  }
  public putBfd(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerBfd) {
    this._bfd.internalValue = value;
  }
  public resetBfd() {
    this._bfd.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bfdInput() {
    return this._bfd.internalValue;
  }

  // connection_options - computed: true, optional: true, required: false
  private _connectionOptions = new DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptionsOutputReference(this, "connection_options");
  public get connectionOptions() {
    return this._connectionOptions;
  }
  public putConnectionOptions(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerConnectionOptions) {
    this._connectionOptions.internalValue = value;
  }
  public resetConnectionOptions() {
    this._connectionOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionOptionsInput() {
    return this._connectionOptions.internalValue;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // enable_mp_bgp - computed: true, optional: true, required: false
  private _enableMpBgp?: boolean | cdktf.IResolvable; 
  public get enableMpBgp() {
    return this.getBooleanAttribute('enable_mp_bgp');
  }
  public set enableMpBgp(value: boolean | cdktf.IResolvable) {
    this._enableMpBgp = value;
  }
  public resetEnableMpBgp() {
    this._enableMpBgp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableMpBgpInput() {
    return this._enableMpBgp;
  }

  // enable_sender_side_loop_detection - computed: true, optional: true, required: false
  private _enableSenderSideLoopDetection?: boolean | cdktf.IResolvable; 
  public get enableSenderSideLoopDetection() {
    return this.getBooleanAttribute('enable_sender_side_loop_detection');
  }
  public set enableSenderSideLoopDetection(value: boolean | cdktf.IResolvable) {
    this._enableSenderSideLoopDetection = value;
  }
  public resetEnableSenderSideLoopDetection() {
    this._enableSenderSideLoopDetection = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableSenderSideLoopDetectionInput() {
    return this._enableSenderSideLoopDetection;
  }

  // local_address - computed: true, optional: true, required: false
  private _localAddress = new DataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddressOutputReference(this, "local_address");
  public get localAddress() {
    return this._localAddress;
  }
  public putLocalAddress(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerLocalAddress) {
    this._localAddress.internalValue = value;
  }
  public resetLocalAddress() {
    this._localAddress.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localAddressInput() {
    return this._localAddress.internalValue;
  }

  // max_prefixes - computed: true, optional: true, required: false
  private _maxPrefixes?: string; 
  public get maxPrefixes() {
    return this.getStringAttribute('max_prefixes');
  }
  public set maxPrefixes(value: string) {
    this._maxPrefixes = value;
  }
  public resetMaxPrefixes() {
    this._maxPrefixes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxPrefixesInput() {
    return this._maxPrefixes;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // peer_address - computed: true, optional: true, required: false
  private _peerAddress = new DataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddressOutputReference(this, "peer_address");
  public get peerAddress() {
    return this._peerAddress;
  }
  public putPeerAddress(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerPeerAddress) {
    this._peerAddress.internalValue = value;
  }
  public resetPeerAddress() {
    this._peerAddress.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get peerAddressInput() {
    return this._peerAddress.internalValue;
  }

  // peer_as - computed: true, optional: true, required: false
  private _peerAs?: string; 
  public get peerAs() {
    return this.getStringAttribute('peer_as');
  }
  public set peerAs(value: string) {
    this._peerAs = value;
  }
  public resetPeerAs() {
    this._peerAs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get peerAsInput() {
    return this._peerAs;
  }

  // peering_type - computed: true, optional: true, required: false
  private _peeringType?: string; 
  public get peeringType() {
    return this.getStringAttribute('peering_type');
  }
  public set peeringType(value: string) {
    this._peeringType = value;
  }
  public resetPeeringType() {
    this._peeringType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get peeringTypeInput() {
    return this._peeringType;
  }

  // reflector_client - computed: true, optional: true, required: false
  private _reflectorClient?: string; 
  public get reflectorClient() {
    return this.getStringAttribute('reflector_client');
  }
  public set reflectorClient(value: string) {
    this._reflectorClient = value;
  }
  public resetReflectorClient() {
    this._reflectorClient = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reflectorClientInput() {
    return this._reflectorClient;
  }

  // subsequent_address_family_identifier - computed: true, optional: true, required: false
  private _subsequentAddressFamilyIdentifier = new DataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifierOutputReference(this, "subsequent_address_family_identifier");
  public get subsequentAddressFamilyIdentifier() {
    return this._subsequentAddressFamilyIdentifier;
  }
  public putSubsequentAddressFamilyIdentifier(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeerSubsequentAddressFamilyIdentifier) {
    this._subsequentAddressFamilyIdentifier.internalValue = value;
  }
  public resetSubsequentAddressFamilyIdentifier() {
    this._subsequentAddressFamilyIdentifier.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subsequentAddressFamilyIdentifierInput() {
    return this._subsequentAddressFamilyIdentifier.internalValue;
  }
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupPeerList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPeerGroupPeer[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPeerGroupPeerOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPeerGroupPeerOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#export_nexthop DataPanosVirtualRouter#export_nexthop}
  */
  readonly exportNexthop?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#import_nexthop DataPanosVirtualRouter#import_nexthop}
  */
  readonly importNexthop?: string;
  /**
  * remove private AS when exporting route
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_private_as DataPanosVirtualRouter#remove_private_as}
  */
  readonly removePrivateAs?: boolean | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    export_nexthop: cdktf.stringToTerraform(struct!.exportNexthop),
    import_nexthop: cdktf.stringToTerraform(struct!.importNexthop),
    remove_private_as: cdktf.booleanToTerraform(struct!.removePrivateAs),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    export_nexthop: {
      value: cdktf.stringToHclTerraform(struct!.exportNexthop),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    import_nexthop: {
      value: cdktf.stringToHclTerraform(struct!.importNexthop),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remove_private_as: {
      value: cdktf.booleanToHclTerraform(struct!.removePrivateAs),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exportNexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.exportNexthop = this._exportNexthop;
    }
    if (this._importNexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.importNexthop = this._importNexthop;
    }
    if (this._removePrivateAs !== undefined) {
      hasAnyValues = true;
      internalValueResult.removePrivateAs = this._removePrivateAs;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exportNexthop = undefined;
      this._importNexthop = undefined;
      this._removePrivateAs = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exportNexthop = value.exportNexthop;
      this._importNexthop = value.importNexthop;
      this._removePrivateAs = value.removePrivateAs;
    }
  }

  // export_nexthop - computed: true, optional: true, required: false
  private _exportNexthop?: string; 
  public get exportNexthop() {
    return this.getStringAttribute('export_nexthop');
  }
  public set exportNexthop(value: string) {
    this._exportNexthop = value;
  }
  public resetExportNexthop() {
    this._exportNexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exportNexthopInput() {
    return this._exportNexthop;
  }

  // import_nexthop - computed: true, optional: true, required: false
  private _importNexthop?: string; 
  public get importNexthop() {
    return this.getStringAttribute('import_nexthop');
  }
  public set importNexthop(value: string) {
    this._importNexthop = value;
  }
  public resetImportNexthop() {
    this._importNexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get importNexthopInput() {
    return this._importNexthop;
  }

  // remove_private_as - computed: true, optional: true, required: false
  private _removePrivateAs?: boolean | cdktf.IResolvable; 
  public get removePrivateAs() {
    return this.getBooleanAttribute('remove_private_as');
  }
  public set removePrivateAs(value: boolean | cdktf.IResolvable) {
    this._removePrivateAs = value;
  }
  public resetRemovePrivateAs() {
    this._removePrivateAs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removePrivateAsInput() {
    return this._removePrivateAs;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfed {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#export_nexthop DataPanosVirtualRouter#export_nexthop}
  */
  readonly exportNexthop?: string;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfedToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfed | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    export_nexthop: cdktf.stringToTerraform(struct!.exportNexthop),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfedToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfed | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    export_nexthop: {
      value: cdktf.stringToHclTerraform(struct!.exportNexthop),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfed | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exportNexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.exportNexthop = this._exportNexthop;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfed | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exportNexthop = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exportNexthop = value.exportNexthop;
    }
  }

  // export_nexthop - computed: true, optional: true, required: false
  private _exportNexthop?: string; 
  public get exportNexthop() {
    return this.getStringAttribute('export_nexthop');
  }
  public set exportNexthop(value: string) {
    this._exportNexthop = value;
  }
  public resetExportNexthop() {
    this._exportNexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exportNexthopInput() {
    return this._exportNexthop;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#export_nexthop DataPanosVirtualRouter#export_nexthop}
  */
  readonly exportNexthop?: string;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    export_nexthop: cdktf.stringToTerraform(struct!.exportNexthop),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    export_nexthop: {
      value: cdktf.stringToHclTerraform(struct!.exportNexthop),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exportNexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.exportNexthop = this._exportNexthop;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exportNexthop = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exportNexthop = value.exportNexthop;
    }
  }

  // export_nexthop - computed: true, optional: true, required: false
  private _exportNexthop?: string; 
  public get exportNexthop() {
    return this.getStringAttribute('export_nexthop');
  }
  public set exportNexthop(value: string) {
    this._exportNexthop = value;
  }
  public resetExportNexthop() {
    this._exportNexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exportNexthopInput() {
    return this._exportNexthop;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfed {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#export_nexthop DataPanosVirtualRouter#export_nexthop}
  */
  readonly exportNexthop?: string;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfedToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfed | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    export_nexthop: cdktf.stringToTerraform(struct!.exportNexthop),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfedToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfed | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    export_nexthop: {
      value: cdktf.stringToHclTerraform(struct!.exportNexthop),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfed | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exportNexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.exportNexthop = this._exportNexthop;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfed | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exportNexthop = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exportNexthop = value.exportNexthop;
    }
  }

  // export_nexthop - computed: true, optional: true, required: false
  private _exportNexthop?: string; 
  public get exportNexthop() {
    return this.getStringAttribute('export_nexthop');
  }
  public set exportNexthop(value: string) {
    this._exportNexthop = value;
  }
  public resetExportNexthop() {
    this._exportNexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exportNexthopInput() {
    return this._exportNexthop;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroupType {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ebgp DataPanosVirtualRouter#ebgp}
  */
  readonly ebgp?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgp;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ebgp_confed DataPanosVirtualRouter#ebgp_confed}
  */
  readonly ebgpConfed?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfed;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ibgp DataPanosVirtualRouter#ibgp}
  */
  readonly ibgp?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgp;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ibgp_confed DataPanosVirtualRouter#ibgp_confed}
  */
  readonly ibgpConfed?: DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfed;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupTypeToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupType | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ebgp: dataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpToTerraform(struct!.ebgp),
    ebgp_confed: dataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfedToTerraform(struct!.ebgpConfed),
    ibgp: dataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpToTerraform(struct!.ibgp),
    ibgp_confed: dataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfedToTerraform(struct!.ibgpConfed),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupTypeToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroupType | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ebgp: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpToHclTerraform(struct!.ebgp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgp",
    },
    ebgp_confed: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfedToHclTerraform(struct!.ebgpConfed),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfed",
    },
    ibgp: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpToHclTerraform(struct!.ibgp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgp",
    },
    ibgp_confed: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfedToHclTerraform(struct!.ibgpConfed),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfed",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupTypeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroupType | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._ebgp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ebgp = this._ebgp?.internalValue;
    }
    if (this._ebgpConfed?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ebgpConfed = this._ebgpConfed?.internalValue;
    }
    if (this._ibgp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ibgp = this._ibgp?.internalValue;
    }
    if (this._ibgpConfed?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ibgpConfed = this._ibgpConfed?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroupType | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._ebgp.internalValue = undefined;
      this._ebgpConfed.internalValue = undefined;
      this._ibgp.internalValue = undefined;
      this._ibgpConfed.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._ebgp.internalValue = value.ebgp;
      this._ebgpConfed.internalValue = value.ebgpConfed;
      this._ibgp.internalValue = value.ibgp;
      this._ibgpConfed.internalValue = value.ibgpConfed;
    }
  }

  // ebgp - computed: true, optional: true, required: false
  private _ebgp = new DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpOutputReference(this, "ebgp");
  public get ebgp() {
    return this._ebgp;
  }
  public putEbgp(value: DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgp) {
    this._ebgp.internalValue = value;
  }
  public resetEbgp() {
    this._ebgp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ebgpInput() {
    return this._ebgp.internalValue;
  }

  // ebgp_confed - computed: true, optional: true, required: false
  private _ebgpConfed = new DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfedOutputReference(this, "ebgp_confed");
  public get ebgpConfed() {
    return this._ebgpConfed;
  }
  public putEbgpConfed(value: DataPanosVirtualRouterProtocolBgpPeerGroupTypeEbgpConfed) {
    this._ebgpConfed.internalValue = value;
  }
  public resetEbgpConfed() {
    this._ebgpConfed.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ebgpConfedInput() {
    return this._ebgpConfed.internalValue;
  }

  // ibgp - computed: true, optional: true, required: false
  private _ibgp = new DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpOutputReference(this, "ibgp");
  public get ibgp() {
    return this._ibgp;
  }
  public putIbgp(value: DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgp) {
    this._ibgp.internalValue = value;
  }
  public resetIbgp() {
    this._ibgp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ibgpInput() {
    return this._ibgp.internalValue;
  }

  // ibgp_confed - computed: true, optional: true, required: false
  private _ibgpConfed = new DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfedOutputReference(this, "ibgp_confed");
  public get ibgpConfed() {
    return this._ibgpConfed;
  }
  public putIbgpConfed(value: DataPanosVirtualRouterProtocolBgpPeerGroupTypeIbgpConfed) {
    this._ibgpConfed.internalValue = value;
  }
  public resetIbgpConfed() {
    this._ibgpConfed.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ibgpConfedInput() {
    return this._ibgpConfed.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPeerGroup {
  /**
  * the peers understand aggregated confederation AS path
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#aggregated_confed_as_path DataPanosVirtualRouter#aggregated_confed_as_path}
  */
  readonly aggregatedConfedAsPath?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#peer DataPanosVirtualRouter#peer}
  */
  readonly peer?: DataPanosVirtualRouterProtocolBgpPeerGroupPeer[] | cdktf.IResolvable;
  /**
  * soft reset with stored info
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#soft_reset_with_stored_info DataPanosVirtualRouter#soft_reset_with_stored_info}
  */
  readonly softResetWithStoredInfo?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#type DataPanosVirtualRouter#type}
  */
  readonly type?: DataPanosVirtualRouterProtocolBgpPeerGroupType;
}

export function dataPanosVirtualRouterProtocolBgpPeerGroupToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroup | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aggregated_confed_as_path: cdktf.booleanToTerraform(struct!.aggregatedConfedAsPath),
    enable: cdktf.booleanToTerraform(struct!.enable),
    name: cdktf.stringToTerraform(struct!.name),
    peer: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPeerGroupPeerToTerraform, false)(struct!.peer),
    soft_reset_with_stored_info: cdktf.booleanToTerraform(struct!.softResetWithStoredInfo),
    type: dataPanosVirtualRouterProtocolBgpPeerGroupTypeToTerraform(struct!.type),
  }
}


export function dataPanosVirtualRouterProtocolBgpPeerGroupToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPeerGroup | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aggregated_confed_as_path: {
      value: cdktf.booleanToHclTerraform(struct!.aggregatedConfedAsPath),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    peer: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPeerGroupPeerToHclTerraform, false)(struct!.peer),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupPeerList",
    },
    soft_reset_with_stored_info: {
      value: cdktf.booleanToHclTerraform(struct!.softResetWithStoredInfo),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    type: {
      value: dataPanosVirtualRouterProtocolBgpPeerGroupTypeToHclTerraform(struct!.type),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupType",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPeerGroup | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._aggregatedConfedAsPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregatedConfedAsPath = this._aggregatedConfedAsPath;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._peer?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.peer = this._peer?.internalValue;
    }
    if (this._softResetWithStoredInfo !== undefined) {
      hasAnyValues = true;
      internalValueResult.softResetWithStoredInfo = this._softResetWithStoredInfo;
    }
    if (this._type?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPeerGroup | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._aggregatedConfedAsPath = undefined;
      this._enable = undefined;
      this._name = undefined;
      this._peer.internalValue = undefined;
      this._softResetWithStoredInfo = undefined;
      this._type.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._aggregatedConfedAsPath = value.aggregatedConfedAsPath;
      this._enable = value.enable;
      this._name = value.name;
      this._peer.internalValue = value.peer;
      this._softResetWithStoredInfo = value.softResetWithStoredInfo;
      this._type.internalValue = value.type;
    }
  }

  // aggregated_confed_as_path - computed: true, optional: true, required: false
  private _aggregatedConfedAsPath?: boolean | cdktf.IResolvable; 
  public get aggregatedConfedAsPath() {
    return this.getBooleanAttribute('aggregated_confed_as_path');
  }
  public set aggregatedConfedAsPath(value: boolean | cdktf.IResolvable) {
    this._aggregatedConfedAsPath = value;
  }
  public resetAggregatedConfedAsPath() {
    this._aggregatedConfedAsPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregatedConfedAsPathInput() {
    return this._aggregatedConfedAsPath;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // peer - computed: true, optional: true, required: false
  private _peer = new DataPanosVirtualRouterProtocolBgpPeerGroupPeerList(this, "peer", false);
  public get peer() {
    return this._peer;
  }
  public putPeer(value: DataPanosVirtualRouterProtocolBgpPeerGroupPeer[] | cdktf.IResolvable) {
    this._peer.internalValue = value;
  }
  public resetPeer() {
    this._peer.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get peerInput() {
    return this._peer.internalValue;
  }

  // soft_reset_with_stored_info - computed: true, optional: true, required: false
  private _softResetWithStoredInfo?: boolean | cdktf.IResolvable; 
  public get softResetWithStoredInfo() {
    return this.getBooleanAttribute('soft_reset_with_stored_info');
  }
  public set softResetWithStoredInfo(value: boolean | cdktf.IResolvable) {
    this._softResetWithStoredInfo = value;
  }
  public resetSoftResetWithStoredInfo() {
    this._softResetWithStoredInfo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get softResetWithStoredInfoInput() {
    return this._softResetWithStoredInfo;
  }

  // type - computed: true, optional: true, required: false
  private _type = new DataPanosVirtualRouterProtocolBgpPeerGroupTypeOutputReference(this, "type");
  public get type() {
    return this._type;
  }
  public putType(value: DataPanosVirtualRouterProtocolBgpPeerGroupType) {
    this._type.internalValue = value;
  }
  public resetType() {
    this._type.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type.internalValue;
  }
}

export class DataPanosVirtualRouterProtocolBgpPeerGroupList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPeerGroup[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPeerGroupOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPeerGroupOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefix {
  /**
  * match exact prefix length
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#exact DataPanosVirtualRouter#exact}
  */
  readonly exact?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefixToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exact: cdktf.booleanToTerraform(struct!.exact),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefixToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exact: {
      value: cdktf.booleanToHclTerraform(struct!.exact),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefixOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefix | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exact !== undefined) {
      hasAnyValues = true;
      internalValueResult.exact = this._exact;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefix | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exact = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exact = value.exact;
      this._name = value.name;
    }
  }

  // exact - computed: true, optional: true, required: false
  private _exact?: boolean | cdktf.IResolvable; 
  public get exact() {
    return this.getBooleanAttribute('exact');
  }
  public set exact(value: boolean | cdktf.IResolvable) {
    this._exact = value;
  }
  public resetExact() {
    this._exact = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exactInput() {
    return this._exact;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefixList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefix[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefixOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefixOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPath {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPathToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPathToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#address_prefix DataPanosVirtualRouter#address_prefix}
  */
  readonly addressPrefix?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefix[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path DataPanosVirtualRouter#as_path}
  */
  readonly asPath?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPath;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#community DataPanosVirtualRouter#community}
  */
  readonly community?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#extended_community DataPanosVirtualRouter#extended_community}
  */
  readonly extendedCommunity?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#from_peer DataPanosVirtualRouter#from_peer}
  */
  readonly fromPeer?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#med DataPanosVirtualRouter#med}
  */
  readonly med?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#nexthop DataPanosVirtualRouter#nexthop}
  */
  readonly nexthop?: string[];
  /**
  * route table to match rule
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#route_table DataPanosVirtualRouter#route_table}
  */
  readonly routeTable?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address_prefix: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefixToTerraform, false)(struct!.addressPrefix),
    as_path: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPathToTerraform(struct!.asPath),
    community: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunityToTerraform(struct!.community),
    extended_community: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunityToTerraform(struct!.extendedCommunity),
    from_peer: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.fromPeer),
    med: cdktf.numberToTerraform(struct!.med),
    nexthop: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nexthop),
    route_table: cdktf.stringToTerraform(struct!.routeTable),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address_prefix: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefixToHclTerraform, false)(struct!.addressPrefix),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefixList",
    },
    as_path: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPathToHclTerraform(struct!.asPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPath",
    },
    community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunityToHclTerraform(struct!.community),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunity",
    },
    extended_community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunityToHclTerraform(struct!.extendedCommunity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunity",
    },
    from_peer: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.fromPeer),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    med: {
      value: cdktf.numberToHclTerraform(struct!.med),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    nexthop: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nexthop),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    route_table: {
      value: cdktf.stringToHclTerraform(struct!.routeTable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addressPrefix?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.addressPrefix = this._addressPrefix?.internalValue;
    }
    if (this._asPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPath = this._asPath?.internalValue;
    }
    if (this._community?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.community = this._community?.internalValue;
    }
    if (this._extendedCommunity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.extendedCommunity = this._extendedCommunity?.internalValue;
    }
    if (this._fromPeer !== undefined) {
      hasAnyValues = true;
      internalValueResult.fromPeer = this._fromPeer;
    }
    if (this._med !== undefined) {
      hasAnyValues = true;
      internalValueResult.med = this._med;
    }
    if (this._nexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.nexthop = this._nexthop;
    }
    if (this._routeTable !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeTable = this._routeTable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = undefined;
      this._asPath.internalValue = undefined;
      this._community.internalValue = undefined;
      this._extendedCommunity.internalValue = undefined;
      this._fromPeer = undefined;
      this._med = undefined;
      this._nexthop = undefined;
      this._routeTable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = value.addressPrefix;
      this._asPath.internalValue = value.asPath;
      this._community.internalValue = value.community;
      this._extendedCommunity.internalValue = value.extendedCommunity;
      this._fromPeer = value.fromPeer;
      this._med = value.med;
      this._nexthop = value.nexthop;
      this._routeTable = value.routeTable;
    }
  }

  // address_prefix - computed: true, optional: true, required: false
  private _addressPrefix = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefixList(this, "address_prefix", false);
  public get addressPrefix() {
    return this._addressPrefix;
  }
  public putAddressPrefix(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAddressPrefix[] | cdktf.IResolvable) {
    this._addressPrefix.internalValue = value;
  }
  public resetAddressPrefix() {
    this._addressPrefix.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressPrefixInput() {
    return this._addressPrefix.internalValue;
  }

  // as_path - computed: true, optional: true, required: false
  private _asPath = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPathOutputReference(this, "as_path");
  public get asPath() {
    return this._asPath;
  }
  public putAsPath(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchAsPath) {
    this._asPath.internalValue = value;
  }
  public resetAsPath() {
    this._asPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathInput() {
    return this._asPath.internalValue;
  }

  // community - computed: true, optional: true, required: false
  private _community = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunityOutputReference(this, "community");
  public get community() {
    return this._community;
  }
  public putCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchCommunity) {
    this._community.internalValue = value;
  }
  public resetCommunity() {
    this._community.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityInput() {
    return this._community.internalValue;
  }

  // extended_community - computed: true, optional: true, required: false
  private _extendedCommunity = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunityOutputReference(this, "extended_community");
  public get extendedCommunity() {
    return this._extendedCommunity;
  }
  public putExtendedCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchExtendedCommunity) {
    this._extendedCommunity.internalValue = value;
  }
  public resetExtendedCommunity() {
    this._extendedCommunity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extendedCommunityInput() {
    return this._extendedCommunity.internalValue;
  }

  // from_peer - computed: true, optional: true, required: false
  private _fromPeer?: string[]; 
  public get fromPeer() {
    return this.getListAttribute('from_peer');
  }
  public set fromPeer(value: string[]) {
    this._fromPeer = value;
  }
  public resetFromPeer() {
    this._fromPeer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fromPeerInput() {
    return this._fromPeer;
  }

  // med - computed: true, optional: true, required: false
  private _med?: number; 
  public get med() {
    return this.getNumberAttribute('med');
  }
  public set med(value: number) {
    this._med = value;
  }
  public resetMed() {
    this._med = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get medInput() {
    return this._med;
  }

  // nexthop - computed: true, optional: true, required: false
  private _nexthop?: string[]; 
  public get nexthop() {
    return this.getListAttribute('nexthop');
  }
  public set nexthop(value: string[]) {
    this._nexthop = value;
  }
  public resetNexthop() {
    this._nexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nexthopInput() {
    return this._nexthop;
  }

  // route_table - computed: true, optional: true, required: false
  private _routeTable?: string; 
  public get routeTable() {
    return this.getStringAttribute('route_table');
  }
  public set routeTable(value: string) {
    this._routeTable = value;
  }
  public resetRouteTable() {
    this._routeTable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeTableInput() {
    return this._routeTable;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFilters {
  /**
  * enble this rule
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#match DataPanosVirtualRouter#match}
  */
  readonly match?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFilters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enable: cdktf.booleanToTerraform(struct!.enable),
    match: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchToTerraform(struct!.match),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFilters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    match: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchToHclTerraform(struct!.match),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatch",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFilters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._match?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.match = this._match?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFilters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enable = undefined;
      this._match.internalValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enable = value.enable;
      this._match.internalValue = value.match;
      this._name = value.name;
    }
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // match - computed: true, optional: true, required: false
  private _match = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatchOutputReference(this, "match");
  public get match() {
    return this._match;
  }
  public putMatch(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersMatch) {
    this._match.internalValue = value;
  }
  public resetMatch() {
    this._match.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchInput() {
    return this._match.internalValue;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFilters[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNone {
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNoneToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNoneToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNoneOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNone | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNone | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#none DataPanosVirtualRouter#none}
  */
  readonly none?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNone;
  /**
  * prepend local AS for specified number of times
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#prepend DataPanosVirtualRouter#prepend}
  */
  readonly prepend?: number;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    none: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNoneToTerraform(struct!.none),
    prepend: cdktf.numberToTerraform(struct!.prepend),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    none: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNoneToHclTerraform(struct!.none),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNone",
    },
    prepend: {
      value: cdktf.numberToHclTerraform(struct!.prepend),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._none?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.none = this._none?.internalValue;
    }
    if (this._prepend !== undefined) {
      hasAnyValues = true;
      internalValueResult.prepend = this._prepend;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._none.internalValue = undefined;
      this._prepend = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._none.internalValue = value.none;
      this._prepend = value.prepend;
    }
  }

  // none - computed: true, optional: true, required: false
  private _none = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNoneOutputReference(this, "none");
  public get none() {
    return this._none;
  }
  public putNone(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathNone) {
    this._none.internalValue = value;
  }
  public resetNone() {
    this._none.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get noneInput() {
    return this._none.internalValue;
  }

  // prepend - computed: true, optional: true, required: false
  private _prepend?: number; 
  public get prepend() {
    return this.getNumberAttribute('prepend');
  }
  public set prepend(value: number) {
    this._prepend = value;
  }
  public resetPrepend() {
    this._prepend = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prependInput() {
    return this._prepend;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNone {
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNoneToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNoneToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNoneOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNone | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNone | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAll {
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAllToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAllToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAllOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAll | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAll | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#append DataPanosVirtualRouter#append}
  */
  readonly append?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#none DataPanosVirtualRouter#none}
  */
  readonly none?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNone;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#overwrite DataPanosVirtualRouter#overwrite}
  */
  readonly overwrite?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_all DataPanosVirtualRouter#remove_all}
  */
  readonly removeAll?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAll;
  /**
  * remove specified coummnity match regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_regex DataPanosVirtualRouter#remove_regex}
  */
  readonly removeRegex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    append: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.append),
    none: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNoneToTerraform(struct!.none),
    overwrite: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.overwrite),
    remove_all: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAllToTerraform(struct!.removeAll),
    remove_regex: cdktf.stringToTerraform(struct!.removeRegex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    append: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.append),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    none: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNoneToHclTerraform(struct!.none),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNone",
    },
    overwrite: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.overwrite),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    remove_all: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAllToHclTerraform(struct!.removeAll),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAll",
    },
    remove_regex: {
      value: cdktf.stringToHclTerraform(struct!.removeRegex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._append !== undefined) {
      hasAnyValues = true;
      internalValueResult.append = this._append;
    }
    if (this._none?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.none = this._none?.internalValue;
    }
    if (this._overwrite !== undefined) {
      hasAnyValues = true;
      internalValueResult.overwrite = this._overwrite;
    }
    if (this._removeAll?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeAll = this._removeAll?.internalValue;
    }
    if (this._removeRegex !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeRegex = this._removeRegex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._append = undefined;
      this._none.internalValue = undefined;
      this._overwrite = undefined;
      this._removeAll.internalValue = undefined;
      this._removeRegex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._append = value.append;
      this._none.internalValue = value.none;
      this._overwrite = value.overwrite;
      this._removeAll.internalValue = value.removeAll;
      this._removeRegex = value.removeRegex;
    }
  }

  // append - computed: true, optional: true, required: false
  private _append?: string[]; 
  public get append() {
    return this.getListAttribute('append');
  }
  public set append(value: string[]) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // none - computed: true, optional: true, required: false
  private _none = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNoneOutputReference(this, "none");
  public get none() {
    return this._none;
  }
  public putNone(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityNone) {
    this._none.internalValue = value;
  }
  public resetNone() {
    this._none.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get noneInput() {
    return this._none.internalValue;
  }

  // overwrite - computed: true, optional: true, required: false
  private _overwrite?: string[]; 
  public get overwrite() {
    return this.getListAttribute('overwrite');
  }
  public set overwrite(value: string[]) {
    this._overwrite = value;
  }
  public resetOverwrite() {
    this._overwrite = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get overwriteInput() {
    return this._overwrite;
  }

  // remove_all - computed: true, optional: true, required: false
  private _removeAll = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAllOutputReference(this, "remove_all");
  public get removeAll() {
    return this._removeAll;
  }
  public putRemoveAll(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityRemoveAll) {
    this._removeAll.internalValue = value;
  }
  public resetRemoveAll() {
    this._removeAll.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeAllInput() {
    return this._removeAll.internalValue;
  }

  // remove_regex - computed: true, optional: true, required: false
  private _removeRegex?: string; 
  public get removeRegex() {
    return this.getStringAttribute('remove_regex');
  }
  public set removeRegex(value: string) {
    this._removeRegex = value;
  }
  public resetRemoveRegex() {
    this._removeRegex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeRegexInput() {
    return this._removeRegex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNone {
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNoneToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNoneToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNoneOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNone | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNone | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAll {
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAllToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAllToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAllOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAll | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAll | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#append DataPanosVirtualRouter#append}
  */
  readonly append?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#none DataPanosVirtualRouter#none}
  */
  readonly none?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNone;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#overwrite DataPanosVirtualRouter#overwrite}
  */
  readonly overwrite?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_all DataPanosVirtualRouter#remove_all}
  */
  readonly removeAll?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAll;
  /**
  * remove specified coummnity match regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_regex DataPanosVirtualRouter#remove_regex}
  */
  readonly removeRegex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    append: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.append),
    none: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNoneToTerraform(struct!.none),
    overwrite: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.overwrite),
    remove_all: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAllToTerraform(struct!.removeAll),
    remove_regex: cdktf.stringToTerraform(struct!.removeRegex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    append: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.append),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    none: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNoneToHclTerraform(struct!.none),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNone",
    },
    overwrite: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.overwrite),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    remove_all: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAllToHclTerraform(struct!.removeAll),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAll",
    },
    remove_regex: {
      value: cdktf.stringToHclTerraform(struct!.removeRegex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._append !== undefined) {
      hasAnyValues = true;
      internalValueResult.append = this._append;
    }
    if (this._none?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.none = this._none?.internalValue;
    }
    if (this._overwrite !== undefined) {
      hasAnyValues = true;
      internalValueResult.overwrite = this._overwrite;
    }
    if (this._removeAll?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeAll = this._removeAll?.internalValue;
    }
    if (this._removeRegex !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeRegex = this._removeRegex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._append = undefined;
      this._none.internalValue = undefined;
      this._overwrite = undefined;
      this._removeAll.internalValue = undefined;
      this._removeRegex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._append = value.append;
      this._none.internalValue = value.none;
      this._overwrite = value.overwrite;
      this._removeAll.internalValue = value.removeAll;
      this._removeRegex = value.removeRegex;
    }
  }

  // append - computed: true, optional: true, required: false
  private _append?: string[]; 
  public get append() {
    return this.getListAttribute('append');
  }
  public set append(value: string[]) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // none - computed: true, optional: true, required: false
  private _none = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNoneOutputReference(this, "none");
  public get none() {
    return this._none;
  }
  public putNone(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityNone) {
    this._none.internalValue = value;
  }
  public resetNone() {
    this._none.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get noneInput() {
    return this._none.internalValue;
  }

  // overwrite - computed: true, optional: true, required: false
  private _overwrite?: string[]; 
  public get overwrite() {
    return this.getListAttribute('overwrite');
  }
  public set overwrite(value: string[]) {
    this._overwrite = value;
  }
  public resetOverwrite() {
    this._overwrite = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get overwriteInput() {
    return this._overwrite;
  }

  // remove_all - computed: true, optional: true, required: false
  private _removeAll = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAllOutputReference(this, "remove_all");
  public get removeAll() {
    return this._removeAll;
  }
  public putRemoveAll(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityRemoveAll) {
    this._removeAll.internalValue = value;
  }
  public resetRemoveAll() {
    this._removeAll.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeAllInput() {
    return this._removeAll.internalValue;
  }

  // remove_regex - computed: true, optional: true, required: false
  private _removeRegex?: string; 
  public get removeRegex() {
    return this.getStringAttribute('remove_regex');
  }
  public set removeRegex(value: string) {
    this._removeRegex = value;
  }
  public resetRemoveRegex() {
    this._removeRegex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeRegexInput() {
    return this._removeRegex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path DataPanosVirtualRouter#as_path}
  */
  readonly asPath?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPath;
  /**
  * add AS path limit attribute if it does not exist 
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path_limit DataPanosVirtualRouter#as_path_limit}
  */
  readonly asPathLimit?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#community DataPanosVirtualRouter#community}
  */
  readonly community?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#extended_community DataPanosVirtualRouter#extended_community}
  */
  readonly extendedCommunity?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunity;
  /**
  * new local preference value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#local_preference DataPanosVirtualRouter#local_preference}
  */
  readonly localPreference?: number;
  /**
  * new MED value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#med DataPanosVirtualRouter#med}
  */
  readonly med?: number;
  /**
  * nexthop address
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#nexthop DataPanosVirtualRouter#nexthop}
  */
  readonly nexthop?: string;
  /**
  * new route origin
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#origin DataPanosVirtualRouter#origin}
  */
  readonly origin?: string;
  /**
  * new weight value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#weight DataPanosVirtualRouter#weight}
  */
  readonly weight?: number;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    as_path: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathToTerraform(struct!.asPath),
    as_path_limit: cdktf.numberToTerraform(struct!.asPathLimit),
    community: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityToTerraform(struct!.community),
    extended_community: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityToTerraform(struct!.extendedCommunity),
    local_preference: cdktf.numberToTerraform(struct!.localPreference),
    med: cdktf.numberToTerraform(struct!.med),
    nexthop: cdktf.stringToTerraform(struct!.nexthop),
    origin: cdktf.stringToTerraform(struct!.origin),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    as_path: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathToHclTerraform(struct!.asPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPath",
    },
    as_path_limit: {
      value: cdktf.numberToHclTerraform(struct!.asPathLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityToHclTerraform(struct!.community),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunity",
    },
    extended_community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityToHclTerraform(struct!.extendedCommunity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunity",
    },
    local_preference: {
      value: cdktf.numberToHclTerraform(struct!.localPreference),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    med: {
      value: cdktf.numberToHclTerraform(struct!.med),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    nexthop: {
      value: cdktf.stringToHclTerraform(struct!.nexthop),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    origin: {
      value: cdktf.stringToHclTerraform(struct!.origin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._asPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPath = this._asPath?.internalValue;
    }
    if (this._asPathLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPathLimit = this._asPathLimit;
    }
    if (this._community?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.community = this._community?.internalValue;
    }
    if (this._extendedCommunity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.extendedCommunity = this._extendedCommunity?.internalValue;
    }
    if (this._localPreference !== undefined) {
      hasAnyValues = true;
      internalValueResult.localPreference = this._localPreference;
    }
    if (this._med !== undefined) {
      hasAnyValues = true;
      internalValueResult.med = this._med;
    }
    if (this._nexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.nexthop = this._nexthop;
    }
    if (this._origin !== undefined) {
      hasAnyValues = true;
      internalValueResult.origin = this._origin;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._asPath.internalValue = undefined;
      this._asPathLimit = undefined;
      this._community.internalValue = undefined;
      this._extendedCommunity.internalValue = undefined;
      this._localPreference = undefined;
      this._med = undefined;
      this._nexthop = undefined;
      this._origin = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._asPath.internalValue = value.asPath;
      this._asPathLimit = value.asPathLimit;
      this._community.internalValue = value.community;
      this._extendedCommunity.internalValue = value.extendedCommunity;
      this._localPreference = value.localPreference;
      this._med = value.med;
      this._nexthop = value.nexthop;
      this._origin = value.origin;
      this._weight = value.weight;
    }
  }

  // as_path - computed: true, optional: true, required: false
  private _asPath = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPathOutputReference(this, "as_path");
  public get asPath() {
    return this._asPath;
  }
  public putAsPath(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesAsPath) {
    this._asPath.internalValue = value;
  }
  public resetAsPath() {
    this._asPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathInput() {
    return this._asPath.internalValue;
  }

  // as_path_limit - computed: true, optional: true, required: false
  private _asPathLimit?: number; 
  public get asPathLimit() {
    return this.getNumberAttribute('as_path_limit');
  }
  public set asPathLimit(value: number) {
    this._asPathLimit = value;
  }
  public resetAsPathLimit() {
    this._asPathLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathLimitInput() {
    return this._asPathLimit;
  }

  // community - computed: true, optional: true, required: false
  private _community = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunityOutputReference(this, "community");
  public get community() {
    return this._community;
  }
  public putCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesCommunity) {
    this._community.internalValue = value;
  }
  public resetCommunity() {
    this._community.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityInput() {
    return this._community.internalValue;
  }

  // extended_community - computed: true, optional: true, required: false
  private _extendedCommunity = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunityOutputReference(this, "extended_community");
  public get extendedCommunity() {
    return this._extendedCommunity;
  }
  public putExtendedCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesExtendedCommunity) {
    this._extendedCommunity.internalValue = value;
  }
  public resetExtendedCommunity() {
    this._extendedCommunity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extendedCommunityInput() {
    return this._extendedCommunity.internalValue;
  }

  // local_preference - computed: true, optional: true, required: false
  private _localPreference?: number; 
  public get localPreference() {
    return this.getNumberAttribute('local_preference');
  }
  public set localPreference(value: number) {
    this._localPreference = value;
  }
  public resetLocalPreference() {
    this._localPreference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localPreferenceInput() {
    return this._localPreference;
  }

  // med - computed: true, optional: true, required: false
  private _med?: number; 
  public get med() {
    return this.getNumberAttribute('med');
  }
  public set med(value: number) {
    this._med = value;
  }
  public resetMed() {
    this._med = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get medInput() {
    return this._med;
  }

  // nexthop - computed: true, optional: true, required: false
  private _nexthop?: string; 
  public get nexthop() {
    return this.getStringAttribute('nexthop');
  }
  public set nexthop(value: string) {
    this._nexthop = value;
  }
  public resetNexthop() {
    this._nexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nexthopInput() {
    return this._nexthop;
  }

  // origin - computed: true, optional: true, required: false
  private _origin?: string; 
  public get origin() {
    return this.getStringAttribute('origin');
  }
  public set origin(value: string) {
    this._origin = value;
  }
  public resetOrigin() {
    this._origin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originInput() {
    return this._origin;
  }

  // weight - computed: true, optional: true, required: false
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  public resetWeight() {
    this._weight = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefix {
  /**
  * match exact prefix length
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#exact DataPanosVirtualRouter#exact}
  */
  readonly exact?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefixToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exact: cdktf.booleanToTerraform(struct!.exact),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefixToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exact: {
      value: cdktf.booleanToHclTerraform(struct!.exact),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefixOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefix | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exact !== undefined) {
      hasAnyValues = true;
      internalValueResult.exact = this._exact;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefix | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exact = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exact = value.exact;
      this._name = value.name;
    }
  }

  // exact - computed: true, optional: true, required: false
  private _exact?: boolean | cdktf.IResolvable; 
  public get exact() {
    return this.getBooleanAttribute('exact');
  }
  public set exact(value: boolean | cdktf.IResolvable) {
    this._exact = value;
  }
  public resetExact() {
    this._exact = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exactInput() {
    return this._exact;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefixList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefix[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefixOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefixOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPath {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPathToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPathToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#address_prefix DataPanosVirtualRouter#address_prefix}
  */
  readonly addressPrefix?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefix[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path DataPanosVirtualRouter#as_path}
  */
  readonly asPath?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPath;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#community DataPanosVirtualRouter#community}
  */
  readonly community?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#extended_community DataPanosVirtualRouter#extended_community}
  */
  readonly extendedCommunity?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#from_peer DataPanosVirtualRouter#from_peer}
  */
  readonly fromPeer?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#med DataPanosVirtualRouter#med}
  */
  readonly med?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#nexthop DataPanosVirtualRouter#nexthop}
  */
  readonly nexthop?: string[];
  /**
  * route table to match rule
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#route_table DataPanosVirtualRouter#route_table}
  */
  readonly routeTable?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address_prefix: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefixToTerraform, false)(struct!.addressPrefix),
    as_path: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPathToTerraform(struct!.asPath),
    community: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunityToTerraform(struct!.community),
    extended_community: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunityToTerraform(struct!.extendedCommunity),
    from_peer: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.fromPeer),
    med: cdktf.numberToTerraform(struct!.med),
    nexthop: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nexthop),
    route_table: cdktf.stringToTerraform(struct!.routeTable),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address_prefix: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefixToHclTerraform, false)(struct!.addressPrefix),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefixList",
    },
    as_path: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPathToHclTerraform(struct!.asPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPath",
    },
    community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunityToHclTerraform(struct!.community),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunity",
    },
    extended_community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunityToHclTerraform(struct!.extendedCommunity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunity",
    },
    from_peer: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.fromPeer),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    med: {
      value: cdktf.numberToHclTerraform(struct!.med),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    nexthop: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nexthop),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    route_table: {
      value: cdktf.stringToHclTerraform(struct!.routeTable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addressPrefix?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.addressPrefix = this._addressPrefix?.internalValue;
    }
    if (this._asPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPath = this._asPath?.internalValue;
    }
    if (this._community?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.community = this._community?.internalValue;
    }
    if (this._extendedCommunity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.extendedCommunity = this._extendedCommunity?.internalValue;
    }
    if (this._fromPeer !== undefined) {
      hasAnyValues = true;
      internalValueResult.fromPeer = this._fromPeer;
    }
    if (this._med !== undefined) {
      hasAnyValues = true;
      internalValueResult.med = this._med;
    }
    if (this._nexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.nexthop = this._nexthop;
    }
    if (this._routeTable !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeTable = this._routeTable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = undefined;
      this._asPath.internalValue = undefined;
      this._community.internalValue = undefined;
      this._extendedCommunity.internalValue = undefined;
      this._fromPeer = undefined;
      this._med = undefined;
      this._nexthop = undefined;
      this._routeTable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = value.addressPrefix;
      this._asPath.internalValue = value.asPath;
      this._community.internalValue = value.community;
      this._extendedCommunity.internalValue = value.extendedCommunity;
      this._fromPeer = value.fromPeer;
      this._med = value.med;
      this._nexthop = value.nexthop;
      this._routeTable = value.routeTable;
    }
  }

  // address_prefix - computed: true, optional: true, required: false
  private _addressPrefix = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefixList(this, "address_prefix", false);
  public get addressPrefix() {
    return this._addressPrefix;
  }
  public putAddressPrefix(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAddressPrefix[] | cdktf.IResolvable) {
    this._addressPrefix.internalValue = value;
  }
  public resetAddressPrefix() {
    this._addressPrefix.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressPrefixInput() {
    return this._addressPrefix.internalValue;
  }

  // as_path - computed: true, optional: true, required: false
  private _asPath = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPathOutputReference(this, "as_path");
  public get asPath() {
    return this._asPath;
  }
  public putAsPath(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchAsPath) {
    this._asPath.internalValue = value;
  }
  public resetAsPath() {
    this._asPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathInput() {
    return this._asPath.internalValue;
  }

  // community - computed: true, optional: true, required: false
  private _community = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunityOutputReference(this, "community");
  public get community() {
    return this._community;
  }
  public putCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchCommunity) {
    this._community.internalValue = value;
  }
  public resetCommunity() {
    this._community.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityInput() {
    return this._community.internalValue;
  }

  // extended_community - computed: true, optional: true, required: false
  private _extendedCommunity = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunityOutputReference(this, "extended_community");
  public get extendedCommunity() {
    return this._extendedCommunity;
  }
  public putExtendedCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchExtendedCommunity) {
    this._extendedCommunity.internalValue = value;
  }
  public resetExtendedCommunity() {
    this._extendedCommunity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extendedCommunityInput() {
    return this._extendedCommunity.internalValue;
  }

  // from_peer - computed: true, optional: true, required: false
  private _fromPeer?: string[]; 
  public get fromPeer() {
    return this.getListAttribute('from_peer');
  }
  public set fromPeer(value: string[]) {
    this._fromPeer = value;
  }
  public resetFromPeer() {
    this._fromPeer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fromPeerInput() {
    return this._fromPeer;
  }

  // med - computed: true, optional: true, required: false
  private _med?: number; 
  public get med() {
    return this.getNumberAttribute('med');
  }
  public set med(value: number) {
    this._med = value;
  }
  public resetMed() {
    this._med = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get medInput() {
    return this._med;
  }

  // nexthop - computed: true, optional: true, required: false
  private _nexthop?: string[]; 
  public get nexthop() {
    return this.getListAttribute('nexthop');
  }
  public set nexthop(value: string[]) {
    this._nexthop = value;
  }
  public resetNexthop() {
    this._nexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nexthopInput() {
    return this._nexthop;
  }

  // route_table - computed: true, optional: true, required: false
  private _routeTable?: string; 
  public get routeTable() {
    return this.getStringAttribute('route_table');
  }
  public set routeTable(value: string) {
    this._routeTable = value;
  }
  public resetRouteTable() {
    this._routeTable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeTableInput() {
    return this._routeTable;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFilters {
  /**
  * enble this rule
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#match DataPanosVirtualRouter#match}
  */
  readonly match?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFilters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enable: cdktf.booleanToTerraform(struct!.enable),
    match: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchToTerraform(struct!.match),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFilters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    match: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchToHclTerraform(struct!.match),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatch",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFilters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._match?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.match = this._match?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFilters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enable = undefined;
      this._match.internalValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enable = value.enable;
      this._match.internalValue = value.match;
      this._name = value.name;
    }
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // match - computed: true, optional: true, required: false
  private _match = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatchOutputReference(this, "match");
  public get match() {
    return this._match;
  }
  public putMatch(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersMatch) {
    this._match.internalValue = value;
  }
  public resetMatch() {
    this._match.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchInput() {
    return this._match.internalValue;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFilters[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregationAddress {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#advertise_filters DataPanosVirtualRouter#advertise_filters}
  */
  readonly advertiseFilters?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFilters[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#aggregate_route_attributes DataPanosVirtualRouter#aggregate_route_attributes}
  */
  readonly aggregateRouteAttributes?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributes;
  /**
  * generate AS-set attribute
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_set DataPanosVirtualRouter#as_set}
  */
  readonly asSet?: boolean | cdktf.IResolvable;
  /**
  * enable aggregation for this prefix
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * aggregating address prefix
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#prefix DataPanosVirtualRouter#prefix}
  */
  readonly prefix?: string;
  /**
  * summarize route
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#summary DataPanosVirtualRouter#summary}
  */
  readonly summary?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#suppress_filters DataPanosVirtualRouter#suppress_filters}
  */
  readonly suppressFilters?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFilters[] | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    advertise_filters: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersToTerraform, false)(struct!.advertiseFilters),
    aggregate_route_attributes: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesToTerraform(struct!.aggregateRouteAttributes),
    as_set: cdktf.booleanToTerraform(struct!.asSet),
    enable: cdktf.booleanToTerraform(struct!.enable),
    name: cdktf.stringToTerraform(struct!.name),
    prefix: cdktf.stringToTerraform(struct!.prefix),
    summary: cdktf.booleanToTerraform(struct!.summary),
    suppress_filters: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersToTerraform, false)(struct!.suppressFilters),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    advertise_filters: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersToHclTerraform, false)(struct!.advertiseFilters),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersList",
    },
    aggregate_route_attributes: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesToHclTerraform(struct!.aggregateRouteAttributes),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributes",
    },
    as_set: {
      value: cdktf.booleanToHclTerraform(struct!.asSet),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    summary: {
      value: cdktf.booleanToHclTerraform(struct!.summary),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    suppress_filters: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersToHclTerraform, false)(struct!.suppressFilters),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddress | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._advertiseFilters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertiseFilters = this._advertiseFilters?.internalValue;
    }
    if (this._aggregateRouteAttributes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregateRouteAttributes = this._aggregateRouteAttributes?.internalValue;
    }
    if (this._asSet !== undefined) {
      hasAnyValues = true;
      internalValueResult.asSet = this._asSet;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    if (this._summary !== undefined) {
      hasAnyValues = true;
      internalValueResult.summary = this._summary;
    }
    if (this._suppressFilters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.suppressFilters = this._suppressFilters?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddress | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._advertiseFilters.internalValue = undefined;
      this._aggregateRouteAttributes.internalValue = undefined;
      this._asSet = undefined;
      this._enable = undefined;
      this._name = undefined;
      this._prefix = undefined;
      this._summary = undefined;
      this._suppressFilters.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._advertiseFilters.internalValue = value.advertiseFilters;
      this._aggregateRouteAttributes.internalValue = value.aggregateRouteAttributes;
      this._asSet = value.asSet;
      this._enable = value.enable;
      this._name = value.name;
      this._prefix = value.prefix;
      this._summary = value.summary;
      this._suppressFilters.internalValue = value.suppressFilters;
    }
  }

  // advertise_filters - computed: true, optional: true, required: false
  private _advertiseFilters = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFiltersList(this, "advertise_filters", false);
  public get advertiseFilters() {
    return this._advertiseFilters;
  }
  public putAdvertiseFilters(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAdvertiseFilters[] | cdktf.IResolvable) {
    this._advertiseFilters.internalValue = value;
  }
  public resetAdvertiseFilters() {
    this._advertiseFilters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertiseFiltersInput() {
    return this._advertiseFilters.internalValue;
  }

  // aggregate_route_attributes - computed: true, optional: true, required: false
  private _aggregateRouteAttributes = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributesOutputReference(this, "aggregate_route_attributes");
  public get aggregateRouteAttributes() {
    return this._aggregateRouteAttributes;
  }
  public putAggregateRouteAttributes(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressAggregateRouteAttributes) {
    this._aggregateRouteAttributes.internalValue = value;
  }
  public resetAggregateRouteAttributes() {
    this._aggregateRouteAttributes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregateRouteAttributesInput() {
    return this._aggregateRouteAttributes.internalValue;
  }

  // as_set - computed: true, optional: true, required: false
  private _asSet?: boolean | cdktf.IResolvable; 
  public get asSet() {
    return this.getBooleanAttribute('as_set');
  }
  public set asSet(value: boolean | cdktf.IResolvable) {
    this._asSet = value;
  }
  public resetAsSet() {
    this._asSet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asSetInput() {
    return this._asSet;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // prefix - computed: true, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }

  // summary - computed: true, optional: true, required: false
  private _summary?: boolean | cdktf.IResolvable; 
  public get summary() {
    return this.getBooleanAttribute('summary');
  }
  public set summary(value: boolean | cdktf.IResolvable) {
    this._summary = value;
  }
  public resetSummary() {
    this._summary = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get summaryInput() {
    return this._summary;
  }

  // suppress_filters - computed: true, optional: true, required: false
  private _suppressFilters = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFiltersList(this, "suppress_filters", false);
  public get suppressFilters() {
    return this._suppressFilters;
  }
  public putSuppressFilters(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressSuppressFilters[] | cdktf.IResolvable) {
    this._suppressFilters.internalValue = value;
  }
  public resetSuppressFilters() {
    this._suppressFilters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get suppressFiltersInput() {
    return this._suppressFilters.internalValue;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyAggregationAddress[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyAggregation {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#address DataPanosVirtualRouter#address}
  */
  readonly address?: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddress[] | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolBgpPolicyAggregationToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregation | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressToTerraform, false)(struct!.address),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyAggregationToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyAggregation | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyAggregationAddressToHclTerraform, false)(struct!.address),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyAggregationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyAggregation | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyAggregation | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address.internalValue = value.address;
    }
  }

  // address - computed: true, optional: true, required: false
  private _address = new DataPanosVirtualRouterProtocolBgpPolicyAggregationAddressList(this, "address", false);
  public get address() {
    return this._address;
  }
  public putAddress(value: DataPanosVirtualRouterProtocolBgpPolicyAggregationAddress[] | cdktf.IResolvable) {
    this._address.internalValue = value;
  }
  public resetAddress() {
    this._address.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefix {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefixToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefixToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefixOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefix | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefix | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefixList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefix[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefixOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefixOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPath {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPathToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPathToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#address_prefix DataPanosVirtualRouter#address_prefix}
  */
  readonly addressPrefix?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefix[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path DataPanosVirtualRouter#as_path}
  */
  readonly asPath?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPath;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#community DataPanosVirtualRouter#community}
  */
  readonly community?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#extended_community DataPanosVirtualRouter#extended_community}
  */
  readonly extendedCommunity?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#from_peer DataPanosVirtualRouter#from_peer}
  */
  readonly fromPeer?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#med DataPanosVirtualRouter#med}
  */
  readonly med?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#nexthop DataPanosVirtualRouter#nexthop}
  */
  readonly nexthop?: string[];
  /**
  * route table to match rule
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#route_table DataPanosVirtualRouter#route_table}
  */
  readonly routeTable?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address_prefix: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefixToTerraform, false)(struct!.addressPrefix),
    as_path: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPathToTerraform(struct!.asPath),
    community: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunityToTerraform(struct!.community),
    extended_community: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunityToTerraform(struct!.extendedCommunity),
    from_peer: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.fromPeer),
    med: cdktf.numberToTerraform(struct!.med),
    nexthop: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nexthop),
    route_table: cdktf.stringToTerraform(struct!.routeTable),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address_prefix: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefixToHclTerraform, false)(struct!.addressPrefix),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefixList",
    },
    as_path: {
      value: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPathToHclTerraform(struct!.asPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPath",
    },
    community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunityToHclTerraform(struct!.community),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunity",
    },
    extended_community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunityToHclTerraform(struct!.extendedCommunity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunity",
    },
    from_peer: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.fromPeer),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    med: {
      value: cdktf.numberToHclTerraform(struct!.med),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    nexthop: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nexthop),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    route_table: {
      value: cdktf.stringToHclTerraform(struct!.routeTable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addressPrefix?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.addressPrefix = this._addressPrefix?.internalValue;
    }
    if (this._asPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPath = this._asPath?.internalValue;
    }
    if (this._community?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.community = this._community?.internalValue;
    }
    if (this._extendedCommunity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.extendedCommunity = this._extendedCommunity?.internalValue;
    }
    if (this._fromPeer !== undefined) {
      hasAnyValues = true;
      internalValueResult.fromPeer = this._fromPeer;
    }
    if (this._med !== undefined) {
      hasAnyValues = true;
      internalValueResult.med = this._med;
    }
    if (this._nexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.nexthop = this._nexthop;
    }
    if (this._routeTable !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeTable = this._routeTable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = undefined;
      this._asPath.internalValue = undefined;
      this._community.internalValue = undefined;
      this._extendedCommunity.internalValue = undefined;
      this._fromPeer = undefined;
      this._med = undefined;
      this._nexthop = undefined;
      this._routeTable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = value.addressPrefix;
      this._asPath.internalValue = value.asPath;
      this._community.internalValue = value.community;
      this._extendedCommunity.internalValue = value.extendedCommunity;
      this._fromPeer = value.fromPeer;
      this._med = value.med;
      this._nexthop = value.nexthop;
      this._routeTable = value.routeTable;
    }
  }

  // address_prefix - computed: true, optional: true, required: false
  private _addressPrefix = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefixList(this, "address_prefix", false);
  public get addressPrefix() {
    return this._addressPrefix;
  }
  public putAddressPrefix(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAddressPrefix[] | cdktf.IResolvable) {
    this._addressPrefix.internalValue = value;
  }
  public resetAddressPrefix() {
    this._addressPrefix.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressPrefixInput() {
    return this._addressPrefix.internalValue;
  }

  // as_path - computed: true, optional: true, required: false
  private _asPath = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPathOutputReference(this, "as_path");
  public get asPath() {
    return this._asPath;
  }
  public putAsPath(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchAsPath) {
    this._asPath.internalValue = value;
  }
  public resetAsPath() {
    this._asPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathInput() {
    return this._asPath.internalValue;
  }

  // community - computed: true, optional: true, required: false
  private _community = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunityOutputReference(this, "community");
  public get community() {
    return this._community;
  }
  public putCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchCommunity) {
    this._community.internalValue = value;
  }
  public resetCommunity() {
    this._community.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityInput() {
    return this._community.internalValue;
  }

  // extended_community - computed: true, optional: true, required: false
  private _extendedCommunity = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunityOutputReference(this, "extended_community");
  public get extendedCommunity() {
    return this._extendedCommunity;
  }
  public putExtendedCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchExtendedCommunity) {
    this._extendedCommunity.internalValue = value;
  }
  public resetExtendedCommunity() {
    this._extendedCommunity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extendedCommunityInput() {
    return this._extendedCommunity.internalValue;
  }

  // from_peer - computed: true, optional: true, required: false
  private _fromPeer?: string[]; 
  public get fromPeer() {
    return this.getListAttribute('from_peer');
  }
  public set fromPeer(value: string[]) {
    this._fromPeer = value;
  }
  public resetFromPeer() {
    this._fromPeer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fromPeerInput() {
    return this._fromPeer;
  }

  // med - computed: true, optional: true, required: false
  private _med?: number; 
  public get med() {
    return this.getNumberAttribute('med');
  }
  public set med(value: number) {
    this._med = value;
  }
  public resetMed() {
    this._med = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get medInput() {
    return this._med;
  }

  // nexthop - computed: true, optional: true, required: false
  private _nexthop?: string[]; 
  public get nexthop() {
    return this.getListAttribute('nexthop');
  }
  public set nexthop(value: string[]) {
    this._nexthop = value;
  }
  public resetNexthop() {
    this._nexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nexthopInput() {
    return this._nexthop;
  }

  // route_table - computed: true, optional: true, required: false
  private _routeTable?: string; 
  public get routeTable() {
    return this.getStringAttribute('route_table');
  }
  public set routeTable(value: string) {
    this._routeTable = value;
  }
  public resetRouteTable() {
    this._routeTable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeTableInput() {
    return this._routeTable;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFilters {
  /**
  * enble this filter
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#match DataPanosVirtualRouter#match}
  */
  readonly match?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFilters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enable: cdktf.booleanToTerraform(struct!.enable),
    match: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchToTerraform(struct!.match),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFilters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    match: {
      value: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchToHclTerraform(struct!.match),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatch",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFilters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._match?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.match = this._match?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFilters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enable = undefined;
      this._match.internalValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enable = value.enable;
      this._match.internalValue = value.match;
      this._name = value.name;
    }
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // match - computed: true, optional: true, required: false
  private _match = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatchOutputReference(this, "match");
  public get match() {
    return this._match;
  }
  public putMatch(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersMatch) {
    this._match.internalValue = value;
  }
  public resetMatch() {
    this._match.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchInput() {
    return this._match.internalValue;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFilters[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefix {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefixToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefixToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefixOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefix | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefix | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefixList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefix[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefixOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefixOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPath {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPathToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPathToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#address_prefix DataPanosVirtualRouter#address_prefix}
  */
  readonly addressPrefix?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefix[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path DataPanosVirtualRouter#as_path}
  */
  readonly asPath?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPath;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#community DataPanosVirtualRouter#community}
  */
  readonly community?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#extended_community DataPanosVirtualRouter#extended_community}
  */
  readonly extendedCommunity?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#from_peer DataPanosVirtualRouter#from_peer}
  */
  readonly fromPeer?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#med DataPanosVirtualRouter#med}
  */
  readonly med?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#nexthop DataPanosVirtualRouter#nexthop}
  */
  readonly nexthop?: string[];
  /**
  * route table to match rule
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#route_table DataPanosVirtualRouter#route_table}
  */
  readonly routeTable?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address_prefix: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefixToTerraform, false)(struct!.addressPrefix),
    as_path: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPathToTerraform(struct!.asPath),
    community: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunityToTerraform(struct!.community),
    extended_community: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunityToTerraform(struct!.extendedCommunity),
    from_peer: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.fromPeer),
    med: cdktf.numberToTerraform(struct!.med),
    nexthop: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nexthop),
    route_table: cdktf.stringToTerraform(struct!.routeTable),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address_prefix: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefixToHclTerraform, false)(struct!.addressPrefix),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefixList",
    },
    as_path: {
      value: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPathToHclTerraform(struct!.asPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPath",
    },
    community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunityToHclTerraform(struct!.community),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunity",
    },
    extended_community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunityToHclTerraform(struct!.extendedCommunity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunity",
    },
    from_peer: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.fromPeer),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    med: {
      value: cdktf.numberToHclTerraform(struct!.med),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    nexthop: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nexthop),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    route_table: {
      value: cdktf.stringToHclTerraform(struct!.routeTable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addressPrefix?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.addressPrefix = this._addressPrefix?.internalValue;
    }
    if (this._asPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPath = this._asPath?.internalValue;
    }
    if (this._community?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.community = this._community?.internalValue;
    }
    if (this._extendedCommunity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.extendedCommunity = this._extendedCommunity?.internalValue;
    }
    if (this._fromPeer !== undefined) {
      hasAnyValues = true;
      internalValueResult.fromPeer = this._fromPeer;
    }
    if (this._med !== undefined) {
      hasAnyValues = true;
      internalValueResult.med = this._med;
    }
    if (this._nexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.nexthop = this._nexthop;
    }
    if (this._routeTable !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeTable = this._routeTable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = undefined;
      this._asPath.internalValue = undefined;
      this._community.internalValue = undefined;
      this._extendedCommunity.internalValue = undefined;
      this._fromPeer = undefined;
      this._med = undefined;
      this._nexthop = undefined;
      this._routeTable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = value.addressPrefix;
      this._asPath.internalValue = value.asPath;
      this._community.internalValue = value.community;
      this._extendedCommunity.internalValue = value.extendedCommunity;
      this._fromPeer = value.fromPeer;
      this._med = value.med;
      this._nexthop = value.nexthop;
      this._routeTable = value.routeTable;
    }
  }

  // address_prefix - computed: true, optional: true, required: false
  private _addressPrefix = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefixList(this, "address_prefix", false);
  public get addressPrefix() {
    return this._addressPrefix;
  }
  public putAddressPrefix(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAddressPrefix[] | cdktf.IResolvable) {
    this._addressPrefix.internalValue = value;
  }
  public resetAddressPrefix() {
    this._addressPrefix.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressPrefixInput() {
    return this._addressPrefix.internalValue;
  }

  // as_path - computed: true, optional: true, required: false
  private _asPath = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPathOutputReference(this, "as_path");
  public get asPath() {
    return this._asPath;
  }
  public putAsPath(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchAsPath) {
    this._asPath.internalValue = value;
  }
  public resetAsPath() {
    this._asPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathInput() {
    return this._asPath.internalValue;
  }

  // community - computed: true, optional: true, required: false
  private _community = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunityOutputReference(this, "community");
  public get community() {
    return this._community;
  }
  public putCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchCommunity) {
    this._community.internalValue = value;
  }
  public resetCommunity() {
    this._community.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityInput() {
    return this._community.internalValue;
  }

  // extended_community - computed: true, optional: true, required: false
  private _extendedCommunity = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunityOutputReference(this, "extended_community");
  public get extendedCommunity() {
    return this._extendedCommunity;
  }
  public putExtendedCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchExtendedCommunity) {
    this._extendedCommunity.internalValue = value;
  }
  public resetExtendedCommunity() {
    this._extendedCommunity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extendedCommunityInput() {
    return this._extendedCommunity.internalValue;
  }

  // from_peer - computed: true, optional: true, required: false
  private _fromPeer?: string[]; 
  public get fromPeer() {
    return this.getListAttribute('from_peer');
  }
  public set fromPeer(value: string[]) {
    this._fromPeer = value;
  }
  public resetFromPeer() {
    this._fromPeer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fromPeerInput() {
    return this._fromPeer;
  }

  // med - computed: true, optional: true, required: false
  private _med?: number; 
  public get med() {
    return this.getNumberAttribute('med');
  }
  public set med(value: number) {
    this._med = value;
  }
  public resetMed() {
    this._med = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get medInput() {
    return this._med;
  }

  // nexthop - computed: true, optional: true, required: false
  private _nexthop?: string[]; 
  public get nexthop() {
    return this.getListAttribute('nexthop');
  }
  public set nexthop(value: string[]) {
    this._nexthop = value;
  }
  public resetNexthop() {
    this._nexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nexthopInput() {
    return this._nexthop;
  }

  // route_table - computed: true, optional: true, required: false
  private _routeTable?: string; 
  public get routeTable() {
    return this.getStringAttribute('route_table');
  }
  public set routeTable(value: string) {
    this._routeTable = value;
  }
  public resetRouteTable() {
    this._routeTable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeTableInput() {
    return this._routeTable;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFilters {
  /**
  * enble this filter
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#match DataPanosVirtualRouter#match}
  */
  readonly match?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFilters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enable: cdktf.booleanToTerraform(struct!.enable),
    match: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchToTerraform(struct!.match),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFilters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    match: {
      value: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchToHclTerraform(struct!.match),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatch",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFilters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._match?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.match = this._match?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFilters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enable = undefined;
      this._match.internalValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enable = value.enable;
      this._match.internalValue = value.match;
      this._name = value.name;
    }
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // match - computed: true, optional: true, required: false
  private _match = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatchOutputReference(this, "match");
  public get match() {
    return this._match;
  }
  public putMatch(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersMatch) {
    this._match.internalValue = value;
  }
  public resetMatch() {
    this._match.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchInput() {
    return this._match.internalValue;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFilters[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicy {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#advertise_filters DataPanosVirtualRouter#advertise_filters}
  */
  readonly advertiseFilters?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFilters[] | cdktf.IResolvable;
  /**
  * enble this policy
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#non_exist_filters DataPanosVirtualRouter#non_exist_filters}
  */
  readonly nonExistFilters?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFilters[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#used_by DataPanosVirtualRouter#used_by}
  */
  readonly usedBy?: string[];
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    advertise_filters: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersToTerraform, false)(struct!.advertiseFilters),
    enable: cdktf.booleanToTerraform(struct!.enable),
    name: cdktf.stringToTerraform(struct!.name),
    non_exist_filters: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersToTerraform, false)(struct!.nonExistFilters),
    used_by: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.usedBy),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    advertise_filters: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersToHclTerraform, false)(struct!.advertiseFilters),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersList",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    non_exist_filters: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersToHclTerraform, false)(struct!.nonExistFilters),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersList",
    },
    used_by: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.usedBy),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._advertiseFilters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertiseFilters = this._advertiseFilters?.internalValue;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._nonExistFilters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nonExistFilters = this._nonExistFilters?.internalValue;
    }
    if (this._usedBy !== undefined) {
      hasAnyValues = true;
      internalValueResult.usedBy = this._usedBy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._advertiseFilters.internalValue = undefined;
      this._enable = undefined;
      this._name = undefined;
      this._nonExistFilters.internalValue = undefined;
      this._usedBy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._advertiseFilters.internalValue = value.advertiseFilters;
      this._enable = value.enable;
      this._name = value.name;
      this._nonExistFilters.internalValue = value.nonExistFilters;
      this._usedBy = value.usedBy;
    }
  }

  // advertise_filters - computed: true, optional: true, required: false
  private _advertiseFilters = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFiltersList(this, "advertise_filters", false);
  public get advertiseFilters() {
    return this._advertiseFilters;
  }
  public putAdvertiseFilters(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyAdvertiseFilters[] | cdktf.IResolvable) {
    this._advertiseFilters.internalValue = value;
  }
  public resetAdvertiseFilters() {
    this._advertiseFilters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertiseFiltersInput() {
    return this._advertiseFilters.internalValue;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // non_exist_filters - computed: true, optional: true, required: false
  private _nonExistFilters = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFiltersList(this, "non_exist_filters", false);
  public get nonExistFilters() {
    return this._nonExistFilters;
  }
  public putNonExistFilters(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyNonExistFilters[] | cdktf.IResolvable) {
    this._nonExistFilters.internalValue = value;
  }
  public resetNonExistFilters() {
    this._nonExistFilters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nonExistFiltersInput() {
    return this._nonExistFilters.internalValue;
  }

  // used_by - computed: true, optional: true, required: false
  private _usedBy?: string[]; 
  public get usedBy() {
    return this.getListAttribute('used_by');
  }
  public set usedBy(value: string[]) {
    this._usedBy = value;
  }
  public resetUsedBy() {
    this._usedBy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usedByInput() {
    return this._usedBy;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicy[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisement {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#policy DataPanosVirtualRouter#policy}
  */
  readonly policy?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicy[] | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisement | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    policy: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyToTerraform, false)(struct!.policy),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisement | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    policy: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyToHclTerraform, false)(struct!.policy),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisement | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._policy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.policy = this._policy?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisement | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._policy.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._policy.internalValue = value.policy;
    }
  }

  // policy - computed: true, optional: true, required: false
  private _policy = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicyList(this, "policy", false);
  public get policy() {
    return this._policy;
  }
  public putPolicy(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementPolicy[] | cdktf.IResolvable) {
    this._policy.internalValue = value;
  }
  public resetPolicy() {
    this._policy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policyInput() {
    return this._policy.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNone {
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNoneToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNoneToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNoneOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNone | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNone | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemove {
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemoveToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemove | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemoveToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemove | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemoveOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemove | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemove | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#none DataPanosVirtualRouter#none}
  */
  readonly none?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNone;
  /**
  * prepend local AS for specified number of times
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#prepend DataPanosVirtualRouter#prepend}
  */
  readonly prepend?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove DataPanosVirtualRouter#remove}
  */
  readonly remove?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemove;
  /**
  * remove matched AS path(s), and prepend local AS for specified number of times
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_and_prepend DataPanosVirtualRouter#remove_and_prepend}
  */
  readonly removeAndPrepend?: number;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    none: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNoneToTerraform(struct!.none),
    prepend: cdktf.numberToTerraform(struct!.prepend),
    remove: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemoveToTerraform(struct!.remove),
    remove_and_prepend: cdktf.numberToTerraform(struct!.removeAndPrepend),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    none: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNoneToHclTerraform(struct!.none),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNone",
    },
    prepend: {
      value: cdktf.numberToHclTerraform(struct!.prepend),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    remove: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemoveToHclTerraform(struct!.remove),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemove",
    },
    remove_and_prepend: {
      value: cdktf.numberToHclTerraform(struct!.removeAndPrepend),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._none?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.none = this._none?.internalValue;
    }
    if (this._prepend !== undefined) {
      hasAnyValues = true;
      internalValueResult.prepend = this._prepend;
    }
    if (this._remove?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.remove = this._remove?.internalValue;
    }
    if (this._removeAndPrepend !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeAndPrepend = this._removeAndPrepend;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._none.internalValue = undefined;
      this._prepend = undefined;
      this._remove.internalValue = undefined;
      this._removeAndPrepend = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._none.internalValue = value.none;
      this._prepend = value.prepend;
      this._remove.internalValue = value.remove;
      this._removeAndPrepend = value.removeAndPrepend;
    }
  }

  // none - computed: true, optional: true, required: false
  private _none = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNoneOutputReference(this, "none");
  public get none() {
    return this._none;
  }
  public putNone(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathNone) {
    this._none.internalValue = value;
  }
  public resetNone() {
    this._none.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get noneInput() {
    return this._none.internalValue;
  }

  // prepend - computed: true, optional: true, required: false
  private _prepend?: number; 
  public get prepend() {
    return this.getNumberAttribute('prepend');
  }
  public set prepend(value: number) {
    this._prepend = value;
  }
  public resetPrepend() {
    this._prepend = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prependInput() {
    return this._prepend;
  }

  // remove - computed: true, optional: true, required: false
  private _remove = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemoveOutputReference(this, "remove");
  public get remove() {
    return this._remove;
  }
  public putRemove(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathRemove) {
    this._remove.internalValue = value;
  }
  public resetRemove() {
    this._remove.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeInput() {
    return this._remove.internalValue;
  }

  // remove_and_prepend - computed: true, optional: true, required: false
  private _removeAndPrepend?: number; 
  public get removeAndPrepend() {
    return this.getNumberAttribute('remove_and_prepend');
  }
  public set removeAndPrepend(value: number) {
    this._removeAndPrepend = value;
  }
  public resetRemoveAndPrepend() {
    this._removeAndPrepend = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeAndPrependInput() {
    return this._removeAndPrepend;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNone {
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNoneToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNoneToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNoneOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNone | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNone | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAll {
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAllToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAllToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAllOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAll | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAll | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#append DataPanosVirtualRouter#append}
  */
  readonly append?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#none DataPanosVirtualRouter#none}
  */
  readonly none?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNone;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#overwrite DataPanosVirtualRouter#overwrite}
  */
  readonly overwrite?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_all DataPanosVirtualRouter#remove_all}
  */
  readonly removeAll?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAll;
  /**
  * remove specified coummnity match regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_regex DataPanosVirtualRouter#remove_regex}
  */
  readonly removeRegex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    append: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.append),
    none: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNoneToTerraform(struct!.none),
    overwrite: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.overwrite),
    remove_all: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAllToTerraform(struct!.removeAll),
    remove_regex: cdktf.stringToTerraform(struct!.removeRegex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    append: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.append),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    none: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNoneToHclTerraform(struct!.none),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNone",
    },
    overwrite: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.overwrite),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    remove_all: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAllToHclTerraform(struct!.removeAll),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAll",
    },
    remove_regex: {
      value: cdktf.stringToHclTerraform(struct!.removeRegex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._append !== undefined) {
      hasAnyValues = true;
      internalValueResult.append = this._append;
    }
    if (this._none?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.none = this._none?.internalValue;
    }
    if (this._overwrite !== undefined) {
      hasAnyValues = true;
      internalValueResult.overwrite = this._overwrite;
    }
    if (this._removeAll?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeAll = this._removeAll?.internalValue;
    }
    if (this._removeRegex !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeRegex = this._removeRegex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._append = undefined;
      this._none.internalValue = undefined;
      this._overwrite = undefined;
      this._removeAll.internalValue = undefined;
      this._removeRegex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._append = value.append;
      this._none.internalValue = value.none;
      this._overwrite = value.overwrite;
      this._removeAll.internalValue = value.removeAll;
      this._removeRegex = value.removeRegex;
    }
  }

  // append - computed: true, optional: true, required: false
  private _append?: string[]; 
  public get append() {
    return this.getListAttribute('append');
  }
  public set append(value: string[]) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // none - computed: true, optional: true, required: false
  private _none = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNoneOutputReference(this, "none");
  public get none() {
    return this._none;
  }
  public putNone(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityNone) {
    this._none.internalValue = value;
  }
  public resetNone() {
    this._none.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get noneInput() {
    return this._none.internalValue;
  }

  // overwrite - computed: true, optional: true, required: false
  private _overwrite?: string[]; 
  public get overwrite() {
    return this.getListAttribute('overwrite');
  }
  public set overwrite(value: string[]) {
    this._overwrite = value;
  }
  public resetOverwrite() {
    this._overwrite = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get overwriteInput() {
    return this._overwrite;
  }

  // remove_all - computed: true, optional: true, required: false
  private _removeAll = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAllOutputReference(this, "remove_all");
  public get removeAll() {
    return this._removeAll;
  }
  public putRemoveAll(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityRemoveAll) {
    this._removeAll.internalValue = value;
  }
  public resetRemoveAll() {
    this._removeAll.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeAllInput() {
    return this._removeAll.internalValue;
  }

  // remove_regex - computed: true, optional: true, required: false
  private _removeRegex?: string; 
  public get removeRegex() {
    return this.getStringAttribute('remove_regex');
  }
  public set removeRegex(value: string) {
    this._removeRegex = value;
  }
  public resetRemoveRegex() {
    this._removeRegex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeRegexInput() {
    return this._removeRegex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNone {
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNoneToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNoneToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNoneOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNone | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNone | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAll {
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAllToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAllToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAllOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAll | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAll | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#append DataPanosVirtualRouter#append}
  */
  readonly append?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#none DataPanosVirtualRouter#none}
  */
  readonly none?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNone;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#overwrite DataPanosVirtualRouter#overwrite}
  */
  readonly overwrite?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_all DataPanosVirtualRouter#remove_all}
  */
  readonly removeAll?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAll;
  /**
  * remove specified coummnity match regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_regex DataPanosVirtualRouter#remove_regex}
  */
  readonly removeRegex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    append: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.append),
    none: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNoneToTerraform(struct!.none),
    overwrite: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.overwrite),
    remove_all: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAllToTerraform(struct!.removeAll),
    remove_regex: cdktf.stringToTerraform(struct!.removeRegex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    append: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.append),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    none: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNoneToHclTerraform(struct!.none),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNone",
    },
    overwrite: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.overwrite),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    remove_all: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAllToHclTerraform(struct!.removeAll),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAll",
    },
    remove_regex: {
      value: cdktf.stringToHclTerraform(struct!.removeRegex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._append !== undefined) {
      hasAnyValues = true;
      internalValueResult.append = this._append;
    }
    if (this._none?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.none = this._none?.internalValue;
    }
    if (this._overwrite !== undefined) {
      hasAnyValues = true;
      internalValueResult.overwrite = this._overwrite;
    }
    if (this._removeAll?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeAll = this._removeAll?.internalValue;
    }
    if (this._removeRegex !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeRegex = this._removeRegex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._append = undefined;
      this._none.internalValue = undefined;
      this._overwrite = undefined;
      this._removeAll.internalValue = undefined;
      this._removeRegex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._append = value.append;
      this._none.internalValue = value.none;
      this._overwrite = value.overwrite;
      this._removeAll.internalValue = value.removeAll;
      this._removeRegex = value.removeRegex;
    }
  }

  // append - computed: true, optional: true, required: false
  private _append?: string[]; 
  public get append() {
    return this.getListAttribute('append');
  }
  public set append(value: string[]) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // none - computed: true, optional: true, required: false
  private _none = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNoneOutputReference(this, "none");
  public get none() {
    return this._none;
  }
  public putNone(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityNone) {
    this._none.internalValue = value;
  }
  public resetNone() {
    this._none.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get noneInput() {
    return this._none.internalValue;
  }

  // overwrite - computed: true, optional: true, required: false
  private _overwrite?: string[]; 
  public get overwrite() {
    return this.getListAttribute('overwrite');
  }
  public set overwrite(value: string[]) {
    this._overwrite = value;
  }
  public resetOverwrite() {
    this._overwrite = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get overwriteInput() {
    return this._overwrite;
  }

  // remove_all - computed: true, optional: true, required: false
  private _removeAll = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAllOutputReference(this, "remove_all");
  public get removeAll() {
    return this._removeAll;
  }
  public putRemoveAll(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityRemoveAll) {
    this._removeAll.internalValue = value;
  }
  public resetRemoveAll() {
    this._removeAll.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeAllInput() {
    return this._removeAll.internalValue;
  }

  // remove_regex - computed: true, optional: true, required: false
  private _removeRegex?: string; 
  public get removeRegex() {
    return this.getStringAttribute('remove_regex');
  }
  public set removeRegex(value: string) {
    this._removeRegex = value;
  }
  public resetRemoveRegex() {
    this._removeRegex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeRegexInput() {
    return this._removeRegex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdate {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path DataPanosVirtualRouter#as_path}
  */
  readonly asPath?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPath;
  /**
  * add AS path limit attribute if it does not exist 
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path_limit DataPanosVirtualRouter#as_path_limit}
  */
  readonly asPathLimit?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#community DataPanosVirtualRouter#community}
  */
  readonly community?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#extended_community DataPanosVirtualRouter#extended_community}
  */
  readonly extendedCommunity?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunity;
  /**
  * new local preference value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#local_preference DataPanosVirtualRouter#local_preference}
  */
  readonly localPreference?: number;
  /**
  * new MED value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#med DataPanosVirtualRouter#med}
  */
  readonly med?: number;
  /**
  * nexthop address
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#nexthop DataPanosVirtualRouter#nexthop}
  */
  readonly nexthop?: string;
  /**
  * new route origin
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#origin DataPanosVirtualRouter#origin}
  */
  readonly origin?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    as_path: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathToTerraform(struct!.asPath),
    as_path_limit: cdktf.numberToTerraform(struct!.asPathLimit),
    community: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityToTerraform(struct!.community),
    extended_community: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityToTerraform(struct!.extendedCommunity),
    local_preference: cdktf.numberToTerraform(struct!.localPreference),
    med: cdktf.numberToTerraform(struct!.med),
    nexthop: cdktf.stringToTerraform(struct!.nexthop),
    origin: cdktf.stringToTerraform(struct!.origin),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    as_path: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathToHclTerraform(struct!.asPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPath",
    },
    as_path_limit: {
      value: cdktf.numberToHclTerraform(struct!.asPathLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityToHclTerraform(struct!.community),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunity",
    },
    extended_community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityToHclTerraform(struct!.extendedCommunity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunity",
    },
    local_preference: {
      value: cdktf.numberToHclTerraform(struct!.localPreference),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    med: {
      value: cdktf.numberToHclTerraform(struct!.med),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    nexthop: {
      value: cdktf.stringToHclTerraform(struct!.nexthop),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    origin: {
      value: cdktf.stringToHclTerraform(struct!.origin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._asPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPath = this._asPath?.internalValue;
    }
    if (this._asPathLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPathLimit = this._asPathLimit;
    }
    if (this._community?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.community = this._community?.internalValue;
    }
    if (this._extendedCommunity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.extendedCommunity = this._extendedCommunity?.internalValue;
    }
    if (this._localPreference !== undefined) {
      hasAnyValues = true;
      internalValueResult.localPreference = this._localPreference;
    }
    if (this._med !== undefined) {
      hasAnyValues = true;
      internalValueResult.med = this._med;
    }
    if (this._nexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.nexthop = this._nexthop;
    }
    if (this._origin !== undefined) {
      hasAnyValues = true;
      internalValueResult.origin = this._origin;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._asPath.internalValue = undefined;
      this._asPathLimit = undefined;
      this._community.internalValue = undefined;
      this._extendedCommunity.internalValue = undefined;
      this._localPreference = undefined;
      this._med = undefined;
      this._nexthop = undefined;
      this._origin = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._asPath.internalValue = value.asPath;
      this._asPathLimit = value.asPathLimit;
      this._community.internalValue = value.community;
      this._extendedCommunity.internalValue = value.extendedCommunity;
      this._localPreference = value.localPreference;
      this._med = value.med;
      this._nexthop = value.nexthop;
      this._origin = value.origin;
    }
  }

  // as_path - computed: true, optional: true, required: false
  private _asPath = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPathOutputReference(this, "as_path");
  public get asPath() {
    return this._asPath;
  }
  public putAsPath(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateAsPath) {
    this._asPath.internalValue = value;
  }
  public resetAsPath() {
    this._asPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathInput() {
    return this._asPath.internalValue;
  }

  // as_path_limit - computed: true, optional: true, required: false
  private _asPathLimit?: number; 
  public get asPathLimit() {
    return this.getNumberAttribute('as_path_limit');
  }
  public set asPathLimit(value: number) {
    this._asPathLimit = value;
  }
  public resetAsPathLimit() {
    this._asPathLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathLimitInput() {
    return this._asPathLimit;
  }

  // community - computed: true, optional: true, required: false
  private _community = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunityOutputReference(this, "community");
  public get community() {
    return this._community;
  }
  public putCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateCommunity) {
    this._community.internalValue = value;
  }
  public resetCommunity() {
    this._community.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityInput() {
    return this._community.internalValue;
  }

  // extended_community - computed: true, optional: true, required: false
  private _extendedCommunity = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunityOutputReference(this, "extended_community");
  public get extendedCommunity() {
    return this._extendedCommunity;
  }
  public putExtendedCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateExtendedCommunity) {
    this._extendedCommunity.internalValue = value;
  }
  public resetExtendedCommunity() {
    this._extendedCommunity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extendedCommunityInput() {
    return this._extendedCommunity.internalValue;
  }

  // local_preference - computed: true, optional: true, required: false
  private _localPreference?: number; 
  public get localPreference() {
    return this.getNumberAttribute('local_preference');
  }
  public set localPreference(value: number) {
    this._localPreference = value;
  }
  public resetLocalPreference() {
    this._localPreference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localPreferenceInput() {
    return this._localPreference;
  }

  // med - computed: true, optional: true, required: false
  private _med?: number; 
  public get med() {
    return this.getNumberAttribute('med');
  }
  public set med(value: number) {
    this._med = value;
  }
  public resetMed() {
    this._med = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get medInput() {
    return this._med;
  }

  // nexthop - computed: true, optional: true, required: false
  private _nexthop?: string; 
  public get nexthop() {
    return this.getStringAttribute('nexthop');
  }
  public set nexthop(value: string) {
    this._nexthop = value;
  }
  public resetNexthop() {
    this._nexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nexthopInput() {
    return this._nexthop;
  }

  // origin - computed: true, optional: true, required: false
  private _origin?: string; 
  public get origin() {
    return this.getStringAttribute('origin');
  }
  public set origin(value: string) {
    this._origin = value;
  }
  public resetOrigin() {
    this._origin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originInput() {
    return this._origin;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllow {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#update DataPanosVirtualRouter#update}
  */
  readonly update?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdate;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllow | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    update: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateToTerraform(struct!.update),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllow | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    update: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateToHclTerraform(struct!.update),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdate",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllow | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._update?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.update = this._update?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllow | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._update.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._update.internalValue = value.update;
    }
  }

  // update - computed: true, optional: true, required: false
  private _update = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdateOutputReference(this, "update");
  public get update() {
    return this._update;
  }
  public putUpdate(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowUpdate) {
    this._update.internalValue = value;
  }
  public resetUpdate() {
    this._update.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get updateInput() {
    return this._update.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDeny {
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDenyToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDeny | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDenyToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDeny | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDenyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDeny | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDeny | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesAction {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#allow DataPanosVirtualRouter#allow}
  */
  readonly allow?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllow;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#deny DataPanosVirtualRouter#deny}
  */
  readonly deny?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDeny;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesAction | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowToTerraform(struct!.allow),
    deny: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDenyToTerraform(struct!.deny),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesAction | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowToHclTerraform(struct!.allow),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllow",
    },
    deny: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDenyToHclTerraform(struct!.deny),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDeny",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesAction | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allow?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.allow = this._allow?.internalValue;
    }
    if (this._deny?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.deny = this._deny?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesAction | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allow.internalValue = undefined;
      this._deny.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allow.internalValue = value.allow;
      this._deny.internalValue = value.deny;
    }
  }

  // allow - computed: true, optional: true, required: false
  private _allow = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllowOutputReference(this, "allow");
  public get allow() {
    return this._allow;
  }
  public putAllow(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionAllow) {
    this._allow.internalValue = value;
  }
  public resetAllow() {
    this._allow.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowInput() {
    return this._allow.internalValue;
  }

  // deny - computed: true, optional: true, required: false
  private _deny = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDenyOutputReference(this, "deny");
  public get deny() {
    return this._deny;
  }
  public putDeny(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionDeny) {
    this._deny.internalValue = value;
  }
  public resetDeny() {
    this._deny.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get denyInput() {
    return this._deny.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefix {
  /**
  * match exact prefix length
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#exact DataPanosVirtualRouter#exact}
  */
  readonly exact?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefixToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exact: cdktf.booleanToTerraform(struct!.exact),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefixToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exact: {
      value: cdktf.booleanToHclTerraform(struct!.exact),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefixOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefix | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exact !== undefined) {
      hasAnyValues = true;
      internalValueResult.exact = this._exact;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefix | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exact = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exact = value.exact;
      this._name = value.name;
    }
  }

  // exact - computed: true, optional: true, required: false
  private _exact?: boolean | cdktf.IResolvable; 
  public get exact() {
    return this.getBooleanAttribute('exact');
  }
  public set exact(value: boolean | cdktf.IResolvable) {
    this._exact = value;
  }
  public resetExact() {
    this._exact = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exactInput() {
    return this._exact;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefixList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefix[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefixOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefixOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPath {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPathToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPathToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#address_prefix DataPanosVirtualRouter#address_prefix}
  */
  readonly addressPrefix?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefix[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path DataPanosVirtualRouter#as_path}
  */
  readonly asPath?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPath;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#community DataPanosVirtualRouter#community}
  */
  readonly community?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#extended_community DataPanosVirtualRouter#extended_community}
  */
  readonly extendedCommunity?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#from_peer DataPanosVirtualRouter#from_peer}
  */
  readonly fromPeer?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#med DataPanosVirtualRouter#med}
  */
  readonly med?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#nexthop DataPanosVirtualRouter#nexthop}
  */
  readonly nexthop?: string[];
  /**
  * route table to match rule
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#route_table DataPanosVirtualRouter#route_table}
  */
  readonly routeTable?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address_prefix: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefixToTerraform, false)(struct!.addressPrefix),
    as_path: dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPathToTerraform(struct!.asPath),
    community: dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunityToTerraform(struct!.community),
    extended_community: dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunityToTerraform(struct!.extendedCommunity),
    from_peer: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.fromPeer),
    med: cdktf.numberToTerraform(struct!.med),
    nexthop: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nexthop),
    route_table: cdktf.stringToTerraform(struct!.routeTable),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address_prefix: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefixToHclTerraform, false)(struct!.addressPrefix),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefixList",
    },
    as_path: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPathToHclTerraform(struct!.asPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPath",
    },
    community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunityToHclTerraform(struct!.community),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunity",
    },
    extended_community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunityToHclTerraform(struct!.extendedCommunity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunity",
    },
    from_peer: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.fromPeer),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    med: {
      value: cdktf.numberToHclTerraform(struct!.med),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    nexthop: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nexthop),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    route_table: {
      value: cdktf.stringToHclTerraform(struct!.routeTable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addressPrefix?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.addressPrefix = this._addressPrefix?.internalValue;
    }
    if (this._asPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPath = this._asPath?.internalValue;
    }
    if (this._community?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.community = this._community?.internalValue;
    }
    if (this._extendedCommunity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.extendedCommunity = this._extendedCommunity?.internalValue;
    }
    if (this._fromPeer !== undefined) {
      hasAnyValues = true;
      internalValueResult.fromPeer = this._fromPeer;
    }
    if (this._med !== undefined) {
      hasAnyValues = true;
      internalValueResult.med = this._med;
    }
    if (this._nexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.nexthop = this._nexthop;
    }
    if (this._routeTable !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeTable = this._routeTable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = undefined;
      this._asPath.internalValue = undefined;
      this._community.internalValue = undefined;
      this._extendedCommunity.internalValue = undefined;
      this._fromPeer = undefined;
      this._med = undefined;
      this._nexthop = undefined;
      this._routeTable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = value.addressPrefix;
      this._asPath.internalValue = value.asPath;
      this._community.internalValue = value.community;
      this._extendedCommunity.internalValue = value.extendedCommunity;
      this._fromPeer = value.fromPeer;
      this._med = value.med;
      this._nexthop = value.nexthop;
      this._routeTable = value.routeTable;
    }
  }

  // address_prefix - computed: true, optional: true, required: false
  private _addressPrefix = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefixList(this, "address_prefix", false);
  public get addressPrefix() {
    return this._addressPrefix;
  }
  public putAddressPrefix(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAddressPrefix[] | cdktf.IResolvable) {
    this._addressPrefix.internalValue = value;
  }
  public resetAddressPrefix() {
    this._addressPrefix.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressPrefixInput() {
    return this._addressPrefix.internalValue;
  }

  // as_path - computed: true, optional: true, required: false
  private _asPath = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPathOutputReference(this, "as_path");
  public get asPath() {
    return this._asPath;
  }
  public putAsPath(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchAsPath) {
    this._asPath.internalValue = value;
  }
  public resetAsPath() {
    this._asPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathInput() {
    return this._asPath.internalValue;
  }

  // community - computed: true, optional: true, required: false
  private _community = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunityOutputReference(this, "community");
  public get community() {
    return this._community;
  }
  public putCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchCommunity) {
    this._community.internalValue = value;
  }
  public resetCommunity() {
    this._community.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityInput() {
    return this._community.internalValue;
  }

  // extended_community - computed: true, optional: true, required: false
  private _extendedCommunity = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunityOutputReference(this, "extended_community");
  public get extendedCommunity() {
    return this._extendedCommunity;
  }
  public putExtendedCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchExtendedCommunity) {
    this._extendedCommunity.internalValue = value;
  }
  public resetExtendedCommunity() {
    this._extendedCommunity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extendedCommunityInput() {
    return this._extendedCommunity.internalValue;
  }

  // from_peer - computed: true, optional: true, required: false
  private _fromPeer?: string[]; 
  public get fromPeer() {
    return this.getListAttribute('from_peer');
  }
  public set fromPeer(value: string[]) {
    this._fromPeer = value;
  }
  public resetFromPeer() {
    this._fromPeer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fromPeerInput() {
    return this._fromPeer;
  }

  // med - computed: true, optional: true, required: false
  private _med?: number; 
  public get med() {
    return this.getNumberAttribute('med');
  }
  public set med(value: number) {
    this._med = value;
  }
  public resetMed() {
    this._med = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get medInput() {
    return this._med;
  }

  // nexthop - computed: true, optional: true, required: false
  private _nexthop?: string[]; 
  public get nexthop() {
    return this.getListAttribute('nexthop');
  }
  public set nexthop(value: string[]) {
    this._nexthop = value;
  }
  public resetNexthop() {
    this._nexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nexthopInput() {
    return this._nexthop;
  }

  // route_table - computed: true, optional: true, required: false
  private _routeTable?: string; 
  public get routeTable() {
    return this.getStringAttribute('route_table');
  }
  public set routeTable(value: string) {
    this._routeTable = value;
  }
  public resetRouteTable() {
    this._routeTable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeTableInput() {
    return this._routeTable;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExportRules {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#action DataPanosVirtualRouter#action}
  */
  readonly action?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesAction;
  /**
  * Enable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#match DataPanosVirtualRouter#match}
  */
  readonly match?: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#used_by DataPanosVirtualRouter#used_by}
  */
  readonly usedBy?: string[];
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRules | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionToTerraform(struct!.action),
    enable: cdktf.booleanToTerraform(struct!.enable),
    match: dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchToTerraform(struct!.match),
    name: cdktf.stringToTerraform(struct!.name),
    used_by: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.usedBy),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportRulesToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExportRules | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesActionToHclTerraform(struct!.action),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesAction",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    match: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchToHclTerraform(struct!.match),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatch",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    used_by: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.usedBy),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExportRules | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action?.internalValue;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._match?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.match = this._match?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._usedBy !== undefined) {
      hasAnyValues = true;
      internalValueResult.usedBy = this._usedBy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExportRules | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action.internalValue = undefined;
      this._enable = undefined;
      this._match.internalValue = undefined;
      this._name = undefined;
      this._usedBy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action.internalValue = value.action;
      this._enable = value.enable;
      this._match.internalValue = value.match;
      this._name = value.name;
      this._usedBy = value.usedBy;
    }
  }

  // action - computed: true, optional: true, required: false
  private _action = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesActionOutputReference(this, "action");
  public get action() {
    return this._action;
  }
  public putAction(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesAction) {
    this._action.internalValue = value;
  }
  public resetAction() {
    this._action.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action.internalValue;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // match - computed: true, optional: true, required: false
  private _match = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatchOutputReference(this, "match");
  public get match() {
    return this._match;
  }
  public putMatch(value: DataPanosVirtualRouterProtocolBgpPolicyExportRulesMatch) {
    this._match.internalValue = value;
  }
  public resetMatch() {
    this._match.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchInput() {
    return this._match.internalValue;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // used_by - computed: true, optional: true, required: false
  private _usedBy?: string[]; 
  public get usedBy() {
    return this.getListAttribute('used_by');
  }
  public set usedBy(value: string[]) {
    this._usedBy = value;
  }
  public resetUsedBy() {
    this._usedBy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usedByInput() {
    return this._usedBy;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportRulesList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyExportRules[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyExportRulesOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyExportRulesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyExport {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#rules DataPanosVirtualRouter#rules}
  */
  readonly rules?: DataPanosVirtualRouterProtocolBgpPolicyExportRules[] | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolBgpPolicyExportToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExport | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    rules: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyExportRulesToTerraform, false)(struct!.rules),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyExportToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyExport | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    rules: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyExportRulesToHclTerraform, false)(struct!.rules),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExportRulesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyExportOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyExport | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._rules?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rules = this._rules?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyExport | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._rules.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._rules.internalValue = value.rules;
    }
  }

  // rules - computed: true, optional: true, required: false
  private _rules = new DataPanosVirtualRouterProtocolBgpPolicyExportRulesList(this, "rules", false);
  public get rules() {
    return this._rules;
  }
  public putRules(value: DataPanosVirtualRouterProtocolBgpPolicyExportRules[] | cdktf.IResolvable) {
    this._rules.internalValue = value;
  }
  public resetRules() {
    this._rules.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rulesInput() {
    return this._rules.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNone {
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNoneToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNoneToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNoneOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNone | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNone | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemove {
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemoveToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemove | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemoveToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemove | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemoveOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemove | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemove | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#none DataPanosVirtualRouter#none}
  */
  readonly none?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNone;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove DataPanosVirtualRouter#remove}
  */
  readonly remove?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemove;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    none: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNoneToTerraform(struct!.none),
    remove: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemoveToTerraform(struct!.remove),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    none: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNoneToHclTerraform(struct!.none),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNone",
    },
    remove: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemoveToHclTerraform(struct!.remove),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemove",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._none?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.none = this._none?.internalValue;
    }
    if (this._remove?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.remove = this._remove?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._none.internalValue = undefined;
      this._remove.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._none.internalValue = value.none;
      this._remove.internalValue = value.remove;
    }
  }

  // none - computed: true, optional: true, required: false
  private _none = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNoneOutputReference(this, "none");
  public get none() {
    return this._none;
  }
  public putNone(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathNone) {
    this._none.internalValue = value;
  }
  public resetNone() {
    this._none.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get noneInput() {
    return this._none.internalValue;
  }

  // remove - computed: true, optional: true, required: false
  private _remove = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemoveOutputReference(this, "remove");
  public get remove() {
    return this._remove;
  }
  public putRemove(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathRemove) {
    this._remove.internalValue = value;
  }
  public resetRemove() {
    this._remove.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeInput() {
    return this._remove.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNone {
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNoneToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNoneToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNoneOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNone | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNone | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAll {
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAllToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAllToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAllOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAll | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAll | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#append DataPanosVirtualRouter#append}
  */
  readonly append?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#none DataPanosVirtualRouter#none}
  */
  readonly none?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNone;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#overwrite DataPanosVirtualRouter#overwrite}
  */
  readonly overwrite?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_all DataPanosVirtualRouter#remove_all}
  */
  readonly removeAll?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAll;
  /**
  * remove specified coummnity match regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_regex DataPanosVirtualRouter#remove_regex}
  */
  readonly removeRegex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    append: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.append),
    none: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNoneToTerraform(struct!.none),
    overwrite: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.overwrite),
    remove_all: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAllToTerraform(struct!.removeAll),
    remove_regex: cdktf.stringToTerraform(struct!.removeRegex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    append: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.append),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    none: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNoneToHclTerraform(struct!.none),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNone",
    },
    overwrite: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.overwrite),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    remove_all: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAllToHclTerraform(struct!.removeAll),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAll",
    },
    remove_regex: {
      value: cdktf.stringToHclTerraform(struct!.removeRegex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._append !== undefined) {
      hasAnyValues = true;
      internalValueResult.append = this._append;
    }
    if (this._none?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.none = this._none?.internalValue;
    }
    if (this._overwrite !== undefined) {
      hasAnyValues = true;
      internalValueResult.overwrite = this._overwrite;
    }
    if (this._removeAll?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeAll = this._removeAll?.internalValue;
    }
    if (this._removeRegex !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeRegex = this._removeRegex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._append = undefined;
      this._none.internalValue = undefined;
      this._overwrite = undefined;
      this._removeAll.internalValue = undefined;
      this._removeRegex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._append = value.append;
      this._none.internalValue = value.none;
      this._overwrite = value.overwrite;
      this._removeAll.internalValue = value.removeAll;
      this._removeRegex = value.removeRegex;
    }
  }

  // append - computed: true, optional: true, required: false
  private _append?: string[]; 
  public get append() {
    return this.getListAttribute('append');
  }
  public set append(value: string[]) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // none - computed: true, optional: true, required: false
  private _none = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNoneOutputReference(this, "none");
  public get none() {
    return this._none;
  }
  public putNone(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityNone) {
    this._none.internalValue = value;
  }
  public resetNone() {
    this._none.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get noneInput() {
    return this._none.internalValue;
  }

  // overwrite - computed: true, optional: true, required: false
  private _overwrite?: string[]; 
  public get overwrite() {
    return this.getListAttribute('overwrite');
  }
  public set overwrite(value: string[]) {
    this._overwrite = value;
  }
  public resetOverwrite() {
    this._overwrite = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get overwriteInput() {
    return this._overwrite;
  }

  // remove_all - computed: true, optional: true, required: false
  private _removeAll = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAllOutputReference(this, "remove_all");
  public get removeAll() {
    return this._removeAll;
  }
  public putRemoveAll(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityRemoveAll) {
    this._removeAll.internalValue = value;
  }
  public resetRemoveAll() {
    this._removeAll.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeAllInput() {
    return this._removeAll.internalValue;
  }

  // remove_regex - computed: true, optional: true, required: false
  private _removeRegex?: string; 
  public get removeRegex() {
    return this.getStringAttribute('remove_regex');
  }
  public set removeRegex(value: string) {
    this._removeRegex = value;
  }
  public resetRemoveRegex() {
    this._removeRegex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeRegexInput() {
    return this._removeRegex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNone {
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNoneToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNoneToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNone | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNoneOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNone | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNone | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAll {
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAllToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAllToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAll | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAllOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAll | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAll | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#append DataPanosVirtualRouter#append}
  */
  readonly append?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#none DataPanosVirtualRouter#none}
  */
  readonly none?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNone;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#overwrite DataPanosVirtualRouter#overwrite}
  */
  readonly overwrite?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_all DataPanosVirtualRouter#remove_all}
  */
  readonly removeAll?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAll;
  /**
  * remove specified coummnity match regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#remove_regex DataPanosVirtualRouter#remove_regex}
  */
  readonly removeRegex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    append: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.append),
    none: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNoneToTerraform(struct!.none),
    overwrite: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.overwrite),
    remove_all: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAllToTerraform(struct!.removeAll),
    remove_regex: cdktf.stringToTerraform(struct!.removeRegex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    append: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.append),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    none: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNoneToHclTerraform(struct!.none),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNone",
    },
    overwrite: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.overwrite),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    remove_all: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAllToHclTerraform(struct!.removeAll),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAll",
    },
    remove_regex: {
      value: cdktf.stringToHclTerraform(struct!.removeRegex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._append !== undefined) {
      hasAnyValues = true;
      internalValueResult.append = this._append;
    }
    if (this._none?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.none = this._none?.internalValue;
    }
    if (this._overwrite !== undefined) {
      hasAnyValues = true;
      internalValueResult.overwrite = this._overwrite;
    }
    if (this._removeAll?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeAll = this._removeAll?.internalValue;
    }
    if (this._removeRegex !== undefined) {
      hasAnyValues = true;
      internalValueResult.removeRegex = this._removeRegex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._append = undefined;
      this._none.internalValue = undefined;
      this._overwrite = undefined;
      this._removeAll.internalValue = undefined;
      this._removeRegex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._append = value.append;
      this._none.internalValue = value.none;
      this._overwrite = value.overwrite;
      this._removeAll.internalValue = value.removeAll;
      this._removeRegex = value.removeRegex;
    }
  }

  // append - computed: true, optional: true, required: false
  private _append?: string[]; 
  public get append() {
    return this.getListAttribute('append');
  }
  public set append(value: string[]) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // none - computed: true, optional: true, required: false
  private _none = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNoneOutputReference(this, "none");
  public get none() {
    return this._none;
  }
  public putNone(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityNone) {
    this._none.internalValue = value;
  }
  public resetNone() {
    this._none.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get noneInput() {
    return this._none.internalValue;
  }

  // overwrite - computed: true, optional: true, required: false
  private _overwrite?: string[]; 
  public get overwrite() {
    return this.getListAttribute('overwrite');
  }
  public set overwrite(value: string[]) {
    this._overwrite = value;
  }
  public resetOverwrite() {
    this._overwrite = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get overwriteInput() {
    return this._overwrite;
  }

  // remove_all - computed: true, optional: true, required: false
  private _removeAll = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAllOutputReference(this, "remove_all");
  public get removeAll() {
    return this._removeAll;
  }
  public putRemoveAll(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityRemoveAll) {
    this._removeAll.internalValue = value;
  }
  public resetRemoveAll() {
    this._removeAll.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeAllInput() {
    return this._removeAll.internalValue;
  }

  // remove_regex - computed: true, optional: true, required: false
  private _removeRegex?: string; 
  public get removeRegex() {
    return this.getStringAttribute('remove_regex');
  }
  public set removeRegex(value: string) {
    this._removeRegex = value;
  }
  public resetRemoveRegex() {
    this._removeRegex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get removeRegexInput() {
    return this._removeRegex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdate {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path DataPanosVirtualRouter#as_path}
  */
  readonly asPath?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPath;
  /**
  * add AS path limit attribute if it does not exist 
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path_limit DataPanosVirtualRouter#as_path_limit}
  */
  readonly asPathLimit?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#community DataPanosVirtualRouter#community}
  */
  readonly community?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#extended_community DataPanosVirtualRouter#extended_community}
  */
  readonly extendedCommunity?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunity;
  /**
  * new local preference value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#local_preference DataPanosVirtualRouter#local_preference}
  */
  readonly localPreference?: number;
  /**
  * new MED value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#med DataPanosVirtualRouter#med}
  */
  readonly med?: number;
  /**
  * nexthop address
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#nexthop DataPanosVirtualRouter#nexthop}
  */
  readonly nexthop?: string;
  /**
  * new route origin
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#origin DataPanosVirtualRouter#origin}
  */
  readonly origin?: string;
  /**
  * new weight value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#weight DataPanosVirtualRouter#weight}
  */
  readonly weight?: number;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    as_path: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathToTerraform(struct!.asPath),
    as_path_limit: cdktf.numberToTerraform(struct!.asPathLimit),
    community: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityToTerraform(struct!.community),
    extended_community: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityToTerraform(struct!.extendedCommunity),
    local_preference: cdktf.numberToTerraform(struct!.localPreference),
    med: cdktf.numberToTerraform(struct!.med),
    nexthop: cdktf.stringToTerraform(struct!.nexthop),
    origin: cdktf.stringToTerraform(struct!.origin),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    as_path: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathToHclTerraform(struct!.asPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPath",
    },
    as_path_limit: {
      value: cdktf.numberToHclTerraform(struct!.asPathLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityToHclTerraform(struct!.community),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunity",
    },
    extended_community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityToHclTerraform(struct!.extendedCommunity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunity",
    },
    local_preference: {
      value: cdktf.numberToHclTerraform(struct!.localPreference),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    med: {
      value: cdktf.numberToHclTerraform(struct!.med),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    nexthop: {
      value: cdktf.stringToHclTerraform(struct!.nexthop),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    origin: {
      value: cdktf.stringToHclTerraform(struct!.origin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._asPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPath = this._asPath?.internalValue;
    }
    if (this._asPathLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPathLimit = this._asPathLimit;
    }
    if (this._community?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.community = this._community?.internalValue;
    }
    if (this._extendedCommunity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.extendedCommunity = this._extendedCommunity?.internalValue;
    }
    if (this._localPreference !== undefined) {
      hasAnyValues = true;
      internalValueResult.localPreference = this._localPreference;
    }
    if (this._med !== undefined) {
      hasAnyValues = true;
      internalValueResult.med = this._med;
    }
    if (this._nexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.nexthop = this._nexthop;
    }
    if (this._origin !== undefined) {
      hasAnyValues = true;
      internalValueResult.origin = this._origin;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._asPath.internalValue = undefined;
      this._asPathLimit = undefined;
      this._community.internalValue = undefined;
      this._extendedCommunity.internalValue = undefined;
      this._localPreference = undefined;
      this._med = undefined;
      this._nexthop = undefined;
      this._origin = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._asPath.internalValue = value.asPath;
      this._asPathLimit = value.asPathLimit;
      this._community.internalValue = value.community;
      this._extendedCommunity.internalValue = value.extendedCommunity;
      this._localPreference = value.localPreference;
      this._med = value.med;
      this._nexthop = value.nexthop;
      this._origin = value.origin;
      this._weight = value.weight;
    }
  }

  // as_path - computed: true, optional: true, required: false
  private _asPath = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPathOutputReference(this, "as_path");
  public get asPath() {
    return this._asPath;
  }
  public putAsPath(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateAsPath) {
    this._asPath.internalValue = value;
  }
  public resetAsPath() {
    this._asPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathInput() {
    return this._asPath.internalValue;
  }

  // as_path_limit - computed: true, optional: true, required: false
  private _asPathLimit?: number; 
  public get asPathLimit() {
    return this.getNumberAttribute('as_path_limit');
  }
  public set asPathLimit(value: number) {
    this._asPathLimit = value;
  }
  public resetAsPathLimit() {
    this._asPathLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathLimitInput() {
    return this._asPathLimit;
  }

  // community - computed: true, optional: true, required: false
  private _community = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunityOutputReference(this, "community");
  public get community() {
    return this._community;
  }
  public putCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateCommunity) {
    this._community.internalValue = value;
  }
  public resetCommunity() {
    this._community.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityInput() {
    return this._community.internalValue;
  }

  // extended_community - computed: true, optional: true, required: false
  private _extendedCommunity = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunityOutputReference(this, "extended_community");
  public get extendedCommunity() {
    return this._extendedCommunity;
  }
  public putExtendedCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateExtendedCommunity) {
    this._extendedCommunity.internalValue = value;
  }
  public resetExtendedCommunity() {
    this._extendedCommunity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extendedCommunityInput() {
    return this._extendedCommunity.internalValue;
  }

  // local_preference - computed: true, optional: true, required: false
  private _localPreference?: number; 
  public get localPreference() {
    return this.getNumberAttribute('local_preference');
  }
  public set localPreference(value: number) {
    this._localPreference = value;
  }
  public resetLocalPreference() {
    this._localPreference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localPreferenceInput() {
    return this._localPreference;
  }

  // med - computed: true, optional: true, required: false
  private _med?: number; 
  public get med() {
    return this.getNumberAttribute('med');
  }
  public set med(value: number) {
    this._med = value;
  }
  public resetMed() {
    this._med = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get medInput() {
    return this._med;
  }

  // nexthop - computed: true, optional: true, required: false
  private _nexthop?: string; 
  public get nexthop() {
    return this.getStringAttribute('nexthop');
  }
  public set nexthop(value: string) {
    this._nexthop = value;
  }
  public resetNexthop() {
    this._nexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nexthopInput() {
    return this._nexthop;
  }

  // origin - computed: true, optional: true, required: false
  private _origin?: string; 
  public get origin() {
    return this.getStringAttribute('origin');
  }
  public set origin(value: string) {
    this._origin = value;
  }
  public resetOrigin() {
    this._origin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originInput() {
    return this._origin;
  }

  // weight - computed: true, optional: true, required: false
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  public resetWeight() {
    this._weight = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllow {
  /**
  * route flap dampening profile
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#dampening DataPanosVirtualRouter#dampening}
  */
  readonly dampening?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#update DataPanosVirtualRouter#update}
  */
  readonly update?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdate;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllow | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dampening: cdktf.stringToTerraform(struct!.dampening),
    update: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateToTerraform(struct!.update),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllow | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dampening: {
      value: cdktf.stringToHclTerraform(struct!.dampening),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    update: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateToHclTerraform(struct!.update),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdate",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllow | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dampening !== undefined) {
      hasAnyValues = true;
      internalValueResult.dampening = this._dampening;
    }
    if (this._update?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.update = this._update?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllow | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dampening = undefined;
      this._update.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dampening = value.dampening;
      this._update.internalValue = value.update;
    }
  }

  // dampening - computed: true, optional: true, required: false
  private _dampening?: string; 
  public get dampening() {
    return this.getStringAttribute('dampening');
  }
  public set dampening(value: string) {
    this._dampening = value;
  }
  public resetDampening() {
    this._dampening = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dampeningInput() {
    return this._dampening;
  }

  // update - computed: true, optional: true, required: false
  private _update = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdateOutputReference(this, "update");
  public get update() {
    return this._update;
  }
  public putUpdate(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowUpdate) {
    this._update.internalValue = value;
  }
  public resetUpdate() {
    this._update.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get updateInput() {
    return this._update.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDeny {
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDenyToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDeny | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDenyToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDeny | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDenyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDeny | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDeny | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesAction {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#allow DataPanosVirtualRouter#allow}
  */
  readonly allow?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllow;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#deny DataPanosVirtualRouter#deny}
  */
  readonly deny?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDeny;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesAction | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowToTerraform(struct!.allow),
    deny: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDenyToTerraform(struct!.deny),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesAction | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowToHclTerraform(struct!.allow),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllow",
    },
    deny: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDenyToHclTerraform(struct!.deny),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDeny",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesAction | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allow?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.allow = this._allow?.internalValue;
    }
    if (this._deny?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.deny = this._deny?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesAction | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allow.internalValue = undefined;
      this._deny.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allow.internalValue = value.allow;
      this._deny.internalValue = value.deny;
    }
  }

  // allow - computed: true, optional: true, required: false
  private _allow = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllowOutputReference(this, "allow");
  public get allow() {
    return this._allow;
  }
  public putAllow(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionAllow) {
    this._allow.internalValue = value;
  }
  public resetAllow() {
    this._allow.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowInput() {
    return this._allow.internalValue;
  }

  // deny - computed: true, optional: true, required: false
  private _deny = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDenyOutputReference(this, "deny");
  public get deny() {
    return this._deny;
  }
  public putDeny(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionDeny) {
    this._deny.internalValue = value;
  }
  public resetDeny() {
    this._deny.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get denyInput() {
    return this._deny.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefix {
  /**
  * match exact prefix length
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#exact DataPanosVirtualRouter#exact}
  */
  readonly exact?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefixToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exact: cdktf.booleanToTerraform(struct!.exact),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefixToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exact: {
      value: cdktf.booleanToHclTerraform(struct!.exact),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefixOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefix | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exact !== undefined) {
      hasAnyValues = true;
      internalValueResult.exact = this._exact;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefix | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exact = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exact = value.exact;
      this._name = value.name;
    }
  }

  // exact - computed: true, optional: true, required: false
  private _exact?: boolean | cdktf.IResolvable; 
  public get exact() {
    return this.getBooleanAttribute('exact');
  }
  public set exact(value: boolean | cdktf.IResolvable) {
    this._exact = value;
  }
  public resetExact() {
    this._exact = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exactInput() {
    return this._exact;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefixList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefix[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefixOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefixOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPath {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPathToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPathToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunity {
  /**
  * AS-path regular expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#regex DataPanosVirtualRouter#regex}
  */
  readonly regex?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunityToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunityToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
    }
  }

  // regex - computed: true, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#address_prefix DataPanosVirtualRouter#address_prefix}
  */
  readonly addressPrefix?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefix[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_path DataPanosVirtualRouter#as_path}
  */
  readonly asPath?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPath;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#community DataPanosVirtualRouter#community}
  */
  readonly community?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#extended_community DataPanosVirtualRouter#extended_community}
  */
  readonly extendedCommunity?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#from_peer DataPanosVirtualRouter#from_peer}
  */
  readonly fromPeer?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#med DataPanosVirtualRouter#med}
  */
  readonly med?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#nexthop DataPanosVirtualRouter#nexthop}
  */
  readonly nexthop?: string[];
  /**
  * route table to match rule
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#route_table DataPanosVirtualRouter#route_table}
  */
  readonly routeTable?: string;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address_prefix: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefixToTerraform, false)(struct!.addressPrefix),
    as_path: dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPathToTerraform(struct!.asPath),
    community: dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunityToTerraform(struct!.community),
    extended_community: dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunityToTerraform(struct!.extendedCommunity),
    from_peer: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.fromPeer),
    med: cdktf.numberToTerraform(struct!.med),
    nexthop: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nexthop),
    route_table: cdktf.stringToTerraform(struct!.routeTable),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address_prefix: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefixToHclTerraform, false)(struct!.addressPrefix),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefixList",
    },
    as_path: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPathToHclTerraform(struct!.asPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPath",
    },
    community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunityToHclTerraform(struct!.community),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunity",
    },
    extended_community: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunityToHclTerraform(struct!.extendedCommunity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunity",
    },
    from_peer: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.fromPeer),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    med: {
      value: cdktf.numberToHclTerraform(struct!.med),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    nexthop: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nexthop),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    route_table: {
      value: cdktf.stringToHclTerraform(struct!.routeTable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addressPrefix?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.addressPrefix = this._addressPrefix?.internalValue;
    }
    if (this._asPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asPath = this._asPath?.internalValue;
    }
    if (this._community?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.community = this._community?.internalValue;
    }
    if (this._extendedCommunity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.extendedCommunity = this._extendedCommunity?.internalValue;
    }
    if (this._fromPeer !== undefined) {
      hasAnyValues = true;
      internalValueResult.fromPeer = this._fromPeer;
    }
    if (this._med !== undefined) {
      hasAnyValues = true;
      internalValueResult.med = this._med;
    }
    if (this._nexthop !== undefined) {
      hasAnyValues = true;
      internalValueResult.nexthop = this._nexthop;
    }
    if (this._routeTable !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeTable = this._routeTable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = undefined;
      this._asPath.internalValue = undefined;
      this._community.internalValue = undefined;
      this._extendedCommunity.internalValue = undefined;
      this._fromPeer = undefined;
      this._med = undefined;
      this._nexthop = undefined;
      this._routeTable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addressPrefix.internalValue = value.addressPrefix;
      this._asPath.internalValue = value.asPath;
      this._community.internalValue = value.community;
      this._extendedCommunity.internalValue = value.extendedCommunity;
      this._fromPeer = value.fromPeer;
      this._med = value.med;
      this._nexthop = value.nexthop;
      this._routeTable = value.routeTable;
    }
  }

  // address_prefix - computed: true, optional: true, required: false
  private _addressPrefix = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefixList(this, "address_prefix", false);
  public get addressPrefix() {
    return this._addressPrefix;
  }
  public putAddressPrefix(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAddressPrefix[] | cdktf.IResolvable) {
    this._addressPrefix.internalValue = value;
  }
  public resetAddressPrefix() {
    this._addressPrefix.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressPrefixInput() {
    return this._addressPrefix.internalValue;
  }

  // as_path - computed: true, optional: true, required: false
  private _asPath = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPathOutputReference(this, "as_path");
  public get asPath() {
    return this._asPath;
  }
  public putAsPath(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchAsPath) {
    this._asPath.internalValue = value;
  }
  public resetAsPath() {
    this._asPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asPathInput() {
    return this._asPath.internalValue;
  }

  // community - computed: true, optional: true, required: false
  private _community = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunityOutputReference(this, "community");
  public get community() {
    return this._community;
  }
  public putCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchCommunity) {
    this._community.internalValue = value;
  }
  public resetCommunity() {
    this._community.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityInput() {
    return this._community.internalValue;
  }

  // extended_community - computed: true, optional: true, required: false
  private _extendedCommunity = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunityOutputReference(this, "extended_community");
  public get extendedCommunity() {
    return this._extendedCommunity;
  }
  public putExtendedCommunity(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchExtendedCommunity) {
    this._extendedCommunity.internalValue = value;
  }
  public resetExtendedCommunity() {
    this._extendedCommunity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extendedCommunityInput() {
    return this._extendedCommunity.internalValue;
  }

  // from_peer - computed: true, optional: true, required: false
  private _fromPeer?: string[]; 
  public get fromPeer() {
    return this.getListAttribute('from_peer');
  }
  public set fromPeer(value: string[]) {
    this._fromPeer = value;
  }
  public resetFromPeer() {
    this._fromPeer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fromPeerInput() {
    return this._fromPeer;
  }

  // med - computed: true, optional: true, required: false
  private _med?: number; 
  public get med() {
    return this.getNumberAttribute('med');
  }
  public set med(value: number) {
    this._med = value;
  }
  public resetMed() {
    this._med = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get medInput() {
    return this._med;
  }

  // nexthop - computed: true, optional: true, required: false
  private _nexthop?: string[]; 
  public get nexthop() {
    return this.getListAttribute('nexthop');
  }
  public set nexthop(value: string[]) {
    this._nexthop = value;
  }
  public resetNexthop() {
    this._nexthop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nexthopInput() {
    return this._nexthop;
  }

  // route_table - computed: true, optional: true, required: false
  private _routeTable?: string; 
  public get routeTable() {
    return this.getStringAttribute('route_table');
  }
  public set routeTable(value: string) {
    this._routeTable = value;
  }
  public resetRouteTable() {
    this._routeTable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeTableInput() {
    return this._routeTable;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImportRules {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#action DataPanosVirtualRouter#action}
  */
  readonly action?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesAction;
  /**
  * Enable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#match DataPanosVirtualRouter#match}
  */
  readonly match?: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#used_by DataPanosVirtualRouter#used_by}
  */
  readonly usedBy?: string[];
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRules | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionToTerraform(struct!.action),
    enable: cdktf.booleanToTerraform(struct!.enable),
    match: dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchToTerraform(struct!.match),
    name: cdktf.stringToTerraform(struct!.name),
    used_by: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.usedBy),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportRulesToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImportRules | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesActionToHclTerraform(struct!.action),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesAction",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    match: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchToHclTerraform(struct!.match),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatch",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    used_by: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.usedBy),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImportRules | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action?.internalValue;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._match?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.match = this._match?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._usedBy !== undefined) {
      hasAnyValues = true;
      internalValueResult.usedBy = this._usedBy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImportRules | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action.internalValue = undefined;
      this._enable = undefined;
      this._match.internalValue = undefined;
      this._name = undefined;
      this._usedBy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action.internalValue = value.action;
      this._enable = value.enable;
      this._match.internalValue = value.match;
      this._name = value.name;
      this._usedBy = value.usedBy;
    }
  }

  // action - computed: true, optional: true, required: false
  private _action = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesActionOutputReference(this, "action");
  public get action() {
    return this._action;
  }
  public putAction(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesAction) {
    this._action.internalValue = value;
  }
  public resetAction() {
    this._action.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action.internalValue;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // match - computed: true, optional: true, required: false
  private _match = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatchOutputReference(this, "match");
  public get match() {
    return this._match;
  }
  public putMatch(value: DataPanosVirtualRouterProtocolBgpPolicyImportRulesMatch) {
    this._match.internalValue = value;
  }
  public resetMatch() {
    this._match.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchInput() {
    return this._match.internalValue;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // used_by - computed: true, optional: true, required: false
  private _usedBy?: string[]; 
  public get usedBy() {
    return this.getListAttribute('used_by');
  }
  public set usedBy(value: string[]) {
    this._usedBy = value;
  }
  public resetUsedBy() {
    this._usedBy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usedByInput() {
    return this._usedBy;
  }
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportRulesList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpPolicyImportRules[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpPolicyImportRulesOutputReference {
    return new DataPanosVirtualRouterProtocolBgpPolicyImportRulesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicyImport {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#rules DataPanosVirtualRouter#rules}
  */
  readonly rules?: DataPanosVirtualRouterProtocolBgpPolicyImportRules[] | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolBgpPolicyImportToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImport | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    rules: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPolicyImportRulesToTerraform, false)(struct!.rules),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyImportToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicyImport | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    rules: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPolicyImportRulesToHclTerraform, false)(struct!.rules),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImportRulesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyImportOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicyImport | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._rules?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rules = this._rules?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicyImport | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._rules.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._rules.internalValue = value.rules;
    }
  }

  // rules - computed: true, optional: true, required: false
  private _rules = new DataPanosVirtualRouterProtocolBgpPolicyImportRulesList(this, "rules", false);
  public get rules() {
    return this._rules;
  }
  public putRules(value: DataPanosVirtualRouterProtocolBgpPolicyImportRules[] | cdktf.IResolvable) {
    this._rules.internalValue = value;
  }
  public resetRules() {
    this._rules.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rulesInput() {
    return this._rules.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpPolicy {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#aggregation DataPanosVirtualRouter#aggregation}
  */
  readonly aggregation?: DataPanosVirtualRouterProtocolBgpPolicyAggregation;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#conditional_advertisement DataPanosVirtualRouter#conditional_advertisement}
  */
  readonly conditionalAdvertisement?: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisement;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#export DataPanosVirtualRouter#export}
  */
  readonly export?: DataPanosVirtualRouterProtocolBgpPolicyExport;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#import DataPanosVirtualRouter#import}
  */
  readonly import?: DataPanosVirtualRouterProtocolBgpPolicyImport;
}

export function dataPanosVirtualRouterProtocolBgpPolicyToTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aggregation: dataPanosVirtualRouterProtocolBgpPolicyAggregationToTerraform(struct!.aggregation),
    conditional_advertisement: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementToTerraform(struct!.conditionalAdvertisement),
    export: dataPanosVirtualRouterProtocolBgpPolicyExportToTerraform(struct!.export),
    import: dataPanosVirtualRouterProtocolBgpPolicyImportToTerraform(struct!.import),
  }
}


export function dataPanosVirtualRouterProtocolBgpPolicyToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpPolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aggregation: {
      value: dataPanosVirtualRouterProtocolBgpPolicyAggregationToHclTerraform(struct!.aggregation),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyAggregation",
    },
    conditional_advertisement: {
      value: dataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementToHclTerraform(struct!.conditionalAdvertisement),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisement",
    },
    export: {
      value: dataPanosVirtualRouterProtocolBgpPolicyExportToHclTerraform(struct!.export),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyExport",
    },
    import: {
      value: dataPanosVirtualRouterProtocolBgpPolicyImportToHclTerraform(struct!.import),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicyImport",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpPolicyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpPolicy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._aggregation?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregation = this._aggregation?.internalValue;
    }
    if (this._conditionalAdvertisement?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.conditionalAdvertisement = this._conditionalAdvertisement?.internalValue;
    }
    if (this._export?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.export = this._export?.internalValue;
    }
    if (this._import?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.import = this._import?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpPolicy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._aggregation.internalValue = undefined;
      this._conditionalAdvertisement.internalValue = undefined;
      this._export.internalValue = undefined;
      this._import.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._aggregation.internalValue = value.aggregation;
      this._conditionalAdvertisement.internalValue = value.conditionalAdvertisement;
      this._export.internalValue = value.export;
      this._import.internalValue = value.import;
    }
  }

  // aggregation - computed: true, optional: true, required: false
  private _aggregation = new DataPanosVirtualRouterProtocolBgpPolicyAggregationOutputReference(this, "aggregation");
  public get aggregation() {
    return this._aggregation;
  }
  public putAggregation(value: DataPanosVirtualRouterProtocolBgpPolicyAggregation) {
    this._aggregation.internalValue = value;
  }
  public resetAggregation() {
    this._aggregation.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregationInput() {
    return this._aggregation.internalValue;
  }

  // conditional_advertisement - computed: true, optional: true, required: false
  private _conditionalAdvertisement = new DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisementOutputReference(this, "conditional_advertisement");
  public get conditionalAdvertisement() {
    return this._conditionalAdvertisement;
  }
  public putConditionalAdvertisement(value: DataPanosVirtualRouterProtocolBgpPolicyConditionalAdvertisement) {
    this._conditionalAdvertisement.internalValue = value;
  }
  public resetConditionalAdvertisement() {
    this._conditionalAdvertisement.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get conditionalAdvertisementInput() {
    return this._conditionalAdvertisement.internalValue;
  }

  // export - computed: true, optional: true, required: false
  private _export = new DataPanosVirtualRouterProtocolBgpPolicyExportOutputReference(this, "export");
  public get export() {
    return this._export;
  }
  public putExport(value: DataPanosVirtualRouterProtocolBgpPolicyExport) {
    this._export.internalValue = value;
  }
  public resetExport() {
    this._export.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exportInput() {
    return this._export.internalValue;
  }

  // import - computed: true, optional: true, required: false
  private _import = new DataPanosVirtualRouterProtocolBgpPolicyImportOutputReference(this, "import");
  public get import() {
    return this._import;
  }
  public putImport(value: DataPanosVirtualRouterProtocolBgpPolicyImport) {
    this._import.internalValue = value;
  }
  public resetImport() {
    this._import.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get importInput() {
    return this._import.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolBgpRedistRules {
  /**
  * select redistribution profile type
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#address_family_identifier DataPanosVirtualRouter#address_family_identifier}
  */
  readonly addressFamilyIdentifier?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * metric value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#metric DataPanosVirtualRouter#metric}
  */
  readonly metric?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * select destination SAFI for redistribution
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#route_table DataPanosVirtualRouter#route_table}
  */
  readonly routeTable?: string;
  /**
  * add the AS_PATHLIMIT path attribute
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#set_as_path_limit DataPanosVirtualRouter#set_as_path_limit}
  */
  readonly setAsPathLimit?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#set_community DataPanosVirtualRouter#set_community}
  */
  readonly setCommunity?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#set_extended_community DataPanosVirtualRouter#set_extended_community}
  */
  readonly setExtendedCommunity?: string[];
  /**
  * add the LOCAL_PREF path attribute
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#set_local_preference DataPanosVirtualRouter#set_local_preference}
  */
  readonly setLocalPreference?: number;
  /**
  * add the MULTI_EXIT_DISC path attribute
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#set_med DataPanosVirtualRouter#set_med}
  */
  readonly setMed?: number;
  /**
  * add the ORIGIN path attribute
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#set_origin DataPanosVirtualRouter#set_origin}
  */
  readonly setOrigin?: string;
}

export function dataPanosVirtualRouterProtocolBgpRedistRulesToTerraform(struct?: DataPanosVirtualRouterProtocolBgpRedistRules | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address_family_identifier: cdktf.stringToTerraform(struct!.addressFamilyIdentifier),
    enable: cdktf.booleanToTerraform(struct!.enable),
    metric: cdktf.numberToTerraform(struct!.metric),
    name: cdktf.stringToTerraform(struct!.name),
    route_table: cdktf.stringToTerraform(struct!.routeTable),
    set_as_path_limit: cdktf.numberToTerraform(struct!.setAsPathLimit),
    set_community: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.setCommunity),
    set_extended_community: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.setExtendedCommunity),
    set_local_preference: cdktf.numberToTerraform(struct!.setLocalPreference),
    set_med: cdktf.numberToTerraform(struct!.setMed),
    set_origin: cdktf.stringToTerraform(struct!.setOrigin),
  }
}


export function dataPanosVirtualRouterProtocolBgpRedistRulesToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpRedistRules | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address_family_identifier: {
      value: cdktf.stringToHclTerraform(struct!.addressFamilyIdentifier),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    metric: {
      value: cdktf.numberToHclTerraform(struct!.metric),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    route_table: {
      value: cdktf.stringToHclTerraform(struct!.routeTable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    set_as_path_limit: {
      value: cdktf.numberToHclTerraform(struct!.setAsPathLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    set_community: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.setCommunity),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    set_extended_community: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.setExtendedCommunity),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    set_local_preference: {
      value: cdktf.numberToHclTerraform(struct!.setLocalPreference),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    set_med: {
      value: cdktf.numberToHclTerraform(struct!.setMed),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    set_origin: {
      value: cdktf.stringToHclTerraform(struct!.setOrigin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpRedistRulesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpRedistRules | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addressFamilyIdentifier !== undefined) {
      hasAnyValues = true;
      internalValueResult.addressFamilyIdentifier = this._addressFamilyIdentifier;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._metric !== undefined) {
      hasAnyValues = true;
      internalValueResult.metric = this._metric;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._routeTable !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeTable = this._routeTable;
    }
    if (this._setAsPathLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.setAsPathLimit = this._setAsPathLimit;
    }
    if (this._setCommunity !== undefined) {
      hasAnyValues = true;
      internalValueResult.setCommunity = this._setCommunity;
    }
    if (this._setExtendedCommunity !== undefined) {
      hasAnyValues = true;
      internalValueResult.setExtendedCommunity = this._setExtendedCommunity;
    }
    if (this._setLocalPreference !== undefined) {
      hasAnyValues = true;
      internalValueResult.setLocalPreference = this._setLocalPreference;
    }
    if (this._setMed !== undefined) {
      hasAnyValues = true;
      internalValueResult.setMed = this._setMed;
    }
    if (this._setOrigin !== undefined) {
      hasAnyValues = true;
      internalValueResult.setOrigin = this._setOrigin;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpRedistRules | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addressFamilyIdentifier = undefined;
      this._enable = undefined;
      this._metric = undefined;
      this._name = undefined;
      this._routeTable = undefined;
      this._setAsPathLimit = undefined;
      this._setCommunity = undefined;
      this._setExtendedCommunity = undefined;
      this._setLocalPreference = undefined;
      this._setMed = undefined;
      this._setOrigin = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addressFamilyIdentifier = value.addressFamilyIdentifier;
      this._enable = value.enable;
      this._metric = value.metric;
      this._name = value.name;
      this._routeTable = value.routeTable;
      this._setAsPathLimit = value.setAsPathLimit;
      this._setCommunity = value.setCommunity;
      this._setExtendedCommunity = value.setExtendedCommunity;
      this._setLocalPreference = value.setLocalPreference;
      this._setMed = value.setMed;
      this._setOrigin = value.setOrigin;
    }
  }

  // address_family_identifier - computed: true, optional: true, required: false
  private _addressFamilyIdentifier?: string; 
  public get addressFamilyIdentifier() {
    return this.getStringAttribute('address_family_identifier');
  }
  public set addressFamilyIdentifier(value: string) {
    this._addressFamilyIdentifier = value;
  }
  public resetAddressFamilyIdentifier() {
    this._addressFamilyIdentifier = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressFamilyIdentifierInput() {
    return this._addressFamilyIdentifier;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // metric - computed: true, optional: true, required: false
  private _metric?: number; 
  public get metric() {
    return this.getNumberAttribute('metric');
  }
  public set metric(value: number) {
    this._metric = value;
  }
  public resetMetric() {
    this._metric = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricInput() {
    return this._metric;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // route_table - computed: true, optional: true, required: false
  private _routeTable?: string; 
  public get routeTable() {
    return this.getStringAttribute('route_table');
  }
  public set routeTable(value: string) {
    this._routeTable = value;
  }
  public resetRouteTable() {
    this._routeTable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeTableInput() {
    return this._routeTable;
  }

  // set_as_path_limit - computed: true, optional: true, required: false
  private _setAsPathLimit?: number; 
  public get setAsPathLimit() {
    return this.getNumberAttribute('set_as_path_limit');
  }
  public set setAsPathLimit(value: number) {
    this._setAsPathLimit = value;
  }
  public resetSetAsPathLimit() {
    this._setAsPathLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get setAsPathLimitInput() {
    return this._setAsPathLimit;
  }

  // set_community - computed: true, optional: true, required: false
  private _setCommunity?: string[]; 
  public get setCommunity() {
    return this.getListAttribute('set_community');
  }
  public set setCommunity(value: string[]) {
    this._setCommunity = value;
  }
  public resetSetCommunity() {
    this._setCommunity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get setCommunityInput() {
    return this._setCommunity;
  }

  // set_extended_community - computed: true, optional: true, required: false
  private _setExtendedCommunity?: string[]; 
  public get setExtendedCommunity() {
    return this.getListAttribute('set_extended_community');
  }
  public set setExtendedCommunity(value: string[]) {
    this._setExtendedCommunity = value;
  }
  public resetSetExtendedCommunity() {
    this._setExtendedCommunity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get setExtendedCommunityInput() {
    return this._setExtendedCommunity;
  }

  // set_local_preference - computed: true, optional: true, required: false
  private _setLocalPreference?: number; 
  public get setLocalPreference() {
    return this.getNumberAttribute('set_local_preference');
  }
  public set setLocalPreference(value: number) {
    this._setLocalPreference = value;
  }
  public resetSetLocalPreference() {
    this._setLocalPreference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get setLocalPreferenceInput() {
    return this._setLocalPreference;
  }

  // set_med - computed: true, optional: true, required: false
  private _setMed?: number; 
  public get setMed() {
    return this.getNumberAttribute('set_med');
  }
  public set setMed(value: number) {
    this._setMed = value;
  }
  public resetSetMed() {
    this._setMed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get setMedInput() {
    return this._setMed;
  }

  // set_origin - computed: true, optional: true, required: false
  private _setOrigin?: string; 
  public get setOrigin() {
    return this.getStringAttribute('set_origin');
  }
  public set setOrigin(value: string) {
    this._setOrigin = value;
  }
  public resetSetOrigin() {
    this._setOrigin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get setOriginInput() {
    return this._setOrigin;
  }
}

export class DataPanosVirtualRouterProtocolBgpRedistRulesList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolBgpRedistRules[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolBgpRedistRulesOutputReference {
    return new DataPanosVirtualRouterProtocolBgpRedistRulesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolBgpRoutingOptionsAggregate {
  /**
  * aggregate route only if they have same MED attributes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#aggregate_med DataPanosVirtualRouter#aggregate_med}
  */
  readonly aggregateMed?: boolean | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolBgpRoutingOptionsAggregateToTerraform(struct?: DataPanosVirtualRouterProtocolBgpRoutingOptionsAggregate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aggregate_med: cdktf.booleanToTerraform(struct!.aggregateMed),
  }
}


export function dataPanosVirtualRouterProtocolBgpRoutingOptionsAggregateToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpRoutingOptionsAggregate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aggregate_med: {
      value: cdktf.booleanToHclTerraform(struct!.aggregateMed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpRoutingOptionsAggregateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpRoutingOptionsAggregate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._aggregateMed !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregateMed = this._aggregateMed;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpRoutingOptionsAggregate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._aggregateMed = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._aggregateMed = value.aggregateMed;
    }
  }

  // aggregate_med - computed: true, optional: true, required: false
  private _aggregateMed?: boolean | cdktf.IResolvable; 
  public get aggregateMed() {
    return this.getBooleanAttribute('aggregate_med');
  }
  public set aggregateMed(value: boolean | cdktf.IResolvable) {
    this._aggregateMed = value;
  }
  public resetAggregateMed() {
    this._aggregateMed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregateMedInput() {
    return this._aggregateMed;
  }
}
export interface DataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestart {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * local restart time to advertise to peer (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#local_restart_time DataPanosVirtualRouter#local_restart_time}
  */
  readonly localRestartTime?: number;
  /**
  * maximum of peer restart time accepted (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#max_peer_restart_time DataPanosVirtualRouter#max_peer_restart_time}
  */
  readonly maxPeerRestartTime?: number;
  /**
  * time to remove stale routes after peer restart (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#stale_route_time DataPanosVirtualRouter#stale_route_time}
  */
  readonly staleRouteTime?: number;
}

export function dataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestartToTerraform(struct?: DataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enable: cdktf.booleanToTerraform(struct!.enable),
    local_restart_time: cdktf.numberToTerraform(struct!.localRestartTime),
    max_peer_restart_time: cdktf.numberToTerraform(struct!.maxPeerRestartTime),
    stale_route_time: cdktf.numberToTerraform(struct!.staleRouteTime),
  }
}


export function dataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestartToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    local_restart_time: {
      value: cdktf.numberToHclTerraform(struct!.localRestartTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_peer_restart_time: {
      value: cdktf.numberToHclTerraform(struct!.maxPeerRestartTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    stale_route_time: {
      value: cdktf.numberToHclTerraform(struct!.staleRouteTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestartOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestart | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._localRestartTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.localRestartTime = this._localRestartTime;
    }
    if (this._maxPeerRestartTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxPeerRestartTime = this._maxPeerRestartTime;
    }
    if (this._staleRouteTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.staleRouteTime = this._staleRouteTime;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestart | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enable = undefined;
      this._localRestartTime = undefined;
      this._maxPeerRestartTime = undefined;
      this._staleRouteTime = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enable = value.enable;
      this._localRestartTime = value.localRestartTime;
      this._maxPeerRestartTime = value.maxPeerRestartTime;
      this._staleRouteTime = value.staleRouteTime;
    }
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // local_restart_time - computed: true, optional: true, required: false
  private _localRestartTime?: number; 
  public get localRestartTime() {
    return this.getNumberAttribute('local_restart_time');
  }
  public set localRestartTime(value: number) {
    this._localRestartTime = value;
  }
  public resetLocalRestartTime() {
    this._localRestartTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localRestartTimeInput() {
    return this._localRestartTime;
  }

  // max_peer_restart_time - computed: true, optional: true, required: false
  private _maxPeerRestartTime?: number; 
  public get maxPeerRestartTime() {
    return this.getNumberAttribute('max_peer_restart_time');
  }
  public set maxPeerRestartTime(value: number) {
    this._maxPeerRestartTime = value;
  }
  public resetMaxPeerRestartTime() {
    this._maxPeerRestartTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxPeerRestartTimeInput() {
    return this._maxPeerRestartTime;
  }

  // stale_route_time - computed: true, optional: true, required: false
  private _staleRouteTime?: number; 
  public get staleRouteTime() {
    return this.getNumberAttribute('stale_route_time');
  }
  public set staleRouteTime(value: number) {
    this._staleRouteTime = value;
  }
  public resetStaleRouteTime() {
    this._staleRouteTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get staleRouteTimeInput() {
    return this._staleRouteTime;
  }
}
export interface DataPanosVirtualRouterProtocolBgpRoutingOptionsMed {
  /**
  * always compare MEDs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#always_compare_med DataPanosVirtualRouter#always_compare_med}
  */
  readonly alwaysCompareMed?: boolean | cdktf.IResolvable;
  /**
  * deterministic MEDs comparison
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#deterministic_med_comparison DataPanosVirtualRouter#deterministic_med_comparison}
  */
  readonly deterministicMedComparison?: boolean | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolBgpRoutingOptionsMedToTerraform(struct?: DataPanosVirtualRouterProtocolBgpRoutingOptionsMed | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    always_compare_med: cdktf.booleanToTerraform(struct!.alwaysCompareMed),
    deterministic_med_comparison: cdktf.booleanToTerraform(struct!.deterministicMedComparison),
  }
}


export function dataPanosVirtualRouterProtocolBgpRoutingOptionsMedToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpRoutingOptionsMed | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    always_compare_med: {
      value: cdktf.booleanToHclTerraform(struct!.alwaysCompareMed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    deterministic_med_comparison: {
      value: cdktf.booleanToHclTerraform(struct!.deterministicMedComparison),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpRoutingOptionsMedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpRoutingOptionsMed | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._alwaysCompareMed !== undefined) {
      hasAnyValues = true;
      internalValueResult.alwaysCompareMed = this._alwaysCompareMed;
    }
    if (this._deterministicMedComparison !== undefined) {
      hasAnyValues = true;
      internalValueResult.deterministicMedComparison = this._deterministicMedComparison;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpRoutingOptionsMed | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._alwaysCompareMed = undefined;
      this._deterministicMedComparison = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._alwaysCompareMed = value.alwaysCompareMed;
      this._deterministicMedComparison = value.deterministicMedComparison;
    }
  }

  // always_compare_med - computed: true, optional: true, required: false
  private _alwaysCompareMed?: boolean | cdktf.IResolvable; 
  public get alwaysCompareMed() {
    return this.getBooleanAttribute('always_compare_med');
  }
  public set alwaysCompareMed(value: boolean | cdktf.IResolvable) {
    this._alwaysCompareMed = value;
  }
  public resetAlwaysCompareMed() {
    this._alwaysCompareMed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get alwaysCompareMedInput() {
    return this._alwaysCompareMed;
  }

  // deterministic_med_comparison - computed: true, optional: true, required: false
  private _deterministicMedComparison?: boolean | cdktf.IResolvable; 
  public get deterministicMedComparison() {
    return this.getBooleanAttribute('deterministic_med_comparison');
  }
  public set deterministicMedComparison(value: boolean | cdktf.IResolvable) {
    this._deterministicMedComparison = value;
  }
  public resetDeterministicMedComparison() {
    this._deterministicMedComparison = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deterministicMedComparisonInput() {
    return this._deterministicMedComparison;
  }
}
export interface DataPanosVirtualRouterProtocolBgpRoutingOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#aggregate DataPanosVirtualRouter#aggregate}
  */
  readonly aggregate?: DataPanosVirtualRouterProtocolBgpRoutingOptionsAggregate;
  /**
  * AS format
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#as_format DataPanosVirtualRouter#as_format}
  */
  readonly asFormat?: string;
  /**
  * confederation requires member-AS number
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#confederation_member_as DataPanosVirtualRouter#confederation_member_as}
  */
  readonly confederationMemberAs?: string;
  /**
  * default local preference
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#default_local_preference DataPanosVirtualRouter#default_local_preference}
  */
  readonly defaultLocalPreference?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#graceful_restart DataPanosVirtualRouter#graceful_restart}
  */
  readonly gracefulRestart?: DataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestart;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#med DataPanosVirtualRouter#med}
  */
  readonly med?: DataPanosVirtualRouterProtocolBgpRoutingOptionsMed;
  /**
  * route reflector cluster ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#reflector_cluster_id DataPanosVirtualRouter#reflector_cluster_id}
  */
  readonly reflectorClusterId?: string;
}

export function dataPanosVirtualRouterProtocolBgpRoutingOptionsToTerraform(struct?: DataPanosVirtualRouterProtocolBgpRoutingOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aggregate: dataPanosVirtualRouterProtocolBgpRoutingOptionsAggregateToTerraform(struct!.aggregate),
    as_format: cdktf.stringToTerraform(struct!.asFormat),
    confederation_member_as: cdktf.stringToTerraform(struct!.confederationMemberAs),
    default_local_preference: cdktf.numberToTerraform(struct!.defaultLocalPreference),
    graceful_restart: dataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestartToTerraform(struct!.gracefulRestart),
    med: dataPanosVirtualRouterProtocolBgpRoutingOptionsMedToTerraform(struct!.med),
    reflector_cluster_id: cdktf.stringToTerraform(struct!.reflectorClusterId),
  }
}


export function dataPanosVirtualRouterProtocolBgpRoutingOptionsToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgpRoutingOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aggregate: {
      value: dataPanosVirtualRouterProtocolBgpRoutingOptionsAggregateToHclTerraform(struct!.aggregate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpRoutingOptionsAggregate",
    },
    as_format: {
      value: cdktf.stringToHclTerraform(struct!.asFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    confederation_member_as: {
      value: cdktf.stringToHclTerraform(struct!.confederationMemberAs),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    default_local_preference: {
      value: cdktf.numberToHclTerraform(struct!.defaultLocalPreference),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    graceful_restart: {
      value: dataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestartToHclTerraform(struct!.gracefulRestart),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestart",
    },
    med: {
      value: dataPanosVirtualRouterProtocolBgpRoutingOptionsMedToHclTerraform(struct!.med),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpRoutingOptionsMed",
    },
    reflector_cluster_id: {
      value: cdktf.stringToHclTerraform(struct!.reflectorClusterId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpRoutingOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgpRoutingOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._aggregate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregate = this._aggregate?.internalValue;
    }
    if (this._asFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.asFormat = this._asFormat;
    }
    if (this._confederationMemberAs !== undefined) {
      hasAnyValues = true;
      internalValueResult.confederationMemberAs = this._confederationMemberAs;
    }
    if (this._defaultLocalPreference !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultLocalPreference = this._defaultLocalPreference;
    }
    if (this._gracefulRestart?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.gracefulRestart = this._gracefulRestart?.internalValue;
    }
    if (this._med?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.med = this._med?.internalValue;
    }
    if (this._reflectorClusterId !== undefined) {
      hasAnyValues = true;
      internalValueResult.reflectorClusterId = this._reflectorClusterId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgpRoutingOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._aggregate.internalValue = undefined;
      this._asFormat = undefined;
      this._confederationMemberAs = undefined;
      this._defaultLocalPreference = undefined;
      this._gracefulRestart.internalValue = undefined;
      this._med.internalValue = undefined;
      this._reflectorClusterId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._aggregate.internalValue = value.aggregate;
      this._asFormat = value.asFormat;
      this._confederationMemberAs = value.confederationMemberAs;
      this._defaultLocalPreference = value.defaultLocalPreference;
      this._gracefulRestart.internalValue = value.gracefulRestart;
      this._med.internalValue = value.med;
      this._reflectorClusterId = value.reflectorClusterId;
    }
  }

  // aggregate - computed: true, optional: true, required: false
  private _aggregate = new DataPanosVirtualRouterProtocolBgpRoutingOptionsAggregateOutputReference(this, "aggregate");
  public get aggregate() {
    return this._aggregate;
  }
  public putAggregate(value: DataPanosVirtualRouterProtocolBgpRoutingOptionsAggregate) {
    this._aggregate.internalValue = value;
  }
  public resetAggregate() {
    this._aggregate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregateInput() {
    return this._aggregate.internalValue;
  }

  // as_format - computed: true, optional: true, required: false
  private _asFormat?: string; 
  public get asFormat() {
    return this.getStringAttribute('as_format');
  }
  public set asFormat(value: string) {
    this._asFormat = value;
  }
  public resetAsFormat() {
    this._asFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asFormatInput() {
    return this._asFormat;
  }

  // confederation_member_as - computed: true, optional: true, required: false
  private _confederationMemberAs?: string; 
  public get confederationMemberAs() {
    return this.getStringAttribute('confederation_member_as');
  }
  public set confederationMemberAs(value: string) {
    this._confederationMemberAs = value;
  }
  public resetConfederationMemberAs() {
    this._confederationMemberAs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get confederationMemberAsInput() {
    return this._confederationMemberAs;
  }

  // default_local_preference - computed: true, optional: true, required: false
  private _defaultLocalPreference?: number; 
  public get defaultLocalPreference() {
    return this.getNumberAttribute('default_local_preference');
  }
  public set defaultLocalPreference(value: number) {
    this._defaultLocalPreference = value;
  }
  public resetDefaultLocalPreference() {
    this._defaultLocalPreference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultLocalPreferenceInput() {
    return this._defaultLocalPreference;
  }

  // graceful_restart - computed: true, optional: true, required: false
  private _gracefulRestart = new DataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestartOutputReference(this, "graceful_restart");
  public get gracefulRestart() {
    return this._gracefulRestart;
  }
  public putGracefulRestart(value: DataPanosVirtualRouterProtocolBgpRoutingOptionsGracefulRestart) {
    this._gracefulRestart.internalValue = value;
  }
  public resetGracefulRestart() {
    this._gracefulRestart.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gracefulRestartInput() {
    return this._gracefulRestart.internalValue;
  }

  // med - computed: true, optional: true, required: false
  private _med = new DataPanosVirtualRouterProtocolBgpRoutingOptionsMedOutputReference(this, "med");
  public get med() {
    return this._med;
  }
  public putMed(value: DataPanosVirtualRouterProtocolBgpRoutingOptionsMed) {
    this._med.internalValue = value;
  }
  public resetMed() {
    this._med.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get medInput() {
    return this._med.internalValue;
  }

  // reflector_cluster_id - computed: true, optional: true, required: false
  private _reflectorClusterId?: string; 
  public get reflectorClusterId() {
    return this.getStringAttribute('reflector_cluster_id');
  }
  public set reflectorClusterId(value: string) {
    this._reflectorClusterId = value;
  }
  public resetReflectorClusterId() {
    this._reflectorClusterId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reflectorClusterIdInput() {
    return this._reflectorClusterId;
  }
}
export interface DataPanosVirtualRouterProtocolBgp {
  /**
  * allow redistribute default route to BGP
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#allow_redist_default_route DataPanosVirtualRouter#allow_redist_default_route}
  */
  readonly allowRedistDefaultRoute?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#auth_profile DataPanosVirtualRouter#auth_profile}
  */
  readonly authProfile?: DataPanosVirtualRouterProtocolBgpAuthProfile[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#dampening_profile DataPanosVirtualRouter#dampening_profile}
  */
  readonly dampeningProfile?: DataPanosVirtualRouterProtocolBgpDampeningProfile[] | cdktf.IResolvable;
  /**
  * Support multiple AS in ECMP
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#ecmp_multi_as DataPanosVirtualRouter#ecmp_multi_as}
  */
  readonly ecmpMultiAs?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Enforce First AS for EBGP
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enforce_first_as DataPanosVirtualRouter#enforce_first_as}
  */
  readonly enforceFirstAs?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#global_bfd DataPanosVirtualRouter#global_bfd}
  */
  readonly globalBfd?: DataPanosVirtualRouterProtocolBgpGlobalBfd;
  /**
  * Populate BGP learned route to global route table
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#install_route DataPanosVirtualRouter#install_route}
  */
  readonly installRoute?: boolean | cdktf.IResolvable;
  /**
  * local AS number
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#local_as DataPanosVirtualRouter#local_as}
  */
  readonly localAs?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#peer_group DataPanosVirtualRouter#peer_group}
  */
  readonly peerGroup?: DataPanosVirtualRouterProtocolBgpPeerGroup[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#policy DataPanosVirtualRouter#policy}
  */
  readonly policy?: DataPanosVirtualRouterProtocolBgpPolicy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#redist_rules DataPanosVirtualRouter#redist_rules}
  */
  readonly redistRules?: DataPanosVirtualRouterProtocolBgpRedistRules[] | cdktf.IResolvable;
  /**
  * do not learn default route from BGP
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#reject_default_route DataPanosVirtualRouter#reject_default_route}
  */
  readonly rejectDefaultRoute?: boolean | cdktf.IResolvable;
  /**
  * router id of this BGP instance
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#router_id DataPanosVirtualRouter#router_id}
  */
  readonly routerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#routing_options DataPanosVirtualRouter#routing_options}
  */
  readonly routingOptions?: DataPanosVirtualRouterProtocolBgpRoutingOptions;
}

export function dataPanosVirtualRouterProtocolBgpToTerraform(struct?: DataPanosVirtualRouterProtocolBgp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_redist_default_route: cdktf.booleanToTerraform(struct!.allowRedistDefaultRoute),
    auth_profile: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpAuthProfileToTerraform, false)(struct!.authProfile),
    dampening_profile: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpDampeningProfileToTerraform, false)(struct!.dampeningProfile),
    ecmp_multi_as: cdktf.booleanToTerraform(struct!.ecmpMultiAs),
    enable: cdktf.booleanToTerraform(struct!.enable),
    enforce_first_as: cdktf.booleanToTerraform(struct!.enforceFirstAs),
    global_bfd: dataPanosVirtualRouterProtocolBgpGlobalBfdToTerraform(struct!.globalBfd),
    install_route: cdktf.booleanToTerraform(struct!.installRoute),
    local_as: cdktf.stringToTerraform(struct!.localAs),
    peer_group: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpPeerGroupToTerraform, false)(struct!.peerGroup),
    policy: dataPanosVirtualRouterProtocolBgpPolicyToTerraform(struct!.policy),
    redist_rules: cdktf.listMapper(dataPanosVirtualRouterProtocolBgpRedistRulesToTerraform, false)(struct!.redistRules),
    reject_default_route: cdktf.booleanToTerraform(struct!.rejectDefaultRoute),
    router_id: cdktf.stringToTerraform(struct!.routerId),
    routing_options: dataPanosVirtualRouterProtocolBgpRoutingOptionsToTerraform(struct!.routingOptions),
  }
}


export function dataPanosVirtualRouterProtocolBgpToHclTerraform(struct?: DataPanosVirtualRouterProtocolBgp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_redist_default_route: {
      value: cdktf.booleanToHclTerraform(struct!.allowRedistDefaultRoute),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    auth_profile: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpAuthProfileToHclTerraform, false)(struct!.authProfile),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpAuthProfileList",
    },
    dampening_profile: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpDampeningProfileToHclTerraform, false)(struct!.dampeningProfile),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpDampeningProfileList",
    },
    ecmp_multi_as: {
      value: cdktf.booleanToHclTerraform(struct!.ecmpMultiAs),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enforce_first_as: {
      value: cdktf.booleanToHclTerraform(struct!.enforceFirstAs),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    global_bfd: {
      value: dataPanosVirtualRouterProtocolBgpGlobalBfdToHclTerraform(struct!.globalBfd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpGlobalBfd",
    },
    install_route: {
      value: cdktf.booleanToHclTerraform(struct!.installRoute),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    local_as: {
      value: cdktf.stringToHclTerraform(struct!.localAs),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    peer_group: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpPeerGroupToHclTerraform, false)(struct!.peerGroup),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPeerGroupList",
    },
    policy: {
      value: dataPanosVirtualRouterProtocolBgpPolicyToHclTerraform(struct!.policy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpPolicy",
    },
    redist_rules: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolBgpRedistRulesToHclTerraform, false)(struct!.redistRules),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolBgpRedistRulesList",
    },
    reject_default_route: {
      value: cdktf.booleanToHclTerraform(struct!.rejectDefaultRoute),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    router_id: {
      value: cdktf.stringToHclTerraform(struct!.routerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    routing_options: {
      value: dataPanosVirtualRouterProtocolBgpRoutingOptionsToHclTerraform(struct!.routingOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolBgpRoutingOptions",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolBgpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolBgp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowRedistDefaultRoute !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowRedistDefaultRoute = this._allowRedistDefaultRoute;
    }
    if (this._authProfile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProfile = this._authProfile?.internalValue;
    }
    if (this._dampeningProfile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dampeningProfile = this._dampeningProfile?.internalValue;
    }
    if (this._ecmpMultiAs !== undefined) {
      hasAnyValues = true;
      internalValueResult.ecmpMultiAs = this._ecmpMultiAs;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._enforceFirstAs !== undefined) {
      hasAnyValues = true;
      internalValueResult.enforceFirstAs = this._enforceFirstAs;
    }
    if (this._globalBfd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.globalBfd = this._globalBfd?.internalValue;
    }
    if (this._installRoute !== undefined) {
      hasAnyValues = true;
      internalValueResult.installRoute = this._installRoute;
    }
    if (this._localAs !== undefined) {
      hasAnyValues = true;
      internalValueResult.localAs = this._localAs;
    }
    if (this._peerGroup?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.peerGroup = this._peerGroup?.internalValue;
    }
    if (this._policy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.policy = this._policy?.internalValue;
    }
    if (this._redistRules?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.redistRules = this._redistRules?.internalValue;
    }
    if (this._rejectDefaultRoute !== undefined) {
      hasAnyValues = true;
      internalValueResult.rejectDefaultRoute = this._rejectDefaultRoute;
    }
    if (this._routerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.routerId = this._routerId;
    }
    if (this._routingOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.routingOptions = this._routingOptions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolBgp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowRedistDefaultRoute = undefined;
      this._authProfile.internalValue = undefined;
      this._dampeningProfile.internalValue = undefined;
      this._ecmpMultiAs = undefined;
      this._enable = undefined;
      this._enforceFirstAs = undefined;
      this._globalBfd.internalValue = undefined;
      this._installRoute = undefined;
      this._localAs = undefined;
      this._peerGroup.internalValue = undefined;
      this._policy.internalValue = undefined;
      this._redistRules.internalValue = undefined;
      this._rejectDefaultRoute = undefined;
      this._routerId = undefined;
      this._routingOptions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowRedistDefaultRoute = value.allowRedistDefaultRoute;
      this._authProfile.internalValue = value.authProfile;
      this._dampeningProfile.internalValue = value.dampeningProfile;
      this._ecmpMultiAs = value.ecmpMultiAs;
      this._enable = value.enable;
      this._enforceFirstAs = value.enforceFirstAs;
      this._globalBfd.internalValue = value.globalBfd;
      this._installRoute = value.installRoute;
      this._localAs = value.localAs;
      this._peerGroup.internalValue = value.peerGroup;
      this._policy.internalValue = value.policy;
      this._redistRules.internalValue = value.redistRules;
      this._rejectDefaultRoute = value.rejectDefaultRoute;
      this._routerId = value.routerId;
      this._routingOptions.internalValue = value.routingOptions;
    }
  }

  // allow_redist_default_route - computed: true, optional: true, required: false
  private _allowRedistDefaultRoute?: boolean | cdktf.IResolvable; 
  public get allowRedistDefaultRoute() {
    return this.getBooleanAttribute('allow_redist_default_route');
  }
  public set allowRedistDefaultRoute(value: boolean | cdktf.IResolvable) {
    this._allowRedistDefaultRoute = value;
  }
  public resetAllowRedistDefaultRoute() {
    this._allowRedistDefaultRoute = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowRedistDefaultRouteInput() {
    return this._allowRedistDefaultRoute;
  }

  // auth_profile - computed: true, optional: true, required: false
  private _authProfile = new DataPanosVirtualRouterProtocolBgpAuthProfileList(this, "auth_profile", false);
  public get authProfile() {
    return this._authProfile;
  }
  public putAuthProfile(value: DataPanosVirtualRouterProtocolBgpAuthProfile[] | cdktf.IResolvable) {
    this._authProfile.internalValue = value;
  }
  public resetAuthProfile() {
    this._authProfile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProfileInput() {
    return this._authProfile.internalValue;
  }

  // dampening_profile - computed: true, optional: true, required: false
  private _dampeningProfile = new DataPanosVirtualRouterProtocolBgpDampeningProfileList(this, "dampening_profile", false);
  public get dampeningProfile() {
    return this._dampeningProfile;
  }
  public putDampeningProfile(value: DataPanosVirtualRouterProtocolBgpDampeningProfile[] | cdktf.IResolvable) {
    this._dampeningProfile.internalValue = value;
  }
  public resetDampeningProfile() {
    this._dampeningProfile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dampeningProfileInput() {
    return this._dampeningProfile.internalValue;
  }

  // ecmp_multi_as - computed: true, optional: true, required: false
  private _ecmpMultiAs?: boolean | cdktf.IResolvable; 
  public get ecmpMultiAs() {
    return this.getBooleanAttribute('ecmp_multi_as');
  }
  public set ecmpMultiAs(value: boolean | cdktf.IResolvable) {
    this._ecmpMultiAs = value;
  }
  public resetEcmpMultiAs() {
    this._ecmpMultiAs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ecmpMultiAsInput() {
    return this._ecmpMultiAs;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // enforce_first_as - computed: true, optional: true, required: false
  private _enforceFirstAs?: boolean | cdktf.IResolvable; 
  public get enforceFirstAs() {
    return this.getBooleanAttribute('enforce_first_as');
  }
  public set enforceFirstAs(value: boolean | cdktf.IResolvable) {
    this._enforceFirstAs = value;
  }
  public resetEnforceFirstAs() {
    this._enforceFirstAs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enforceFirstAsInput() {
    return this._enforceFirstAs;
  }

  // global_bfd - computed: true, optional: true, required: false
  private _globalBfd = new DataPanosVirtualRouterProtocolBgpGlobalBfdOutputReference(this, "global_bfd");
  public get globalBfd() {
    return this._globalBfd;
  }
  public putGlobalBfd(value: DataPanosVirtualRouterProtocolBgpGlobalBfd) {
    this._globalBfd.internalValue = value;
  }
  public resetGlobalBfd() {
    this._globalBfd.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get globalBfdInput() {
    return this._globalBfd.internalValue;
  }

  // install_route - computed: true, optional: true, required: false
  private _installRoute?: boolean | cdktf.IResolvable; 
  public get installRoute() {
    return this.getBooleanAttribute('install_route');
  }
  public set installRoute(value: boolean | cdktf.IResolvable) {
    this._installRoute = value;
  }
  public resetInstallRoute() {
    this._installRoute = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get installRouteInput() {
    return this._installRoute;
  }

  // local_as - computed: true, optional: true, required: false
  private _localAs?: string; 
  public get localAs() {
    return this.getStringAttribute('local_as');
  }
  public set localAs(value: string) {
    this._localAs = value;
  }
  public resetLocalAs() {
    this._localAs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localAsInput() {
    return this._localAs;
  }

  // peer_group - computed: true, optional: true, required: false
  private _peerGroup = new DataPanosVirtualRouterProtocolBgpPeerGroupList(this, "peer_group", false);
  public get peerGroup() {
    return this._peerGroup;
  }
  public putPeerGroup(value: DataPanosVirtualRouterProtocolBgpPeerGroup[] | cdktf.IResolvable) {
    this._peerGroup.internalValue = value;
  }
  public resetPeerGroup() {
    this._peerGroup.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get peerGroupInput() {
    return this._peerGroup.internalValue;
  }

  // policy - computed: true, optional: true, required: false
  private _policy = new DataPanosVirtualRouterProtocolBgpPolicyOutputReference(this, "policy");
  public get policy() {
    return this._policy;
  }
  public putPolicy(value: DataPanosVirtualRouterProtocolBgpPolicy) {
    this._policy.internalValue = value;
  }
  public resetPolicy() {
    this._policy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policyInput() {
    return this._policy.internalValue;
  }

  // redist_rules - computed: true, optional: true, required: false
  private _redistRules = new DataPanosVirtualRouterProtocolBgpRedistRulesList(this, "redist_rules", false);
  public get redistRules() {
    return this._redistRules;
  }
  public putRedistRules(value: DataPanosVirtualRouterProtocolBgpRedistRules[] | cdktf.IResolvable) {
    this._redistRules.internalValue = value;
  }
  public resetRedistRules() {
    this._redistRules.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redistRulesInput() {
    return this._redistRules.internalValue;
  }

  // reject_default_route - computed: true, optional: true, required: false
  private _rejectDefaultRoute?: boolean | cdktf.IResolvable; 
  public get rejectDefaultRoute() {
    return this.getBooleanAttribute('reject_default_route');
  }
  public set rejectDefaultRoute(value: boolean | cdktf.IResolvable) {
    this._rejectDefaultRoute = value;
  }
  public resetRejectDefaultRoute() {
    this._rejectDefaultRoute = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rejectDefaultRouteInput() {
    return this._rejectDefaultRoute;
  }

  // router_id - computed: true, optional: true, required: false
  private _routerId?: string; 
  public get routerId() {
    return this.getStringAttribute('router_id');
  }
  public set routerId(value: string) {
    this._routerId = value;
  }
  public resetRouterId() {
    this._routerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routerIdInput() {
    return this._routerId;
  }

  // routing_options - computed: true, optional: true, required: false
  private _routingOptions = new DataPanosVirtualRouterProtocolBgpRoutingOptionsOutputReference(this, "routing_options");
  public get routingOptions() {
    return this._routingOptions;
  }
  public putRoutingOptions(value: DataPanosVirtualRouterProtocolBgpRoutingOptions) {
    this._routingOptions.internalValue = value;
  }
  public resetRoutingOptions() {
    this._routingOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routingOptionsInput() {
    return this._routingOptions.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaInterfaceBfd {
  /**
  * BFD profile
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#profile DataPanosVirtualRouter#profile}
  */
  readonly profile?: string;
}

export function dataPanosVirtualRouterProtocolOspfAreaInterfaceBfdToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    profile: cdktf.stringToTerraform(struct!.profile),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaInterfaceBfdToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    profile: {
      value: cdktf.stringToHclTerraform(struct!.profile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaInterfaceBfdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaInterfaceBfd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._profile !== undefined) {
      hasAnyValues = true;
      internalValueResult.profile = this._profile;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceBfd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._profile = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._profile = value.profile;
    }
  }

  // profile - computed: true, optional: true, required: false
  private _profile?: string; 
  public get profile() {
    return this.getStringAttribute('profile');
  }
  public set profile(value: string) {
    this._profile = value;
  }
  public resetProfile() {
    this._profile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profileInput() {
    return this._profile;
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcast {
}

export function dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcastToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcast | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcastToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcast | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcastOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcast | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcast | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2Mp {
}

export function dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2MpToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2Mp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2MpToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2Mp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2MpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2Mp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2Mp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2P {
}

export function dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2PToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2P | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2PToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2P | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2POutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2P | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2P | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkType {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#broadcast DataPanosVirtualRouter#broadcast}
  */
  readonly broadcast?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcast;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#p2mp DataPanosVirtualRouter#p2mp}
  */
  readonly p2Mp?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2Mp;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#p2p DataPanosVirtualRouter#p2p}
  */
  readonly p2P?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2P;
}

export function dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkType | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    broadcast: dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcastToTerraform(struct!.broadcast),
    p2mp: dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2MpToTerraform(struct!.p2Mp),
    p2p: dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2PToTerraform(struct!.p2P),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkType | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    broadcast: {
      value: dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcastToHclTerraform(struct!.broadcast),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcast",
    },
    p2mp: {
      value: dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2MpToHclTerraform(struct!.p2Mp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2Mp",
    },
    p2p: {
      value: dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2PToHclTerraform(struct!.p2P),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2P",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkType | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._broadcast?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.broadcast = this._broadcast?.internalValue;
    }
    if (this._p2Mp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.p2Mp = this._p2Mp?.internalValue;
    }
    if (this._p2P?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.p2P = this._p2P?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkType | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._broadcast.internalValue = undefined;
      this._p2Mp.internalValue = undefined;
      this._p2P.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._broadcast.internalValue = value.broadcast;
      this._p2Mp.internalValue = value.p2Mp;
      this._p2P.internalValue = value.p2P;
    }
  }

  // broadcast - computed: true, optional: true, required: false
  private _broadcast = new DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcastOutputReference(this, "broadcast");
  public get broadcast() {
    return this._broadcast;
  }
  public putBroadcast(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeBroadcast) {
    this._broadcast.internalValue = value;
  }
  public resetBroadcast() {
    this._broadcast.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get broadcastInput() {
    return this._broadcast.internalValue;
  }

  // p2mp - computed: true, optional: true, required: false
  private _p2Mp = new DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2MpOutputReference(this, "p2mp");
  public get p2Mp() {
    return this._p2Mp;
  }
  public putP2Mp(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2Mp) {
    this._p2Mp.internalValue = value;
  }
  public resetP2Mp() {
    this._p2Mp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get p2MpInput() {
    return this._p2Mp.internalValue;
  }

  // p2p - computed: true, optional: true, required: false
  private _p2P = new DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2POutputReference(this, "p2p");
  public get p2P() {
    return this._p2P;
  }
  public putP2P(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeP2P) {
    this._p2P.internalValue = value;
  }
  public resetP2P() {
    this._p2P.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get p2PInput() {
    return this._p2P.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighbor {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
}

export function dataPanosVirtualRouterProtocolOspfAreaInterfaceNeighborToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighbor | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaInterfaceNeighborToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighbor | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighborOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighbor | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighbor | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighborList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighbor[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighborOutputReference {
    return new DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighborOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaInterface {
  /**
  * Authentication options
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#authentication DataPanosVirtualRouter#authentication}
  */
  readonly authentication?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#bfd DataPanosVirtualRouter#bfd}
  */
  readonly bfd?: DataPanosVirtualRouterProtocolOspfAreaInterfaceBfd;
  /**
  * number of lost hello packets to declare router down
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#dead_counts DataPanosVirtualRouter#dead_counts}
  */
  readonly deadCounts?: number;
  /**
  * Enable OSPF in this interface
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Period (in seconds) used to send grace LSAs before first hello is sent when graceful restart starts
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#gr_delay DataPanosVirtualRouter#gr_delay}
  */
  readonly grDelay?: number;
  /**
  * Interval (in seconds) to send Hello packets
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#hello_interval DataPanosVirtualRouter#hello_interval}
  */
  readonly helloInterval?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#link_type DataPanosVirtualRouter#link_type}
  */
  readonly linkType?: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkType;
  /**
  * Cost of OSPF interface
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#metric DataPanosVirtualRouter#metric}
  */
  readonly metric?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#neighbor DataPanosVirtualRouter#neighbor}
  */
  readonly neighbor?: DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighbor[] | cdktf.IResolvable;
  /**
  * Suppress the sending of hello packets in this interface
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#passive DataPanosVirtualRouter#passive}
  */
  readonly passive?: boolean | cdktf.IResolvable;
  /**
  * Priority for OSPF designated router selection
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#priority DataPanosVirtualRouter#priority}
  */
  readonly priority?: number;
  /**
  * Interval (in seconds) to retransmit LSAs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#retransmit_interval DataPanosVirtualRouter#retransmit_interval}
  */
  readonly retransmitInterval?: number;
  /**
  * Estimated delay (in seconds) to transmit LSAs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#transit_delay DataPanosVirtualRouter#transit_delay}
  */
  readonly transitDelay?: number;
}

export function dataPanosVirtualRouterProtocolOspfAreaInterfaceToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterface | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    authentication: cdktf.stringToTerraform(struct!.authentication),
    bfd: dataPanosVirtualRouterProtocolOspfAreaInterfaceBfdToTerraform(struct!.bfd),
    dead_counts: cdktf.numberToTerraform(struct!.deadCounts),
    enable: cdktf.booleanToTerraform(struct!.enable),
    gr_delay: cdktf.numberToTerraform(struct!.grDelay),
    hello_interval: cdktf.numberToTerraform(struct!.helloInterval),
    link_type: dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeToTerraform(struct!.linkType),
    metric: cdktf.numberToTerraform(struct!.metric),
    name: cdktf.stringToTerraform(struct!.name),
    neighbor: cdktf.listMapper(dataPanosVirtualRouterProtocolOspfAreaInterfaceNeighborToTerraform, false)(struct!.neighbor),
    passive: cdktf.booleanToTerraform(struct!.passive),
    priority: cdktf.numberToTerraform(struct!.priority),
    retransmit_interval: cdktf.numberToTerraform(struct!.retransmitInterval),
    transit_delay: cdktf.numberToTerraform(struct!.transitDelay),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaInterfaceToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaInterface | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    authentication: {
      value: cdktf.stringToHclTerraform(struct!.authentication),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    bfd: {
      value: dataPanosVirtualRouterProtocolOspfAreaInterfaceBfdToHclTerraform(struct!.bfd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaInterfaceBfd",
    },
    dead_counts: {
      value: cdktf.numberToHclTerraform(struct!.deadCounts),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    gr_delay: {
      value: cdktf.numberToHclTerraform(struct!.grDelay),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    hello_interval: {
      value: cdktf.numberToHclTerraform(struct!.helloInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    link_type: {
      value: dataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeToHclTerraform(struct!.linkType),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkType",
    },
    metric: {
      value: cdktf.numberToHclTerraform(struct!.metric),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    neighbor: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolOspfAreaInterfaceNeighborToHclTerraform, false)(struct!.neighbor),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighborList",
    },
    passive: {
      value: cdktf.booleanToHclTerraform(struct!.passive),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    retransmit_interval: {
      value: cdktf.numberToHclTerraform(struct!.retransmitInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    transit_delay: {
      value: cdktf.numberToHclTerraform(struct!.transitDelay),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaInterfaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaInterface | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authentication !== undefined) {
      hasAnyValues = true;
      internalValueResult.authentication = this._authentication;
    }
    if (this._bfd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bfd = this._bfd?.internalValue;
    }
    if (this._deadCounts !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadCounts = this._deadCounts;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._grDelay !== undefined) {
      hasAnyValues = true;
      internalValueResult.grDelay = this._grDelay;
    }
    if (this._helloInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.helloInterval = this._helloInterval;
    }
    if (this._linkType?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.linkType = this._linkType?.internalValue;
    }
    if (this._metric !== undefined) {
      hasAnyValues = true;
      internalValueResult.metric = this._metric;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._neighbor?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.neighbor = this._neighbor?.internalValue;
    }
    if (this._passive !== undefined) {
      hasAnyValues = true;
      internalValueResult.passive = this._passive;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._retransmitInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.retransmitInterval = this._retransmitInterval;
    }
    if (this._transitDelay !== undefined) {
      hasAnyValues = true;
      internalValueResult.transitDelay = this._transitDelay;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaInterface | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authentication = undefined;
      this._bfd.internalValue = undefined;
      this._deadCounts = undefined;
      this._enable = undefined;
      this._grDelay = undefined;
      this._helloInterval = undefined;
      this._linkType.internalValue = undefined;
      this._metric = undefined;
      this._name = undefined;
      this._neighbor.internalValue = undefined;
      this._passive = undefined;
      this._priority = undefined;
      this._retransmitInterval = undefined;
      this._transitDelay = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authentication = value.authentication;
      this._bfd.internalValue = value.bfd;
      this._deadCounts = value.deadCounts;
      this._enable = value.enable;
      this._grDelay = value.grDelay;
      this._helloInterval = value.helloInterval;
      this._linkType.internalValue = value.linkType;
      this._metric = value.metric;
      this._name = value.name;
      this._neighbor.internalValue = value.neighbor;
      this._passive = value.passive;
      this._priority = value.priority;
      this._retransmitInterval = value.retransmitInterval;
      this._transitDelay = value.transitDelay;
    }
  }

  // authentication - computed: true, optional: true, required: false
  private _authentication?: string; 
  public get authentication() {
    return this.getStringAttribute('authentication');
  }
  public set authentication(value: string) {
    this._authentication = value;
  }
  public resetAuthentication() {
    this._authentication = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticationInput() {
    return this._authentication;
  }

  // bfd - computed: true, optional: true, required: false
  private _bfd = new DataPanosVirtualRouterProtocolOspfAreaInterfaceBfdOutputReference(this, "bfd");
  public get bfd() {
    return this._bfd;
  }
  public putBfd(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceBfd) {
    this._bfd.internalValue = value;
  }
  public resetBfd() {
    this._bfd.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bfdInput() {
    return this._bfd.internalValue;
  }

  // dead_counts - computed: true, optional: true, required: false
  private _deadCounts?: number; 
  public get deadCounts() {
    return this.getNumberAttribute('dead_counts');
  }
  public set deadCounts(value: number) {
    this._deadCounts = value;
  }
  public resetDeadCounts() {
    this._deadCounts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadCountsInput() {
    return this._deadCounts;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // gr_delay - computed: true, optional: true, required: false
  private _grDelay?: number; 
  public get grDelay() {
    return this.getNumberAttribute('gr_delay');
  }
  public set grDelay(value: number) {
    this._grDelay = value;
  }
  public resetGrDelay() {
    this._grDelay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get grDelayInput() {
    return this._grDelay;
  }

  // hello_interval - computed: true, optional: true, required: false
  private _helloInterval?: number; 
  public get helloInterval() {
    return this.getNumberAttribute('hello_interval');
  }
  public set helloInterval(value: number) {
    this._helloInterval = value;
  }
  public resetHelloInterval() {
    this._helloInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get helloIntervalInput() {
    return this._helloInterval;
  }

  // link_type - computed: true, optional: true, required: false
  private _linkType = new DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkTypeOutputReference(this, "link_type");
  public get linkType() {
    return this._linkType;
  }
  public putLinkType(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceLinkType) {
    this._linkType.internalValue = value;
  }
  public resetLinkType() {
    this._linkType.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get linkTypeInput() {
    return this._linkType.internalValue;
  }

  // metric - computed: true, optional: true, required: false
  private _metric?: number; 
  public get metric() {
    return this.getNumberAttribute('metric');
  }
  public set metric(value: number) {
    this._metric = value;
  }
  public resetMetric() {
    this._metric = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricInput() {
    return this._metric;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // neighbor - computed: true, optional: true, required: false
  private _neighbor = new DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighborList(this, "neighbor", false);
  public get neighbor() {
    return this._neighbor;
  }
  public putNeighbor(value: DataPanosVirtualRouterProtocolOspfAreaInterfaceNeighbor[] | cdktf.IResolvable) {
    this._neighbor.internalValue = value;
  }
  public resetNeighbor() {
    this._neighbor.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get neighborInput() {
    return this._neighbor.internalValue;
  }

  // passive - computed: true, optional: true, required: false
  private _passive?: boolean | cdktf.IResolvable; 
  public get passive() {
    return this.getBooleanAttribute('passive');
  }
  public set passive(value: boolean | cdktf.IResolvable) {
    this._passive = value;
  }
  public resetPassive() {
    this._passive = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passiveInput() {
    return this._passive;
  }

  // priority - computed: true, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // retransmit_interval - computed: true, optional: true, required: false
  private _retransmitInterval?: number; 
  public get retransmitInterval() {
    return this.getNumberAttribute('retransmit_interval');
  }
  public set retransmitInterval(value: number) {
    this._retransmitInterval = value;
  }
  public resetRetransmitInterval() {
    this._retransmitInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get retransmitIntervalInput() {
    return this._retransmitInterval;
  }

  // transit_delay - computed: true, optional: true, required: false
  private _transitDelay?: number; 
  public get transitDelay() {
    return this.getNumberAttribute('transit_delay');
  }
  public set transitDelay(value: number) {
    this._transitDelay = value;
  }
  public resetTransitDelay() {
    this._transitDelay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get transitDelayInput() {
    return this._transitDelay;
  }
}

export class DataPanosVirtualRouterProtocolOspfAreaInterfaceList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolOspfAreaInterface[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolOspfAreaInterfaceOutputReference {
    return new DataPanosVirtualRouterProtocolOspfAreaInterfaceOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaRangeAdvertise {
}

export function dataPanosVirtualRouterProtocolOspfAreaRangeAdvertiseToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaRangeAdvertise | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaRangeAdvertiseToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaRangeAdvertise | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfAreaRangeAdvertiseOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaRangeAdvertise | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaRangeAdvertise | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaRangeSuppress {
}

export function dataPanosVirtualRouterProtocolOspfAreaRangeSuppressToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaRangeSuppress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaRangeSuppressToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaRangeSuppress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfAreaRangeSuppressOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaRangeSuppress | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaRangeSuppress | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaRange {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#advertise DataPanosVirtualRouter#advertise}
  */
  readonly advertise?: DataPanosVirtualRouterProtocolOspfAreaRangeAdvertise;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#suppress DataPanosVirtualRouter#suppress}
  */
  readonly suppress?: DataPanosVirtualRouterProtocolOspfAreaRangeSuppress;
}

export function dataPanosVirtualRouterProtocolOspfAreaRangeToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaRange | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    advertise: dataPanosVirtualRouterProtocolOspfAreaRangeAdvertiseToTerraform(struct!.advertise),
    name: cdktf.stringToTerraform(struct!.name),
    suppress: dataPanosVirtualRouterProtocolOspfAreaRangeSuppressToTerraform(struct!.suppress),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaRangeToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaRange | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    advertise: {
      value: dataPanosVirtualRouterProtocolOspfAreaRangeAdvertiseToHclTerraform(struct!.advertise),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaRangeAdvertise",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    suppress: {
      value: dataPanosVirtualRouterProtocolOspfAreaRangeSuppressToHclTerraform(struct!.suppress),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaRangeSuppress",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaRangeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaRange | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._advertise?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertise = this._advertise?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._suppress?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.suppress = this._suppress?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaRange | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._advertise.internalValue = undefined;
      this._name = undefined;
      this._suppress.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._advertise.internalValue = value.advertise;
      this._name = value.name;
      this._suppress.internalValue = value.suppress;
    }
  }

  // advertise - computed: true, optional: true, required: false
  private _advertise = new DataPanosVirtualRouterProtocolOspfAreaRangeAdvertiseOutputReference(this, "advertise");
  public get advertise() {
    return this._advertise;
  }
  public putAdvertise(value: DataPanosVirtualRouterProtocolOspfAreaRangeAdvertise) {
    this._advertise.internalValue = value;
  }
  public resetAdvertise() {
    this._advertise.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertiseInput() {
    return this._advertise.internalValue;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // suppress - computed: true, optional: true, required: false
  private _suppress = new DataPanosVirtualRouterProtocolOspfAreaRangeSuppressOutputReference(this, "suppress");
  public get suppress() {
    return this._suppress;
  }
  public putSuppress(value: DataPanosVirtualRouterProtocolOspfAreaRangeSuppress) {
    this._suppress.internalValue = value;
  }
  public resetSuppress() {
    this._suppress.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get suppressInput() {
    return this._suppress.internalValue;
  }
}

export class DataPanosVirtualRouterProtocolOspfAreaRangeList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolOspfAreaRange[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolOspfAreaRangeOutputReference {
    return new DataPanosVirtualRouterProtocolOspfAreaRangeOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeNormal {
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeNormalToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNormal | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeNormalToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNormal | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeNormalOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeNormal | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeNormal | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertise {
  /**
  * metric to be used when advertise default route within this stub area
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#metric DataPanosVirtualRouter#metric}
  */
  readonly metric?: number;
  /**
  * metric type to be used when advertise default route
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#type DataPanosVirtualRouter#type}
  */
  readonly type?: string;
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertiseToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertise | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metric: cdktf.numberToTerraform(struct!.metric),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertiseToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertise | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metric: {
      value: cdktf.numberToHclTerraform(struct!.metric),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertiseOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertise | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metric !== undefined) {
      hasAnyValues = true;
      internalValueResult.metric = this._metric;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertise | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metric = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metric = value.metric;
      this._type = value.type;
    }
  }

  // metric - computed: true, optional: true, required: false
  private _metric?: number; 
  public get metric() {
    return this.getNumberAttribute('metric');
  }
  public set metric(value: number) {
    this._metric = value;
  }
  public resetMetric() {
    this._metric = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricInput() {
    return this._metric;
  }

  // type - computed: true, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisable {
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisableToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisable | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisableToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisable | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisableOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisable | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisable | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRoute {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#advertise DataPanosVirtualRouter#advertise}
  */
  readonly advertise?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertise;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#disable DataPanosVirtualRouter#disable}
  */
  readonly disable?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisable;
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRoute | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    advertise: dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertiseToTerraform(struct!.advertise),
    disable: dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisableToTerraform(struct!.disable),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRoute | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    advertise: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertiseToHclTerraform(struct!.advertise),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertise",
    },
    disable: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisableToHclTerraform(struct!.disable),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisable",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRoute | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._advertise?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertise = this._advertise?.internalValue;
    }
    if (this._disable?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.disable = this._disable?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRoute | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._advertise.internalValue = undefined;
      this._disable.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._advertise.internalValue = value.advertise;
      this._disable.internalValue = value.disable;
    }
  }

  // advertise - computed: true, optional: true, required: false
  private _advertise = new DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertiseOutputReference(this, "advertise");
  public get advertise() {
    return this._advertise;
  }
  public putAdvertise(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteAdvertise) {
    this._advertise.internalValue = value;
  }
  public resetAdvertise() {
    this._advertise.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertiseInput() {
    return this._advertise.internalValue;
  }

  // disable - computed: true, optional: true, required: false
  private _disable = new DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisableOutputReference(this, "disable");
  public get disable() {
    return this._disable;
  }
  public putDisable(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteDisable) {
    this._disable.internalValue = value;
  }
  public resetDisable() {
    this._disable.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableInput() {
    return this._disable.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertise {
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertiseToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertise | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertiseToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertise | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertiseOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertise | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertise | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppress {
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppressToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppressToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppressOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppress | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppress | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRange {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#advertise DataPanosVirtualRouter#advertise}
  */
  readonly advertise?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertise;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#suppress DataPanosVirtualRouter#suppress}
  */
  readonly suppress?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppress;
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRange | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    advertise: dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertiseToTerraform(struct!.advertise),
    name: cdktf.stringToTerraform(struct!.name),
    suppress: dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppressToTerraform(struct!.suppress),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRange | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    advertise: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertiseToHclTerraform(struct!.advertise),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertise",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    suppress: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppressToHclTerraform(struct!.suppress),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppress",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRange | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._advertise?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertise = this._advertise?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._suppress?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.suppress = this._suppress?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRange | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._advertise.internalValue = undefined;
      this._name = undefined;
      this._suppress.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._advertise.internalValue = value.advertise;
      this._name = value.name;
      this._suppress.internalValue = value.suppress;
    }
  }

  // advertise - computed: true, optional: true, required: false
  private _advertise = new DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertiseOutputReference(this, "advertise");
  public get advertise() {
    return this._advertise;
  }
  public putAdvertise(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeAdvertise) {
    this._advertise.internalValue = value;
  }
  public resetAdvertise() {
    this._advertise.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertiseInput() {
    return this._advertise.internalValue;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // suppress - computed: true, optional: true, required: false
  private _suppress = new DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppressOutputReference(this, "suppress");
  public get suppress() {
    return this._suppress;
  }
  public putSuppress(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeSuppress) {
    this._suppress.internalValue = value;
  }
  public resetSuppress() {
    this._suppress.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get suppressInput() {
    return this._suppress.internalValue;
  }
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRange[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeOutputReference {
    return new DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeNssa {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#accept_summary DataPanosVirtualRouter#accept_summary}
  */
  readonly acceptSummary?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#default_route DataPanosVirtualRouter#default_route}
  */
  readonly defaultRoute?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRoute;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#nssa_ext_range DataPanosVirtualRouter#nssa_ext_range}
  */
  readonly nssaExtRange?: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRange[] | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssa | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    accept_summary: cdktf.booleanToTerraform(struct!.acceptSummary),
    default_route: dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteToTerraform(struct!.defaultRoute),
    nssa_ext_range: cdktf.listMapper(dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeToTerraform, false)(struct!.nssaExtRange),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeNssaToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeNssa | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    accept_summary: {
      value: cdktf.booleanToHclTerraform(struct!.acceptSummary),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    default_route: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteToHclTerraform(struct!.defaultRoute),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRoute",
    },
    nssa_ext_range: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeToHclTerraform, false)(struct!.nssaExtRange),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeNssaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeNssa | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._acceptSummary !== undefined) {
      hasAnyValues = true;
      internalValueResult.acceptSummary = this._acceptSummary;
    }
    if (this._defaultRoute?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultRoute = this._defaultRoute?.internalValue;
    }
    if (this._nssaExtRange?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nssaExtRange = this._nssaExtRange?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssa | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._acceptSummary = undefined;
      this._defaultRoute.internalValue = undefined;
      this._nssaExtRange.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._acceptSummary = value.acceptSummary;
      this._defaultRoute.internalValue = value.defaultRoute;
      this._nssaExtRange.internalValue = value.nssaExtRange;
    }
  }

  // accept_summary - computed: true, optional: true, required: false
  private _acceptSummary?: boolean | cdktf.IResolvable; 
  public get acceptSummary() {
    return this.getBooleanAttribute('accept_summary');
  }
  public set acceptSummary(value: boolean | cdktf.IResolvable) {
    this._acceptSummary = value;
  }
  public resetAcceptSummary() {
    this._acceptSummary = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get acceptSummaryInput() {
    return this._acceptSummary;
  }

  // default_route - computed: true, optional: true, required: false
  private _defaultRoute = new DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRouteOutputReference(this, "default_route");
  public get defaultRoute() {
    return this._defaultRoute;
  }
  public putDefaultRoute(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaDefaultRoute) {
    this._defaultRoute.internalValue = value;
  }
  public resetDefaultRoute() {
    this._defaultRoute.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultRouteInput() {
    return this._defaultRoute.internalValue;
  }

  // nssa_ext_range - computed: true, optional: true, required: false
  private _nssaExtRange = new DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRangeList(this, "nssa_ext_range", false);
  public get nssaExtRange() {
    return this._nssaExtRange;
  }
  public putNssaExtRange(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssaNssaExtRange[] | cdktf.IResolvable) {
    this._nssaExtRange.internalValue = value;
  }
  public resetNssaExtRange() {
    this._nssaExtRange.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nssaExtRangeInput() {
    return this._nssaExtRange.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertise {
  /**
  * metric to be used when advertise default route within this stub area
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#metric DataPanosVirtualRouter#metric}
  */
  readonly metric?: number;
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertiseToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertise | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metric: cdktf.numberToTerraform(struct!.metric),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertiseToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertise | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metric: {
      value: cdktf.numberToHclTerraform(struct!.metric),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertiseOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertise | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metric !== undefined) {
      hasAnyValues = true;
      internalValueResult.metric = this._metric;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertise | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metric = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metric = value.metric;
    }
  }

  // metric - computed: true, optional: true, required: false
  private _metric?: number; 
  public get metric() {
    return this.getNumberAttribute('metric');
  }
  public set metric(value: number) {
    this._metric = value;
  }
  public resetMetric() {
    this._metric = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricInput() {
    return this._metric;
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisable {
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisableToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisable | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisableToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisable | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisableOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisable | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisable | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRoute {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#advertise DataPanosVirtualRouter#advertise}
  */
  readonly advertise?: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertise;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#disable DataPanosVirtualRouter#disable}
  */
  readonly disable?: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisable;
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRoute | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    advertise: dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertiseToTerraform(struct!.advertise),
    disable: dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisableToTerraform(struct!.disable),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRoute | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    advertise: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertiseToHclTerraform(struct!.advertise),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertise",
    },
    disable: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisableToHclTerraform(struct!.disable),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisable",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRoute | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._advertise?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertise = this._advertise?.internalValue;
    }
    if (this._disable?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.disable = this._disable?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRoute | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._advertise.internalValue = undefined;
      this._disable.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._advertise.internalValue = value.advertise;
      this._disable.internalValue = value.disable;
    }
  }

  // advertise - computed: true, optional: true, required: false
  private _advertise = new DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertiseOutputReference(this, "advertise");
  public get advertise() {
    return this._advertise;
  }
  public putAdvertise(value: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteAdvertise) {
    this._advertise.internalValue = value;
  }
  public resetAdvertise() {
    this._advertise.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertiseInput() {
    return this._advertise.internalValue;
  }

  // disable - computed: true, optional: true, required: false
  private _disable = new DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisableOutputReference(this, "disable");
  public get disable() {
    return this._disable;
  }
  public putDisable(value: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteDisable) {
    this._disable.internalValue = value;
  }
  public resetDisable() {
    this._disable.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableInput() {
    return this._disable.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaTypeStub {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#accept_summary DataPanosVirtualRouter#accept_summary}
  */
  readonly acceptSummary?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#default_route DataPanosVirtualRouter#default_route}
  */
  readonly defaultRoute?: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRoute;
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeStubToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeStub | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    accept_summary: cdktf.booleanToTerraform(struct!.acceptSummary),
    default_route: dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteToTerraform(struct!.defaultRoute),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeStubToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaTypeStub | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    accept_summary: {
      value: cdktf.booleanToHclTerraform(struct!.acceptSummary),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    default_route: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteToHclTerraform(struct!.defaultRoute),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRoute",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeStubOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaTypeStub | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._acceptSummary !== undefined) {
      hasAnyValues = true;
      internalValueResult.acceptSummary = this._acceptSummary;
    }
    if (this._defaultRoute?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultRoute = this._defaultRoute?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaTypeStub | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._acceptSummary = undefined;
      this._defaultRoute.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._acceptSummary = value.acceptSummary;
      this._defaultRoute.internalValue = value.defaultRoute;
    }
  }

  // accept_summary - computed: true, optional: true, required: false
  private _acceptSummary?: boolean | cdktf.IResolvable; 
  public get acceptSummary() {
    return this.getBooleanAttribute('accept_summary');
  }
  public set acceptSummary(value: boolean | cdktf.IResolvable) {
    this._acceptSummary = value;
  }
  public resetAcceptSummary() {
    this._acceptSummary = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get acceptSummaryInput() {
    return this._acceptSummary;
  }

  // default_route - computed: true, optional: true, required: false
  private _defaultRoute = new DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRouteOutputReference(this, "default_route");
  public get defaultRoute() {
    return this._defaultRoute;
  }
  public putDefaultRoute(value: DataPanosVirtualRouterProtocolOspfAreaTypeStubDefaultRoute) {
    this._defaultRoute.internalValue = value;
  }
  public resetDefaultRoute() {
    this._defaultRoute.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultRouteInput() {
    return this._defaultRoute.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaType {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#normal DataPanosVirtualRouter#normal}
  */
  readonly normal?: DataPanosVirtualRouterProtocolOspfAreaTypeNormal;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#nssa DataPanosVirtualRouter#nssa}
  */
  readonly nssa?: DataPanosVirtualRouterProtocolOspfAreaTypeNssa;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#stub DataPanosVirtualRouter#stub}
  */
  readonly stub?: DataPanosVirtualRouterProtocolOspfAreaTypeStub;
}

export function dataPanosVirtualRouterProtocolOspfAreaTypeToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaType | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    normal: dataPanosVirtualRouterProtocolOspfAreaTypeNormalToTerraform(struct!.normal),
    nssa: dataPanosVirtualRouterProtocolOspfAreaTypeNssaToTerraform(struct!.nssa),
    stub: dataPanosVirtualRouterProtocolOspfAreaTypeStubToTerraform(struct!.stub),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaTypeToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaType | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    normal: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeNormalToHclTerraform(struct!.normal),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeNormal",
    },
    nssa: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeNssaToHclTerraform(struct!.nssa),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeNssa",
    },
    stub: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeStubToHclTerraform(struct!.stub),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaTypeStub",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaTypeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaType | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._normal?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normal = this._normal?.internalValue;
    }
    if (this._nssa?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nssa = this._nssa?.internalValue;
    }
    if (this._stub?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.stub = this._stub?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaType | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._normal.internalValue = undefined;
      this._nssa.internalValue = undefined;
      this._stub.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._normal.internalValue = value.normal;
      this._nssa.internalValue = value.nssa;
      this._stub.internalValue = value.stub;
    }
  }

  // normal - computed: true, optional: true, required: false
  private _normal = new DataPanosVirtualRouterProtocolOspfAreaTypeNormalOutputReference(this, "normal");
  public get normal() {
    return this._normal;
  }
  public putNormal(value: DataPanosVirtualRouterProtocolOspfAreaTypeNormal) {
    this._normal.internalValue = value;
  }
  public resetNormal() {
    this._normal.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalInput() {
    return this._normal.internalValue;
  }

  // nssa - computed: true, optional: true, required: false
  private _nssa = new DataPanosVirtualRouterProtocolOspfAreaTypeNssaOutputReference(this, "nssa");
  public get nssa() {
    return this._nssa;
  }
  public putNssa(value: DataPanosVirtualRouterProtocolOspfAreaTypeNssa) {
    this._nssa.internalValue = value;
  }
  public resetNssa() {
    this._nssa.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nssaInput() {
    return this._nssa.internalValue;
  }

  // stub - computed: true, optional: true, required: false
  private _stub = new DataPanosVirtualRouterProtocolOspfAreaTypeStubOutputReference(this, "stub");
  public get stub() {
    return this._stub;
  }
  public putStub(value: DataPanosVirtualRouterProtocolOspfAreaTypeStub) {
    this._stub.internalValue = value;
  }
  public resetStub() {
    this._stub.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stubInput() {
    return this._stub.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfd {
  /**
  * BFD profile
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#profile DataPanosVirtualRouter#profile}
  */
  readonly profile?: string;
}

export function dataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfdToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    profile: cdktf.stringToTerraform(struct!.profile),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfdToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    profile: {
      value: cdktf.stringToHclTerraform(struct!.profile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._profile !== undefined) {
      hasAnyValues = true;
      internalValueResult.profile = this._profile;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._profile = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._profile = value.profile;
    }
  }

  // profile - computed: true, optional: true, required: false
  private _profile?: string; 
  public get profile() {
    return this.getStringAttribute('profile');
  }
  public set profile(value: string) {
    this._profile = value;
  }
  public resetProfile() {
    this._profile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profileInput() {
    return this._profile;
  }
}
export interface DataPanosVirtualRouterProtocolOspfAreaVirtualLink {
  /**
  * Authentication options
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#authentication DataPanosVirtualRouter#authentication}
  */
  readonly authentication?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#bfd DataPanosVirtualRouter#bfd}
  */
  readonly bfd?: DataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfd;
  /**
  * number of lost hello packets to declare router down
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#dead_counts DataPanosVirtualRouter#dead_counts}
  */
  readonly deadCounts?: number;
  /**
  * Enable this virtual link
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Interval (in seconds) to send Hello packets
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#hello_interval DataPanosVirtualRouter#hello_interval}
  */
  readonly helloInterval?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * neighbor router id for virtual link
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#neighbor_id DataPanosVirtualRouter#neighbor_id}
  */
  readonly neighborId?: string;
  /**
  * Interval (in seconds) to retransmit LSAs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#retransmit_interval DataPanosVirtualRouter#retransmit_interval}
  */
  readonly retransmitInterval?: number;
  /**
  * id of transit area, cannot be backbone, stub or NSSA
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#transit_area_id DataPanosVirtualRouter#transit_area_id}
  */
  readonly transitAreaId?: string;
  /**
  * Estimated delay (in seconds) to transmit LSAs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#transit_delay DataPanosVirtualRouter#transit_delay}
  */
  readonly transitDelay?: number;
}

export function dataPanosVirtualRouterProtocolOspfAreaVirtualLinkToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaVirtualLink | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    authentication: cdktf.stringToTerraform(struct!.authentication),
    bfd: dataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfdToTerraform(struct!.bfd),
    dead_counts: cdktf.numberToTerraform(struct!.deadCounts),
    enable: cdktf.booleanToTerraform(struct!.enable),
    hello_interval: cdktf.numberToTerraform(struct!.helloInterval),
    name: cdktf.stringToTerraform(struct!.name),
    neighbor_id: cdktf.stringToTerraform(struct!.neighborId),
    retransmit_interval: cdktf.numberToTerraform(struct!.retransmitInterval),
    transit_area_id: cdktf.stringToTerraform(struct!.transitAreaId),
    transit_delay: cdktf.numberToTerraform(struct!.transitDelay),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaVirtualLinkToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAreaVirtualLink | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    authentication: {
      value: cdktf.stringToHclTerraform(struct!.authentication),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    bfd: {
      value: dataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfdToHclTerraform(struct!.bfd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfd",
    },
    dead_counts: {
      value: cdktf.numberToHclTerraform(struct!.deadCounts),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    hello_interval: {
      value: cdktf.numberToHclTerraform(struct!.helloInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    neighbor_id: {
      value: cdktf.stringToHclTerraform(struct!.neighborId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    retransmit_interval: {
      value: cdktf.numberToHclTerraform(struct!.retransmitInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    transit_area_id: {
      value: cdktf.stringToHclTerraform(struct!.transitAreaId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    transit_delay: {
      value: cdktf.numberToHclTerraform(struct!.transitDelay),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaVirtualLinkOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAreaVirtualLink | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authentication !== undefined) {
      hasAnyValues = true;
      internalValueResult.authentication = this._authentication;
    }
    if (this._bfd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bfd = this._bfd?.internalValue;
    }
    if (this._deadCounts !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadCounts = this._deadCounts;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._helloInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.helloInterval = this._helloInterval;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._neighborId !== undefined) {
      hasAnyValues = true;
      internalValueResult.neighborId = this._neighborId;
    }
    if (this._retransmitInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.retransmitInterval = this._retransmitInterval;
    }
    if (this._transitAreaId !== undefined) {
      hasAnyValues = true;
      internalValueResult.transitAreaId = this._transitAreaId;
    }
    if (this._transitDelay !== undefined) {
      hasAnyValues = true;
      internalValueResult.transitDelay = this._transitDelay;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAreaVirtualLink | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authentication = undefined;
      this._bfd.internalValue = undefined;
      this._deadCounts = undefined;
      this._enable = undefined;
      this._helloInterval = undefined;
      this._name = undefined;
      this._neighborId = undefined;
      this._retransmitInterval = undefined;
      this._transitAreaId = undefined;
      this._transitDelay = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authentication = value.authentication;
      this._bfd.internalValue = value.bfd;
      this._deadCounts = value.deadCounts;
      this._enable = value.enable;
      this._helloInterval = value.helloInterval;
      this._name = value.name;
      this._neighborId = value.neighborId;
      this._retransmitInterval = value.retransmitInterval;
      this._transitAreaId = value.transitAreaId;
      this._transitDelay = value.transitDelay;
    }
  }

  // authentication - computed: true, optional: true, required: false
  private _authentication?: string; 
  public get authentication() {
    return this.getStringAttribute('authentication');
  }
  public set authentication(value: string) {
    this._authentication = value;
  }
  public resetAuthentication() {
    this._authentication = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticationInput() {
    return this._authentication;
  }

  // bfd - computed: true, optional: true, required: false
  private _bfd = new DataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfdOutputReference(this, "bfd");
  public get bfd() {
    return this._bfd;
  }
  public putBfd(value: DataPanosVirtualRouterProtocolOspfAreaVirtualLinkBfd) {
    this._bfd.internalValue = value;
  }
  public resetBfd() {
    this._bfd.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bfdInput() {
    return this._bfd.internalValue;
  }

  // dead_counts - computed: true, optional: true, required: false
  private _deadCounts?: number; 
  public get deadCounts() {
    return this.getNumberAttribute('dead_counts');
  }
  public set deadCounts(value: number) {
    this._deadCounts = value;
  }
  public resetDeadCounts() {
    this._deadCounts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadCountsInput() {
    return this._deadCounts;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // hello_interval - computed: true, optional: true, required: false
  private _helloInterval?: number; 
  public get helloInterval() {
    return this.getNumberAttribute('hello_interval');
  }
  public set helloInterval(value: number) {
    this._helloInterval = value;
  }
  public resetHelloInterval() {
    this._helloInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get helloIntervalInput() {
    return this._helloInterval;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // neighbor_id - computed: true, optional: true, required: false
  private _neighborId?: string; 
  public get neighborId() {
    return this.getStringAttribute('neighbor_id');
  }
  public set neighborId(value: string) {
    this._neighborId = value;
  }
  public resetNeighborId() {
    this._neighborId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get neighborIdInput() {
    return this._neighborId;
  }

  // retransmit_interval - computed: true, optional: true, required: false
  private _retransmitInterval?: number; 
  public get retransmitInterval() {
    return this.getNumberAttribute('retransmit_interval');
  }
  public set retransmitInterval(value: number) {
    this._retransmitInterval = value;
  }
  public resetRetransmitInterval() {
    this._retransmitInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get retransmitIntervalInput() {
    return this._retransmitInterval;
  }

  // transit_area_id - computed: true, optional: true, required: false
  private _transitAreaId?: string; 
  public get transitAreaId() {
    return this.getStringAttribute('transit_area_id');
  }
  public set transitAreaId(value: string) {
    this._transitAreaId = value;
  }
  public resetTransitAreaId() {
    this._transitAreaId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get transitAreaIdInput() {
    return this._transitAreaId;
  }

  // transit_delay - computed: true, optional: true, required: false
  private _transitDelay?: number; 
  public get transitDelay() {
    return this.getNumberAttribute('transit_delay');
  }
  public set transitDelay(value: number) {
    this._transitDelay = value;
  }
  public resetTransitDelay() {
    this._transitDelay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get transitDelayInput() {
    return this._transitDelay;
  }
}

export class DataPanosVirtualRouterProtocolOspfAreaVirtualLinkList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolOspfAreaVirtualLink[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolOspfAreaVirtualLinkOutputReference {
    return new DataPanosVirtualRouterProtocolOspfAreaVirtualLinkOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolOspfArea {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#interface DataPanosVirtualRouter#interface}
  */
  readonly interface?: DataPanosVirtualRouterProtocolOspfAreaInterface[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#range DataPanosVirtualRouter#range}
  */
  readonly range?: DataPanosVirtualRouterProtocolOspfAreaRange[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#type DataPanosVirtualRouter#type}
  */
  readonly type?: DataPanosVirtualRouterProtocolOspfAreaType;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#virtual_link DataPanosVirtualRouter#virtual_link}
  */
  readonly virtualLink?: DataPanosVirtualRouterProtocolOspfAreaVirtualLink[] | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolOspfAreaToTerraform(struct?: DataPanosVirtualRouterProtocolOspfArea | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    interface: cdktf.listMapper(dataPanosVirtualRouterProtocolOspfAreaInterfaceToTerraform, false)(struct!.interface),
    name: cdktf.stringToTerraform(struct!.name),
    range: cdktf.listMapper(dataPanosVirtualRouterProtocolOspfAreaRangeToTerraform, false)(struct!.range),
    type: dataPanosVirtualRouterProtocolOspfAreaTypeToTerraform(struct!.type),
    virtual_link: cdktf.listMapper(dataPanosVirtualRouterProtocolOspfAreaVirtualLinkToTerraform, false)(struct!.virtualLink),
  }
}


export function dataPanosVirtualRouterProtocolOspfAreaToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfArea | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    interface: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolOspfAreaInterfaceToHclTerraform, false)(struct!.interface),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaInterfaceList",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    range: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolOspfAreaRangeToHclTerraform, false)(struct!.range),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaRangeList",
    },
    type: {
      value: dataPanosVirtualRouterProtocolOspfAreaTypeToHclTerraform(struct!.type),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaType",
    },
    virtual_link: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolOspfAreaVirtualLinkToHclTerraform, false)(struct!.virtualLink),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaVirtualLinkList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAreaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfArea | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._interface?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.interface = this._interface?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._range?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.range = this._range?.internalValue;
    }
    if (this._type?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type?.internalValue;
    }
    if (this._virtualLink?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.virtualLink = this._virtualLink?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfArea | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._interface.internalValue = undefined;
      this._name = undefined;
      this._range.internalValue = undefined;
      this._type.internalValue = undefined;
      this._virtualLink.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._interface.internalValue = value.interface;
      this._name = value.name;
      this._range.internalValue = value.range;
      this._type.internalValue = value.type;
      this._virtualLink.internalValue = value.virtualLink;
    }
  }

  // interface - computed: true, optional: true, required: false
  private _interface = new DataPanosVirtualRouterProtocolOspfAreaInterfaceList(this, "interface", false);
  public get interface() {
    return this._interface;
  }
  public putInterface(value: DataPanosVirtualRouterProtocolOspfAreaInterface[] | cdktf.IResolvable) {
    this._interface.internalValue = value;
  }
  public resetInterface() {
    this._interface.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get interfaceInput() {
    return this._interface.internalValue;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // range - computed: true, optional: true, required: false
  private _range = new DataPanosVirtualRouterProtocolOspfAreaRangeList(this, "range", false);
  public get range() {
    return this._range;
  }
  public putRange(value: DataPanosVirtualRouterProtocolOspfAreaRange[] | cdktf.IResolvable) {
    this._range.internalValue = value;
  }
  public resetRange() {
    this._range.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rangeInput() {
    return this._range.internalValue;
  }

  // type - computed: true, optional: true, required: false
  private _type = new DataPanosVirtualRouterProtocolOspfAreaTypeOutputReference(this, "type");
  public get type() {
    return this._type;
  }
  public putType(value: DataPanosVirtualRouterProtocolOspfAreaType) {
    this._type.internalValue = value;
  }
  public resetType() {
    this._type.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type.internalValue;
  }

  // virtual_link - computed: true, optional: true, required: false
  private _virtualLink = new DataPanosVirtualRouterProtocolOspfAreaVirtualLinkList(this, "virtual_link", false);
  public get virtualLink() {
    return this._virtualLink;
  }
  public putVirtualLink(value: DataPanosVirtualRouterProtocolOspfAreaVirtualLink[] | cdktf.IResolvable) {
    this._virtualLink.internalValue = value;
  }
  public resetVirtualLink() {
    this._virtualLink.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get virtualLinkInput() {
    return this._virtualLink.internalValue;
  }
}

export class DataPanosVirtualRouterProtocolOspfAreaList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolOspfArea[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolOspfAreaOutputReference {
    return new DataPanosVirtualRouterProtocolOspfAreaOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolOspfAuthProfileMd5 {
  /**
  * key for the authentication
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#key DataPanosVirtualRouter#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * use this key when sending packet
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#preferred DataPanosVirtualRouter#preferred}
  */
  readonly preferred?: boolean | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolOspfAuthProfileMd5ToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAuthProfileMd5 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
    preferred: cdktf.booleanToTerraform(struct!.preferred),
  }
}


export function dataPanosVirtualRouterProtocolOspfAuthProfileMd5ToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAuthProfileMd5 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    preferred: {
      value: cdktf.booleanToHclTerraform(struct!.preferred),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAuthProfileMd5OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAuthProfileMd5 | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._preferred !== undefined) {
      hasAnyValues = true;
      internalValueResult.preferred = this._preferred;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAuthProfileMd5 | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
      this._preferred = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
      this._preferred = value.preferred;
    }
  }

  // key - computed: true, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // preferred - computed: true, optional: true, required: false
  private _preferred?: boolean | cdktf.IResolvable; 
  public get preferred() {
    return this.getBooleanAttribute('preferred');
  }
  public set preferred(value: boolean | cdktf.IResolvable) {
    this._preferred = value;
  }
  public resetPreferred() {
    this._preferred = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferredInput() {
    return this._preferred;
  }
}

export class DataPanosVirtualRouterProtocolOspfAuthProfileMd5List extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolOspfAuthProfileMd5[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolOspfAuthProfileMd5OutputReference {
    return new DataPanosVirtualRouterProtocolOspfAuthProfileMd5OutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolOspfAuthProfile {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#md5 DataPanosVirtualRouter#md5}
  */
  readonly md5?: DataPanosVirtualRouterProtocolOspfAuthProfileMd5[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * Simple password authentication
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#password DataPanosVirtualRouter#password}
  */
  readonly password?: string;
}

export function dataPanosVirtualRouterProtocolOspfAuthProfileToTerraform(struct?: DataPanosVirtualRouterProtocolOspfAuthProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    md5: cdktf.listMapper(dataPanosVirtualRouterProtocolOspfAuthProfileMd5ToTerraform, false)(struct!.md5),
    name: cdktf.stringToTerraform(struct!.name),
    password: cdktf.stringToTerraform(struct!.password),
  }
}


export function dataPanosVirtualRouterProtocolOspfAuthProfileToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfAuthProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    md5: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolOspfAuthProfileMd5ToHclTerraform, false)(struct!.md5),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAuthProfileMd5List",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfAuthProfileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfAuthProfile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._md5?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.md5 = this._md5?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfAuthProfile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._md5.internalValue = undefined;
      this._name = undefined;
      this._password = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._md5.internalValue = value.md5;
      this._name = value.name;
      this._password = value.password;
    }
  }

  // md5 - computed: true, optional: true, required: false
  private _md5 = new DataPanosVirtualRouterProtocolOspfAuthProfileMd5List(this, "md5", false);
  public get md5() {
    return this._md5;
  }
  public putMd5(value: DataPanosVirtualRouterProtocolOspfAuthProfileMd5[] | cdktf.IResolvable) {
    this._md5.internalValue = value;
  }
  public resetMd5() {
    this._md5.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get md5Input() {
    return this._md5.internalValue;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // password - computed: true, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }
}

export class DataPanosVirtualRouterProtocolOspfAuthProfileList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolOspfAuthProfile[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolOspfAuthProfileOutputReference {
    return new DataPanosVirtualRouterProtocolOspfAuthProfileOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolOspfExportRules {
  /**
  * metric value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#metric DataPanosVirtualRouter#metric}
  */
  readonly metric?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#name DataPanosVirtualRouter#name}
  */
  readonly name: string;
  /**
  * path type to be used for imported external routes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#new_path_type DataPanosVirtualRouter#new_path_type}
  */
  readonly newPathType?: string;
  /**
  * new tag value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#new_tag DataPanosVirtualRouter#new_tag}
  */
  readonly newTag?: string;
}

export function dataPanosVirtualRouterProtocolOspfExportRulesToTerraform(struct?: DataPanosVirtualRouterProtocolOspfExportRules | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metric: cdktf.numberToTerraform(struct!.metric),
    name: cdktf.stringToTerraform(struct!.name),
    new_path_type: cdktf.stringToTerraform(struct!.newPathType),
    new_tag: cdktf.stringToTerraform(struct!.newTag),
  }
}


export function dataPanosVirtualRouterProtocolOspfExportRulesToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfExportRules | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metric: {
      value: cdktf.numberToHclTerraform(struct!.metric),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    new_path_type: {
      value: cdktf.stringToHclTerraform(struct!.newPathType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    new_tag: {
      value: cdktf.stringToHclTerraform(struct!.newTag),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfExportRulesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfExportRules | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metric !== undefined) {
      hasAnyValues = true;
      internalValueResult.metric = this._metric;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._newPathType !== undefined) {
      hasAnyValues = true;
      internalValueResult.newPathType = this._newPathType;
    }
    if (this._newTag !== undefined) {
      hasAnyValues = true;
      internalValueResult.newTag = this._newTag;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfExportRules | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metric = undefined;
      this._name = undefined;
      this._newPathType = undefined;
      this._newTag = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metric = value.metric;
      this._name = value.name;
      this._newPathType = value.newPathType;
      this._newTag = value.newTag;
    }
  }

  // metric - computed: true, optional: true, required: false
  private _metric?: number; 
  public get metric() {
    return this.getNumberAttribute('metric');
  }
  public set metric(value: number) {
    this._metric = value;
  }
  public resetMetric() {
    this._metric = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricInput() {
    return this._metric;
  }

  // name - computed: true, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // new_path_type - computed: true, optional: true, required: false
  private _newPathType?: string; 
  public get newPathType() {
    return this.getStringAttribute('new_path_type');
  }
  public set newPathType(value: string) {
    this._newPathType = value;
  }
  public resetNewPathType() {
    this._newPathType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get newPathTypeInput() {
    return this._newPathType;
  }

  // new_tag - computed: true, optional: true, required: false
  private _newTag?: string; 
  public get newTag() {
    return this.getStringAttribute('new_tag');
  }
  public set newTag(value: string) {
    this._newTag = value;
  }
  public resetNewTag() {
    this._newTag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get newTagInput() {
    return this._newTag;
  }
}

export class DataPanosVirtualRouterProtocolOspfExportRulesList extends cdktf.ComplexList {
  public internalValue? : DataPanosVirtualRouterProtocolOspfExportRules[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataPanosVirtualRouterProtocolOspfExportRulesOutputReference {
    return new DataPanosVirtualRouterProtocolOspfExportRulesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataPanosVirtualRouterProtocolOspfGlobalBfd {
  /**
  * BFD profile
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#profile DataPanosVirtualRouter#profile}
  */
  readonly profile?: string;
}

export function dataPanosVirtualRouterProtocolOspfGlobalBfdToTerraform(struct?: DataPanosVirtualRouterProtocolOspfGlobalBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    profile: cdktf.stringToTerraform(struct!.profile),
  }
}


export function dataPanosVirtualRouterProtocolOspfGlobalBfdToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfGlobalBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    profile: {
      value: cdktf.stringToHclTerraform(struct!.profile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfGlobalBfdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfGlobalBfd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._profile !== undefined) {
      hasAnyValues = true;
      internalValueResult.profile = this._profile;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfGlobalBfd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._profile = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._profile = value.profile;
    }
  }

  // profile - computed: true, optional: true, required: false
  private _profile?: string; 
  public get profile() {
    return this.getStringAttribute('profile');
  }
  public set profile(value: string) {
    this._profile = value;
  }
  public resetProfile() {
    this._profile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profileInput() {
    return this._profile;
  }
}
export interface DataPanosVirtualRouterProtocolOspfGracefulRestart {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * maximum local restarting time (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#grace_period DataPanosVirtualRouter#grace_period}
  */
  readonly gracePeriod?: number;
  /**
  * enable/disable helping neighboring routers to graceful restart
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#helper_enable DataPanosVirtualRouter#helper_enable}
  */
  readonly helperEnable?: boolean | cdktf.IResolvable;
  /**
  * maximum of neighbor restart time accepted (in seconds)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#max_neighbor_restart_time DataPanosVirtualRouter#max_neighbor_restart_time}
  */
  readonly maxNeighborRestartTime?: number;
  /**
  * enable/disable strict LSA checking. Abort GR if lsa change is detected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#strict_l_s_a_checking DataPanosVirtualRouter#strict_l_s_a_checking}
  */
  readonly strictLSAChecking?: boolean | cdktf.IResolvable;
}

export function dataPanosVirtualRouterProtocolOspfGracefulRestartToTerraform(struct?: DataPanosVirtualRouterProtocolOspfGracefulRestart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enable: cdktf.booleanToTerraform(struct!.enable),
    grace_period: cdktf.numberToTerraform(struct!.gracePeriod),
    helper_enable: cdktf.booleanToTerraform(struct!.helperEnable),
    max_neighbor_restart_time: cdktf.numberToTerraform(struct!.maxNeighborRestartTime),
    strict_l_s_a_checking: cdktf.booleanToTerraform(struct!.strictLSAChecking),
  }
}


export function dataPanosVirtualRouterProtocolOspfGracefulRestartToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfGracefulRestart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    grace_period: {
      value: cdktf.numberToHclTerraform(struct!.gracePeriod),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    helper_enable: {
      value: cdktf.booleanToHclTerraform(struct!.helperEnable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    max_neighbor_restart_time: {
      value: cdktf.numberToHclTerraform(struct!.maxNeighborRestartTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    strict_l_s_a_checking: {
      value: cdktf.booleanToHclTerraform(struct!.strictLSAChecking),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfGracefulRestartOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfGracefulRestart | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._gracePeriod !== undefined) {
      hasAnyValues = true;
      internalValueResult.gracePeriod = this._gracePeriod;
    }
    if (this._helperEnable !== undefined) {
      hasAnyValues = true;
      internalValueResult.helperEnable = this._helperEnable;
    }
    if (this._maxNeighborRestartTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxNeighborRestartTime = this._maxNeighborRestartTime;
    }
    if (this._strictLSAChecking !== undefined) {
      hasAnyValues = true;
      internalValueResult.strictLSAChecking = this._strictLSAChecking;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfGracefulRestart | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enable = undefined;
      this._gracePeriod = undefined;
      this._helperEnable = undefined;
      this._maxNeighborRestartTime = undefined;
      this._strictLSAChecking = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enable = value.enable;
      this._gracePeriod = value.gracePeriod;
      this._helperEnable = value.helperEnable;
      this._maxNeighborRestartTime = value.maxNeighborRestartTime;
      this._strictLSAChecking = value.strictLSAChecking;
    }
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // grace_period - computed: true, optional: true, required: false
  private _gracePeriod?: number; 
  public get gracePeriod() {
    return this.getNumberAttribute('grace_period');
  }
  public set gracePeriod(value: number) {
    this._gracePeriod = value;
  }
  public resetGracePeriod() {
    this._gracePeriod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gracePeriodInput() {
    return this._gracePeriod;
  }

  // helper_enable - computed: true, optional: true, required: false
  private _helperEnable?: boolean | cdktf.IResolvable; 
  public get helperEnable() {
    return this.getBooleanAttribute('helper_enable');
  }
  public set helperEnable(value: boolean | cdktf.IResolvable) {
    this._helperEnable = value;
  }
  public resetHelperEnable() {
    this._helperEnable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get helperEnableInput() {
    return this._helperEnable;
  }

  // max_neighbor_restart_time - computed: true, optional: true, required: false
  private _maxNeighborRestartTime?: number; 
  public get maxNeighborRestartTime() {
    return this.getNumberAttribute('max_neighbor_restart_time');
  }
  public set maxNeighborRestartTime(value: number) {
    this._maxNeighborRestartTime = value;
  }
  public resetMaxNeighborRestartTime() {
    this._maxNeighborRestartTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxNeighborRestartTimeInput() {
    return this._maxNeighborRestartTime;
  }

  // strict_l_s_a_checking - computed: true, optional: true, required: false
  private _strictLSAChecking?: boolean | cdktf.IResolvable; 
  public get strictLSAChecking() {
    return this.getBooleanAttribute('strict_l_s_a_checking');
  }
  public set strictLSAChecking(value: boolean | cdktf.IResolvable) {
    this._strictLSAChecking = value;
  }
  public resetStrictLSAChecking() {
    this._strictLSAChecking = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get strictLSACheckingInput() {
    return this._strictLSAChecking;
  }
}
export interface DataPanosVirtualRouterProtocolOspfTimers {
  /**
  * The minimum time in seconds between distinct originations of any particular LSA
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#lsa_interval DataPanosVirtualRouter#lsa_interval}
  */
  readonly lsaInterval?: number;
  /**
  * Delay in seconds before running the SPF algorithm
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#spf_calculation_delay DataPanosVirtualRouter#spf_calculation_delay}
  */
  readonly spfCalculationDelay?: number;
}

export function dataPanosVirtualRouterProtocolOspfTimersToTerraform(struct?: DataPanosVirtualRouterProtocolOspfTimers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    lsa_interval: cdktf.numberToTerraform(struct!.lsaInterval),
    spf_calculation_delay: cdktf.numberToTerraform(struct!.spfCalculationDelay),
  }
}


export function dataPanosVirtualRouterProtocolOspfTimersToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfTimers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    lsa_interval: {
      value: cdktf.numberToHclTerraform(struct!.lsaInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    spf_calculation_delay: {
      value: cdktf.numberToHclTerraform(struct!.spfCalculationDelay),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfTimersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfTimers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._lsaInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.lsaInterval = this._lsaInterval;
    }
    if (this._spfCalculationDelay !== undefined) {
      hasAnyValues = true;
      internalValueResult.spfCalculationDelay = this._spfCalculationDelay;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfTimers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._lsaInterval = undefined;
      this._spfCalculationDelay = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._lsaInterval = value.lsaInterval;
      this._spfCalculationDelay = value.spfCalculationDelay;
    }
  }

  // lsa_interval - computed: true, optional: true, required: false
  private _lsaInterval?: number; 
  public get lsaInterval() {
    return this.getNumberAttribute('lsa_interval');
  }
  public set lsaInterval(value: number) {
    this._lsaInterval = value;
  }
  public resetLsaInterval() {
    this._lsaInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lsaIntervalInput() {
    return this._lsaInterval;
  }

  // spf_calculation_delay - computed: true, optional: true, required: false
  private _spfCalculationDelay?: number; 
  public get spfCalculationDelay() {
    return this.getNumberAttribute('spf_calculation_delay');
  }
  public set spfCalculationDelay(value: number) {
    this._spfCalculationDelay = value;
  }
  public resetSpfCalculationDelay() {
    this._spfCalculationDelay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get spfCalculationDelayInput() {
    return this._spfCalculationDelay;
  }
}
export interface DataPanosVirtualRouterProtocolOspf {
  /**
  * allow redistribute default route to OSPF
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#allow_redist_default_route DataPanosVirtualRouter#allow_redist_default_route}
  */
  readonly allowRedistDefaultRoute?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#area DataPanosVirtualRouter#area}
  */
  readonly area?: DataPanosVirtualRouterProtocolOspfArea[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#auth_profile DataPanosVirtualRouter#auth_profile}
  */
  readonly authProfile?: DataPanosVirtualRouterProtocolOspfAuthProfile[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#enable DataPanosVirtualRouter#enable}
  */
  readonly enable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#export_rules DataPanosVirtualRouter#export_rules}
  */
  readonly exportRules?: DataPanosVirtualRouterProtocolOspfExportRules[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#global_bfd DataPanosVirtualRouter#global_bfd}
  */
  readonly globalBfd?: DataPanosVirtualRouterProtocolOspfGlobalBfd;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#graceful_restart DataPanosVirtualRouter#graceful_restart}
  */
  readonly gracefulRestart?: DataPanosVirtualRouterProtocolOspfGracefulRestart;
  /**
  * do not learn default route from OSPF
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#reject_default_route DataPanosVirtualRouter#reject_default_route}
  */
  readonly rejectDefaultRoute?: boolean | cdktf.IResolvable;
  /**
  * rfc-1583 compatibility
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#rfc1583 DataPanosVirtualRouter#rfc1583}
  */
  readonly rfc1583?: boolean | cdktf.IResolvable;
  /**
  * router id of this OSPF instance
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#router_id DataPanosVirtualRouter#router_id}
  */
  readonly routerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#timers DataPanosVirtualRouter#timers}
  */
  readonly timers?: DataPanosVirtualRouterProtocolOspfTimers;
}

export function dataPanosVirtualRouterProtocolOspfToTerraform(struct?: DataPanosVirtualRouterProtocolOspf | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_redist_default_route: cdktf.booleanToTerraform(struct!.allowRedistDefaultRoute),
    area: cdktf.listMapper(dataPanosVirtualRouterProtocolOspfAreaToTerraform, false)(struct!.area),
    auth_profile: cdktf.listMapper(dataPanosVirtualRouterProtocolOspfAuthProfileToTerraform, false)(struct!.authProfile),
    enable: cdktf.booleanToTerraform(struct!.enable),
    export_rules: cdktf.listMapper(dataPanosVirtualRouterProtocolOspfExportRulesToTerraform, false)(struct!.exportRules),
    global_bfd: dataPanosVirtualRouterProtocolOspfGlobalBfdToTerraform(struct!.globalBfd),
    graceful_restart: dataPanosVirtualRouterProtocolOspfGracefulRestartToTerraform(struct!.gracefulRestart),
    reject_default_route: cdktf.booleanToTerraform(struct!.rejectDefaultRoute),
    rfc1583: cdktf.booleanToTerraform(struct!.rfc1583),
    router_id: cdktf.stringToTerraform(struct!.routerId),
    timers: dataPanosVirtualRouterProtocolOspfTimersToTerraform(struct!.timers),
  }
}


export function dataPanosVirtualRouterProtocolOspfToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspf | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_redist_default_route: {
      value: cdktf.booleanToHclTerraform(struct!.allowRedistDefaultRoute),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    area: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolOspfAreaToHclTerraform, false)(struct!.area),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAreaList",
    },
    auth_profile: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolOspfAuthProfileToHclTerraform, false)(struct!.authProfile),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolOspfAuthProfileList",
    },
    enable: {
      value: cdktf.booleanToHclTerraform(struct!.enable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    export_rules: {
      value: cdktf.listMapperHcl(dataPanosVirtualRouterProtocolOspfExportRulesToHclTerraform, false)(struct!.exportRules),
      isBlock: true,
      type: "list",
      storageClassType: "DataPanosVirtualRouterProtocolOspfExportRulesList",
    },
    global_bfd: {
      value: dataPanosVirtualRouterProtocolOspfGlobalBfdToHclTerraform(struct!.globalBfd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfGlobalBfd",
    },
    graceful_restart: {
      value: dataPanosVirtualRouterProtocolOspfGracefulRestartToHclTerraform(struct!.gracefulRestart),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfGracefulRestart",
    },
    reject_default_route: {
      value: cdktf.booleanToHclTerraform(struct!.rejectDefaultRoute),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    rfc1583: {
      value: cdktf.booleanToHclTerraform(struct!.rfc1583),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    router_id: {
      value: cdktf.stringToHclTerraform(struct!.routerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    timers: {
      value: dataPanosVirtualRouterProtocolOspfTimersToHclTerraform(struct!.timers),
      isBlock: true,
      type: "struct",
      storageClassType: "DataPanosVirtualRouterProtocolOspfTimers",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspf | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowRedistDefaultRoute !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowRedistDefaultRoute = this._allowRedistDefaultRoute;
    }
    if (this._area?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.area = this._area?.internalValue;
    }
    if (this._authProfile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProfile = this._authProfile?.internalValue;
    }
    if (this._enable !== undefined) {
      hasAnyValues = true;
      internalValueResult.enable = this._enable;
    }
    if (this._exportRules?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.exportRules = this._exportRules?.internalValue;
    }
    if (this._globalBfd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.globalBfd = this._globalBfd?.internalValue;
    }
    if (this._gracefulRestart?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.gracefulRestart = this._gracefulRestart?.internalValue;
    }
    if (this._rejectDefaultRoute !== undefined) {
      hasAnyValues = true;
      internalValueResult.rejectDefaultRoute = this._rejectDefaultRoute;
    }
    if (this._rfc1583 !== undefined) {
      hasAnyValues = true;
      internalValueResult.rfc1583 = this._rfc1583;
    }
    if (this._routerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.routerId = this._routerId;
    }
    if (this._timers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.timers = this._timers?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspf | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowRedistDefaultRoute = undefined;
      this._area.internalValue = undefined;
      this._authProfile.internalValue = undefined;
      this._enable = undefined;
      this._exportRules.internalValue = undefined;
      this._globalBfd.internalValue = undefined;
      this._gracefulRestart.internalValue = undefined;
      this._rejectDefaultRoute = undefined;
      this._rfc1583 = undefined;
      this._routerId = undefined;
      this._timers.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowRedistDefaultRoute = value.allowRedistDefaultRoute;
      this._area.internalValue = value.area;
      this._authProfile.internalValue = value.authProfile;
      this._enable = value.enable;
      this._exportRules.internalValue = value.exportRules;
      this._globalBfd.internalValue = value.globalBfd;
      this._gracefulRestart.internalValue = value.gracefulRestart;
      this._rejectDefaultRoute = value.rejectDefaultRoute;
      this._rfc1583 = value.rfc1583;
      this._routerId = value.routerId;
      this._timers.internalValue = value.timers;
    }
  }

  // allow_redist_default_route - computed: true, optional: true, required: false
  private _allowRedistDefaultRoute?: boolean | cdktf.IResolvable; 
  public get allowRedistDefaultRoute() {
    return this.getBooleanAttribute('allow_redist_default_route');
  }
  public set allowRedistDefaultRoute(value: boolean | cdktf.IResolvable) {
    this._allowRedistDefaultRoute = value;
  }
  public resetAllowRedistDefaultRoute() {
    this._allowRedistDefaultRoute = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowRedistDefaultRouteInput() {
    return this._allowRedistDefaultRoute;
  }

  // area - computed: true, optional: true, required: false
  private _area = new DataPanosVirtualRouterProtocolOspfAreaList(this, "area", false);
  public get area() {
    return this._area;
  }
  public putArea(value: DataPanosVirtualRouterProtocolOspfArea[] | cdktf.IResolvable) {
    this._area.internalValue = value;
  }
  public resetArea() {
    this._area.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get areaInput() {
    return this._area.internalValue;
  }

  // auth_profile - computed: true, optional: true, required: false
  private _authProfile = new DataPanosVirtualRouterProtocolOspfAuthProfileList(this, "auth_profile", false);
  public get authProfile() {
    return this._authProfile;
  }
  public putAuthProfile(value: DataPanosVirtualRouterProtocolOspfAuthProfile[] | cdktf.IResolvable) {
    this._authProfile.internalValue = value;
  }
  public resetAuthProfile() {
    this._authProfile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProfileInput() {
    return this._authProfile.internalValue;
  }

  // enable - computed: true, optional: true, required: false
  private _enable?: boolean | cdktf.IResolvable; 
  public get enable() {
    return this.getBooleanAttribute('enable');
  }
  public set enable(value: boolean | cdktf.IResolvable) {
    this._enable = value;
  }
  public resetEnable() {
    this._enable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableInput() {
    return this._enable;
  }

  // export_rules - computed: true, optional: true, required: false
  private _exportRules = new DataPanosVirtualRouterProtocolOspfExportRulesList(this, "export_rules", false);
  public get exportRules() {
    return this._exportRules;
  }
  public putExportRules(value: DataPanosVirtualRouterProtocolOspfExportRules[] | cdktf.IResolvable) {
    this._exportRules.internalValue = value;
  }
  public resetExportRules() {
    this._exportRules.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exportRulesInput() {
    return this._exportRules.internalValue;
  }

  // global_bfd - computed: true, optional: true, required: false
  private _globalBfd = new DataPanosVirtualRouterProtocolOspfGlobalBfdOutputReference(this, "global_bfd");
  public get globalBfd() {
    return this._globalBfd;
  }
  public putGlobalBfd(value: DataPanosVirtualRouterProtocolOspfGlobalBfd) {
    this._globalBfd.internalValue = value;
  }
  public resetGlobalBfd() {
    this._globalBfd.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get globalBfdInput() {
    return this._globalBfd.internalValue;
  }

  // graceful_restart - computed: true, optional: true, required: false
  private _gracefulRestart = new DataPanosVirtualRouterProtocolOspfGracefulRestartOutputReference(this, "graceful_restart");
  public get gracefulRestart() {
    return this._gracefulRestart;
  }
  public putGracefulRestart(value: DataPanosVirtualRouterProtocolOspfGracefulRestart) {
    this._gracefulRestart.internalValue = value;
  }
  public resetGracefulRestart() {
    this._gracefulRestart.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gracefulRestartInput() {
    return this._gracefulRestart.internalValue;
  }

  // reject_default_route - computed: true, optional: true, required: false
  private _rejectDefaultRoute?: boolean | cdktf.IResolvable; 
  public get rejectDefaultRoute() {
    return this.getBooleanAttribute('reject_default_route');
  }
  public set rejectDefaultRoute(value: boolean | cdktf.IResolvable) {
    this._rejectDefaultRoute = value;
  }
  public resetRejectDefaultRoute() {
    this._rejectDefaultRoute = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rejectDefaultRouteInput() {
    return this._rejectDefaultRoute;
  }

  // rfc1583 - computed: true, optional: true, required: false
  private _rfc1583?: boolean | cdktf.IResolvable; 
  public get rfc1583() {
    return this.getBooleanAttribute('rfc1583');
  }
  public set rfc1583(value: boolean | cdktf.IResolvable) {
    this._rfc1583 = value;
  }
  public resetRfc1583() {
    this._rfc1583 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rfc1583Input() {
    return this._rfc1583;
  }

  // router_id - computed: true, optional: true, required: false
  private _routerId?: string; 
  public get routerId() {
    return this.getStringAttribute('router_id');
  }
  public set routerId(value: string) {
    this._routerId = value;
  }
  public resetRouterId() {
    this._routerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routerIdInput() {
    return this._routerId;
  }

  // timers - computed: true, optional: true, required: false
  private _timers = new DataPanosVirtualRouterProtocolOspfTimersOutputReference(this, "timers");
  public get timers() {
    return this._timers;
  }
  public putTimers(value: DataPanosVirtualRouterProtocolOspfTimers) {
    this._timers.internalValue = value;
  }
  public resetTimers() {
    this._timers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timersInput() {
    return this._timers.internalValue;
  }
}
export interface DataPanosVirtualRouterProtocolOspfv3AreaInterfaceBfd {
  /**
  * BFD profile
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/panos/2.0.5/docs/data-sources/virtual_router#profile DataPanosVirtualRouter#profile}
  */
  readonly profile?: string;
}

export function dataPanosVirtualRouterProtocolOspfv3AreaInterfaceBfdToTerraform(struct?: DataPanosVirtualRouterProtocolOspfv3AreaInterfaceBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    profile: cdktf.stringToTerraform(struct!.profile),
  }
}


export function dataPanosVirtualRouterProtocolOspfv3AreaInterfaceBfdToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfv3AreaInterfaceBfd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    profile: {
      value: cdktf.stringToHclTerraform(struct!.profile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataPanosVirtualRouterProtocolOspfv3AreaInterfaceBfdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfv3AreaInterfaceBfd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._profile !== undefined) {
      hasAnyValues = true;
      internalValueResult.profile = this._profile;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfv3AreaInterfaceBfd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._profile = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._profile = value.profile;
    }
  }

  // profile - computed: true, optional: true, required: false
  private _profile?: string; 
  public get profile() {
    return this.getStringAttribute('profile');
  }
  public set profile(value: string) {
    this._profile = value;
  }
  public resetProfile() {
    this._profile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profileInput() {
    return this._profile;
  }
}
export interface DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeBroadcast {
}

export function dataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeBroadcastToTerraform(struct?: DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeBroadcast | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeBroadcastToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeBroadcast | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeBroadcastOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeBroadcast | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeBroadcast | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
export interface DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeP2Mp {
}

export function dataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeP2MpToTerraform(struct?: DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeP2Mp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function dataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeP2MpToHclTerraform(struct?: DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeP2Mp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeP2MpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeP2Mp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataPanosVirtualRouterProtocolOspfv3AreaInterfaceLinkTypeP2Mp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
    }
  }
}
