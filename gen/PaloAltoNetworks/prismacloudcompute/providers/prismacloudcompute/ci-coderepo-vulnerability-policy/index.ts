// https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface CiCoderepoVulnerabilityPolicyConfig extends cdktf.TerraformMetaArguments {
  /**
  * rule block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#rule CiCoderepoVulnerabilityPolicy#rule}
  */
  readonly rule?: CiCoderepoVulnerabilityPolicyRule[] | cdktf.IResolvable;
}
export interface CiCoderepoVulnerabilityPolicyRuleAlertThreshold {
  /**
  * Whether or not to disable vulnerability alerts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#disabled CiCoderepoVulnerabilityPolicy#disabled}
  */
  readonly disabled?: boolean | cdktf.IResolvable;
  /**
  * Minimum vulnerability severity to generate an alert. Can be set to 0=off, 1=low, 4=medium, 7=high, and 9=critical.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#value CiCoderepoVulnerabilityPolicy#value}
  */
  readonly value?: number;
}

export function ciCoderepoVulnerabilityPolicyRuleAlertThresholdToTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleAlertThresholdOutputReference | CiCoderepoVulnerabilityPolicyRuleAlertThreshold): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    disabled: cdktf.booleanToTerraform(struct!.disabled),
    value: cdktf.numberToTerraform(struct!.value),
  }
}


export function ciCoderepoVulnerabilityPolicyRuleAlertThresholdToHclTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleAlertThresholdOutputReference | CiCoderepoVulnerabilityPolicyRuleAlertThreshold): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    disabled: {
      value: cdktf.booleanToHclTerraform(struct!.disabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    value: {
      value: cdktf.numberToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CiCoderepoVulnerabilityPolicyRuleAlertThresholdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CiCoderepoVulnerabilityPolicyRuleAlertThreshold | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._disabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.disabled = this._disabled;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CiCoderepoVulnerabilityPolicyRuleAlertThreshold | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._disabled = undefined;
      this._value = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._disabled = value.disabled;
      this._value = value.value;
    }
  }

  // disabled - computed: false, optional: true, required: false
  private _disabled?: boolean | cdktf.IResolvable; 
  public get disabled() {
    return this.getBooleanAttribute('disabled');
  }
  public set disabled(value: boolean | cdktf.IResolvable) {
    this._disabled = value;
  }
  public resetDisabled() {
    this._disabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disabledInput() {
    return this._disabled;
  }

  // value - computed: false, optional: true, required: false
  private _value?: number; 
  public get value() {
    return this.getNumberAttribute('value');
  }
  public set value(value: number) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface CiCoderepoVulnerabilityPolicyRuleBlockThreshold {
  /**
  * Whether or not to block when vulnerabilities are found.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#enabled CiCoderepoVulnerabilityPolicy#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Minimum vulnerability severity to block. Can be set to 0=off, 1=low, 4=medium, 7=high, and 9=critical.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#value CiCoderepoVulnerabilityPolicy#value}
  */
  readonly value?: number;
}

export function ciCoderepoVulnerabilityPolicyRuleBlockThresholdToTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleBlockThresholdOutputReference | CiCoderepoVulnerabilityPolicyRuleBlockThreshold): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    value: cdktf.numberToTerraform(struct!.value),
  }
}


export function ciCoderepoVulnerabilityPolicyRuleBlockThresholdToHclTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleBlockThresholdOutputReference | CiCoderepoVulnerabilityPolicyRuleBlockThreshold): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    value: {
      value: cdktf.numberToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CiCoderepoVulnerabilityPolicyRuleBlockThresholdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CiCoderepoVulnerabilityPolicyRuleBlockThreshold | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CiCoderepoVulnerabilityPolicyRuleBlockThreshold | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._enabled = undefined;
      this._value = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._enabled = value.enabled;
      this._value = value.value;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // value - computed: false, optional: true, required: false
  private _value?: number; 
  public get value() {
    return this.getNumberAttribute('value');
  }
  public set value(value: number) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface CiCoderepoVulnerabilityPolicyRuleCveRuleExpiration {
  /**
  * Expiration date.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#date CiCoderepoVulnerabilityPolicy#date}
  */
  readonly date?: string;
  /**
  * Whether or not to enable the CVE rule expiration.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#enabled CiCoderepoVulnerabilityPolicy#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function ciCoderepoVulnerabilityPolicyRuleCveRuleExpirationToTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleCveRuleExpirationOutputReference | CiCoderepoVulnerabilityPolicyRuleCveRuleExpiration): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    date: cdktf.stringToTerraform(struct!.date),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function ciCoderepoVulnerabilityPolicyRuleCveRuleExpirationToHclTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleCveRuleExpirationOutputReference | CiCoderepoVulnerabilityPolicyRuleCveRuleExpiration): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    date: {
      value: cdktf.stringToHclTerraform(struct!.date),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CiCoderepoVulnerabilityPolicyRuleCveRuleExpirationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CiCoderepoVulnerabilityPolicyRuleCveRuleExpiration | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._date !== undefined) {
      hasAnyValues = true;
      internalValueResult.date = this._date;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CiCoderepoVulnerabilityPolicyRuleCveRuleExpiration | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._date = undefined;
      this._enabled = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._date = value.date;
      this._enabled = value.enabled;
    }
  }

  // date - computed: false, optional: true, required: false
  private _date?: string; 
  public get date() {
    return this.getStringAttribute('date');
  }
  public set date(value: string) {
    this._date = value;
  }
  public resetDate() {
    this._date = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dateInput() {
    return this._date;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface CiCoderepoVulnerabilityPolicyRuleCveRule {
  /**
  * Free-form text field.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#description CiCoderepoVulnerabilityPolicy#description}
  */
  readonly description?: string;
  /**
  * Action to take if the CVE is found. Can be set to 'ignore', 'alert', or 'block'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#effect CiCoderepoVulnerabilityPolicy#effect}
  */
  readonly effect?: string;
  /**
  * CVE ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#id CiCoderepoVulnerabilityPolicy#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * expiration block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#expiration CiCoderepoVulnerabilityPolicy#expiration}
  */
  readonly expiration?: CiCoderepoVulnerabilityPolicyRuleCveRuleExpiration;
}

export function ciCoderepoVulnerabilityPolicyRuleCveRuleToTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleCveRule | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    description: cdktf.stringToTerraform(struct!.description),
    effect: cdktf.stringToTerraform(struct!.effect),
    id: cdktf.stringToTerraform(struct!.id),
    expiration: ciCoderepoVulnerabilityPolicyRuleCveRuleExpirationToTerraform(struct!.expiration),
  }
}


export function ciCoderepoVulnerabilityPolicyRuleCveRuleToHclTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleCveRule | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expiration: {
      value: ciCoderepoVulnerabilityPolicyRuleCveRuleExpirationToHclTerraform(struct!.expiration),
      isBlock: true,
      type: "list",
      storageClassType: "CiCoderepoVulnerabilityPolicyRuleCveRuleExpirationList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CiCoderepoVulnerabilityPolicyRuleCveRuleOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CiCoderepoVulnerabilityPolicyRuleCveRule | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._expiration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expiration = this._expiration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CiCoderepoVulnerabilityPolicyRuleCveRule | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._description = undefined;
      this._effect = undefined;
      this._id = undefined;
      this._expiration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._description = value.description;
      this._effect = value.effect;
      this._id = value.id;
      this._expiration.internalValue = value.expiration;
    }
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // expiration - computed: false, optional: true, required: false
  private _expiration = new CiCoderepoVulnerabilityPolicyRuleCveRuleExpirationOutputReference(this, "expiration");
  public get expiration() {
    return this._expiration;
  }
  public putExpiration(value: CiCoderepoVulnerabilityPolicyRuleCveRuleExpiration) {
    this._expiration.internalValue = value;
  }
  public resetExpiration() {
    this._expiration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expirationInput() {
    return this._expiration.internalValue;
  }
}

export class CiCoderepoVulnerabilityPolicyRuleCveRuleList extends cdktf.ComplexList {
  public internalValue? : CiCoderepoVulnerabilityPolicyRuleCveRule[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CiCoderepoVulnerabilityPolicyRuleCveRuleOutputReference {
    return new CiCoderepoVulnerabilityPolicyRuleCveRuleOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicy {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#critical CiCoderepoVulnerabilityPolicy#critical}
  */
  readonly critical?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#high CiCoderepoVulnerabilityPolicy#high}
  */
  readonly high?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#low CiCoderepoVulnerabilityPolicy#low}
  */
  readonly low?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#medium CiCoderepoVulnerabilityPolicy#medium}
  */
  readonly medium?: number;
}

export function ciCoderepoVulnerabilityPolicyRuleGraceDaysPolicyToTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicyOutputReference | CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicy): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    critical: cdktf.numberToTerraform(struct!.critical),
    high: cdktf.numberToTerraform(struct!.high),
    low: cdktf.numberToTerraform(struct!.low),
    medium: cdktf.numberToTerraform(struct!.medium),
  }
}


export function ciCoderepoVulnerabilityPolicyRuleGraceDaysPolicyToHclTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicyOutputReference | CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicy): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    critical: {
      value: cdktf.numberToHclTerraform(struct!.critical),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    high: {
      value: cdktf.numberToHclTerraform(struct!.high),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    low: {
      value: cdktf.numberToHclTerraform(struct!.low),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    medium: {
      value: cdktf.numberToHclTerraform(struct!.medium),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicy | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._critical !== undefined) {
      hasAnyValues = true;
      internalValueResult.critical = this._critical;
    }
    if (this._high !== undefined) {
      hasAnyValues = true;
      internalValueResult.high = this._high;
    }
    if (this._low !== undefined) {
      hasAnyValues = true;
      internalValueResult.low = this._low;
    }
    if (this._medium !== undefined) {
      hasAnyValues = true;
      internalValueResult.medium = this._medium;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicy | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._critical = undefined;
      this._high = undefined;
      this._low = undefined;
      this._medium = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._critical = value.critical;
      this._high = value.high;
      this._low = value.low;
      this._medium = value.medium;
    }
  }

  // critical - computed: false, optional: true, required: false
  private _critical?: number; 
  public get critical() {
    return this.getNumberAttribute('critical');
  }
  public set critical(value: number) {
    this._critical = value;
  }
  public resetCritical() {
    this._critical = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get criticalInput() {
    return this._critical;
  }

  // high - computed: false, optional: true, required: false
  private _high?: number; 
  public get high() {
    return this.getNumberAttribute('high');
  }
  public set high(value: number) {
    this._high = value;
  }
  public resetHigh() {
    this._high = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get highInput() {
    return this._high;
  }

  // low - computed: false, optional: true, required: false
  private _low?: number; 
  public get low() {
    return this.getNumberAttribute('low');
  }
  public set low(value: number) {
    this._low = value;
  }
  public resetLow() {
    this._low = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lowInput() {
    return this._low;
  }

  // medium - computed: false, optional: true, required: false
  private _medium?: number; 
  public get medium() {
    return this.getNumberAttribute('medium');
  }
  public set medium(value: number) {
    this._medium = value;
  }
  public resetMedium() {
    this._medium = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mediumInput() {
    return this._medium;
  }
}
export interface CiCoderepoVulnerabilityPolicyRuleTagRuleExpiration {
  /**
  * Expiration date.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#date CiCoderepoVulnerabilityPolicy#date}
  */
  readonly date?: string;
  /**
  * Whether or not to enable the tag rule expiration.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#enabled CiCoderepoVulnerabilityPolicy#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function ciCoderepoVulnerabilityPolicyRuleTagRuleExpirationToTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleTagRuleExpirationOutputReference | CiCoderepoVulnerabilityPolicyRuleTagRuleExpiration): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    date: cdktf.stringToTerraform(struct!.date),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function ciCoderepoVulnerabilityPolicyRuleTagRuleExpirationToHclTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleTagRuleExpirationOutputReference | CiCoderepoVulnerabilityPolicyRuleTagRuleExpiration): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    date: {
      value: cdktf.stringToHclTerraform(struct!.date),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CiCoderepoVulnerabilityPolicyRuleTagRuleExpirationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CiCoderepoVulnerabilityPolicyRuleTagRuleExpiration | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._date !== undefined) {
      hasAnyValues = true;
      internalValueResult.date = this._date;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CiCoderepoVulnerabilityPolicyRuleTagRuleExpiration | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._date = undefined;
      this._enabled = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._date = value.date;
      this._enabled = value.enabled;
    }
  }

  // date - computed: false, optional: true, required: false
  private _date?: string; 
  public get date() {
    return this.getStringAttribute('date');
  }
  public set date(value: string) {
    this._date = value;
  }
  public resetDate() {
    this._date = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dateInput() {
    return this._date;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface CiCoderepoVulnerabilityPolicyRuleTagRule {
  /**
  * Free-form text field.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#description CiCoderepoVulnerabilityPolicy#description}
  */
  readonly description?: string;
  /**
  * Action to take if a tagged CVE is found. Can be set to 'ignore', 'alert', or 'block'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#effect CiCoderepoVulnerabilityPolicy#effect}
  */
  readonly effect?: string;
  /**
  * Tag name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#name CiCoderepoVulnerabilityPolicy#name}
  */
  readonly name?: string;
  /**
  * expiration block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#expiration CiCoderepoVulnerabilityPolicy#expiration}
  */
  readonly expiration?: CiCoderepoVulnerabilityPolicyRuleTagRuleExpiration;
}

export function ciCoderepoVulnerabilityPolicyRuleTagRuleToTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleTagRule | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    description: cdktf.stringToTerraform(struct!.description),
    effect: cdktf.stringToTerraform(struct!.effect),
    name: cdktf.stringToTerraform(struct!.name),
    expiration: ciCoderepoVulnerabilityPolicyRuleTagRuleExpirationToTerraform(struct!.expiration),
  }
}


export function ciCoderepoVulnerabilityPolicyRuleTagRuleToHclTerraform(struct?: CiCoderepoVulnerabilityPolicyRuleTagRule | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expiration: {
      value: ciCoderepoVulnerabilityPolicyRuleTagRuleExpirationToHclTerraform(struct!.expiration),
      isBlock: true,
      type: "list",
      storageClassType: "CiCoderepoVulnerabilityPolicyRuleTagRuleExpirationList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CiCoderepoVulnerabilityPolicyRuleTagRuleOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CiCoderepoVulnerabilityPolicyRuleTagRule | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._expiration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expiration = this._expiration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CiCoderepoVulnerabilityPolicyRuleTagRule | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._description = undefined;
      this._effect = undefined;
      this._name = undefined;
      this._expiration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._description = value.description;
      this._effect = value.effect;
      this._name = value.name;
      this._expiration.internalValue = value.expiration;
    }
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // expiration - computed: false, optional: true, required: false
  private _expiration = new CiCoderepoVulnerabilityPolicyRuleTagRuleExpirationOutputReference(this, "expiration");
  public get expiration() {
    return this._expiration;
  }
  public putExpiration(value: CiCoderepoVulnerabilityPolicyRuleTagRuleExpiration) {
    this._expiration.internalValue = value;
  }
  public resetExpiration() {
    this._expiration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expirationInput() {
    return this._expiration.internalValue;
  }
}

export class CiCoderepoVulnerabilityPolicyRuleTagRuleList extends cdktf.ComplexList {
  public internalValue? : CiCoderepoVulnerabilityPolicyRuleTagRule[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CiCoderepoVulnerabilityPolicyRuleTagRuleOutputReference {
    return new CiCoderepoVulnerabilityPolicyRuleTagRuleOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CiCoderepoVulnerabilityPolicyRule {
  /**
  * Message to display when an coderepo is blocked.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#block_message CiCoderepoVulnerabilityPolicy#block_message}
  */
  readonly blockMessage?: string;
  /**
  * Collections used to scope the rule.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#collections CiCoderepoVulnerabilityPolicy#collections}
  */
  readonly collections?: string[];
  /**
  * Whether or not to disable the rule.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#disabled CiCoderepoVulnerabilityPolicy#disabled}
  */
  readonly disabled?: boolean | cdktf.IResolvable;
  /**
  * The effect of the rule. Can be set to 'ignore', 'alert', 'block', or 'alert, block'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#effect CiCoderepoVulnerabilityPolicy#effect}
  */
  readonly effect?: string;
  /**
  * Number of days to suppress the rule's block effect. Measured from date the vulnerability was fixed. If there's no fix, measured from the date the vulnerability was published.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#grace_days CiCoderepoVulnerabilityPolicy#grace_days}
  */
  readonly graceDays?: number;
  /**
  * Unique name of the rule.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#name CiCoderepoVulnerabilityPolicy#name}
  */
  readonly name?: string;
  /**
  * Free-form text field.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#notes CiCoderepoVulnerabilityPolicy#notes}
  */
  readonly notes?: string;
  /**
  * Whether or not to apply the rule only when vendor fixes are available.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#only_fixed CiCoderepoVulnerabilityPolicy#only_fixed}
  */
  readonly onlyFixed?: boolean | cdktf.IResolvable;
  /**
  * Whether or not to display a detailed message when blocked.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#verbose CiCoderepoVulnerabilityPolicy#verbose}
  */
  readonly verbose?: boolean | cdktf.IResolvable;
  /**
  * alert_threshold block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#alert_threshold CiCoderepoVulnerabilityPolicy#alert_threshold}
  */
  readonly alertThreshold?: CiCoderepoVulnerabilityPolicyRuleAlertThreshold;
  /**
  * block_threshold block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#block_threshold CiCoderepoVulnerabilityPolicy#block_threshold}
  */
  readonly blockThreshold?: CiCoderepoVulnerabilityPolicyRuleBlockThreshold;
  /**
  * cve_rule block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#cve_rule CiCoderepoVulnerabilityPolicy#cve_rule}
  */
  readonly cveRule?: CiCoderepoVulnerabilityPolicyRuleCveRule[] | cdktf.IResolvable;
  /**
  * grace_days_policy block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#grace_days_policy CiCoderepoVulnerabilityPolicy#grace_days_policy}
  */
  readonly graceDaysPolicy?: CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicy;
  /**
  * tag_rule block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#tag_rule CiCoderepoVulnerabilityPolicy#tag_rule}
  */
  readonly tagRule?: CiCoderepoVulnerabilityPolicyRuleTagRule[] | cdktf.IResolvable;
}

export function ciCoderepoVulnerabilityPolicyRuleToTerraform(struct?: CiCoderepoVulnerabilityPolicyRule | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    block_message: cdktf.stringToTerraform(struct!.blockMessage),
    collections: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.collections),
    disabled: cdktf.booleanToTerraform(struct!.disabled),
    effect: cdktf.stringToTerraform(struct!.effect),
    grace_days: cdktf.numberToTerraform(struct!.graceDays),
    name: cdktf.stringToTerraform(struct!.name),
    notes: cdktf.stringToTerraform(struct!.notes),
    only_fixed: cdktf.booleanToTerraform(struct!.onlyFixed),
    verbose: cdktf.booleanToTerraform(struct!.verbose),
    alert_threshold: ciCoderepoVulnerabilityPolicyRuleAlertThresholdToTerraform(struct!.alertThreshold),
    block_threshold: ciCoderepoVulnerabilityPolicyRuleBlockThresholdToTerraform(struct!.blockThreshold),
    cve_rule: cdktf.listMapper(ciCoderepoVulnerabilityPolicyRuleCveRuleToTerraform, true)(struct!.cveRule),
    grace_days_policy: ciCoderepoVulnerabilityPolicyRuleGraceDaysPolicyToTerraform(struct!.graceDaysPolicy),
    tag_rule: cdktf.listMapper(ciCoderepoVulnerabilityPolicyRuleTagRuleToTerraform, true)(struct!.tagRule),
  }
}


export function ciCoderepoVulnerabilityPolicyRuleToHclTerraform(struct?: CiCoderepoVulnerabilityPolicyRule | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    block_message: {
      value: cdktf.stringToHclTerraform(struct!.blockMessage),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    collections: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.collections),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    disabled: {
      value: cdktf.booleanToHclTerraform(struct!.disabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    grace_days: {
      value: cdktf.numberToHclTerraform(struct!.graceDays),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    notes: {
      value: cdktf.stringToHclTerraform(struct!.notes),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    only_fixed: {
      value: cdktf.booleanToHclTerraform(struct!.onlyFixed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    verbose: {
      value: cdktf.booleanToHclTerraform(struct!.verbose),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    alert_threshold: {
      value: ciCoderepoVulnerabilityPolicyRuleAlertThresholdToHclTerraform(struct!.alertThreshold),
      isBlock: true,
      type: "list",
      storageClassType: "CiCoderepoVulnerabilityPolicyRuleAlertThresholdList",
    },
    block_threshold: {
      value: ciCoderepoVulnerabilityPolicyRuleBlockThresholdToHclTerraform(struct!.blockThreshold),
      isBlock: true,
      type: "list",
      storageClassType: "CiCoderepoVulnerabilityPolicyRuleBlockThresholdList",
    },
    cve_rule: {
      value: cdktf.listMapperHcl(ciCoderepoVulnerabilityPolicyRuleCveRuleToHclTerraform, true)(struct!.cveRule),
      isBlock: true,
      type: "list",
      storageClassType: "CiCoderepoVulnerabilityPolicyRuleCveRuleList",
    },
    grace_days_policy: {
      value: ciCoderepoVulnerabilityPolicyRuleGraceDaysPolicyToHclTerraform(struct!.graceDaysPolicy),
      isBlock: true,
      type: "list",
      storageClassType: "CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicyList",
    },
    tag_rule: {
      value: cdktf.listMapperHcl(ciCoderepoVulnerabilityPolicyRuleTagRuleToHclTerraform, true)(struct!.tagRule),
      isBlock: true,
      type: "list",
      storageClassType: "CiCoderepoVulnerabilityPolicyRuleTagRuleList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CiCoderepoVulnerabilityPolicyRuleOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CiCoderepoVulnerabilityPolicyRule | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._blockMessage !== undefined) {
      hasAnyValues = true;
      internalValueResult.blockMessage = this._blockMessage;
    }
    if (this._collections !== undefined) {
      hasAnyValues = true;
      internalValueResult.collections = this._collections;
    }
    if (this._disabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.disabled = this._disabled;
    }
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._graceDays !== undefined) {
      hasAnyValues = true;
      internalValueResult.graceDays = this._graceDays;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._notes !== undefined) {
      hasAnyValues = true;
      internalValueResult.notes = this._notes;
    }
    if (this._onlyFixed !== undefined) {
      hasAnyValues = true;
      internalValueResult.onlyFixed = this._onlyFixed;
    }
    if (this._verbose !== undefined) {
      hasAnyValues = true;
      internalValueResult.verbose = this._verbose;
    }
    if (this._alertThreshold?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.alertThreshold = this._alertThreshold?.internalValue;
    }
    if (this._blockThreshold?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.blockThreshold = this._blockThreshold?.internalValue;
    }
    if (this._cveRule?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cveRule = this._cveRule?.internalValue;
    }
    if (this._graceDaysPolicy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.graceDaysPolicy = this._graceDaysPolicy?.internalValue;
    }
    if (this._tagRule?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tagRule = this._tagRule?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CiCoderepoVulnerabilityPolicyRule | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._blockMessage = undefined;
      this._collections = undefined;
      this._disabled = undefined;
      this._effect = undefined;
      this._graceDays = undefined;
      this._name = undefined;
      this._notes = undefined;
      this._onlyFixed = undefined;
      this._verbose = undefined;
      this._alertThreshold.internalValue = undefined;
      this._blockThreshold.internalValue = undefined;
      this._cveRule.internalValue = undefined;
      this._graceDaysPolicy.internalValue = undefined;
      this._tagRule.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._blockMessage = value.blockMessage;
      this._collections = value.collections;
      this._disabled = value.disabled;
      this._effect = value.effect;
      this._graceDays = value.graceDays;
      this._name = value.name;
      this._notes = value.notes;
      this._onlyFixed = value.onlyFixed;
      this._verbose = value.verbose;
      this._alertThreshold.internalValue = value.alertThreshold;
      this._blockThreshold.internalValue = value.blockThreshold;
      this._cveRule.internalValue = value.cveRule;
      this._graceDaysPolicy.internalValue = value.graceDaysPolicy;
      this._tagRule.internalValue = value.tagRule;
    }
  }

  // block_message - computed: false, optional: true, required: false
  private _blockMessage?: string; 
  public get blockMessage() {
    return this.getStringAttribute('block_message');
  }
  public set blockMessage(value: string) {
    this._blockMessage = value;
  }
  public resetBlockMessage() {
    this._blockMessage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blockMessageInput() {
    return this._blockMessage;
  }

  // collections - computed: false, optional: true, required: false
  private _collections?: string[]; 
  public get collections() {
    return this.getListAttribute('collections');
  }
  public set collections(value: string[]) {
    this._collections = value;
  }
  public resetCollections() {
    this._collections = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectionsInput() {
    return this._collections;
  }

  // disabled - computed: false, optional: true, required: false
  private _disabled?: boolean | cdktf.IResolvable; 
  public get disabled() {
    return this.getBooleanAttribute('disabled');
  }
  public set disabled(value: boolean | cdktf.IResolvable) {
    this._disabled = value;
  }
  public resetDisabled() {
    this._disabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disabledInput() {
    return this._disabled;
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // grace_days - computed: false, optional: true, required: false
  private _graceDays?: number; 
  public get graceDays() {
    return this.getNumberAttribute('grace_days');
  }
  public set graceDays(value: number) {
    this._graceDays = value;
  }
  public resetGraceDays() {
    this._graceDays = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get graceDaysInput() {
    return this._graceDays;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // notes - computed: false, optional: true, required: false
  private _notes?: string; 
  public get notes() {
    return this.getStringAttribute('notes');
  }
  public set notes(value: string) {
    this._notes = value;
  }
  public resetNotes() {
    this._notes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get notesInput() {
    return this._notes;
  }

  // only_fixed - computed: false, optional: true, required: false
  private _onlyFixed?: boolean | cdktf.IResolvable; 
  public get onlyFixed() {
    return this.getBooleanAttribute('only_fixed');
  }
  public set onlyFixed(value: boolean | cdktf.IResolvable) {
    this._onlyFixed = value;
  }
  public resetOnlyFixed() {
    this._onlyFixed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get onlyFixedInput() {
    return this._onlyFixed;
  }

  // verbose - computed: false, optional: true, required: false
  private _verbose?: boolean | cdktf.IResolvable; 
  public get verbose() {
    return this.getBooleanAttribute('verbose');
  }
  public set verbose(value: boolean | cdktf.IResolvable) {
    this._verbose = value;
  }
  public resetVerbose() {
    this._verbose = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get verboseInput() {
    return this._verbose;
  }

  // alert_threshold - computed: false, optional: true, required: false
  private _alertThreshold = new CiCoderepoVulnerabilityPolicyRuleAlertThresholdOutputReference(this, "alert_threshold");
  public get alertThreshold() {
    return this._alertThreshold;
  }
  public putAlertThreshold(value: CiCoderepoVulnerabilityPolicyRuleAlertThreshold) {
    this._alertThreshold.internalValue = value;
  }
  public resetAlertThreshold() {
    this._alertThreshold.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get alertThresholdInput() {
    return this._alertThreshold.internalValue;
  }

  // block_threshold - computed: false, optional: true, required: false
  private _blockThreshold = new CiCoderepoVulnerabilityPolicyRuleBlockThresholdOutputReference(this, "block_threshold");
  public get blockThreshold() {
    return this._blockThreshold;
  }
  public putBlockThreshold(value: CiCoderepoVulnerabilityPolicyRuleBlockThreshold) {
    this._blockThreshold.internalValue = value;
  }
  public resetBlockThreshold() {
    this._blockThreshold.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blockThresholdInput() {
    return this._blockThreshold.internalValue;
  }

  // cve_rule - computed: false, optional: true, required: false
  private _cveRule = new CiCoderepoVulnerabilityPolicyRuleCveRuleList(this, "cve_rule", false);
  public get cveRule() {
    return this._cveRule;
  }
  public putCveRule(value: CiCoderepoVulnerabilityPolicyRuleCveRule[] | cdktf.IResolvable) {
    this._cveRule.internalValue = value;
  }
  public resetCveRule() {
    this._cveRule.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cveRuleInput() {
    return this._cveRule.internalValue;
  }

  // grace_days_policy - computed: false, optional: true, required: false
  private _graceDaysPolicy = new CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicyOutputReference(this, "grace_days_policy");
  public get graceDaysPolicy() {
    return this._graceDaysPolicy;
  }
  public putGraceDaysPolicy(value: CiCoderepoVulnerabilityPolicyRuleGraceDaysPolicy) {
    this._graceDaysPolicy.internalValue = value;
  }
  public resetGraceDaysPolicy() {
    this._graceDaysPolicy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get graceDaysPolicyInput() {
    return this._graceDaysPolicy.internalValue;
  }

  // tag_rule - computed: false, optional: true, required: false
  private _tagRule = new CiCoderepoVulnerabilityPolicyRuleTagRuleList(this, "tag_rule", false);
  public get tagRule() {
    return this._tagRule;
  }
  public putTagRule(value: CiCoderepoVulnerabilityPolicyRuleTagRule[] | cdktf.IResolvable) {
    this._tagRule.internalValue = value;
  }
  public resetTagRule() {
    this._tagRule.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagRuleInput() {
    return this._tagRule.internalValue;
  }
}

export class CiCoderepoVulnerabilityPolicyRuleList extends cdktf.ComplexList {
  public internalValue? : CiCoderepoVulnerabilityPolicyRule[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CiCoderepoVulnerabilityPolicyRuleOutputReference {
    return new CiCoderepoVulnerabilityPolicyRuleOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy prismacloudcompute_ci_coderepo_vulnerability_policy}
*/
export class CiCoderepoVulnerabilityPolicy extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "prismacloudcompute_ci_coderepo_vulnerability_policy";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a CiCoderepoVulnerabilityPolicy resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the CiCoderepoVulnerabilityPolicy to import
  * @param importFromId The id of the existing CiCoderepoVulnerabilityPolicy that should be imported. Refer to the {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the CiCoderepoVulnerabilityPolicy to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "prismacloudcompute_ci_coderepo_vulnerability_policy", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/paloaltonetworks/prismacloudcompute/0.8.0/docs/resources/ci_coderepo_vulnerability_policy prismacloudcompute_ci_coderepo_vulnerability_policy} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options CiCoderepoVulnerabilityPolicyConfig = {}
  */
  public constructor(scope: Construct, id: string, config: CiCoderepoVulnerabilityPolicyConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'prismacloudcompute_ci_coderepo_vulnerability_policy',
      terraformGeneratorMetadata: {
        providerName: 'prismacloudcompute',
        providerVersion: '0.8.0'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._rule.internalValue = config.rule;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // id - computed: true, optional: false, required: false
  public get id() {
    return this.getStringAttribute('id');
  }

  // rule - computed: false, optional: true, required: false
  private _rule = new CiCoderepoVulnerabilityPolicyRuleList(this, "rule", false);
  public get rule() {
    return this._rule;
  }
  public putRule(value: CiCoderepoVulnerabilityPolicyRule[] | cdktf.IResolvable) {
    this._rule.internalValue = value;
  }
  public resetRule() {
    this._rule.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ruleInput() {
    return this._rule.internalValue;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      rule: cdktf.listMapper(ciCoderepoVulnerabilityPolicyRuleToTerraform, true)(this._rule.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      rule: {
        value: cdktf.listMapperHcl(ciCoderepoVulnerabilityPolicyRuleToHclTerraform, true)(this._rule.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "CiCoderepoVulnerabilityPolicyRuleList",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
