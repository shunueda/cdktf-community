// https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface JobVmwareConfig extends cdktf.TerraformMetaArguments {
  /**
  * Specifies if snapshots generated by the Protection
  * 				Job should also be deleted when the Job is deleted.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#delete_snapshots JobVmware#delete_snapshots}
  */
  readonly deleteSnapshots?: boolean | cdktf.IResolvable;
  /**
  * Specifies the list of vm's from the protection source
  * 				that should not be protected and are excluded from being
  * 				backed up by the protection job
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#exclude JobVmware#exclude}
  */
  readonly exclude?: string[];
  /**
  * Specifies the number of minutes that a Job Run
  * 				of a Full (no CBT) backup schedule is expected to complete,
  * 				which is known as a Service-Level Agreement (SLA).A SLA
  * 				violation is reported when the run time of a Job Run exceeds
  * 				the SLA time period specified for this backup schedule.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#full_sla JobVmware#full_sla}
  */
  readonly fullSla?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#id JobVmware#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Specifies the list of vm's from the
  * 				protection source to be protected by this protection job
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#include JobVmware#include}
  */
  readonly include?: string[];
  /**
  * Specifies the number of minutes that a Job Run
  * 				of a CBT-based backup schedule is expected to complete, which
  * 				is known as a Service-Level Agreement (SLA). A SLA violation
  * 				is reported when the run time of a Job Run exceeds the SLA
  * 				time period specified for this backup schedule.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#incremental_sla JobVmware#incremental_sla}
  */
  readonly incrementalSla?: number;
  /**
  * Specifies the name of the Protection Job
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#name JobVmware#name}
  */
  readonly name: string;
  /**
  * Specifies the protection policy
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#policy JobVmware#policy}
  */
  readonly policy: string;
  /**
  * Specifies the priority of execution for a
  * 				Protection Job
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#priority JobVmware#priority}
  */
  readonly priority?: string;
  /**
  * Specifies the Protection source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#protection_source JobVmware#protection_source}
  */
  readonly protectionSource: string;
  /**
  * Specifies the QoS policy type to use for this
  * 				Protection Job. 'BackupHDD' indicates the Cohesity Cluster
  * 				writes data directly to the HDD tier for this Protection Job.
  * 				This is the recommended setting. 'BackupSSD' indicates the
  * 				Cohesity Cluster writes data directly to the SSD tier for this
  * 				Protection Job. Only specify this policy if you need fast ingest
  * 				speed for a small number of Protection Jobs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#qos_type JobVmware#qos_type}
  */
  readonly qosType?: string;
  /**
  * Specifies the storage domain where this job
  * 				writes data
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#storage_domain JobVmware#storage_domain}
  */
  readonly storageDomain: string;
  /**
  * Specifies the timezone in the format: Area/Location
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#timezone JobVmware#timezone}
  */
  readonly timezone?: string;
}

/**
* Represents a {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware cohesity_job_vmware}
*/
export class JobVmware extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "cohesity_job_vmware";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a JobVmware resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the JobVmware to import
  * @param importFromId The id of the existing JobVmware that should be imported. Refer to the {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the JobVmware to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "cohesity_job_vmware", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/cohesity/cohesity/2.1.3/docs/resources/job_vmware cohesity_job_vmware} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options JobVmwareConfig
  */
  public constructor(scope: Construct, id: string, config: JobVmwareConfig) {
    super(scope, id, {
      terraformResourceType: 'cohesity_job_vmware',
      terraformGeneratorMetadata: {
        providerName: 'cohesity',
        providerVersion: '2.1.3'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._deleteSnapshots = config.deleteSnapshots;
    this._exclude = config.exclude;
    this._fullSla = config.fullSla;
    this._id = config.id;
    this._include = config.include;
    this._incrementalSla = config.incrementalSla;
    this._name = config.name;
    this._policy = config.policy;
    this._priority = config.priority;
    this._protectionSource = config.protectionSource;
    this._qosType = config.qosType;
    this._storageDomain = config.storageDomain;
    this._timezone = config.timezone;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // delete_snapshots - computed: false, optional: true, required: false
  private _deleteSnapshots?: boolean | cdktf.IResolvable; 
  public get deleteSnapshots() {
    return this.getBooleanAttribute('delete_snapshots');
  }
  public set deleteSnapshots(value: boolean | cdktf.IResolvable) {
    this._deleteSnapshots = value;
  }
  public resetDeleteSnapshots() {
    this._deleteSnapshots = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deleteSnapshotsInput() {
    return this._deleteSnapshots;
  }

  // exclude - computed: false, optional: true, required: false
  private _exclude?: string[]; 
  public get exclude() {
    return cdktf.Fn.tolist(this.getListAttribute('exclude'));
  }
  public set exclude(value: string[]) {
    this._exclude = value;
  }
  public resetExclude() {
    this._exclude = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get excludeInput() {
    return this._exclude;
  }

  // full_sla - computed: false, optional: true, required: false
  private _fullSla?: number; 
  public get fullSla() {
    return this.getNumberAttribute('full_sla');
  }
  public set fullSla(value: number) {
    this._fullSla = value;
  }
  public resetFullSla() {
    this._fullSla = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fullSlaInput() {
    return this._fullSla;
  }

  // id - computed: true, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // include - computed: false, optional: true, required: false
  private _include?: string[]; 
  public get include() {
    return cdktf.Fn.tolist(this.getListAttribute('include'));
  }
  public set include(value: string[]) {
    this._include = value;
  }
  public resetInclude() {
    this._include = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeInput() {
    return this._include;
  }

  // incremental_sla - computed: false, optional: true, required: false
  private _incrementalSla?: number; 
  public get incrementalSla() {
    return this.getNumberAttribute('incremental_sla');
  }
  public set incrementalSla(value: number) {
    this._incrementalSla = value;
  }
  public resetIncrementalSla() {
    this._incrementalSla = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get incrementalSlaInput() {
    return this._incrementalSla;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // policy - computed: false, optional: false, required: true
  private _policy?: string; 
  public get policy() {
    return this.getStringAttribute('policy');
  }
  public set policy(value: string) {
    this._policy = value;
  }
  // Temporarily expose input value. Use with caution.
  public get policyInput() {
    return this._policy;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: string; 
  public get priority() {
    return this.getStringAttribute('priority');
  }
  public set priority(value: string) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // protection_source - computed: false, optional: false, required: true
  private _protectionSource?: string; 
  public get protectionSource() {
    return this.getStringAttribute('protection_source');
  }
  public set protectionSource(value: string) {
    this._protectionSource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get protectionSourceInput() {
    return this._protectionSource;
  }

  // qos_type - computed: false, optional: true, required: false
  private _qosType?: string; 
  public get qosType() {
    return this.getStringAttribute('qos_type');
  }
  public set qosType(value: string) {
    this._qosType = value;
  }
  public resetQosType() {
    this._qosType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qosTypeInput() {
    return this._qosType;
  }

  // storage_domain - computed: false, optional: false, required: true
  private _storageDomain?: string; 
  public get storageDomain() {
    return this.getStringAttribute('storage_domain');
  }
  public set storageDomain(value: string) {
    this._storageDomain = value;
  }
  // Temporarily expose input value. Use with caution.
  public get storageDomainInput() {
    return this._storageDomain;
  }

  // timezone - computed: false, optional: true, required: false
  private _timezone?: string; 
  public get timezone() {
    return this.getStringAttribute('timezone');
  }
  public set timezone(value: string) {
    this._timezone = value;
  }
  public resetTimezone() {
    this._timezone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timezoneInput() {
    return this._timezone;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      delete_snapshots: cdktf.booleanToTerraform(this._deleteSnapshots),
      exclude: cdktf.listMapper(cdktf.stringToTerraform, false)(this._exclude),
      full_sla: cdktf.numberToTerraform(this._fullSla),
      id: cdktf.stringToTerraform(this._id),
      include: cdktf.listMapper(cdktf.stringToTerraform, false)(this._include),
      incremental_sla: cdktf.numberToTerraform(this._incrementalSla),
      name: cdktf.stringToTerraform(this._name),
      policy: cdktf.stringToTerraform(this._policy),
      priority: cdktf.stringToTerraform(this._priority),
      protection_source: cdktf.stringToTerraform(this._protectionSource),
      qos_type: cdktf.stringToTerraform(this._qosType),
      storage_domain: cdktf.stringToTerraform(this._storageDomain),
      timezone: cdktf.stringToTerraform(this._timezone),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      delete_snapshots: {
        value: cdktf.booleanToHclTerraform(this._deleteSnapshots),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      exclude: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._exclude),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      full_sla: {
        value: cdktf.numberToHclTerraform(this._fullSla),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      id: {
        value: cdktf.stringToHclTerraform(this._id),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      include: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._include),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      incremental_sla: {
        value: cdktf.numberToHclTerraform(this._incrementalSla),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      name: {
        value: cdktf.stringToHclTerraform(this._name),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      policy: {
        value: cdktf.stringToHclTerraform(this._policy),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      priority: {
        value: cdktf.stringToHclTerraform(this._priority),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      protection_source: {
        value: cdktf.stringToHclTerraform(this._protectionSource),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      qos_type: {
        value: cdktf.stringToHclTerraform(this._qosType),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      storage_domain: {
        value: cdktf.stringToHclTerraform(this._storageDomain),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      timezone: {
        value: cdktf.stringToHclTerraform(this._timezone),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
