// https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface VulnerabilitySettingsConfig extends cdktf.TerraformMetaArguments {
  /**
  * Enable Code-level Vulnerability Analytics
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_code_level_vulnerability_detection VulnerabilitySettings#enable_code_level_vulnerability_detection}
  */
  readonly enableCodeLevelVulnerabilityDetection: boolean | cdktf.IResolvable;
  /**
  * When new monitoring rules are enabled, classic rules are disabled. To re-enable classic rules, disable the new monitoring rules.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_resource_attribute_rules VulnerabilitySettings#enable_resource_attribute_rules}
  */
  readonly enableResourceAttributeRules?: boolean | cdktf.IResolvable;
  /**
  * Enable Third-party Vulnerability Analytics
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_runtime_vulnerability_detection VulnerabilitySettings#enable_runtime_vulnerability_detection}
  */
  readonly enableRuntimeVulnerabilityDetection: boolean | cdktf.IResolvable;
  /**
  * (v1.290) Global .NET code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#global_monitoring_mode_dot_net VulnerabilitySettings#global_monitoring_mode_dot_net}
  */
  readonly globalMonitoringModeDotNet?: string;
  /**
  * Global Go code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#global_monitoring_mode_go VulnerabilitySettings#global_monitoring_mode_go}
  */
  readonly globalMonitoringModeGo?: string;
  /**
  * Global Java code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#global_monitoring_mode_java VulnerabilitySettings#global_monitoring_mode_java}
  */
  readonly globalMonitoringModeJava: string;
  /**
  * Global third-party vulnerability detection control defines the default for all processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#global_monitoring_mode_tpv VulnerabilitySettings#global_monitoring_mode_tpv}
  */
  readonly globalMonitoringModeTpv?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#id VulnerabilitySettings#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * technologies block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#technologies VulnerabilitySettings#technologies}
  */
  readonly technologies: VulnerabilitySettingsTechnologies;
}
export interface VulnerabilitySettingsTechnologies {
  /**
  * NET
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_dot_net VulnerabilitySettings#enable_dot_net}
  */
  readonly enableDotNet: boolean | cdktf.IResolvable;
  /**
  * NET runtimes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_dot_net_runtime VulnerabilitySettings#enable_dot_net_runtime}
  */
  readonly enableDotNetRuntime?: boolean | cdktf.IResolvable;
  /**
  * Go
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_go VulnerabilitySettings#enable_go}
  */
  readonly enableGo: boolean | cdktf.IResolvable;
  /**
  * Java
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_java VulnerabilitySettings#enable_java}
  */
  readonly enableJava: boolean | cdktf.IResolvable;
  /**
  * Java runtimes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_java_runtime VulnerabilitySettings#enable_java_runtime}
  */
  readonly enableJavaRuntime?: boolean | cdktf.IResolvable;
  /**
  * Kubernetes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_kubernetes VulnerabilitySettings#enable_kubernetes}
  */
  readonly enableKubernetes: boolean | cdktf.IResolvable;
  /**
  * Node.js
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_node_js VulnerabilitySettings#enable_node_js}
  */
  readonly enableNodeJs: boolean | cdktf.IResolvable;
  /**
  * Node.js runtimes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_node_js_runtime VulnerabilitySettings#enable_node_js_runtime}
  */
  readonly enableNodeJsRuntime?: boolean | cdktf.IResolvable;
  /**
  * PHP
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_php VulnerabilitySettings#enable_php}
  */
  readonly enablePhp: boolean | cdktf.IResolvable;
  /**
  * Python
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_python VulnerabilitySettings#enable_python}
  */
  readonly enablePython?: boolean | cdktf.IResolvable;
  /**
  * Python runtimes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#enable_python_runtime VulnerabilitySettings#enable_python_runtime}
  */
  readonly enablePythonRuntime?: boolean | cdktf.IResolvable;
}

export function vulnerabilitySettingsTechnologiesToTerraform(struct?: VulnerabilitySettingsTechnologiesOutputReference | VulnerabilitySettingsTechnologies): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enable_dot_net: cdktf.booleanToTerraform(struct!.enableDotNet),
    enable_dot_net_runtime: cdktf.booleanToTerraform(struct!.enableDotNetRuntime),
    enable_go: cdktf.booleanToTerraform(struct!.enableGo),
    enable_java: cdktf.booleanToTerraform(struct!.enableJava),
    enable_java_runtime: cdktf.booleanToTerraform(struct!.enableJavaRuntime),
    enable_kubernetes: cdktf.booleanToTerraform(struct!.enableKubernetes),
    enable_node_js: cdktf.booleanToTerraform(struct!.enableNodeJs),
    enable_node_js_runtime: cdktf.booleanToTerraform(struct!.enableNodeJsRuntime),
    enable_php: cdktf.booleanToTerraform(struct!.enablePhp),
    enable_python: cdktf.booleanToTerraform(struct!.enablePython),
    enable_python_runtime: cdktf.booleanToTerraform(struct!.enablePythonRuntime),
  }
}


export function vulnerabilitySettingsTechnologiesToHclTerraform(struct?: VulnerabilitySettingsTechnologiesOutputReference | VulnerabilitySettingsTechnologies): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enable_dot_net: {
      value: cdktf.booleanToHclTerraform(struct!.enableDotNet),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_dot_net_runtime: {
      value: cdktf.booleanToHclTerraform(struct!.enableDotNetRuntime),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_go: {
      value: cdktf.booleanToHclTerraform(struct!.enableGo),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_java: {
      value: cdktf.booleanToHclTerraform(struct!.enableJava),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_java_runtime: {
      value: cdktf.booleanToHclTerraform(struct!.enableJavaRuntime),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_kubernetes: {
      value: cdktf.booleanToHclTerraform(struct!.enableKubernetes),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_node_js: {
      value: cdktf.booleanToHclTerraform(struct!.enableNodeJs),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_node_js_runtime: {
      value: cdktf.booleanToHclTerraform(struct!.enableNodeJsRuntime),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_php: {
      value: cdktf.booleanToHclTerraform(struct!.enablePhp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_python: {
      value: cdktf.booleanToHclTerraform(struct!.enablePython),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_python_runtime: {
      value: cdktf.booleanToHclTerraform(struct!.enablePythonRuntime),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class VulnerabilitySettingsTechnologiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): VulnerabilitySettingsTechnologies | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enableDotNet !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableDotNet = this._enableDotNet;
    }
    if (this._enableDotNetRuntime !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableDotNetRuntime = this._enableDotNetRuntime;
    }
    if (this._enableGo !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableGo = this._enableGo;
    }
    if (this._enableJava !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableJava = this._enableJava;
    }
    if (this._enableJavaRuntime !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableJavaRuntime = this._enableJavaRuntime;
    }
    if (this._enableKubernetes !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableKubernetes = this._enableKubernetes;
    }
    if (this._enableNodeJs !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableNodeJs = this._enableNodeJs;
    }
    if (this._enableNodeJsRuntime !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableNodeJsRuntime = this._enableNodeJsRuntime;
    }
    if (this._enablePhp !== undefined) {
      hasAnyValues = true;
      internalValueResult.enablePhp = this._enablePhp;
    }
    if (this._enablePython !== undefined) {
      hasAnyValues = true;
      internalValueResult.enablePython = this._enablePython;
    }
    if (this._enablePythonRuntime !== undefined) {
      hasAnyValues = true;
      internalValueResult.enablePythonRuntime = this._enablePythonRuntime;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: VulnerabilitySettingsTechnologies | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._enableDotNet = undefined;
      this._enableDotNetRuntime = undefined;
      this._enableGo = undefined;
      this._enableJava = undefined;
      this._enableJavaRuntime = undefined;
      this._enableKubernetes = undefined;
      this._enableNodeJs = undefined;
      this._enableNodeJsRuntime = undefined;
      this._enablePhp = undefined;
      this._enablePython = undefined;
      this._enablePythonRuntime = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._enableDotNet = value.enableDotNet;
      this._enableDotNetRuntime = value.enableDotNetRuntime;
      this._enableGo = value.enableGo;
      this._enableJava = value.enableJava;
      this._enableJavaRuntime = value.enableJavaRuntime;
      this._enableKubernetes = value.enableKubernetes;
      this._enableNodeJs = value.enableNodeJs;
      this._enableNodeJsRuntime = value.enableNodeJsRuntime;
      this._enablePhp = value.enablePhp;
      this._enablePython = value.enablePython;
      this._enablePythonRuntime = value.enablePythonRuntime;
    }
  }

  // enable_dot_net - computed: false, optional: false, required: true
  private _enableDotNet?: boolean | cdktf.IResolvable; 
  public get enableDotNet() {
    return this.getBooleanAttribute('enable_dot_net');
  }
  public set enableDotNet(value: boolean | cdktf.IResolvable) {
    this._enableDotNet = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enableDotNetInput() {
    return this._enableDotNet;
  }

  // enable_dot_net_runtime - computed: false, optional: true, required: false
  private _enableDotNetRuntime?: boolean | cdktf.IResolvable; 
  public get enableDotNetRuntime() {
    return this.getBooleanAttribute('enable_dot_net_runtime');
  }
  public set enableDotNetRuntime(value: boolean | cdktf.IResolvable) {
    this._enableDotNetRuntime = value;
  }
  public resetEnableDotNetRuntime() {
    this._enableDotNetRuntime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableDotNetRuntimeInput() {
    return this._enableDotNetRuntime;
  }

  // enable_go - computed: false, optional: false, required: true
  private _enableGo?: boolean | cdktf.IResolvable; 
  public get enableGo() {
    return this.getBooleanAttribute('enable_go');
  }
  public set enableGo(value: boolean | cdktf.IResolvable) {
    this._enableGo = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enableGoInput() {
    return this._enableGo;
  }

  // enable_java - computed: false, optional: false, required: true
  private _enableJava?: boolean | cdktf.IResolvable; 
  public get enableJava() {
    return this.getBooleanAttribute('enable_java');
  }
  public set enableJava(value: boolean | cdktf.IResolvable) {
    this._enableJava = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enableJavaInput() {
    return this._enableJava;
  }

  // enable_java_runtime - computed: false, optional: true, required: false
  private _enableJavaRuntime?: boolean | cdktf.IResolvable; 
  public get enableJavaRuntime() {
    return this.getBooleanAttribute('enable_java_runtime');
  }
  public set enableJavaRuntime(value: boolean | cdktf.IResolvable) {
    this._enableJavaRuntime = value;
  }
  public resetEnableJavaRuntime() {
    this._enableJavaRuntime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableJavaRuntimeInput() {
    return this._enableJavaRuntime;
  }

  // enable_kubernetes - computed: false, optional: false, required: true
  private _enableKubernetes?: boolean | cdktf.IResolvable; 
  public get enableKubernetes() {
    return this.getBooleanAttribute('enable_kubernetes');
  }
  public set enableKubernetes(value: boolean | cdktf.IResolvable) {
    this._enableKubernetes = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enableKubernetesInput() {
    return this._enableKubernetes;
  }

  // enable_node_js - computed: false, optional: false, required: true
  private _enableNodeJs?: boolean | cdktf.IResolvable; 
  public get enableNodeJs() {
    return this.getBooleanAttribute('enable_node_js');
  }
  public set enableNodeJs(value: boolean | cdktf.IResolvable) {
    this._enableNodeJs = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enableNodeJsInput() {
    return this._enableNodeJs;
  }

  // enable_node_js_runtime - computed: false, optional: true, required: false
  private _enableNodeJsRuntime?: boolean | cdktf.IResolvable; 
  public get enableNodeJsRuntime() {
    return this.getBooleanAttribute('enable_node_js_runtime');
  }
  public set enableNodeJsRuntime(value: boolean | cdktf.IResolvable) {
    this._enableNodeJsRuntime = value;
  }
  public resetEnableNodeJsRuntime() {
    this._enableNodeJsRuntime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableNodeJsRuntimeInput() {
    return this._enableNodeJsRuntime;
  }

  // enable_php - computed: false, optional: false, required: true
  private _enablePhp?: boolean | cdktf.IResolvable; 
  public get enablePhp() {
    return this.getBooleanAttribute('enable_php');
  }
  public set enablePhp(value: boolean | cdktf.IResolvable) {
    this._enablePhp = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enablePhpInput() {
    return this._enablePhp;
  }

  // enable_python - computed: false, optional: true, required: false
  private _enablePython?: boolean | cdktf.IResolvable; 
  public get enablePython() {
    return this.getBooleanAttribute('enable_python');
  }
  public set enablePython(value: boolean | cdktf.IResolvable) {
    this._enablePython = value;
  }
  public resetEnablePython() {
    this._enablePython = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enablePythonInput() {
    return this._enablePython;
  }

  // enable_python_runtime - computed: false, optional: true, required: false
  private _enablePythonRuntime?: boolean | cdktf.IResolvable; 
  public get enablePythonRuntime() {
    return this.getBooleanAttribute('enable_python_runtime');
  }
  public set enablePythonRuntime(value: boolean | cdktf.IResolvable) {
    this._enablePythonRuntime = value;
  }
  public resetEnablePythonRuntime() {
    this._enablePythonRuntime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enablePythonRuntimeInput() {
    return this._enablePythonRuntime;
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings dynatrace_vulnerability_settings}
*/
export class VulnerabilitySettings extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "dynatrace_vulnerability_settings";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a VulnerabilitySettings resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the VulnerabilitySettings to import
  * @param importFromId The id of the existing VulnerabilitySettings that should be imported. Refer to the {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the VulnerabilitySettings to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "dynatrace_vulnerability_settings", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/dynatrace-oss/dynatrace/1.86.0/docs/resources/vulnerability_settings dynatrace_vulnerability_settings} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options VulnerabilitySettingsConfig
  */
  public constructor(scope: Construct, id: string, config: VulnerabilitySettingsConfig) {
    super(scope, id, {
      terraformResourceType: 'dynatrace_vulnerability_settings',
      terraformGeneratorMetadata: {
        providerName: 'dynatrace',
        providerVersion: '1.86.0'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._enableCodeLevelVulnerabilityDetection = config.enableCodeLevelVulnerabilityDetection;
    this._enableResourceAttributeRules = config.enableResourceAttributeRules;
    this._enableRuntimeVulnerabilityDetection = config.enableRuntimeVulnerabilityDetection;
    this._globalMonitoringModeDotNet = config.globalMonitoringModeDotNet;
    this._globalMonitoringModeGo = config.globalMonitoringModeGo;
    this._globalMonitoringModeJava = config.globalMonitoringModeJava;
    this._globalMonitoringModeTpv = config.globalMonitoringModeTpv;
    this._id = config.id;
    this._technologies.internalValue = config.technologies;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // enable_code_level_vulnerability_detection - computed: false, optional: false, required: true
  private _enableCodeLevelVulnerabilityDetection?: boolean | cdktf.IResolvable; 
  public get enableCodeLevelVulnerabilityDetection() {
    return this.getBooleanAttribute('enable_code_level_vulnerability_detection');
  }
  public set enableCodeLevelVulnerabilityDetection(value: boolean | cdktf.IResolvable) {
    this._enableCodeLevelVulnerabilityDetection = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enableCodeLevelVulnerabilityDetectionInput() {
    return this._enableCodeLevelVulnerabilityDetection;
  }

  // enable_resource_attribute_rules - computed: false, optional: true, required: false
  private _enableResourceAttributeRules?: boolean | cdktf.IResolvable; 
  public get enableResourceAttributeRules() {
    return this.getBooleanAttribute('enable_resource_attribute_rules');
  }
  public set enableResourceAttributeRules(value: boolean | cdktf.IResolvable) {
    this._enableResourceAttributeRules = value;
  }
  public resetEnableResourceAttributeRules() {
    this._enableResourceAttributeRules = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableResourceAttributeRulesInput() {
    return this._enableResourceAttributeRules;
  }

  // enable_runtime_vulnerability_detection - computed: false, optional: false, required: true
  private _enableRuntimeVulnerabilityDetection?: boolean | cdktf.IResolvable; 
  public get enableRuntimeVulnerabilityDetection() {
    return this.getBooleanAttribute('enable_runtime_vulnerability_detection');
  }
  public set enableRuntimeVulnerabilityDetection(value: boolean | cdktf.IResolvable) {
    this._enableRuntimeVulnerabilityDetection = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enableRuntimeVulnerabilityDetectionInput() {
    return this._enableRuntimeVulnerabilityDetection;
  }

  // global_monitoring_mode_dot_net - computed: false, optional: true, required: false
  private _globalMonitoringModeDotNet?: string; 
  public get globalMonitoringModeDotNet() {
    return this.getStringAttribute('global_monitoring_mode_dot_net');
  }
  public set globalMonitoringModeDotNet(value: string) {
    this._globalMonitoringModeDotNet = value;
  }
  public resetGlobalMonitoringModeDotNet() {
    this._globalMonitoringModeDotNet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get globalMonitoringModeDotNetInput() {
    return this._globalMonitoringModeDotNet;
  }

  // global_monitoring_mode_go - computed: false, optional: true, required: false
  private _globalMonitoringModeGo?: string; 
  public get globalMonitoringModeGo() {
    return this.getStringAttribute('global_monitoring_mode_go');
  }
  public set globalMonitoringModeGo(value: string) {
    this._globalMonitoringModeGo = value;
  }
  public resetGlobalMonitoringModeGo() {
    this._globalMonitoringModeGo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get globalMonitoringModeGoInput() {
    return this._globalMonitoringModeGo;
  }

  // global_monitoring_mode_java - computed: false, optional: false, required: true
  private _globalMonitoringModeJava?: string; 
  public get globalMonitoringModeJava() {
    return this.getStringAttribute('global_monitoring_mode_java');
  }
  public set globalMonitoringModeJava(value: string) {
    this._globalMonitoringModeJava = value;
  }
  // Temporarily expose input value. Use with caution.
  public get globalMonitoringModeJavaInput() {
    return this._globalMonitoringModeJava;
  }

  // global_monitoring_mode_tpv - computed: false, optional: true, required: false
  private _globalMonitoringModeTpv?: string; 
  public get globalMonitoringModeTpv() {
    return this.getStringAttribute('global_monitoring_mode_tpv');
  }
  public set globalMonitoringModeTpv(value: string) {
    this._globalMonitoringModeTpv = value;
  }
  public resetGlobalMonitoringModeTpv() {
    this._globalMonitoringModeTpv = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get globalMonitoringModeTpvInput() {
    return this._globalMonitoringModeTpv;
  }

  // id - computed: true, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // technologies - computed: false, optional: false, required: true
  private _technologies = new VulnerabilitySettingsTechnologiesOutputReference(this, "technologies");
  public get technologies() {
    return this._technologies;
  }
  public putTechnologies(value: VulnerabilitySettingsTechnologies) {
    this._technologies.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get technologiesInput() {
    return this._technologies.internalValue;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      enable_code_level_vulnerability_detection: cdktf.booleanToTerraform(this._enableCodeLevelVulnerabilityDetection),
      enable_resource_attribute_rules: cdktf.booleanToTerraform(this._enableResourceAttributeRules),
      enable_runtime_vulnerability_detection: cdktf.booleanToTerraform(this._enableRuntimeVulnerabilityDetection),
      global_monitoring_mode_dot_net: cdktf.stringToTerraform(this._globalMonitoringModeDotNet),
      global_monitoring_mode_go: cdktf.stringToTerraform(this._globalMonitoringModeGo),
      global_monitoring_mode_java: cdktf.stringToTerraform(this._globalMonitoringModeJava),
      global_monitoring_mode_tpv: cdktf.stringToTerraform(this._globalMonitoringModeTpv),
      id: cdktf.stringToTerraform(this._id),
      technologies: vulnerabilitySettingsTechnologiesToTerraform(this._technologies.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      enable_code_level_vulnerability_detection: {
        value: cdktf.booleanToHclTerraform(this._enableCodeLevelVulnerabilityDetection),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      enable_resource_attribute_rules: {
        value: cdktf.booleanToHclTerraform(this._enableResourceAttributeRules),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      enable_runtime_vulnerability_detection: {
        value: cdktf.booleanToHclTerraform(this._enableRuntimeVulnerabilityDetection),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      global_monitoring_mode_dot_net: {
        value: cdktf.stringToHclTerraform(this._globalMonitoringModeDotNet),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      global_monitoring_mode_go: {
        value: cdktf.stringToHclTerraform(this._globalMonitoringModeGo),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      global_monitoring_mode_java: {
        value: cdktf.stringToHclTerraform(this._globalMonitoringModeJava),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      global_monitoring_mode_tpv: {
        value: cdktf.stringToHclTerraform(this._globalMonitoringModeTpv),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      id: {
        value: cdktf.stringToHclTerraform(this._id),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      technologies: {
        value: vulnerabilitySettingsTechnologiesToHclTerraform(this._technologies.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "VulnerabilitySettingsTechnologiesList",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
