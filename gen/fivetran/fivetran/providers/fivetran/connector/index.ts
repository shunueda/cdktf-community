// https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface ConnectorConfig extends cdktf.TerraformMetaArguments {
  /**
  * The level of data delay notification threshold. Possible values: LOW, NORMAL, HIGH, CUSTOM. The default value NORMAL. CUSTOM is only available for customers using the Enterprise plan or above.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#data_delay_sensitivity Connector#data_delay_sensitivity}
  */
  readonly dataDelaySensitivity?: string;
  /**
  * Custom sync delay notification threshold in minutes. The default value is 0. This parameter is only used when data_delay_sensitivity set to CUSTOM.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#data_delay_threshold Connector#data_delay_threshold}
  */
  readonly dataDelayThreshold?: number;
  /**
  * The unique identifier for the Group (Destination) within the Fivetran system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#group_id Connector#group_id}
  */
  readonly groupId: string;
  /**
  * The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the value is specified, the system will try to associate the connection with an existing agent.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#hybrid_deployment_agent_id Connector#hybrid_deployment_agent_id}
  */
  readonly hybridDeploymentAgentId?: string;
  /**
  * Possible values: Directly, SshTunnel, ProxyAgent, PrivateLink.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#networking_method Connector#networking_method}
  */
  readonly networkingMethod?: string;
  /**
  * The private link ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#private_link_id Connector#private_link_id}
  */
  readonly privateLinkId?: string;
  /**
  * The proxy agent ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#proxy_agent_id Connector#proxy_agent_id}
  */
  readonly proxyAgentId?: string;
  /**
  * Specifies whether the setup tests should be run automatically. The default value is FALSE.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#run_setup_tests Connector#run_setup_tests}
  */
  readonly runSetupTests?: boolean | cdktf.IResolvable;
  /**
  * The connector type id within the Fivetran system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#service Connector#service}
  */
  readonly service: string;
  /**
  * Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#trust_certificates Connector#trust_certificates}
  */
  readonly trustCertificates?: boolean | cdktf.IResolvable;
  /**
  * Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#trust_fingerprints Connector#trust_fingerprints}
  */
  readonly trustFingerprints?: boolean | cdktf.IResolvable;
  /**
  * auth block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#auth Connector#auth}
  */
  readonly auth?: ConnectorAuth;
  /**
  * config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#config Connector#config}
  */
  readonly config?: ConnectorConfigA;
  /**
  * destination_schema block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#destination_schema Connector#destination_schema}
  */
  readonly destinationSchema?: ConnectorDestinationSchema;
  /**
  * timeouts block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#timeouts Connector#timeouts}
  */
  readonly timeouts?: ConnectorTimeouts;
}
export interface ConnectorAuthClientAccess {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adroll`: `Client ID` of your AdRoll client application.
  * 	- Service `airtable`: `Client ID` of your Airtable client application.
  * 	- Service `amazon_ads`: `Client ID` of your Amazon Ads client application.
  * 	- Service `asana`: `Client ID` of your Asana client application.
  * 	- Service `azure_service_bus`: `Client ID` of your Azure application. Required if the authentication type is `AzureActiveDirectory`
  * 	- Service `bingads`: `Client ID` of your Microsoft Advertising client application.
  * 	- Service `business_central`: `Client ID` of your Airtable client application.
  * 	- Service `double_click_campaign_manager`: `Client ID` of your Google Campaign Manager 360 client application.
  * 	- Service `double_click_publishers`: `Client ID` of your Google Ad Manager client application.
  * 	- Service `dropbox`: `Client ID` of your Dropbox client application.
  * 	- Service `dynamics_365`: `Client ID` of your Dynamic 365 client application, or Service Principal.
  * 	- Service `facebook_ads`: `Client ID` of your Facebook client application.
  * 	- Service `facebook_pages`: `Client ID` of your Facebook  client application.
  * 	- Service `financial_force`: `Client ID` of your Salesforce client application.
  * 	- Service `front`: `Client ID` of your Front client application.
  * 	- Service `google_ads`: `Client ID` of your Google Ads client application.
  * 	- Service `google_analytics`: `Client ID` of your Google Analytics client application.
  * 	- Service `google_analytics_4`: `Client ID` of your Google Analytics client application.
  * 	- Service `google_analytics_mcf`: `Client ID` of your Google Analytics client application.
  * 	- Service `google_display_and_video_360`: `Client ID` of your Google Display & Video 360 client application.
  * 	- Service `google_play`: `Client ID` of your Google Play client application.
  * 	- Service `google_search_ads_360`: `Client ID` of your Google Search Ads 360 client application.
  * 	- Service `google_search_console`: `Client ID` of your Google Search Console client application.
  * 	- Service `google_sheets`: `Client ID` of your Google Sheets client application.
  * 	- Service `helpscout`: `Client ID` of your Help Scout client application.
  * 	- Service `hubspot`: `Client ID` of your HubSpot client application.
  * 	- Service `instagram_business`: `Client ID` of your Facebook  client application.
  * 	- Service `linkedin_ads`: `Client ID` of your LinkedIn client application.
  * 	- Service `linkedin_company_pages`: `Client ID` of your LinkedIn client application.
  * 	- Service `microsoft_lists`: `Client ID` of your Microsoft client application.
  * 	- Service `one_drive`: `Client ID` of your Microsoft OneDrive client application.
  * 	- Service `optimizely`: `Client ID` of your Optimizely client application.
  * 	- Service `outreach`: `Client ID` of your Outreach client application.
  * 	- Service `pardot`: `Client ID` of your Pardot client application.
  * 	- Service `pinterest_ads`: `Client ID` of your Pinterest client application.
  * 	- Service `pipedrive`: `Client ID` of your Pipedrive client application.
  * 	- Service `qualtrics`: `Client ID` of your Qualtrics client application.
  * 	- Service `quickbooks`: `Client ID` of your QuickBooks client application.
  * 	- Service `reddit_ads`: `Client ID` of your Reddit Ads client application.
  * 	- Service `salesforce`: `Client ID` of your Salesforce client application.
  * 	- Service `salesforce_sandbox`: `Client ID` of your Salesforce client application.
  * 	- Service `share_point`: `Client ID` of your Microsoft client application.
  * 	- Service `snapchat_ads`: `Client ID` of your Snapchat Ads client application.
  * 	- Service `spotify_ads`: `Client ID` of your Ad Studio application.
  * 	- Service `survey_monkey`: `Client ID` of your SurveyMonkey client application.
  * 	- Service `tiktok_ads`: `Client ID` of your TikTok Ads client application.
  * 	- Service `twitter`: `Client ID` of your Twitter client application.
  * 	- Service `twitter_ads`: `Client ID` of your Twitter Ads client application.
  * 	- Service `typeform`: The Typeform client ID.
  * 	- Service `yahoo_gemini`: `Client ID` of your Yahoo Gemini client application.
  * 	- Service `youtube_analytics`: `Client ID` of your Youtube client application.
  * 	- Service `zoho_crm`: `Client ID` of your Zoho client application.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_id Connector#client_id}
  */
  readonly clientId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adroll`: `Client Secret` of your AdRoll client application.
  * 	- Service `airtable`: `Client Secret` of your Airtable client application.
  * 	- Service `amazon_ads`: `Client Secret` of your Amazon Ads client application.
  * 	- Service `asana`: `Client Secret` of your Asana client application.
  * 	- Service `azure_service_bus`: `Client Secret` of your Azure application. Required if the authentication type is `AzureActiveDirectory`
  * 	- Service `bingads`: `Client Secret` of your Microsoft Advertising client application.
  * 	- Service `business_central`: `Client Secret` of your Airtable client application.
  * 	- Service `double_click_campaign_manager`: `Client Secret` of your Google Campaign Manager 360 client application.
  * 	- Service `double_click_publishers`: `Client Secret` of your Google Ad Manager client application.
  * 	- Service `dropbox`: `Client Secret` of your Dropbox client application.
  * 	- Service `dynamics_365`: `Client Secret` of your Dynamic 365 client application, or Service Principal.
  * 	- Service `facebook_ads`: `Client Secret` of your Facebook client application.
  * 	- Service `facebook_pages`: `Client Secret` of your Facebook client application.
  * 	- Service `financial_force`: `Client Secret` of your Salesforce client application.
  * 	- Service `front`: `Client Secret` of your Front client application.
  * 	- Service `google_ads`: `Client Secret` of your Google Ads client application.
  * 	- Service `google_analytics`: `Client Secret` of your Google Analytics client application.
  * 	- Service `google_analytics_4`: `Client Secret` of your Google Analytics client application.
  * 	- Service `google_analytics_mcf`: `Client Secret` of your Google Analytics client application.
  * 	- Service `google_display_and_video_360`: `Client Secret` of your Google Display & Video 360 client application.
  * 	- Service `google_play`: `Client Secret` of your Google Play client application.
  * 	- Service `google_search_ads_360`: `Client Secret` of your Google Search Ads 360 client application.
  * 	- Service `google_search_console`: `Client Secret` of your Google Search Console client application.
  * 	- Service `google_sheets`: `Client Secret` of your Google Sheets client application.
  * 	- Service `helpscout`: `Client Secret` of your Help Scout client application.
  * 	- Service `hubspot`: `Client Secret` of your HubSpot client application.
  * 	- Service `instagram_business`: `Client Secret` of your Facebook client application.
  * 	- Service `linkedin_ads`: `Client Secret` of your LinkedIn client application.
  * 	- Service `linkedin_company_pages`: `Client Secret` of your LinkedIn client application.
  * 	- Service `microsoft_lists`: `Client Secret` of your Microsoft client application.
  * 	- Service `one_drive`: `Client Secret` of your Microsoft OneDrive client application.
  * 	- Service `optimizely`: `Client Secret` of your Optimizely client application.
  * 	- Service `outreach`: `Client Secret` of your Outreach client application.
  * 	- Service `pardot`: `Client Secret` of your Pardot client application.
  * 	- Service `pinterest_ads`: `Client Secret` of your Pinterest client application.
  * 	- Service `pipedrive`: `Client Secret` of your Pipedrive client application.
  * 	- Service `qualtrics`: `Client Secret` of your Qualtrics client application.
  * 	- Service `quickbooks`: `Client Secret` of your QuickBooks client application.
  * 	- Service `reddit_ads`: `Client Secret` of your Reddit Ads client application.
  * 	- Service `salesforce`: `Client Secret` of your Salesforce client application.
  * 	- Service `salesforce_sandbox`: `Client Secret` of your Salesforce client application.
  * 	- Service `share_point`: `Client Secret` of your Microsoft client application.
  * 	- Service `snapchat_ads`: `Client Secret` of your Snapchat Ads client application.
  * 	- Service `spotify_ads`: `Client Secret` of your Ad Studio application.
  * 	- Service `survey_monkey`: `Client Secret` of your SurveyMonkey client application.
  * 	- Service `tiktok_ads`: `Client Secret` of your TikTok Ads client application.
  * 	- Service `twitter`: `Client Secret` of your Twitter client application.
  * 	- Service `twitter_ads`: `Client Secret` of your Twitter Ads client application.
  * 	- Service `typeform`: The Typeform client secret.
  * 	- Service `yahoo_gemini`: `Client Secret` of your Yahoo Gemini client application.
  * 	- Service `youtube_analytics`: `Client Secret` of your Youtube client application.
  * 	- Service `zoho_crm`: `Client Secret` of your Zoho client application.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_secret Connector#client_secret}
  */
  readonly clientSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_ads`: Your approved `Developer token` to connect to the Google Ads API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#developer_token Connector#developer_token}
  */
  readonly developerToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_ads`: Your company's name in your Google Ads client application.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#user_agent Connector#user_agent}
  */
  readonly userAgent?: string;
}

export function connectorAuthClientAccessToTerraform(struct?: ConnectorAuthClientAccess | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    client_id: cdktf.stringToTerraform(struct!.clientId),
    client_secret: cdktf.stringToTerraform(struct!.clientSecret),
    developer_token: cdktf.stringToTerraform(struct!.developerToken),
    user_agent: cdktf.stringToTerraform(struct!.userAgent),
  }
}


export function connectorAuthClientAccessToHclTerraform(struct?: ConnectorAuthClientAccess | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_secret: {
      value: cdktf.stringToHclTerraform(struct!.clientSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    developer_token: {
      value: cdktf.stringToHclTerraform(struct!.developerToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_agent: {
      value: cdktf.stringToHclTerraform(struct!.userAgent),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorAuthClientAccessOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): ConnectorAuthClientAccess | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._clientSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientSecret = this._clientSecret;
    }
    if (this._developerToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.developerToken = this._developerToken;
    }
    if (this._userAgent !== undefined) {
      hasAnyValues = true;
      internalValueResult.userAgent = this._userAgent;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorAuthClientAccess | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clientId = undefined;
      this._clientSecret = undefined;
      this._developerToken = undefined;
      this._userAgent = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clientId = value.clientId;
      this._clientSecret = value.clientSecret;
      this._developerToken = value.developerToken;
      this._userAgent = value.userAgent;
    }
  }

  // client_id - computed: false, optional: true, required: false
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  public resetClientId() {
    this._clientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // client_secret - computed: false, optional: true, required: false
  private _clientSecret?: string; 
  public get clientSecret() {
    return this.getStringAttribute('client_secret');
  }
  public set clientSecret(value: string) {
    this._clientSecret = value;
  }
  public resetClientSecret() {
    this._clientSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientSecretInput() {
    return this._clientSecret;
  }

  // developer_token - computed: false, optional: true, required: false
  private _developerToken?: string; 
  public get developerToken() {
    return this.getStringAttribute('developer_token');
  }
  public set developerToken(value: string) {
    this._developerToken = value;
  }
  public resetDeveloperToken() {
    this._developerToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get developerTokenInput() {
    return this._developerToken;
  }

  // user_agent - computed: false, optional: true, required: false
  private _userAgent?: string; 
  public get userAgent() {
    return this.getStringAttribute('user_agent');
  }
  public set userAgent(value: string) {
    this._userAgent = value;
  }
  public resetUserAgent() {
    this._userAgent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userAgentInput() {
    return this._userAgent;
  }
}
export interface ConnectorAuth {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `autodesk_bim_360`: Your Autodesk BIM 360 Access Token.
  * 	- Service `azure_sql_db`: The long-lived Access token carries the information necessary to access API resources.
  * 	- Service `azure_sql_managed_db`: The long-lived Access token carries the information necessary to access API resources.
  * 	- Service `billing_platform`: Your BillingPlatform access token.
  * 	- Service `calendly`: Your Calendly access token.
  * 	- Service `docebo`: Your Docebo Access Token.
  * 	- Service `drift`: Your Drift access token.
  * 	- Service `employment_hero`: Your Employment Hero access token.
  * 	- Service `facebook_ads`: The long-lived `Access token` along with the `client_id` and `client_secret` parameters carry the information necessary to query the Facebook Ads API
  * 	- Service `facebook_pages`: The `Access Token` carries the information necessary for API resources to fetch data
  * 	- Service `freshbooks`: Your FreshBooks Access Token.
  * 	- Service `gitlab`: Your GitLab access token.
  * 	- Service `google_business_profile`: Your Google Business Profile Access token.
  * 	- Service `google_calendar`: Your Google Calendar access token.
  * 	- Service `google_classroom`: The `Access Token` that carries the information necessary for API resources to fetch data.
  * 	- Service `google_tasks`: The access token that carries the information necessary for API resources to your Google Tasks fetch data.
  * 	- Service `instagram_business`: The `Access Token` carries the information necessary for API resources to fetch data
  * 	- Service `intercom`: The long-lived `Access Token` carries the information necessary for API resources to fetch data.
  * 	- Service `medallia`: Your Medallia access token that contains all the information necessary for the API resources to fetch your data.
  * 	- Service `pinterest_organic`: Your Pinterest access token.
  * 	- Service `ramp`: Your Ramp access token.
  * 	- Service `ringcentral`: The long-lived `Access token` carries the information necessary to access API resources.
  * 	- Service `shopify`: The Shopify access token.
  * 	- Service `slack`: Your Slack access token.
  * 	- Service `stripe`: The Stripe API Restricted Key
  * 	- Service `stripe_test`: The Stripe API Restricted Key
  * 	- Service `survey_monkey`: The long-lived `Access token` carries the information necessary to access API resources.
  * 	- Service `tiktok_ads`: The long-lived `Access token` carries the information necessary to access API resources.
  * 	- Service `typeform`: The Typeform API access token.
  * 	- Service `yahoo_search_ads_yahoo_japan`: Your Yahoo Search Ads Access Token.
  * 	- Service `zendesk`: The long-lived `Access token` carries the information necessary to access API resources.
  * 	- Service `zendesk_chat`: The long-lived `Access token` carries the information necessary to access API resources.
  * 	- Service `zendesk_sell`: The long-lived `Access token` carries the information necessary to access API resources.
  * 	- Service `zoom`: Your Zoom Access token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#access_token Connector#access_token}
  */
  readonly accessToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `elastic_cloud`: The Elasticsearch API key. If omitted, then basic user and password authentication will apply.
  * 	- Service `es_self_hosted`: The Elasticsearch API key. If omitted, then basic user and password authentication will apply.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_key Connector#api_key}
  */
  readonly apiKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_selling_partner`: `AWS Access Key` of your AWS Account User.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#aws_access_key Connector#aws_access_key}
  */
  readonly awsAccessKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_selling_partner`: `AWS Secret Key` of your AWS Account User.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#aws_secret_key Connector#aws_secret_key}
  */
  readonly awsSecretKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_selling_partner`: `Client ID` of your Amazon Seller/Vendor Central client application.
  * 	- Service `apple_search_ads`: Apple Search Ads REST API Client ID. Must be populated if `is_auth2_enabled` is set to `true`.
  * 	- Service `workday`: Client ID
  * 	- Service `workday_financial_management`: ID of your Workday Client App
  * 	- Service `workday_hcm`: ID of your Workday Client App
  * 	- Service `yahoo_dsp`: Your Yahoo DSP Client ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_id Connector#client_id}
  */
  readonly clientId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_selling_partner`: `Client Secret` of your Amazon Seller/Vendor Central client application.
  * 	- Service `workday`: Client Secret
  * 	- Service `workday_financial_management`: Secret of your Workday Client App
  * 	- Service `workday_hcm`: Secret of your Workday Client App
  * 	- Service `yahoo_dsp`: Your Yahoo DSP Client Secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_secret Connector#client_secret}
  */
  readonly clientSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `twitter`: API Key of your app
  * 	- Service `twitter_ads`: The Twitter App consumer key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#consumer_key Connector#consumer_key}
  */
  readonly consumerKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `twitter`: API Secret of your app
  * 	- Service `twitter_ads`: The Twitter App consumer secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#consumer_secret Connector#consumer_secret}
  */
  readonly consumerSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apple_search_ads`: Apple Search Ads REST API Key ID. Must be populated if `is_auth2_enabled` is set to `true`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#key_id Connector#key_id}
  */
  readonly keyId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `twitter`: The Twitter App access token.
  * 	- Service `twitter_ads`: The Twitter App access token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#oauth_token Connector#oauth_token}
  */
  readonly oauthToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `twitter`: The Twitter App access token secret.
  * 	- Service `twitter_ads`: The Twitter App access token secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#oauth_token_secret Connector#oauth_token_secret}
  */
  readonly oauthTokenSecret?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ocapi_access_token Connector#ocapi_access_token}
  */
  readonly ocapiAccessToken?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ocapi_refresh_token Connector#ocapi_refresh_token}
  */
  readonly ocapiRefreshToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `dynamics_365`: Previous `Refresh token` of your application.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#previous_refresh_token Connector#previous_refresh_token}
  */
  readonly previousRefreshToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `quickbooks`: `Realm ID` of your QuickBooks application.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#realm_id Connector#realm_id}
  */
  readonly realmId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adroll`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `airtable`: The long-lived refresh token along with the client ID and client secret carry the information necessary to get a new access token for API resources.
  * 	- Service `amazon_ads`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `amazon_selling_partner`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `asana`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `autodesk_bim_360`: Your Autodesk BIM 360 Refresh Token.
  * 	- Service `azure_service_bus`: The refresh token. Required if the authentication type is `AzureActiveDirectory`
  * 	- Service `azure_sql_db`: The long-lived Refresh token carries the information necessary to get a new access token for API resources.
  * 	- Service `azure_sql_managed_db`: The long-lived Refresh token carries the information necessary to get a new access token for API resources.
  * 	- Service `billing_platform`: Your BillingPlatform refresh token.
  * 	- Service `bingads`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `business_central`: The long-lived refresh token along with the client ID and client secret parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `calendly`: Your Calendly refresh token.
  * 	- Service `docebo`: Your Docebo Refresh Token.
  * 	- Service `double_click_campaign_manager`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `double_click_publishers`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `drift`: Your Drift refresh token.
  * 	- Service `dropbox`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `dynamics_365`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `employment_hero`: Your Employment Hero refresh token.
  * 	- Service `financial_force`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `freshbooks`: Your FreshBooks Refresh Token.
  * 	- Service `front`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `gitlab`: Your GitLab refresh token.
  * 	- Service `google_ads`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `google_analytics`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `google_analytics_4`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `google_analytics_mcf`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `google_business_profile`: Your Google Business Profile Refresh token.
  * 	- Service `google_calendar`: Your Google Calendar refresh token.
  * 	- Service `google_classroom`: The long-lived `Refresh token` of your Google Calendar client application.
  * 	- Service `google_display_and_video_360`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `google_play`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `google_search_ads_360`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `google_sheets`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `google_tasks`: The long-lived refresh token of your Google Tasks client application.
  * 	- Service `helpscout`: The long-lived `refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `hubspot`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `linkedin_ads`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `linkedin_company_pages`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `microsoft_lists`: The long-lived Refresh token carries the information necessary to get a new access token for API resources.
  * 	- Service `one_drive`: The long-lived `Refresh token` carries the information necessary to get a new access token for API resources.
  * 	- Service `optimizely`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `outreach`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `pinterest_ads`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `pinterest_organic`: Your Pinterest refresh token.
  * 	- Service `pipedrive`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `qualtrics`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `quickbooks`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `ramp`: Your Ramp refresh token.
  * 	- Service `reddit_ads`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `salesforce`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `salesforce_sandbox`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `salesloft`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `share_point`: The long-lived Refresh token carries the information necessary to get a new access token for API resources.
  * 	- Service `slack`: Your Slack refresh token.
  * 	- Service `snapchat_ads`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `spotify_ads`: The long-lived `Refresh token` along with the `client_id` and `client_secret` parameters carry the information necessary to get a new access token for API resources.
  * 	- Service `typeform`: The Typeform API refresh token.
  * 	- Service `workday`: OAuth Refresh Token
  * 	- Service `yahoo_search_ads_yahoo_japan`: Your Yahoo Search Ads Refresh Token.
  * 	- Service `zoho_crm`: The long-lived `Refresh token`, along with the `client_id` and `client_secret` parameters, carries the information necessary to get a new access token for API resources.
  * 	- Service `zoom`: Your Zoom Refresh token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#refresh_token Connector#refresh_token}
  */
  readonly refreshToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_selling_partner`: `IAM Role ARN` of your AWS Account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#role_arn Connector#role_arn}
  */
  readonly roleArn?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apple_search_ads`: Apple Search Ads REST API Team ID. Must be populated if `is_auth2_enabled` is set to `true`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#team_id Connector#team_id}
  */
  readonly teamId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `share_point`: `Tenant ID` of your Microsoft client application.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tenant_id Connector#tenant_id}
  */
  readonly tenantId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: Access Token
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#user_access_token Connector#user_access_token}
  */
  readonly userAccessToken?: string;
  /**
  * client_access block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_access Connector#client_access}
  */
  readonly clientAccess?: ConnectorAuthClientAccess;
}

export function connectorAuthToTerraform(struct?: ConnectorAuth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_token: cdktf.stringToTerraform(struct!.accessToken),
    api_key: cdktf.stringToTerraform(struct!.apiKey),
    aws_access_key: cdktf.stringToTerraform(struct!.awsAccessKey),
    aws_secret_key: cdktf.stringToTerraform(struct!.awsSecretKey),
    client_id: cdktf.stringToTerraform(struct!.clientId),
    client_secret: cdktf.stringToTerraform(struct!.clientSecret),
    consumer_key: cdktf.stringToTerraform(struct!.consumerKey),
    consumer_secret: cdktf.stringToTerraform(struct!.consumerSecret),
    key_id: cdktf.stringToTerraform(struct!.keyId),
    oauth_token: cdktf.stringToTerraform(struct!.oauthToken),
    oauth_token_secret: cdktf.stringToTerraform(struct!.oauthTokenSecret),
    ocapi_access_token: cdktf.stringToTerraform(struct!.ocapiAccessToken),
    ocapi_refresh_token: cdktf.stringToTerraform(struct!.ocapiRefreshToken),
    previous_refresh_token: cdktf.stringToTerraform(struct!.previousRefreshToken),
    realm_id: cdktf.stringToTerraform(struct!.realmId),
    refresh_token: cdktf.stringToTerraform(struct!.refreshToken),
    role_arn: cdktf.stringToTerraform(struct!.roleArn),
    team_id: cdktf.stringToTerraform(struct!.teamId),
    tenant_id: cdktf.stringToTerraform(struct!.tenantId),
    user_access_token: cdktf.stringToTerraform(struct!.userAccessToken),
    client_access: connectorAuthClientAccessToTerraform(struct!.clientAccess),
  }
}


export function connectorAuthToHclTerraform(struct?: ConnectorAuth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_token: {
      value: cdktf.stringToHclTerraform(struct!.accessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_key: {
      value: cdktf.stringToHclTerraform(struct!.apiKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    aws_access_key: {
      value: cdktf.stringToHclTerraform(struct!.awsAccessKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    aws_secret_key: {
      value: cdktf.stringToHclTerraform(struct!.awsSecretKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_secret: {
      value: cdktf.stringToHclTerraform(struct!.clientSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    consumer_key: {
      value: cdktf.stringToHclTerraform(struct!.consumerKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    consumer_secret: {
      value: cdktf.stringToHclTerraform(struct!.consumerSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key_id: {
      value: cdktf.stringToHclTerraform(struct!.keyId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    oauth_token: {
      value: cdktf.stringToHclTerraform(struct!.oauthToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    oauth_token_secret: {
      value: cdktf.stringToHclTerraform(struct!.oauthTokenSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ocapi_access_token: {
      value: cdktf.stringToHclTerraform(struct!.ocapiAccessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ocapi_refresh_token: {
      value: cdktf.stringToHclTerraform(struct!.ocapiRefreshToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    previous_refresh_token: {
      value: cdktf.stringToHclTerraform(struct!.previousRefreshToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    realm_id: {
      value: cdktf.stringToHclTerraform(struct!.realmId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    refresh_token: {
      value: cdktf.stringToHclTerraform(struct!.refreshToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role_arn: {
      value: cdktf.stringToHclTerraform(struct!.roleArn),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    team_id: {
      value: cdktf.stringToHclTerraform(struct!.teamId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tenant_id: {
      value: cdktf.stringToHclTerraform(struct!.tenantId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_access_token: {
      value: cdktf.stringToHclTerraform(struct!.userAccessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_access: {
      value: connectorAuthClientAccessToHclTerraform(struct!.clientAccess),
      isBlock: true,
      type: "struct",
      storageClassType: "ConnectorAuthClientAccess",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorAuthOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): ConnectorAuth | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessToken = this._accessToken;
    }
    if (this._apiKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiKey = this._apiKey;
    }
    if (this._awsAccessKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.awsAccessKey = this._awsAccessKey;
    }
    if (this._awsSecretKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.awsSecretKey = this._awsSecretKey;
    }
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._clientSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientSecret = this._clientSecret;
    }
    if (this._consumerKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.consumerKey = this._consumerKey;
    }
    if (this._consumerSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.consumerSecret = this._consumerSecret;
    }
    if (this._keyId !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyId = this._keyId;
    }
    if (this._oauthToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauthToken = this._oauthToken;
    }
    if (this._oauthTokenSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauthTokenSecret = this._oauthTokenSecret;
    }
    if (this._ocapiAccessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.ocapiAccessToken = this._ocapiAccessToken;
    }
    if (this._ocapiRefreshToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.ocapiRefreshToken = this._ocapiRefreshToken;
    }
    if (this._previousRefreshToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.previousRefreshToken = this._previousRefreshToken;
    }
    if (this._realmId !== undefined) {
      hasAnyValues = true;
      internalValueResult.realmId = this._realmId;
    }
    if (this._refreshToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.refreshToken = this._refreshToken;
    }
    if (this._roleArn !== undefined) {
      hasAnyValues = true;
      internalValueResult.roleArn = this._roleArn;
    }
    if (this._teamId !== undefined) {
      hasAnyValues = true;
      internalValueResult.teamId = this._teamId;
    }
    if (this._tenantId !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenantId = this._tenantId;
    }
    if (this._userAccessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.userAccessToken = this._userAccessToken;
    }
    if (this._clientAccess?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientAccess = this._clientAccess?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorAuth | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessToken = undefined;
      this._apiKey = undefined;
      this._awsAccessKey = undefined;
      this._awsSecretKey = undefined;
      this._clientId = undefined;
      this._clientSecret = undefined;
      this._consumerKey = undefined;
      this._consumerSecret = undefined;
      this._keyId = undefined;
      this._oauthToken = undefined;
      this._oauthTokenSecret = undefined;
      this._ocapiAccessToken = undefined;
      this._ocapiRefreshToken = undefined;
      this._previousRefreshToken = undefined;
      this._realmId = undefined;
      this._refreshToken = undefined;
      this._roleArn = undefined;
      this._teamId = undefined;
      this._tenantId = undefined;
      this._userAccessToken = undefined;
      this._clientAccess.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessToken = value.accessToken;
      this._apiKey = value.apiKey;
      this._awsAccessKey = value.awsAccessKey;
      this._awsSecretKey = value.awsSecretKey;
      this._clientId = value.clientId;
      this._clientSecret = value.clientSecret;
      this._consumerKey = value.consumerKey;
      this._consumerSecret = value.consumerSecret;
      this._keyId = value.keyId;
      this._oauthToken = value.oauthToken;
      this._oauthTokenSecret = value.oauthTokenSecret;
      this._ocapiAccessToken = value.ocapiAccessToken;
      this._ocapiRefreshToken = value.ocapiRefreshToken;
      this._previousRefreshToken = value.previousRefreshToken;
      this._realmId = value.realmId;
      this._refreshToken = value.refreshToken;
      this._roleArn = value.roleArn;
      this._teamId = value.teamId;
      this._tenantId = value.tenantId;
      this._userAccessToken = value.userAccessToken;
      this._clientAccess.internalValue = value.clientAccess;
    }
  }

  // access_token - computed: false, optional: true, required: false
  private _accessToken?: string; 
  public get accessToken() {
    return this.getStringAttribute('access_token');
  }
  public set accessToken(value: string) {
    this._accessToken = value;
  }
  public resetAccessToken() {
    this._accessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessTokenInput() {
    return this._accessToken;
  }

  // api_key - computed: false, optional: true, required: false
  private _apiKey?: string; 
  public get apiKey() {
    return this.getStringAttribute('api_key');
  }
  public set apiKey(value: string) {
    this._apiKey = value;
  }
  public resetApiKey() {
    this._apiKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiKeyInput() {
    return this._apiKey;
  }

  // aws_access_key - computed: false, optional: true, required: false
  private _awsAccessKey?: string; 
  public get awsAccessKey() {
    return this.getStringAttribute('aws_access_key');
  }
  public set awsAccessKey(value: string) {
    this._awsAccessKey = value;
  }
  public resetAwsAccessKey() {
    this._awsAccessKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get awsAccessKeyInput() {
    return this._awsAccessKey;
  }

  // aws_secret_key - computed: false, optional: true, required: false
  private _awsSecretKey?: string; 
  public get awsSecretKey() {
    return this.getStringAttribute('aws_secret_key');
  }
  public set awsSecretKey(value: string) {
    this._awsSecretKey = value;
  }
  public resetAwsSecretKey() {
    this._awsSecretKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get awsSecretKeyInput() {
    return this._awsSecretKey;
  }

  // client_id - computed: false, optional: true, required: false
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  public resetClientId() {
    this._clientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // client_secret - computed: false, optional: true, required: false
  private _clientSecret?: string; 
  public get clientSecret() {
    return this.getStringAttribute('client_secret');
  }
  public set clientSecret(value: string) {
    this._clientSecret = value;
  }
  public resetClientSecret() {
    this._clientSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientSecretInput() {
    return this._clientSecret;
  }

  // consumer_key - computed: false, optional: true, required: false
  private _consumerKey?: string; 
  public get consumerKey() {
    return this.getStringAttribute('consumer_key');
  }
  public set consumerKey(value: string) {
    this._consumerKey = value;
  }
  public resetConsumerKey() {
    this._consumerKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consumerKeyInput() {
    return this._consumerKey;
  }

  // consumer_secret - computed: false, optional: true, required: false
  private _consumerSecret?: string; 
  public get consumerSecret() {
    return this.getStringAttribute('consumer_secret');
  }
  public set consumerSecret(value: string) {
    this._consumerSecret = value;
  }
  public resetConsumerSecret() {
    this._consumerSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consumerSecretInput() {
    return this._consumerSecret;
  }

  // key_id - computed: false, optional: true, required: false
  private _keyId?: string; 
  public get keyId() {
    return this.getStringAttribute('key_id');
  }
  public set keyId(value: string) {
    this._keyId = value;
  }
  public resetKeyId() {
    this._keyId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyIdInput() {
    return this._keyId;
  }

  // oauth_token - computed: false, optional: true, required: false
  private _oauthToken?: string; 
  public get oauthToken() {
    return this.getStringAttribute('oauth_token');
  }
  public set oauthToken(value: string) {
    this._oauthToken = value;
  }
  public resetOauthToken() {
    this._oauthToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauthTokenInput() {
    return this._oauthToken;
  }

  // oauth_token_secret - computed: false, optional: true, required: false
  private _oauthTokenSecret?: string; 
  public get oauthTokenSecret() {
    return this.getStringAttribute('oauth_token_secret');
  }
  public set oauthTokenSecret(value: string) {
    this._oauthTokenSecret = value;
  }
  public resetOauthTokenSecret() {
    this._oauthTokenSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauthTokenSecretInput() {
    return this._oauthTokenSecret;
  }

  // ocapi_access_token - computed: false, optional: true, required: false
  private _ocapiAccessToken?: string; 
  public get ocapiAccessToken() {
    return this.getStringAttribute('ocapi_access_token');
  }
  public set ocapiAccessToken(value: string) {
    this._ocapiAccessToken = value;
  }
  public resetOcapiAccessToken() {
    this._ocapiAccessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ocapiAccessTokenInput() {
    return this._ocapiAccessToken;
  }

  // ocapi_refresh_token - computed: false, optional: true, required: false
  private _ocapiRefreshToken?: string; 
  public get ocapiRefreshToken() {
    return this.getStringAttribute('ocapi_refresh_token');
  }
  public set ocapiRefreshToken(value: string) {
    this._ocapiRefreshToken = value;
  }
  public resetOcapiRefreshToken() {
    this._ocapiRefreshToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ocapiRefreshTokenInput() {
    return this._ocapiRefreshToken;
  }

  // previous_refresh_token - computed: false, optional: true, required: false
  private _previousRefreshToken?: string; 
  public get previousRefreshToken() {
    return this.getStringAttribute('previous_refresh_token');
  }
  public set previousRefreshToken(value: string) {
    this._previousRefreshToken = value;
  }
  public resetPreviousRefreshToken() {
    this._previousRefreshToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get previousRefreshTokenInput() {
    return this._previousRefreshToken;
  }

  // realm_id - computed: false, optional: true, required: false
  private _realmId?: string; 
  public get realmId() {
    return this.getStringAttribute('realm_id');
  }
  public set realmId(value: string) {
    this._realmId = value;
  }
  public resetRealmId() {
    this._realmId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get realmIdInput() {
    return this._realmId;
  }

  // refresh_token - computed: false, optional: true, required: false
  private _refreshToken?: string; 
  public get refreshToken() {
    return this.getStringAttribute('refresh_token');
  }
  public set refreshToken(value: string) {
    this._refreshToken = value;
  }
  public resetRefreshToken() {
    this._refreshToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get refreshTokenInput() {
    return this._refreshToken;
  }

  // role_arn - computed: false, optional: true, required: false
  private _roleArn?: string; 
  public get roleArn() {
    return this.getStringAttribute('role_arn');
  }
  public set roleArn(value: string) {
    this._roleArn = value;
  }
  public resetRoleArn() {
    this._roleArn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get roleArnInput() {
    return this._roleArn;
  }

  // team_id - computed: false, optional: true, required: false
  private _teamId?: string; 
  public get teamId() {
    return this.getStringAttribute('team_id');
  }
  public set teamId(value: string) {
    this._teamId = value;
  }
  public resetTeamId() {
    this._teamId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get teamIdInput() {
    return this._teamId;
  }

  // tenant_id - computed: false, optional: true, required: false
  private _tenantId?: string; 
  public get tenantId() {
    return this.getStringAttribute('tenant_id');
  }
  public set tenantId(value: string) {
    this._tenantId = value;
  }
  public resetTenantId() {
    this._tenantId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantIdInput() {
    return this._tenantId;
  }

  // user_access_token - computed: false, optional: true, required: false
  private _userAccessToken?: string; 
  public get userAccessToken() {
    return this.getStringAttribute('user_access_token');
  }
  public set userAccessToken(value: string) {
    this._userAccessToken = value;
  }
  public resetUserAccessToken() {
    this._userAccessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userAccessTokenInput() {
    return this._userAccessToken;
  }

  // client_access - computed: false, optional: true, required: false
  private _clientAccess = new ConnectorAuthClientAccessOutputReference(this, "client_access");
  public get clientAccess() {
    return this._clientAccess;
  }
  public putClientAccess(value: ConnectorAuthClientAccess) {
    this._clientAccess.internalValue = value;
  }
  public resetClientAccess() {
    this._clientAccess.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientAccessInput() {
    return this._clientAccess.internalValue;
  }
}
export interface ConnectorConfigAccountsRedditAds {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: Reddit username of the additional linked account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#name Connector#name}
  */
  readonly name?: string;
}

export function connectorConfigAccountsRedditAdsToTerraform(struct?: ConnectorConfigAccountsRedditAds | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function connectorConfigAccountsRedditAdsToHclTerraform(struct?: ConnectorConfigAccountsRedditAds | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigAccountsRedditAdsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigAccountsRedditAds | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigAccountsRedditAds | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class ConnectorConfigAccountsRedditAdsList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigAccountsRedditAds[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigAccountsRedditAdsOutputReference {
    return new ConnectorConfigAccountsRedditAdsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigAdobeAnalyticsConfigurations {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: The calculated_metrics that you want to sync.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#calculated_metrics Connector#calculated_metrics}
  */
  readonly calculatedMetrics?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: The elements that you want to sync.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#elements Connector#elements}
  */
  readonly elements?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: The metrics that you want to sync.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#metrics Connector#metrics}
  */
  readonly metrics?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: Specific report suites to sync. Must be populated if `sync_mode` is set to `SpecificReportSuites`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_suites Connector#report_suites}
  */
  readonly reportSuites?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: The segments that you want to sync.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#segments Connector#segments}
  */
  readonly segments?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: Whether to sync all report suites or specific report suites. Default value: `AllReportSuites` .
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_mode Connector#sync_mode}
  */
  readonly syncMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: The table name unique within the schema to which connector will sync the data. Required for connector creation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#table Connector#table}
  */
  readonly table?: string;
}

export function connectorConfigAdobeAnalyticsConfigurationsToTerraform(struct?: ConnectorConfigAdobeAnalyticsConfigurations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    calculated_metrics: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.calculatedMetrics),
    elements: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.elements),
    metrics: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.metrics),
    report_suites: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.reportSuites),
    segments: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.segments),
    sync_mode: cdktf.stringToTerraform(struct!.syncMode),
    table: cdktf.stringToTerraform(struct!.table),
  }
}


export function connectorConfigAdobeAnalyticsConfigurationsToHclTerraform(struct?: ConnectorConfigAdobeAnalyticsConfigurations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    calculated_metrics: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.calculatedMetrics),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    elements: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.elements),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    metrics: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.metrics),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    report_suites: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.reportSuites),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    segments: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.segments),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    sync_mode: {
      value: cdktf.stringToHclTerraform(struct!.syncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigAdobeAnalyticsConfigurationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigAdobeAnalyticsConfigurations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._calculatedMetrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.calculatedMetrics = this._calculatedMetrics;
    }
    if (this._elements !== undefined) {
      hasAnyValues = true;
      internalValueResult.elements = this._elements;
    }
    if (this._metrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.metrics = this._metrics;
    }
    if (this._reportSuites !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportSuites = this._reportSuites;
    }
    if (this._segments !== undefined) {
      hasAnyValues = true;
      internalValueResult.segments = this._segments;
    }
    if (this._syncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncMode = this._syncMode;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigAdobeAnalyticsConfigurations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._calculatedMetrics = undefined;
      this._elements = undefined;
      this._metrics = undefined;
      this._reportSuites = undefined;
      this._segments = undefined;
      this._syncMode = undefined;
      this._table = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._calculatedMetrics = value.calculatedMetrics;
      this._elements = value.elements;
      this._metrics = value.metrics;
      this._reportSuites = value.reportSuites;
      this._segments = value.segments;
      this._syncMode = value.syncMode;
      this._table = value.table;
    }
  }

  // calculated_metrics - computed: false, optional: true, required: false
  private _calculatedMetrics?: string[]; 
  public get calculatedMetrics() {
    return cdktf.Fn.tolist(this.getListAttribute('calculated_metrics'));
  }
  public set calculatedMetrics(value: string[]) {
    this._calculatedMetrics = value;
  }
  public resetCalculatedMetrics() {
    this._calculatedMetrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get calculatedMetricsInput() {
    return this._calculatedMetrics;
  }

  // elements - computed: false, optional: true, required: false
  private _elements?: string[]; 
  public get elements() {
    return cdktf.Fn.tolist(this.getListAttribute('elements'));
  }
  public set elements(value: string[]) {
    this._elements = value;
  }
  public resetElements() {
    this._elements = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get elementsInput() {
    return this._elements;
  }

  // metrics - computed: false, optional: true, required: false
  private _metrics?: string[]; 
  public get metrics() {
    return cdktf.Fn.tolist(this.getListAttribute('metrics'));
  }
  public set metrics(value: string[]) {
    this._metrics = value;
  }
  public resetMetrics() {
    this._metrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricsInput() {
    return this._metrics;
  }

  // report_suites - computed: false, optional: true, required: false
  private _reportSuites?: string[]; 
  public get reportSuites() {
    return cdktf.Fn.tolist(this.getListAttribute('report_suites'));
  }
  public set reportSuites(value: string[]) {
    this._reportSuites = value;
  }
  public resetReportSuites() {
    this._reportSuites = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportSuitesInput() {
    return this._reportSuites;
  }

  // segments - computed: false, optional: true, required: false
  private _segments?: string[]; 
  public get segments() {
    return cdktf.Fn.tolist(this.getListAttribute('segments'));
  }
  public set segments(value: string[]) {
    this._segments = value;
  }
  public resetSegments() {
    this._segments = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get segmentsInput() {
    return this._segments;
  }

  // sync_mode - computed: true, optional: true, required: false
  private _syncMode?: string; 
  public get syncMode() {
    return this.getStringAttribute('sync_mode');
  }
  public set syncMode(value: string) {
    this._syncMode = value;
  }
  public resetSyncMode() {
    this._syncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncModeInput() {
    return this._syncMode;
  }

  // table - computed: false, optional: true, required: false
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  public resetTable() {
    this._table = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }
}

export class ConnectorConfigAdobeAnalyticsConfigurationsList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigAdobeAnalyticsConfigurations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigAdobeAnalyticsConfigurationsOutputReference {
    return new ConnectorConfigAdobeAnalyticsConfigurationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigAppIdsAppsflyer {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: Your App ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#app_id Connector#app_id}
  */
  readonly appId?: string;
}

export function connectorConfigAppIdsAppsflyerToTerraform(struct?: ConnectorConfigAppIdsAppsflyer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    app_id: cdktf.stringToTerraform(struct!.appId),
  }
}


export function connectorConfigAppIdsAppsflyerToHclTerraform(struct?: ConnectorConfigAppIdsAppsflyer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    app_id: {
      value: cdktf.stringToHclTerraform(struct!.appId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigAppIdsAppsflyerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigAppIdsAppsflyer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appId !== undefined) {
      hasAnyValues = true;
      internalValueResult.appId = this._appId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigAppIdsAppsflyer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appId = value.appId;
    }
  }

  // app_id - computed: false, optional: true, required: false
  private _appId?: string; 
  public get appId() {
    return this.getStringAttribute('app_id');
  }
  public set appId(value: string) {
    this._appId = value;
  }
  public resetAppId() {
    this._appId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appIdInput() {
    return this._appId;
  }
}

export class ConnectorConfigAppIdsAppsflyerList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigAppIdsAppsflyer[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigAppIdsAppsflyerOutputReference {
    return new ConnectorConfigAppIdsAppsflyerOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigCustomPayloads {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_lambda`: Payload Key
  * 	- Service `azure_function`: Payload Key
  * 	- Service `google_cloud_function`: Payload Key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#key Connector#key}
  */
  readonly key?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_lambda`: Payload Value
  * 	- Service `azure_function`: Payload Value
  * 	- Service `google_cloud_function`: Payload Value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#value Connector#value}
  */
  readonly value?: string;
}

export function connectorConfigCustomPayloadsToTerraform(struct?: ConnectorConfigCustomPayloads | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function connectorConfigCustomPayloadsToHclTerraform(struct?: ConnectorConfigCustomPayloads | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigCustomPayloadsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigCustomPayloads | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigCustomPayloads | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._value = value.value;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class ConnectorConfigCustomPayloadsList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigCustomPayloads[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigCustomPayloadsOutputReference {
    return new ConnectorConfigCustomPayloadsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigCustomReports {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snapchat_ads`: [Determines if reports will be based on imression on coversion time](https://fivetran.com/docs/connectors/applications/snapchat-ads/custom-reports)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#action_report_time Connector#action_report_time}
  */
  readonly actionReportTime?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snapchat_ads`: Add fields for separate \"swipe-up\" and \"view\" variants of selected metrics
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#add_metric_variants Connector#add_metric_variants}
  */
  readonly addMetricVariants?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `tiktok_ads`: Time aggregation of report
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#aggregate Connector#aggregate}
  */
  readonly aggregate?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snapchat_ads`: [List of Core, Additional and Conversion Metrics Stats Fields](https://fivetran.com/docs/connectors/applications/snapchat-ads/custom-reports#basemetricsfields).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#base_metrics_fields Connector#base_metrics_fields}
  */
  readonly baseMetricsFields?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snapchat_ads`: [Sets Breakdown on custom report](https://fivetran.com/docs/connectors/applications/snapchat-ads/custom-reports#breakdown).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#breakdown Connector#breakdown}
  */
  readonly breakdown?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snapchat_ads`: [Sets Breakout on custom report](https://fivetran.com/docs/connectors/applications/snapchat-ads/custom-reports#breakout).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#breakout Connector#breakout}
  */
  readonly breakout?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: The boolean value specifying whether to enable or disable event conversions data synchronisation. Default value: `false`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#conversions_report_included Connector#conversions_report_included}
  */
  readonly conversionsReportIncluded?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: The boolean value specifying whether the custom events are included in event conversions report. Default value: `false`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_events_included Connector#custom_events_included}
  */
  readonly customEventsIncluded?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snapchat_ads`: [Sets Dimension on custom report](https://fivetran.com/docs/connectors/applications/snapchat-ads/custom-reports#dimension).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dimension Connector#dimension}
  */
  readonly dimension?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `tiktok_ads`: Dimensions to synced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dimensions Connector#dimensions}
  */
  readonly dimensions?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: The list of events the conversion data will be synchronised for
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#event_names Connector#event_names}
  */
  readonly eventNames?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snapchat_ads`: [Sets Granularity on custom report](https://fivetran.com/docs/connectors/applications/snapchat-ads/custom-reports#granularity).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#granularity Connector#granularity}
  */
  readonly granularity?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: Level of custom report.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#level Connector#level}
  */
  readonly level?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `tiktok_ads`: Metrics to be synced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#metrics Connector#metrics}
  */
  readonly metrics?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: The list of fields included in custom report
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_fields Connector#report_fields}
  */
  readonly reportFields?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: The table name within the schema to which connector syncs the data of the specific report.
  * 	- Service `snapchat_ads`: Custom report name (must be unique)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_name Connector#report_name}
  */
  readonly reportName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `tiktok_ads`: Type of report to be generated
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_type Connector#report_type}
  */
  readonly reportType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: Level of custom report.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#segmentation Connector#segmentation}
  */
  readonly segmentation?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snapchat_ads`: [List of SKAd  Metrics fields in custom report](https://fivetran.com/docs/connectors/applications/snapchat-ads/custom-reports#skadmetricsfields).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sk_ad_metrics_fields Connector#sk_ad_metrics_fields}
  */
  readonly skAdMetricsFields?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `tiktok_ads`: Destination Table name of report
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#table_name Connector#table_name}
  */
  readonly tableName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: The specific time zone to sync report data if  `useAccountTimeZone` set to `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#time_zone Connector#time_zone}
  */
  readonly timeZone?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: When this parameter is set to `ACCOUNT`, connector will use account related time zone to sync report data. Default value: `ACCOUNT`. Possible values: `ACCOUNT`, `USER`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#time_zone_mode Connector#time_zone_mode}
  */
  readonly timeZoneMode?: string;
}

export function connectorConfigCustomReportsToTerraform(struct?: ConnectorConfigCustomReports | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action_report_time: cdktf.stringToTerraform(struct!.actionReportTime),
    add_metric_variants: cdktf.booleanToTerraform(struct!.addMetricVariants),
    aggregate: cdktf.stringToTerraform(struct!.aggregate),
    base_metrics_fields: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.baseMetricsFields),
    breakdown: cdktf.stringToTerraform(struct!.breakdown),
    breakout: cdktf.stringToTerraform(struct!.breakout),
    conversions_report_included: cdktf.booleanToTerraform(struct!.conversionsReportIncluded),
    custom_events_included: cdktf.booleanToTerraform(struct!.customEventsIncluded),
    dimension: cdktf.stringToTerraform(struct!.dimension),
    dimensions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.dimensions),
    event_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.eventNames),
    granularity: cdktf.stringToTerraform(struct!.granularity),
    level: cdktf.stringToTerraform(struct!.level),
    metrics: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.metrics),
    report_fields: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.reportFields),
    report_name: cdktf.stringToTerraform(struct!.reportName),
    report_type: cdktf.stringToTerraform(struct!.reportType),
    segmentation: cdktf.stringToTerraform(struct!.segmentation),
    sk_ad_metrics_fields: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.skAdMetricsFields),
    table_name: cdktf.stringToTerraform(struct!.tableName),
    time_zone: cdktf.stringToTerraform(struct!.timeZone),
    time_zone_mode: cdktf.stringToTerraform(struct!.timeZoneMode),
  }
}


export function connectorConfigCustomReportsToHclTerraform(struct?: ConnectorConfigCustomReports | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action_report_time: {
      value: cdktf.stringToHclTerraform(struct!.actionReportTime),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    add_metric_variants: {
      value: cdktf.booleanToHclTerraform(struct!.addMetricVariants),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    aggregate: {
      value: cdktf.stringToHclTerraform(struct!.aggregate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    base_metrics_fields: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.baseMetricsFields),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    breakdown: {
      value: cdktf.stringToHclTerraform(struct!.breakdown),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    breakout: {
      value: cdktf.stringToHclTerraform(struct!.breakout),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    conversions_report_included: {
      value: cdktf.booleanToHclTerraform(struct!.conversionsReportIncluded),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    custom_events_included: {
      value: cdktf.booleanToHclTerraform(struct!.customEventsIncluded),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    dimension: {
      value: cdktf.stringToHclTerraform(struct!.dimension),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dimensions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.dimensions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    event_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.eventNames),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    granularity: {
      value: cdktf.stringToHclTerraform(struct!.granularity),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    level: {
      value: cdktf.stringToHclTerraform(struct!.level),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metrics: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.metrics),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    report_fields: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.reportFields),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    report_name: {
      value: cdktf.stringToHclTerraform(struct!.reportName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_type: {
      value: cdktf.stringToHclTerraform(struct!.reportType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    segmentation: {
      value: cdktf.stringToHclTerraform(struct!.segmentation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sk_ad_metrics_fields: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.skAdMetricsFields),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    table_name: {
      value: cdktf.stringToHclTerraform(struct!.tableName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_zone: {
      value: cdktf.stringToHclTerraform(struct!.timeZone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_zone_mode: {
      value: cdktf.stringToHclTerraform(struct!.timeZoneMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigCustomReportsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigCustomReports | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._actionReportTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.actionReportTime = this._actionReportTime;
    }
    if (this._addMetricVariants !== undefined) {
      hasAnyValues = true;
      internalValueResult.addMetricVariants = this._addMetricVariants;
    }
    if (this._aggregate !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregate = this._aggregate;
    }
    if (this._baseMetricsFields !== undefined) {
      hasAnyValues = true;
      internalValueResult.baseMetricsFields = this._baseMetricsFields;
    }
    if (this._breakdown !== undefined) {
      hasAnyValues = true;
      internalValueResult.breakdown = this._breakdown;
    }
    if (this._breakout !== undefined) {
      hasAnyValues = true;
      internalValueResult.breakout = this._breakout;
    }
    if (this._conversionsReportIncluded !== undefined) {
      hasAnyValues = true;
      internalValueResult.conversionsReportIncluded = this._conversionsReportIncluded;
    }
    if (this._customEventsIncluded !== undefined) {
      hasAnyValues = true;
      internalValueResult.customEventsIncluded = this._customEventsIncluded;
    }
    if (this._dimension !== undefined) {
      hasAnyValues = true;
      internalValueResult.dimension = this._dimension;
    }
    if (this._dimensions !== undefined) {
      hasAnyValues = true;
      internalValueResult.dimensions = this._dimensions;
    }
    if (this._eventNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.eventNames = this._eventNames;
    }
    if (this._granularity !== undefined) {
      hasAnyValues = true;
      internalValueResult.granularity = this._granularity;
    }
    if (this._level !== undefined) {
      hasAnyValues = true;
      internalValueResult.level = this._level;
    }
    if (this._metrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.metrics = this._metrics;
    }
    if (this._reportFields !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportFields = this._reportFields;
    }
    if (this._reportName !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportName = this._reportName;
    }
    if (this._reportType !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportType = this._reportType;
    }
    if (this._segmentation !== undefined) {
      hasAnyValues = true;
      internalValueResult.segmentation = this._segmentation;
    }
    if (this._skAdMetricsFields !== undefined) {
      hasAnyValues = true;
      internalValueResult.skAdMetricsFields = this._skAdMetricsFields;
    }
    if (this._tableName !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableName = this._tableName;
    }
    if (this._timeZone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeZone = this._timeZone;
    }
    if (this._timeZoneMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeZoneMode = this._timeZoneMode;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigCustomReports | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._actionReportTime = undefined;
      this._addMetricVariants = undefined;
      this._aggregate = undefined;
      this._baseMetricsFields = undefined;
      this._breakdown = undefined;
      this._breakout = undefined;
      this._conversionsReportIncluded = undefined;
      this._customEventsIncluded = undefined;
      this._dimension = undefined;
      this._dimensions = undefined;
      this._eventNames = undefined;
      this._granularity = undefined;
      this._level = undefined;
      this._metrics = undefined;
      this._reportFields = undefined;
      this._reportName = undefined;
      this._reportType = undefined;
      this._segmentation = undefined;
      this._skAdMetricsFields = undefined;
      this._tableName = undefined;
      this._timeZone = undefined;
      this._timeZoneMode = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._actionReportTime = value.actionReportTime;
      this._addMetricVariants = value.addMetricVariants;
      this._aggregate = value.aggregate;
      this._baseMetricsFields = value.baseMetricsFields;
      this._breakdown = value.breakdown;
      this._breakout = value.breakout;
      this._conversionsReportIncluded = value.conversionsReportIncluded;
      this._customEventsIncluded = value.customEventsIncluded;
      this._dimension = value.dimension;
      this._dimensions = value.dimensions;
      this._eventNames = value.eventNames;
      this._granularity = value.granularity;
      this._level = value.level;
      this._metrics = value.metrics;
      this._reportFields = value.reportFields;
      this._reportName = value.reportName;
      this._reportType = value.reportType;
      this._segmentation = value.segmentation;
      this._skAdMetricsFields = value.skAdMetricsFields;
      this._tableName = value.tableName;
      this._timeZone = value.timeZone;
      this._timeZoneMode = value.timeZoneMode;
    }
  }

  // action_report_time - computed: true, optional: true, required: false
  private _actionReportTime?: string; 
  public get actionReportTime() {
    return this.getStringAttribute('action_report_time');
  }
  public set actionReportTime(value: string) {
    this._actionReportTime = value;
  }
  public resetActionReportTime() {
    this._actionReportTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionReportTimeInput() {
    return this._actionReportTime;
  }

  // add_metric_variants - computed: true, optional: true, required: false
  private _addMetricVariants?: boolean | cdktf.IResolvable; 
  public get addMetricVariants() {
    return this.getBooleanAttribute('add_metric_variants');
  }
  public set addMetricVariants(value: boolean | cdktf.IResolvable) {
    this._addMetricVariants = value;
  }
  public resetAddMetricVariants() {
    this._addMetricVariants = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addMetricVariantsInput() {
    return this._addMetricVariants;
  }

  // aggregate - computed: false, optional: true, required: false
  private _aggregate?: string; 
  public get aggregate() {
    return this.getStringAttribute('aggregate');
  }
  public set aggregate(value: string) {
    this._aggregate = value;
  }
  public resetAggregate() {
    this._aggregate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregateInput() {
    return this._aggregate;
  }

  // base_metrics_fields - computed: false, optional: true, required: false
  private _baseMetricsFields?: string[]; 
  public get baseMetricsFields() {
    return cdktf.Fn.tolist(this.getListAttribute('base_metrics_fields'));
  }
  public set baseMetricsFields(value: string[]) {
    this._baseMetricsFields = value;
  }
  public resetBaseMetricsFields() {
    this._baseMetricsFields = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get baseMetricsFieldsInput() {
    return this._baseMetricsFields;
  }

  // breakdown - computed: false, optional: true, required: false
  private _breakdown?: string; 
  public get breakdown() {
    return this.getStringAttribute('breakdown');
  }
  public set breakdown(value: string) {
    this._breakdown = value;
  }
  public resetBreakdown() {
    this._breakdown = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get breakdownInput() {
    return this._breakdown;
  }

  // breakout - computed: false, optional: true, required: false
  private _breakout?: string; 
  public get breakout() {
    return this.getStringAttribute('breakout');
  }
  public set breakout(value: string) {
    this._breakout = value;
  }
  public resetBreakout() {
    this._breakout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get breakoutInput() {
    return this._breakout;
  }

  // conversions_report_included - computed: true, optional: true, required: false
  private _conversionsReportIncluded?: boolean | cdktf.IResolvable; 
  public get conversionsReportIncluded() {
    return this.getBooleanAttribute('conversions_report_included');
  }
  public set conversionsReportIncluded(value: boolean | cdktf.IResolvable) {
    this._conversionsReportIncluded = value;
  }
  public resetConversionsReportIncluded() {
    this._conversionsReportIncluded = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get conversionsReportIncludedInput() {
    return this._conversionsReportIncluded;
  }

  // custom_events_included - computed: true, optional: true, required: false
  private _customEventsIncluded?: boolean | cdktf.IResolvable; 
  public get customEventsIncluded() {
    return this.getBooleanAttribute('custom_events_included');
  }
  public set customEventsIncluded(value: boolean | cdktf.IResolvable) {
    this._customEventsIncluded = value;
  }
  public resetCustomEventsIncluded() {
    this._customEventsIncluded = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customEventsIncludedInput() {
    return this._customEventsIncluded;
  }

  // dimension - computed: false, optional: true, required: false
  private _dimension?: string; 
  public get dimension() {
    return this.getStringAttribute('dimension');
  }
  public set dimension(value: string) {
    this._dimension = value;
  }
  public resetDimension() {
    this._dimension = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dimensionInput() {
    return this._dimension;
  }

  // dimensions - computed: false, optional: true, required: false
  private _dimensions?: string[]; 
  public get dimensions() {
    return cdktf.Fn.tolist(this.getListAttribute('dimensions'));
  }
  public set dimensions(value: string[]) {
    this._dimensions = value;
  }
  public resetDimensions() {
    this._dimensions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dimensionsInput() {
    return this._dimensions;
  }

  // event_names - computed: false, optional: true, required: false
  private _eventNames?: string[]; 
  public get eventNames() {
    return cdktf.Fn.tolist(this.getListAttribute('event_names'));
  }
  public set eventNames(value: string[]) {
    this._eventNames = value;
  }
  public resetEventNames() {
    this._eventNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get eventNamesInput() {
    return this._eventNames;
  }

  // granularity - computed: false, optional: true, required: false
  private _granularity?: string; 
  public get granularity() {
    return this.getStringAttribute('granularity');
  }
  public set granularity(value: string) {
    this._granularity = value;
  }
  public resetGranularity() {
    this._granularity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get granularityInput() {
    return this._granularity;
  }

  // level - computed: false, optional: true, required: false
  private _level?: string; 
  public get level() {
    return this.getStringAttribute('level');
  }
  public set level(value: string) {
    this._level = value;
  }
  public resetLevel() {
    this._level = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get levelInput() {
    return this._level;
  }

  // metrics - computed: false, optional: true, required: false
  private _metrics?: string[]; 
  public get metrics() {
    return cdktf.Fn.tolist(this.getListAttribute('metrics'));
  }
  public set metrics(value: string[]) {
    this._metrics = value;
  }
  public resetMetrics() {
    this._metrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricsInput() {
    return this._metrics;
  }

  // report_fields - computed: false, optional: true, required: false
  private _reportFields?: string[]; 
  public get reportFields() {
    return cdktf.Fn.tolist(this.getListAttribute('report_fields'));
  }
  public set reportFields(value: string[]) {
    this._reportFields = value;
  }
  public resetReportFields() {
    this._reportFields = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportFieldsInput() {
    return this._reportFields;
  }

  // report_name - computed: false, optional: true, required: false
  private _reportName?: string; 
  public get reportName() {
    return this.getStringAttribute('report_name');
  }
  public set reportName(value: string) {
    this._reportName = value;
  }
  public resetReportName() {
    this._reportName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportNameInput() {
    return this._reportName;
  }

  // report_type - computed: false, optional: true, required: false
  private _reportType?: string; 
  public get reportType() {
    return this.getStringAttribute('report_type');
  }
  public set reportType(value: string) {
    this._reportType = value;
  }
  public resetReportType() {
    this._reportType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportTypeInput() {
    return this._reportType;
  }

  // segmentation - computed: false, optional: true, required: false
  private _segmentation?: string; 
  public get segmentation() {
    return this.getStringAttribute('segmentation');
  }
  public set segmentation(value: string) {
    this._segmentation = value;
  }
  public resetSegmentation() {
    this._segmentation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get segmentationInput() {
    return this._segmentation;
  }

  // sk_ad_metrics_fields - computed: false, optional: true, required: false
  private _skAdMetricsFields?: string[]; 
  public get skAdMetricsFields() {
    return cdktf.Fn.tolist(this.getListAttribute('sk_ad_metrics_fields'));
  }
  public set skAdMetricsFields(value: string[]) {
    this._skAdMetricsFields = value;
  }
  public resetSkAdMetricsFields() {
    this._skAdMetricsFields = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get skAdMetricsFieldsInput() {
    return this._skAdMetricsFields;
  }

  // table_name - computed: false, optional: true, required: false
  private _tableName?: string; 
  public get tableName() {
    return this.getStringAttribute('table_name');
  }
  public set tableName(value: string) {
    this._tableName = value;
  }
  public resetTableName() {
    this._tableName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableNameInput() {
    return this._tableName;
  }

  // time_zone - computed: false, optional: true, required: false
  private _timeZone?: string; 
  public get timeZone() {
    return this.getStringAttribute('time_zone');
  }
  public set timeZone(value: string) {
    this._timeZone = value;
  }
  public resetTimeZone() {
    this._timeZone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeZoneInput() {
    return this._timeZone;
  }

  // time_zone_mode - computed: true, optional: true, required: false
  private _timeZoneMode?: string; 
  public get timeZoneMode() {
    return this.getStringAttribute('time_zone_mode');
  }
  public set timeZoneMode(value: string) {
    this._timeZoneMode = value;
  }
  public resetTimeZoneMode() {
    this._timeZoneMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeZoneModeInput() {
    return this._timeZoneMode;
  }
}

export class ConnectorConfigCustomReportsList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigCustomReports[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigCustomReportsOutputReference {
    return new ConnectorConfigCustomReportsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigCustomTables {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: List of action_breakdowns which connector will sync. [Possible action_breakdowns values](https://fivetran.com/docs/connectors/applications/facebook-ads#actionbreakdowns).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#action_breakdowns Connector#action_breakdowns}
  */
  readonly actionBreakdowns?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: The report time of action stats. [Possible action_report time values](https://fivetran.com/docs/connectors/applications/facebook-ads#actionreporttime).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#action_report_time Connector#action_report_time}
  */
  readonly actionReportTime?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: Options to select aggregation duration. [Possible aggregation values](https://fivetran.com/docs/connectors/applications/facebook-ads#aggregation).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#aggregation Connector#aggregation}
  */
  readonly aggregation?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: List of breakdowns which connector will sync. [Possible breakdowns values](https://fivetran.com/docs/connectors/applications/facebook-ads#breakdowns).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#breakdowns Connector#breakdowns}
  */
  readonly breakdowns?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: Time period to attribute conversions based on clicks. [Possible click_attribution_window values](https://fivetran.com/docs/connectors/applications/facebook-ads#clickattributionwindow).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#click_attribution_window Connector#click_attribution_window}
  */
  readonly clickAttributionWindow?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: Option to select Prebuilt Reports or Custom Reports. [Possible config_type values](https://fivetran.com/docs/connectors/applications/facebook-ads#configtype).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#config_type Connector#config_type}
  */
  readonly configType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: Time period to attribute conversions based on engaged views. [Possible view_attribution_window values](https://fivetran.com/docs/connectors/applications/facebook-ads#engagedviewattributionwindow).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#engaged_view_attribution_window Connector#engaged_view_attribution_window}
  */
  readonly engagedViewAttributionWindow?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: List of fields which connector will sync. [Possible field values](https://fivetran.com/docs/connectors/applications/facebook-ads#fields).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#fields Connector#fields}
  */
  readonly fields?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#level Connector#level}
  */
  readonly level?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: The report name to which connector will sync the data. [Possible prebuilt_report values](https://fivetran.com/docs/connectors/applications/facebook-ads#prebuiltreport).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#prebuilt_report_name Connector#prebuilt_report_name}
  */
  readonly prebuiltReportName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: The table name within the schema to which the connector will sync the data. It must be unique within the connector and must comply with [Fivetran's naming conventions](https://fivetran.com/docs/getting-started/core-concepts#namingconventions).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#table_name Connector#table_name}
  */
  readonly tableName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#use_unified_attribution_setting Connector#use_unified_attribution_setting}
  */
  readonly useUnifiedAttributionSetting?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: Time period to attribute conversions based on views. [Possible view_attribution_window values](https://fivetran.com/docs/connectors/applications/facebook-ads#viewattributionwindow).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#view_attribution_window Connector#view_attribution_window}
  */
  readonly viewAttributionWindow?: string;
}

export function connectorConfigCustomTablesToTerraform(struct?: ConnectorConfigCustomTables | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action_breakdowns: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.actionBreakdowns),
    action_report_time: cdktf.stringToTerraform(struct!.actionReportTime),
    aggregation: cdktf.stringToTerraform(struct!.aggregation),
    breakdowns: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.breakdowns),
    click_attribution_window: cdktf.stringToTerraform(struct!.clickAttributionWindow),
    config_type: cdktf.stringToTerraform(struct!.configType),
    engaged_view_attribution_window: cdktf.stringToTerraform(struct!.engagedViewAttributionWindow),
    fields: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.fields),
    level: cdktf.stringToTerraform(struct!.level),
    prebuilt_report_name: cdktf.stringToTerraform(struct!.prebuiltReportName),
    table_name: cdktf.stringToTerraform(struct!.tableName),
    use_unified_attribution_setting: cdktf.booleanToTerraform(struct!.useUnifiedAttributionSetting),
    view_attribution_window: cdktf.stringToTerraform(struct!.viewAttributionWindow),
  }
}


export function connectorConfigCustomTablesToHclTerraform(struct?: ConnectorConfigCustomTables | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action_breakdowns: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.actionBreakdowns),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    action_report_time: {
      value: cdktf.stringToHclTerraform(struct!.actionReportTime),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    aggregation: {
      value: cdktf.stringToHclTerraform(struct!.aggregation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    breakdowns: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.breakdowns),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    click_attribution_window: {
      value: cdktf.stringToHclTerraform(struct!.clickAttributionWindow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config_type: {
      value: cdktf.stringToHclTerraform(struct!.configType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    engaged_view_attribution_window: {
      value: cdktf.stringToHclTerraform(struct!.engagedViewAttributionWindow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fields: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.fields),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    level: {
      value: cdktf.stringToHclTerraform(struct!.level),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prebuilt_report_name: {
      value: cdktf.stringToHclTerraform(struct!.prebuiltReportName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table_name: {
      value: cdktf.stringToHclTerraform(struct!.tableName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_unified_attribution_setting: {
      value: cdktf.booleanToHclTerraform(struct!.useUnifiedAttributionSetting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    view_attribution_window: {
      value: cdktf.stringToHclTerraform(struct!.viewAttributionWindow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigCustomTablesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigCustomTables | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._actionBreakdowns !== undefined) {
      hasAnyValues = true;
      internalValueResult.actionBreakdowns = this._actionBreakdowns;
    }
    if (this._actionReportTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.actionReportTime = this._actionReportTime;
    }
    if (this._aggregation !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregation = this._aggregation;
    }
    if (this._breakdowns !== undefined) {
      hasAnyValues = true;
      internalValueResult.breakdowns = this._breakdowns;
    }
    if (this._clickAttributionWindow !== undefined) {
      hasAnyValues = true;
      internalValueResult.clickAttributionWindow = this._clickAttributionWindow;
    }
    if (this._configType !== undefined) {
      hasAnyValues = true;
      internalValueResult.configType = this._configType;
    }
    if (this._engagedViewAttributionWindow !== undefined) {
      hasAnyValues = true;
      internalValueResult.engagedViewAttributionWindow = this._engagedViewAttributionWindow;
    }
    if (this._fields !== undefined) {
      hasAnyValues = true;
      internalValueResult.fields = this._fields;
    }
    if (this._level !== undefined) {
      hasAnyValues = true;
      internalValueResult.level = this._level;
    }
    if (this._prebuiltReportName !== undefined) {
      hasAnyValues = true;
      internalValueResult.prebuiltReportName = this._prebuiltReportName;
    }
    if (this._tableName !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableName = this._tableName;
    }
    if (this._useUnifiedAttributionSetting !== undefined) {
      hasAnyValues = true;
      internalValueResult.useUnifiedAttributionSetting = this._useUnifiedAttributionSetting;
    }
    if (this._viewAttributionWindow !== undefined) {
      hasAnyValues = true;
      internalValueResult.viewAttributionWindow = this._viewAttributionWindow;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigCustomTables | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._actionBreakdowns = undefined;
      this._actionReportTime = undefined;
      this._aggregation = undefined;
      this._breakdowns = undefined;
      this._clickAttributionWindow = undefined;
      this._configType = undefined;
      this._engagedViewAttributionWindow = undefined;
      this._fields = undefined;
      this._level = undefined;
      this._prebuiltReportName = undefined;
      this._tableName = undefined;
      this._useUnifiedAttributionSetting = undefined;
      this._viewAttributionWindow = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._actionBreakdowns = value.actionBreakdowns;
      this._actionReportTime = value.actionReportTime;
      this._aggregation = value.aggregation;
      this._breakdowns = value.breakdowns;
      this._clickAttributionWindow = value.clickAttributionWindow;
      this._configType = value.configType;
      this._engagedViewAttributionWindow = value.engagedViewAttributionWindow;
      this._fields = value.fields;
      this._level = value.level;
      this._prebuiltReportName = value.prebuiltReportName;
      this._tableName = value.tableName;
      this._useUnifiedAttributionSetting = value.useUnifiedAttributionSetting;
      this._viewAttributionWindow = value.viewAttributionWindow;
    }
  }

  // action_breakdowns - computed: false, optional: true, required: false
  private _actionBreakdowns?: string[]; 
  public get actionBreakdowns() {
    return cdktf.Fn.tolist(this.getListAttribute('action_breakdowns'));
  }
  public set actionBreakdowns(value: string[]) {
    this._actionBreakdowns = value;
  }
  public resetActionBreakdowns() {
    this._actionBreakdowns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionBreakdownsInput() {
    return this._actionBreakdowns;
  }

  // action_report_time - computed: true, optional: true, required: false
  private _actionReportTime?: string; 
  public get actionReportTime() {
    return this.getStringAttribute('action_report_time');
  }
  public set actionReportTime(value: string) {
    this._actionReportTime = value;
  }
  public resetActionReportTime() {
    this._actionReportTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionReportTimeInput() {
    return this._actionReportTime;
  }

  // aggregation - computed: true, optional: true, required: false
  private _aggregation?: string; 
  public get aggregation() {
    return this.getStringAttribute('aggregation');
  }
  public set aggregation(value: string) {
    this._aggregation = value;
  }
  public resetAggregation() {
    this._aggregation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregationInput() {
    return this._aggregation;
  }

  // breakdowns - computed: false, optional: true, required: false
  private _breakdowns?: string[]; 
  public get breakdowns() {
    return cdktf.Fn.tolist(this.getListAttribute('breakdowns'));
  }
  public set breakdowns(value: string[]) {
    this._breakdowns = value;
  }
  public resetBreakdowns() {
    this._breakdowns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get breakdownsInput() {
    return this._breakdowns;
  }

  // click_attribution_window - computed: true, optional: true, required: false
  private _clickAttributionWindow?: string; 
  public get clickAttributionWindow() {
    return this.getStringAttribute('click_attribution_window');
  }
  public set clickAttributionWindow(value: string) {
    this._clickAttributionWindow = value;
  }
  public resetClickAttributionWindow() {
    this._clickAttributionWindow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clickAttributionWindowInput() {
    return this._clickAttributionWindow;
  }

  // config_type - computed: true, optional: true, required: false
  private _configType?: string; 
  public get configType() {
    return this.getStringAttribute('config_type');
  }
  public set configType(value: string) {
    this._configType = value;
  }
  public resetConfigType() {
    this._configType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configTypeInput() {
    return this._configType;
  }

  // engaged_view_attribution_window - computed: true, optional: true, required: false
  private _engagedViewAttributionWindow?: string; 
  public get engagedViewAttributionWindow() {
    return this.getStringAttribute('engaged_view_attribution_window');
  }
  public set engagedViewAttributionWindow(value: string) {
    this._engagedViewAttributionWindow = value;
  }
  public resetEngagedViewAttributionWindow() {
    this._engagedViewAttributionWindow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get engagedViewAttributionWindowInput() {
    return this._engagedViewAttributionWindow;
  }

  // fields - computed: false, optional: true, required: false
  private _fields?: string[]; 
  public get fields() {
    return cdktf.Fn.tolist(this.getListAttribute('fields'));
  }
  public set fields(value: string[]) {
    this._fields = value;
  }
  public resetFields() {
    this._fields = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldsInput() {
    return this._fields;
  }

  // level - computed: false, optional: true, required: false
  private _level?: string; 
  public get level() {
    return this.getStringAttribute('level');
  }
  public set level(value: string) {
    this._level = value;
  }
  public resetLevel() {
    this._level = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get levelInput() {
    return this._level;
  }

  // prebuilt_report_name - computed: true, optional: true, required: false
  private _prebuiltReportName?: string; 
  public get prebuiltReportName() {
    return this.getStringAttribute('prebuilt_report_name');
  }
  public set prebuiltReportName(value: string) {
    this._prebuiltReportName = value;
  }
  public resetPrebuiltReportName() {
    this._prebuiltReportName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prebuiltReportNameInput() {
    return this._prebuiltReportName;
  }

  // table_name - computed: true, optional: true, required: false
  private _tableName?: string; 
  public get tableName() {
    return this.getStringAttribute('table_name');
  }
  public set tableName(value: string) {
    this._tableName = value;
  }
  public resetTableName() {
    this._tableName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableNameInput() {
    return this._tableName;
  }

  // use_unified_attribution_setting - computed: true, optional: true, required: false
  private _useUnifiedAttributionSetting?: boolean | cdktf.IResolvable; 
  public get useUnifiedAttributionSetting() {
    return this.getBooleanAttribute('use_unified_attribution_setting');
  }
  public set useUnifiedAttributionSetting(value: boolean | cdktf.IResolvable) {
    this._useUnifiedAttributionSetting = value;
  }
  public resetUseUnifiedAttributionSetting() {
    this._useUnifiedAttributionSetting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useUnifiedAttributionSettingInput() {
    return this._useUnifiedAttributionSetting;
  }

  // view_attribution_window - computed: true, optional: true, required: false
  private _viewAttributionWindow?: string; 
  public get viewAttributionWindow() {
    return this.getStringAttribute('view_attribution_window');
  }
  public set viewAttributionWindow(value: string) {
    this._viewAttributionWindow = value;
  }
  public resetViewAttributionWindow() {
    this._viewAttributionWindow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get viewAttributionWindowInput() {
    return this._viewAttributionWindow;
  }
}

export class ConnectorConfigCustomTablesList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigCustomTables[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigCustomTablesOutputReference {
    return new ConnectorConfigCustomTablesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigDataModelPathAliasListStruct {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_business_intelligence_publisher`: Schema name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#alias Connector#alias}
  */
  readonly alias?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_business_intelligence_publisher`: Path
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#path Connector#path}
  */
  readonly path?: string;
}

export function connectorConfigDataModelPathAliasListStructToTerraform(struct?: ConnectorConfigDataModelPathAliasListStruct | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    alias: cdktf.stringToTerraform(struct!.alias),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function connectorConfigDataModelPathAliasListStructToHclTerraform(struct?: ConnectorConfigDataModelPathAliasListStruct | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    alias: {
      value: cdktf.stringToHclTerraform(struct!.alias),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigDataModelPathAliasListStructOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigDataModelPathAliasListStruct | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._alias !== undefined) {
      hasAnyValues = true;
      internalValueResult.alias = this._alias;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigDataModelPathAliasListStruct | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._alias = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._alias = value.alias;
      this._path = value.path;
    }
  }

  // alias - computed: false, optional: true, required: false
  private _alias?: string; 
  public get alias() {
    return this.getStringAttribute('alias');
  }
  public set alias(value: string) {
    this._alias = value;
  }
  public resetAlias() {
    this._alias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aliasInput() {
    return this._alias;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class ConnectorConfigDataModelPathAliasListStructList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigDataModelPathAliasListStruct[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigDataModelPathAliasListStructOutputReference {
    return new ConnectorConfigDataModelPathAliasListStructOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigFiles {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: All Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `box`: All Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `dropbox`: All Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `email`: All Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `ftp`: All Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `gcs`: All Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `google_drive`: All Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `s3`: All Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `s3_compatible_storage`: All Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `sftp`: All Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `share_point`: All Files inside of compressed archives with filenames matching this regular expression will be synced.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#archive_pattern Connector#archive_pattern}
  */
  readonly archivePattern?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `email`: Only attachments from emails with this subject will be synced. Leave this field blank to sync all attachments.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#email_subject Connector#email_subject}
  */
  readonly emailSubject?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: All files in your search path matching this regular expression will be synced per table. We have discontinued this field, and will delete it by August 31, 2025.
  * 	- Service `box`: All files in your search path matching this regular expression will be synced per table.
  * 	- Service `dropbox`: All files in your search path matching this regular expression will be synced per table.
  * 	- Service `email`: All files in your search path matching this regular expression will be synced per table.
  * 	- Service `ftp`: All files in your search path matching this regular expression will be synced per table.
  * 	- Service `gcs`: All files in your search path matching this regular expression will be synced per table.
  * 	- Service `google_drive`: All files in your search path matching this regular expression will be synced per table.
  * 	- Service `s3`: All files in your search path matching this regular expression will be synced per table.
  * 	- Service `s3_compatible_storage`: All files in your search path matching this regular expression will be synced per table.
  * 	- Service `sftp`: All files in your search path matching this regular expression will be synced per table.
  * 	- Service `share_point`: All files in your search path matching this regular expression will be synced per table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#file_pattern Connector#file_pattern}
  */
  readonly filePattern?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: All files matching the above pattern will be synced to this table.
  * 	- Service `box`: All files matching the above pattern will be synced to this table.
  * 	- Service `dropbox`: All files matching the above pattern will be synced to this table.
  * 	- Service `email`: All files matching the above pattern will be synced to this table.
  * 	- Service `ftp`: All files matching the above pattern will be synced to this table.
  * 	- Service `gcs`: All files matching the above pattern will be synced to this table.
  * 	- Service `google_drive`: All files matching the above pattern will be synced to this table.
  * 	- Service `s3`: All files matching the above pattern will be synced to this table.
  * 	- Service `s3_compatible_storage`: All files matching the above pattern will be synced to this table.
  * 	- Service `sftp`: All files matching the above pattern will be synced to this table.
  * 	- Service `share_point`: All files matching the above pattern will be synced to this table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#table_name Connector#table_name}
  */
  readonly tableName?: string;
}

export function connectorConfigFilesToTerraform(struct?: ConnectorConfigFiles | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    archive_pattern: cdktf.stringToTerraform(struct!.archivePattern),
    email_subject: cdktf.stringToTerraform(struct!.emailSubject),
    file_pattern: cdktf.stringToTerraform(struct!.filePattern),
    table_name: cdktf.stringToTerraform(struct!.tableName),
  }
}


export function connectorConfigFilesToHclTerraform(struct?: ConnectorConfigFiles | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    archive_pattern: {
      value: cdktf.stringToHclTerraform(struct!.archivePattern),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    email_subject: {
      value: cdktf.stringToHclTerraform(struct!.emailSubject),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    file_pattern: {
      value: cdktf.stringToHclTerraform(struct!.filePattern),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table_name: {
      value: cdktf.stringToHclTerraform(struct!.tableName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigFilesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigFiles | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._archivePattern !== undefined) {
      hasAnyValues = true;
      internalValueResult.archivePattern = this._archivePattern;
    }
    if (this._emailSubject !== undefined) {
      hasAnyValues = true;
      internalValueResult.emailSubject = this._emailSubject;
    }
    if (this._filePattern !== undefined) {
      hasAnyValues = true;
      internalValueResult.filePattern = this._filePattern;
    }
    if (this._tableName !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableName = this._tableName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigFiles | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._archivePattern = undefined;
      this._emailSubject = undefined;
      this._filePattern = undefined;
      this._tableName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._archivePattern = value.archivePattern;
      this._emailSubject = value.emailSubject;
      this._filePattern = value.filePattern;
      this._tableName = value.tableName;
    }
  }

  // archive_pattern - computed: false, optional: true, required: false
  private _archivePattern?: string; 
  public get archivePattern() {
    return this.getStringAttribute('archive_pattern');
  }
  public set archivePattern(value: string) {
    this._archivePattern = value;
  }
  public resetArchivePattern() {
    this._archivePattern = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archivePatternInput() {
    return this._archivePattern;
  }

  // email_subject - computed: false, optional: true, required: false
  private _emailSubject?: string; 
  public get emailSubject() {
    return this.getStringAttribute('email_subject');
  }
  public set emailSubject(value: string) {
    this._emailSubject = value;
  }
  public resetEmailSubject() {
    this._emailSubject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emailSubjectInput() {
    return this._emailSubject;
  }

  // file_pattern - computed: false, optional: true, required: false
  private _filePattern?: string; 
  public get filePattern() {
    return this.getStringAttribute('file_pattern');
  }
  public set filePattern(value: string) {
    this._filePattern = value;
  }
  public resetFilePattern() {
    this._filePattern = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filePatternInput() {
    return this._filePattern;
  }

  // table_name - computed: false, optional: true, required: false
  private _tableName?: string; 
  public get tableName() {
    return this.getStringAttribute('table_name');
  }
  public set tableName(value: string) {
    this._tableName = value;
  }
  public resetTableName() {
    this._tableName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableNameInput() {
    return this._tableName;
  }
}

export class ConnectorConfigFilesList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigFiles[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigFilesOutputReference {
    return new ConnectorConfigFilesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigProjectCredentials {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amplitude`: The API key of the project.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_key Connector#api_key}
  */
  readonly apiKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amplitude`: The project name you wish to use with Fivetran.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#project Connector#project}
  */
  readonly project?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amplitude`: The project ID you wish to use with Fivetran.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#project_id Connector#project_id}
  */
  readonly projectId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amplitude`: The secret key of the project.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#secret_key Connector#secret_key}
  */
  readonly secretKey?: string;
}

export function connectorConfigProjectCredentialsToTerraform(struct?: ConnectorConfigProjectCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_key: cdktf.stringToTerraform(struct!.apiKey),
    project: cdktf.stringToTerraform(struct!.project),
    project_id: cdktf.stringToTerraform(struct!.projectId),
    secret_key: cdktf.stringToTerraform(struct!.secretKey),
  }
}


export function connectorConfigProjectCredentialsToHclTerraform(struct?: ConnectorConfigProjectCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_key: {
      value: cdktf.stringToHclTerraform(struct!.apiKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    project: {
      value: cdktf.stringToHclTerraform(struct!.project),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    project_id: {
      value: cdktf.stringToHclTerraform(struct!.projectId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_key: {
      value: cdktf.stringToHclTerraform(struct!.secretKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigProjectCredentialsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigProjectCredentials | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiKey = this._apiKey;
    }
    if (this._project !== undefined) {
      hasAnyValues = true;
      internalValueResult.project = this._project;
    }
    if (this._projectId !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectId = this._projectId;
    }
    if (this._secretKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKey = this._secretKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigProjectCredentials | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiKey = undefined;
      this._project = undefined;
      this._projectId = undefined;
      this._secretKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiKey = value.apiKey;
      this._project = value.project;
      this._projectId = value.projectId;
      this._secretKey = value.secretKey;
    }
  }

  // api_key - computed: true, optional: true, required: false
  private _apiKey?: string; 
  public get apiKey() {
    return this.getStringAttribute('api_key');
  }
  public set apiKey(value: string) {
    this._apiKey = value;
  }
  public resetApiKey() {
    this._apiKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiKeyInput() {
    return this._apiKey;
  }

  // project - computed: true, optional: true, required: false
  private _project?: string; 
  public get project() {
    return this.getStringAttribute('project');
  }
  public set project(value: string) {
    this._project = value;
  }
  public resetProject() {
    this._project = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectInput() {
    return this._project;
  }

  // project_id - computed: false, optional: true, required: false
  private _projectId?: string; 
  public get projectId() {
    return this.getStringAttribute('project_id');
  }
  public set projectId(value: string) {
    this._projectId = value;
  }
  public resetProjectId() {
    this._projectId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectIdInput() {
    return this._projectId;
  }

  // secret_key - computed: true, optional: true, required: false
  private _secretKey?: string; 
  public get secretKey() {
    return this.getStringAttribute('secret_key');
  }
  public set secretKey(value: string) {
    this._secretKey = value;
  }
  public resetSecretKey() {
    this._secretKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyInput() {
    return this._secretKey;
  }
}

export class ConnectorConfigProjectCredentialsList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigProjectCredentials[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigProjectCredentialsOutputReference {
    return new ConnectorConfigProjectCredentialsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigReportConfigs {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: Set the value to `PREBUILT` if it's one of the preconfigured reports (see the `prebuilt_report_type` option). Otherwise, set to `CUSTOM`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#config_type Connector#config_type}
  */
  readonly configType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: [Currency](https://developer.yahooinc.com/dsp/api/docs/reporting/payloadspec.html) used in a report. Default value: `USD`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#currency Connector#currency}
  */
  readonly currency?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: [Dimensions](https://developer.yahooinc.com/dsp/api/docs/reporting/dimensions.html) used in a report. Must be populated if `config_type` is set to `CUSTOM`. PUBLISHER, DESKTOP_OS_DEPRECATED, LINE_TYPE, GOAL_TYPE, BID_REQUEST_AD_SIZE, CHANNEL_TYPE, SITE_NAME, and SITE_GROUP_NAME are deprecated dimension, and shouldn't be used anymore
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dimensions Connector#dimensions}
  */
  readonly dimensions?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: The [granularity](https://developer.yahooinc.com/dsp/api/docs/reporting/range-examples.html#interval-type-id) of data in a report. Default value: `DAY`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#interval_type Connector#interval_type}
  */
  readonly intervalType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: [Metrics](https://developer.yahooinc.com/dsp/api/docs/reporting/metrics.html) used in a report. Must be populated if `config_type` is set to `CUSTOM`. PUBLISHER_EARNINGS, PUBLISHER_EARNINGS_PERCENTAGE, INVENTORY_ECPM_DEPRECATED, SEAT_TECH_FEE, and SEAT_DATA_FEE are deprecated and shouldn't be used anymore
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#metrics Connector#metrics}
  */
  readonly metrics?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: Specific report type to sync. Must be populated if `config_type` is set to `PREBUILT`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#prebuilt_report_type Connector#prebuilt_report_type}
  */
  readonly prebuiltReportType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: Table name in destination.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_name Connector#report_name}
  */
  readonly reportName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: Specify the time zone to be used to request report data
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#time_zone Connector#time_zone}
  */
  readonly timeZone?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: Use advertiser timezone to request report data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#use_advertiser_timezone Connector#use_advertiser_timezone}
  */
  readonly useAdvertiserTimezone?: boolean | cdktf.IResolvable;
}

export function connectorConfigReportConfigsToTerraform(struct?: ConnectorConfigReportConfigs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_type: cdktf.stringToTerraform(struct!.configType),
    currency: cdktf.stringToTerraform(struct!.currency),
    dimensions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.dimensions),
    interval_type: cdktf.stringToTerraform(struct!.intervalType),
    metrics: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.metrics),
    prebuilt_report_type: cdktf.stringToTerraform(struct!.prebuiltReportType),
    report_name: cdktf.stringToTerraform(struct!.reportName),
    time_zone: cdktf.stringToTerraform(struct!.timeZone),
    use_advertiser_timezone: cdktf.booleanToTerraform(struct!.useAdvertiserTimezone),
  }
}


export function connectorConfigReportConfigsToHclTerraform(struct?: ConnectorConfigReportConfigs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_type: {
      value: cdktf.stringToHclTerraform(struct!.configType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    currency: {
      value: cdktf.stringToHclTerraform(struct!.currency),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dimensions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.dimensions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    interval_type: {
      value: cdktf.stringToHclTerraform(struct!.intervalType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metrics: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.metrics),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    prebuilt_report_type: {
      value: cdktf.stringToHclTerraform(struct!.prebuiltReportType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_name: {
      value: cdktf.stringToHclTerraform(struct!.reportName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_zone: {
      value: cdktf.stringToHclTerraform(struct!.timeZone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_advertiser_timezone: {
      value: cdktf.booleanToHclTerraform(struct!.useAdvertiserTimezone),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigReportConfigsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigReportConfigs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configType !== undefined) {
      hasAnyValues = true;
      internalValueResult.configType = this._configType;
    }
    if (this._currency !== undefined) {
      hasAnyValues = true;
      internalValueResult.currency = this._currency;
    }
    if (this._dimensions !== undefined) {
      hasAnyValues = true;
      internalValueResult.dimensions = this._dimensions;
    }
    if (this._intervalType !== undefined) {
      hasAnyValues = true;
      internalValueResult.intervalType = this._intervalType;
    }
    if (this._metrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.metrics = this._metrics;
    }
    if (this._prebuiltReportType !== undefined) {
      hasAnyValues = true;
      internalValueResult.prebuiltReportType = this._prebuiltReportType;
    }
    if (this._reportName !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportName = this._reportName;
    }
    if (this._timeZone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeZone = this._timeZone;
    }
    if (this._useAdvertiserTimezone !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAdvertiserTimezone = this._useAdvertiserTimezone;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigReportConfigs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configType = undefined;
      this._currency = undefined;
      this._dimensions = undefined;
      this._intervalType = undefined;
      this._metrics = undefined;
      this._prebuiltReportType = undefined;
      this._reportName = undefined;
      this._timeZone = undefined;
      this._useAdvertiserTimezone = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configType = value.configType;
      this._currency = value.currency;
      this._dimensions = value.dimensions;
      this._intervalType = value.intervalType;
      this._metrics = value.metrics;
      this._prebuiltReportType = value.prebuiltReportType;
      this._reportName = value.reportName;
      this._timeZone = value.timeZone;
      this._useAdvertiserTimezone = value.useAdvertiserTimezone;
    }
  }

  // config_type - computed: true, optional: true, required: false
  private _configType?: string; 
  public get configType() {
    return this.getStringAttribute('config_type');
  }
  public set configType(value: string) {
    this._configType = value;
  }
  public resetConfigType() {
    this._configType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configTypeInput() {
    return this._configType;
  }

  // currency - computed: true, optional: true, required: false
  private _currency?: string; 
  public get currency() {
    return this.getStringAttribute('currency');
  }
  public set currency(value: string) {
    this._currency = value;
  }
  public resetCurrency() {
    this._currency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get currencyInput() {
    return this._currency;
  }

  // dimensions - computed: false, optional: true, required: false
  private _dimensions?: string[]; 
  public get dimensions() {
    return cdktf.Fn.tolist(this.getListAttribute('dimensions'));
  }
  public set dimensions(value: string[]) {
    this._dimensions = value;
  }
  public resetDimensions() {
    this._dimensions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dimensionsInput() {
    return this._dimensions;
  }

  // interval_type - computed: true, optional: true, required: false
  private _intervalType?: string; 
  public get intervalType() {
    return this.getStringAttribute('interval_type');
  }
  public set intervalType(value: string) {
    this._intervalType = value;
  }
  public resetIntervalType() {
    this._intervalType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get intervalTypeInput() {
    return this._intervalType;
  }

  // metrics - computed: false, optional: true, required: false
  private _metrics?: string[]; 
  public get metrics() {
    return cdktf.Fn.tolist(this.getListAttribute('metrics'));
  }
  public set metrics(value: string[]) {
    this._metrics = value;
  }
  public resetMetrics() {
    this._metrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricsInput() {
    return this._metrics;
  }

  // prebuilt_report_type - computed: true, optional: true, required: false
  private _prebuiltReportType?: string; 
  public get prebuiltReportType() {
    return this.getStringAttribute('prebuilt_report_type');
  }
  public set prebuiltReportType(value: string) {
    this._prebuiltReportType = value;
  }
  public resetPrebuiltReportType() {
    this._prebuiltReportType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prebuiltReportTypeInput() {
    return this._prebuiltReportType;
  }

  // report_name - computed: false, optional: true, required: false
  private _reportName?: string; 
  public get reportName() {
    return this.getStringAttribute('report_name');
  }
  public set reportName(value: string) {
    this._reportName = value;
  }
  public resetReportName() {
    this._reportName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportNameInput() {
    return this._reportName;
  }

  // time_zone - computed: true, optional: true, required: false
  private _timeZone?: string; 
  public get timeZone() {
    return this.getStringAttribute('time_zone');
  }
  public set timeZone(value: string) {
    this._timeZone = value;
  }
  public resetTimeZone() {
    this._timeZone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeZoneInput() {
    return this._timeZone;
  }

  // use_advertiser_timezone - computed: true, optional: true, required: false
  private _useAdvertiserTimezone?: boolean | cdktf.IResolvable; 
  public get useAdvertiserTimezone() {
    return this.getBooleanAttribute('use_advertiser_timezone');
  }
  public set useAdvertiserTimezone(value: boolean | cdktf.IResolvable) {
    this._useAdvertiserTimezone = value;
  }
  public resetUseAdvertiserTimezone() {
    this._useAdvertiserTimezone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAdvertiserTimezoneInput() {
    return this._useAdvertiserTimezone;
  }
}

export class ConnectorConfigReportConfigsList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigReportConfigs[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigReportConfigsOutputReference {
    return new ConnectorConfigReportConfigsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigReportListStruct {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `spotify_ads`: The dimension (entity_type) to sync.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dimension Connector#dimension}
  */
  readonly dimension?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `spotify_ads`: A list of the fields (metrics) to sync.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#fields Connector#fields}
  */
  readonly fields?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `spotify_ads`: The report granularity.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#granularity Connector#granularity}
  */
  readonly granularity?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `spotify_ads`: The table name within the schema to which connector will sync the data of the specific report.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#table Connector#table}
  */
  readonly table?: string;
}

export function connectorConfigReportListStructToTerraform(struct?: ConnectorConfigReportListStruct | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dimension: cdktf.stringToTerraform(struct!.dimension),
    fields: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.fields),
    granularity: cdktf.stringToTerraform(struct!.granularity),
    table: cdktf.stringToTerraform(struct!.table),
  }
}


export function connectorConfigReportListStructToHclTerraform(struct?: ConnectorConfigReportListStruct | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dimension: {
      value: cdktf.stringToHclTerraform(struct!.dimension),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fields: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.fields),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    granularity: {
      value: cdktf.stringToHclTerraform(struct!.granularity),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigReportListStructOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigReportListStruct | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dimension !== undefined) {
      hasAnyValues = true;
      internalValueResult.dimension = this._dimension;
    }
    if (this._fields !== undefined) {
      hasAnyValues = true;
      internalValueResult.fields = this._fields;
    }
    if (this._granularity !== undefined) {
      hasAnyValues = true;
      internalValueResult.granularity = this._granularity;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigReportListStruct | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dimension = undefined;
      this._fields = undefined;
      this._granularity = undefined;
      this._table = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dimension = value.dimension;
      this._fields = value.fields;
      this._granularity = value.granularity;
      this._table = value.table;
    }
  }

  // dimension - computed: true, optional: true, required: false
  private _dimension?: string; 
  public get dimension() {
    return this.getStringAttribute('dimension');
  }
  public set dimension(value: string) {
    this._dimension = value;
  }
  public resetDimension() {
    this._dimension = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dimensionInput() {
    return this._dimension;
  }

  // fields - computed: false, optional: true, required: false
  private _fields?: string[]; 
  public get fields() {
    return cdktf.Fn.tolist(this.getListAttribute('fields'));
  }
  public set fields(value: string[]) {
    this._fields = value;
  }
  public resetFields() {
    this._fields = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldsInput() {
    return this._fields;
  }

  // granularity - computed: true, optional: true, required: false
  private _granularity?: string; 
  public get granularity() {
    return this.getStringAttribute('granularity');
  }
  public set granularity(value: string) {
    this._granularity = value;
  }
  public resetGranularity() {
    this._granularity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get granularityInput() {
    return this._granularity;
  }

  // table - computed: false, optional: true, required: false
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  public resetTable() {
    this._table = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }
}

export class ConnectorConfigReportListStructList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigReportListStruct[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigReportListStructOutputReference {
    return new ConnectorConfigReportListStructOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigReportsAccounts {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: Flag to indicate if descendants are included or not
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#flag Connector#flag}
  */
  readonly flag?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: Account ID to sync
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#id Connector#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: Flag to indicate if descendants are included or not
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#include_descendants Connector#include_descendants}
  */
  readonly includeDescendants?: boolean | cdktf.IResolvable;
}

export function connectorConfigReportsAccountsToTerraform(struct?: ConnectorConfigReportsAccounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    flag: cdktf.booleanToTerraform(struct!.flag),
    id: cdktf.stringToTerraform(struct!.id),
    include_descendants: cdktf.booleanToTerraform(struct!.includeDescendants),
  }
}


export function connectorConfigReportsAccountsToHclTerraform(struct?: ConnectorConfigReportsAccounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    flag: {
      value: cdktf.booleanToHclTerraform(struct!.flag),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    include_descendants: {
      value: cdktf.booleanToHclTerraform(struct!.includeDescendants),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigReportsAccountsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigReportsAccounts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._flag !== undefined) {
      hasAnyValues = true;
      internalValueResult.flag = this._flag;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._includeDescendants !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeDescendants = this._includeDescendants;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigReportsAccounts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._flag = undefined;
      this._id = undefined;
      this._includeDescendants = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._flag = value.flag;
      this._id = value.id;
      this._includeDescendants = value.includeDescendants;
    }
  }

  // flag - computed: true, optional: true, required: false
  private _flag?: boolean | cdktf.IResolvable; 
  public get flag() {
    return this.getBooleanAttribute('flag');
  }
  public set flag(value: boolean | cdktf.IResolvable) {
    this._flag = value;
  }
  public resetFlag() {
    this._flag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flagInput() {
    return this._flag;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // include_descendants - computed: true, optional: true, required: false
  private _includeDescendants?: boolean | cdktf.IResolvable; 
  public get includeDescendants() {
    return this.getBooleanAttribute('include_descendants');
  }
  public set includeDescendants(value: boolean | cdktf.IResolvable) {
    this._includeDescendants = value;
  }
  public resetIncludeDescendants() {
    this._includeDescendants = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeDescendantsInput() {
    return this._includeDescendants;
  }
}

export class ConnectorConfigReportsAccountsList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigReportsAccounts[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigReportsAccountsOutputReference {
    return new ConnectorConfigReportsAccountsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigReportsFilters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dimension Connector#dimension}
  */
  readonly dimension?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#expression Connector#expression}
  */
  readonly expression?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#filter_type Connector#filter_type}
  */
  readonly filterType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#match_type Connector#match_type}
  */
  readonly matchType?: string;
}

export function connectorConfigReportsFiltersToTerraform(struct?: ConnectorConfigReportsFilters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dimension: cdktf.stringToTerraform(struct!.dimension),
    expression: cdktf.stringToTerraform(struct!.expression),
    filter_type: cdktf.stringToTerraform(struct!.filterType),
    match_type: cdktf.stringToTerraform(struct!.matchType),
  }
}


export function connectorConfigReportsFiltersToHclTerraform(struct?: ConnectorConfigReportsFilters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dimension: {
      value: cdktf.stringToHclTerraform(struct!.dimension),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expression: {
      value: cdktf.stringToHclTerraform(struct!.expression),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    filter_type: {
      value: cdktf.stringToHclTerraform(struct!.filterType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    match_type: {
      value: cdktf.stringToHclTerraform(struct!.matchType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigReportsFiltersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigReportsFilters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dimension !== undefined) {
      hasAnyValues = true;
      internalValueResult.dimension = this._dimension;
    }
    if (this._expression !== undefined) {
      hasAnyValues = true;
      internalValueResult.expression = this._expression;
    }
    if (this._filterType !== undefined) {
      hasAnyValues = true;
      internalValueResult.filterType = this._filterType;
    }
    if (this._matchType !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchType = this._matchType;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigReportsFilters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dimension = undefined;
      this._expression = undefined;
      this._filterType = undefined;
      this._matchType = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dimension = value.dimension;
      this._expression = value.expression;
      this._filterType = value.filterType;
      this._matchType = value.matchType;
    }
  }

  // dimension - computed: true, optional: true, required: false
  private _dimension?: string; 
  public get dimension() {
    return this.getStringAttribute('dimension');
  }
  public set dimension(value: string) {
    this._dimension = value;
  }
  public resetDimension() {
    this._dimension = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dimensionInput() {
    return this._dimension;
  }

  // expression - computed: false, optional: true, required: false
  private _expression?: string; 
  public get expression() {
    return this.getStringAttribute('expression');
  }
  public set expression(value: string) {
    this._expression = value;
  }
  public resetExpression() {
    this._expression = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionInput() {
    return this._expression;
  }

  // filter_type - computed: true, optional: true, required: false
  private _filterType?: string; 
  public get filterType() {
    return this.getStringAttribute('filter_type');
  }
  public set filterType(value: string) {
    this._filterType = value;
  }
  public resetFilterType() {
    this._filterType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterTypeInput() {
    return this._filterType;
  }

  // match_type - computed: true, optional: true, required: false
  private _matchType?: string; 
  public get matchType() {
    return this.getStringAttribute('match_type');
  }
  public set matchType(value: string) {
    this._matchType = value;
  }
  public resetMatchType() {
    this._matchType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchTypeInput() {
    return this._matchType;
  }
}

export class ConnectorConfigReportsFiltersList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigReportsFilters[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigReportsFiltersOutputReference {
    return new ConnectorConfigReportsFiltersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigReportsLevels {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: Flag to indicate if descendants are included or not
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#flag Connector#flag}
  */
  readonly flag?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: Level ID to sync
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#id Connector#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: Flag to indicate if descendants are included or not
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#include_descendants Connector#include_descendants}
  */
  readonly includeDescendants?: boolean | cdktf.IResolvable;
}

export function connectorConfigReportsLevelsToTerraform(struct?: ConnectorConfigReportsLevels | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    flag: cdktf.booleanToTerraform(struct!.flag),
    id: cdktf.stringToTerraform(struct!.id),
    include_descendants: cdktf.booleanToTerraform(struct!.includeDescendants),
  }
}


export function connectorConfigReportsLevelsToHclTerraform(struct?: ConnectorConfigReportsLevels | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    flag: {
      value: cdktf.booleanToHclTerraform(struct!.flag),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    include_descendants: {
      value: cdktf.booleanToHclTerraform(struct!.includeDescendants),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigReportsLevelsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigReportsLevels | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._flag !== undefined) {
      hasAnyValues = true;
      internalValueResult.flag = this._flag;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._includeDescendants !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeDescendants = this._includeDescendants;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigReportsLevels | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._flag = undefined;
      this._id = undefined;
      this._includeDescendants = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._flag = value.flag;
      this._id = value.id;
      this._includeDescendants = value.includeDescendants;
    }
  }

  // flag - computed: true, optional: true, required: false
  private _flag?: boolean | cdktf.IResolvable; 
  public get flag() {
    return this.getBooleanAttribute('flag');
  }
  public set flag(value: boolean | cdktf.IResolvable) {
    this._flag = value;
  }
  public resetFlag() {
    this._flag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flagInput() {
    return this._flag;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // include_descendants - computed: true, optional: true, required: false
  private _includeDescendants?: boolean | cdktf.IResolvable; 
  public get includeDescendants() {
    return this.getBooleanAttribute('include_descendants');
  }
  public set includeDescendants(value: boolean | cdktf.IResolvable) {
    this._includeDescendants = value;
  }
  public resetIncludeDescendants() {
    this._includeDescendants = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeDescendantsInput() {
    return this._includeDescendants;
  }
}

export class ConnectorConfigReportsLevelsList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigReportsLevels[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigReportsLevelsOutputReference {
    return new ConnectorConfigReportsLevelsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigReports {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_publishers`: Ad unit view for the report.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ad_unit_view Connector#ad_unit_view}
  */
  readonly adUnitView?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_display_and_video_360`: The list of advertisers to include into a sync. This parameter only takes effect when `config_method` is set to `CREATE_NEW`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#advertisers Connector#advertisers}
  */
  readonly advertisers?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_search_console`: (Optional) Aggregation type. Supported only for the `SEARCH_RESULTS` report type
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#aggregation Connector#aggregation}
  */
  readonly aggregation?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_search_ads_360`: The report attributes included to sync.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#attributes Connector#attributes}
  */
  readonly attributes?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_publishers`: Columns provide all trafficking statistics and revenue information available for the chosen dimensions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#columns Connector#columns}
  */
  readonly columns?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_display_and_video_360`: The report configuration method. Specifies whether a new configuration is defined manually or an existing configuration is reused. The default value is `CREATE_NEW`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#config_method Connector#config_method}
  */
  readonly configMethod?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics`: Whether to use the [Prebuilt Reports or Custom Reports](https://fivetran.com/docs/connectors/applications/google-analytics#schemainformation).
  * 	- Service `google_analytics_4`: Whether to use the Prebuilt Reports or Custom Reports.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#config_type Connector#config_type}
  */
  readonly configType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Conversion Dimensions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#conversion_dimensions Connector#conversion_dimensions}
  */
  readonly conversionDimensions?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: List of currencies to sync for the table, if applicable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#currency Connector#currency}
  */
  readonly currency?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_publishers`: The list of custom dimension key IDs included in the report. Custom dimension keys can only be selected with the CUSTOM_DIMENSION dimension.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_dimension_key_ids Connector#custom_dimension_key_ids}
  */
  readonly customDimensionKeyIds?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_publishers`: The list of custom field IDs included in the report. Custom fields can only be selected with their corresponding dimensions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_field_ids Connector#custom_field_ids}
  */
  readonly customFieldIds?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Custom Floodlight variables enable you to capture information beyond the basics (visits and revenue) that you can collect with standard parameters in your tags.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_floodlight_variables Connector#custom_floodlight_variables}
  */
  readonly customFloodlightVariables?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_publishers`: Dimension attributes provide additional fields associated with a dimension. Dimension attributes can only be selected with their corresponding dimensions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dimension_attributes Connector#dimension_attributes}
  */
  readonly dimensionAttributes?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Report dimensions to include in a sync. The `date` dimension is mandatory for all report types. The `advertiser` dimension is mandatory for the `REACH` report type
  * 	- Service `double_click_publishers`: Report dimensions to include in the sync. The `date` dimension is mandatory for all the report types.
  * 	- Service `google_analytics`: The report dimensions to include into a sync. The `date` dimension is mandatory for all the report types.
  * 	- Service `google_analytics_4`: The report dimensions to include into a sync.
  * 	- Service `google_display_and_video_360`: The report dimensions (filters) to include into a sync. The dimension names are provided in the API format. This is a required parameter when `config_method` is set to `CREATE_NEW`.
  * 	- Service `google_search_console`: The report dimensions included to sync.
  * 	- Service `workday_adaptive`: List of dimensions to sync for the table, if applicable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dimensions Connector#dimensions}
  */
  readonly dimensions?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: Dynamic parameter field name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dynamic_parameter_field Connector#dynamic_parameter_field}
  */
  readonly dynamicParameterField?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Specifies whether to enable all reach dimension combinations in the report. Default value: `false`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#enable_all_dimension_combinations Connector#enable_all_dimension_combinations}
  */
  readonly enableAllDimensionCombinations?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: Select this option to enable dynamic report parameters.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#enable_dynamic_parameters Connector#enable_dynamic_parameters}
  */
  readonly enableDynamicParameters?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_ads`: A list of the fields to sync. Must be populated if `config_type` is set to `Custom`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#fields Connector#fields}
  */
  readonly fields?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics`: String parameter restricts the data returned for your report. To use the filter parameter, specify a dimension or metric on which to filter, followed by the filter expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#filter Connector#filter}
  */
  readonly filter?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics_4`: The dimension name to filter on.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#filter_field_name Connector#filter_field_name}
  */
  readonly filterFieldName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics_4`: Filter type for reports request. Possible values are INCLUDE and EXCLUDE
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#filter_type Connector#filter_type}
  */
  readonly filterType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#filter_value Connector#filter_value}
  */
  readonly filterValue?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: Select this option to generate a Primary Key for reports where no single column or combination of columns can be used to form a Primary Key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#generate_fivetran_pk Connector#generate_fivetran_pk}
  */
  readonly generateFivetranPk?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: Include zero rows in the table sync
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#include_zero_rows Connector#include_zero_rows}
  */
  readonly includeZeroRows?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Report metrics to include into a sync.
  * 	- Service `google_analytics`: The report metrics to include into a sync.
  * 	- Service `google_analytics_4`: The report metrics to include into a sync.
  * 	- Service `google_display_and_video_360`: The report metrics to include into a sync. The metric names are provided in the API format. This is a required parameter when `config_method` is set to `CREATE_NEW`.
  * 	- Service `google_search_ads_360`: The report metrics included to sync.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#metrics Connector#metrics}
  */
  readonly metrics?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_display_and_video_360`: The list of partners to include into a sync. This parameter only takes effect when `config_method` is set to `CREATE_NEW`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#partners Connector#partners}
  */
  readonly partners?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Per Interaction Dimensions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#per_interaction_dimensions Connector#per_interaction_dimensions}
  */
  readonly perInteractionDimensions?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics`: The name of the Prebuilt Report from which the connector will sync the data.
  * 	- Service `google_analytics_4`: The name of the Prebuilt Report from which the connector will sync the data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#prebuilt_report Connector#prebuilt_report}
  */
  readonly prebuiltReport?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: Primary Keys
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#primary_keys Connector#primary_keys}
  */
  readonly primaryKeys?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_display_and_video_360`: The ID of the query whose configuration you want to reuse. This is a required parameter when `config_method` is set to `REUSE_EXISTING`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#query_id Connector#query_id}
  */
  readonly queryId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: You can select only one Floodlight Configuration ID per account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_configuration_ids Connector#report_configuration_ids}
  */
  readonly reportConfigurationIds?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: This is to select report format from JSON and CSV. By default, report format is JSON.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_format_type Connector#report_format_type}
  */
  readonly reportFormatType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Type of reporting data to sync. Default value: `STANDARD`.
  * 	- Service `google_ads`: The name of the Google Ads report from which the connector will sync the data. [Possible report_type values](https://developers.google.com/adwords/api/docs/appendix/reports#report-types).
  * 	- Service `google_display_and_video_360`: The type of the report to create. This is a required parameter when `config_method` is set to `CREATE_NEW`.
  * 	- Service `google_search_ads_360`: The type of report
  * 	- Service `google_search_console`: The type of report
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_type Connector#report_type}
  */
  readonly reportType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: URL for a live custom report.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_url Connector#report_url}
  */
  readonly reportUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics_4`: The custom window size for rollback syncs.
  * 	- Service `google_search_ads_360`: The custom window size for rollback syncs (between 2 and 90).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#rollback_window Connector#rollback_window}
  */
  readonly rollbackWindow?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_search_console`: Search types included to sync. Supported only for the `SEARCH_RESULTS` report type
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#search_types Connector#search_types}
  */
  readonly searchTypes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#segment_ids Connector#segment_ids}
  */
  readonly segmentIds?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics`: A segment is a subset of your Analytics data that is made up of one or more non-destructive filters (filters that do not alter the underlying data). Those filters isolate subsets of users, sessions, and hits.
  * 	- Service `google_search_ads_360`: The report segments included to sync.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#segments Connector#segments}
  */
  readonly segments?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: Start date
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#start_date Connector#start_date}
  */
  readonly startDate?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: Start date parameter field name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#start_date_parameter_field Connector#start_date_parameter_field}
  */
  readonly startDateParameterField?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: Start month for the table sync, in MM format
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#start_month Connector#start_month}
  */
  readonly startMonth?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: Start year for the table sync, in YYYY format
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#start_year Connector#start_year}
  */
  readonly startYear?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: This option is to unpack the nested columns and sync them separately. By default, we sync the nested columns as JSON objects.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#support_nested_columns Connector#support_nested_columns}
  */
  readonly supportNestedColumns?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: Dynamic report parameters sync strategy
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_strategy Connector#sync_strategy}
  */
  readonly syncStrategy?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Destination table name. It must be unique within this connection and must comply with Fivetran's naming conventions.
  * 	- Service `double_click_publishers`: The name of the table within the schema storing the data for a given report.
  * 	- Service `google_ads`: The table name within the schema to which connector will sync the data of the specific report.
  * 	- Service `google_analytics`: The table name within the schema to which connector will sync the data of the specific report.
  * 	- Service `google_analytics_4`: The table name within the schema to which connector will sync the data of the specific report.
  * 	- Service `google_search_ads_360`: The name of a table within the schema to which connector syncs the data of a given report.
  * 	- Service `google_search_console`: The name of a table within the schema to which connector syncs the data of a given report.
  * 	- Service `workday`: The table name within the schema to which connector will sync the data of the specific report.
  * 	- Service `workday_adaptive`: Table name to be synced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#table Connector#table}
  */
  readonly table?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_display_and_video_360`: The table name within the schema to which connector will sync the data of the specific report.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#table_name Connector#table_name}
  */
  readonly tableName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics_4`: The report data aggregation time granularity.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#time_aggregation_granularity Connector#time_aggregation_granularity}
  */
  readonly timeAggregationGranularity?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_display_and_video_360`: Specifies whether the configuration is updated before each sync or only when the connector settings are saved. This parameter only takes effect when `config_method` is set to `REUSE_EXISTING`. The default value is `true`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#update_config_on_each_sync Connector#update_config_on_each_sync}
  */
  readonly updateConfigOnEachSync?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: Version sync strategy for the table, SYNC_ALL_AND_NEW_VERSIONS or SYNC_SELECT_VERSIONS
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#version_sync_strategy Connector#version_sync_strategy}
  */
  readonly versionSyncStrategy?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: List of versions to sync for the table, if versionSyncStrategy is SYNC_SELECT_VERSIONS
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#versions Connector#versions}
  */
  readonly versions?: string[];
  /**
  * accounts block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#accounts Connector#accounts}
  */
  readonly accounts?: ConnectorConfigReportsAccounts[] | cdktf.IResolvable;
  /**
  * filters block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#filters Connector#filters}
  */
  readonly filters?: ConnectorConfigReportsFilters[] | cdktf.IResolvable;
  /**
  * levels block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#levels Connector#levels}
  */
  readonly levels?: ConnectorConfigReportsLevels[] | cdktf.IResolvable;
}

export function connectorConfigReportsToTerraform(struct?: ConnectorConfigReports | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ad_unit_view: cdktf.stringToTerraform(struct!.adUnitView),
    advertisers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.advertisers),
    aggregation: cdktf.stringToTerraform(struct!.aggregation),
    attributes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.attributes),
    columns: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.columns),
    config_method: cdktf.stringToTerraform(struct!.configMethod),
    config_type: cdktf.stringToTerraform(struct!.configType),
    conversion_dimensions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.conversionDimensions),
    currency: cdktf.stringToTerraform(struct!.currency),
    custom_dimension_key_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.customDimensionKeyIds),
    custom_field_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.customFieldIds),
    custom_floodlight_variables: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.customFloodlightVariables),
    dimension_attributes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.dimensionAttributes),
    dimensions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.dimensions),
    dynamic_parameter_field: cdktf.stringToTerraform(struct!.dynamicParameterField),
    enable_all_dimension_combinations: cdktf.booleanToTerraform(struct!.enableAllDimensionCombinations),
    enable_dynamic_parameters: cdktf.booleanToTerraform(struct!.enableDynamicParameters),
    fields: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.fields),
    filter: cdktf.stringToTerraform(struct!.filter),
    filter_field_name: cdktf.stringToTerraform(struct!.filterFieldName),
    filter_type: cdktf.stringToTerraform(struct!.filterType),
    filter_value: cdktf.stringToTerraform(struct!.filterValue),
    generate_fivetran_pk: cdktf.booleanToTerraform(struct!.generateFivetranPk),
    include_zero_rows: cdktf.booleanToTerraform(struct!.includeZeroRows),
    metrics: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.metrics),
    partners: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.partners),
    per_interaction_dimensions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.perInteractionDimensions),
    prebuilt_report: cdktf.stringToTerraform(struct!.prebuiltReport),
    primary_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.primaryKeys),
    query_id: cdktf.stringToTerraform(struct!.queryId),
    report_configuration_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.reportConfigurationIds),
    report_format_type: cdktf.stringToTerraform(struct!.reportFormatType),
    report_type: cdktf.stringToTerraform(struct!.reportType),
    report_url: cdktf.stringToTerraform(struct!.reportUrl),
    rollback_window: cdktf.numberToTerraform(struct!.rollbackWindow),
    search_types: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.searchTypes),
    segment_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.segmentIds),
    segments: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.segments),
    start_date: cdktf.stringToTerraform(struct!.startDate),
    start_date_parameter_field: cdktf.stringToTerraform(struct!.startDateParameterField),
    start_month: cdktf.stringToTerraform(struct!.startMonth),
    start_year: cdktf.stringToTerraform(struct!.startYear),
    support_nested_columns: cdktf.booleanToTerraform(struct!.supportNestedColumns),
    sync_strategy: cdktf.stringToTerraform(struct!.syncStrategy),
    table: cdktf.stringToTerraform(struct!.table),
    table_name: cdktf.stringToTerraform(struct!.tableName),
    time_aggregation_granularity: cdktf.stringToTerraform(struct!.timeAggregationGranularity),
    update_config_on_each_sync: cdktf.booleanToTerraform(struct!.updateConfigOnEachSync),
    version_sync_strategy: cdktf.stringToTerraform(struct!.versionSyncStrategy),
    versions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.versions),
    accounts: cdktf.listMapper(connectorConfigReportsAccountsToTerraform, true)(struct!.accounts),
    filters: cdktf.listMapper(connectorConfigReportsFiltersToTerraform, true)(struct!.filters),
    levels: cdktf.listMapper(connectorConfigReportsLevelsToTerraform, true)(struct!.levels),
  }
}


export function connectorConfigReportsToHclTerraform(struct?: ConnectorConfigReports | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ad_unit_view: {
      value: cdktf.stringToHclTerraform(struct!.adUnitView),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    advertisers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.advertisers),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    aggregation: {
      value: cdktf.stringToHclTerraform(struct!.aggregation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    attributes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.attributes),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    columns: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.columns),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    config_method: {
      value: cdktf.stringToHclTerraform(struct!.configMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config_type: {
      value: cdktf.stringToHclTerraform(struct!.configType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    conversion_dimensions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.conversionDimensions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    currency: {
      value: cdktf.stringToHclTerraform(struct!.currency),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    custom_dimension_key_ids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.customDimensionKeyIds),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    custom_field_ids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.customFieldIds),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    custom_floodlight_variables: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.customFloodlightVariables),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    dimension_attributes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.dimensionAttributes),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    dimensions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.dimensions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    dynamic_parameter_field: {
      value: cdktf.stringToHclTerraform(struct!.dynamicParameterField),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enable_all_dimension_combinations: {
      value: cdktf.booleanToHclTerraform(struct!.enableAllDimensionCombinations),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_dynamic_parameters: {
      value: cdktf.booleanToHclTerraform(struct!.enableDynamicParameters),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    fields: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.fields),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    filter: {
      value: cdktf.stringToHclTerraform(struct!.filter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    filter_field_name: {
      value: cdktf.stringToHclTerraform(struct!.filterFieldName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    filter_type: {
      value: cdktf.stringToHclTerraform(struct!.filterType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    filter_value: {
      value: cdktf.stringToHclTerraform(struct!.filterValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    generate_fivetran_pk: {
      value: cdktf.booleanToHclTerraform(struct!.generateFivetranPk),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    include_zero_rows: {
      value: cdktf.booleanToHclTerraform(struct!.includeZeroRows),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    metrics: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.metrics),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    partners: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.partners),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    per_interaction_dimensions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.perInteractionDimensions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    prebuilt_report: {
      value: cdktf.stringToHclTerraform(struct!.prebuiltReport),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    primary_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.primaryKeys),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    query_id: {
      value: cdktf.stringToHclTerraform(struct!.queryId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_configuration_ids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.reportConfigurationIds),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    report_format_type: {
      value: cdktf.stringToHclTerraform(struct!.reportFormatType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_type: {
      value: cdktf.stringToHclTerraform(struct!.reportType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_url: {
      value: cdktf.stringToHclTerraform(struct!.reportUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    rollback_window: {
      value: cdktf.numberToHclTerraform(struct!.rollbackWindow),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    search_types: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.searchTypes),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    segment_ids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.segmentIds),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    segments: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.segments),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    start_date: {
      value: cdktf.stringToHclTerraform(struct!.startDate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    start_date_parameter_field: {
      value: cdktf.stringToHclTerraform(struct!.startDateParameterField),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    start_month: {
      value: cdktf.stringToHclTerraform(struct!.startMonth),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    start_year: {
      value: cdktf.stringToHclTerraform(struct!.startYear),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    support_nested_columns: {
      value: cdktf.booleanToHclTerraform(struct!.supportNestedColumns),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sync_strategy: {
      value: cdktf.stringToHclTerraform(struct!.syncStrategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table_name: {
      value: cdktf.stringToHclTerraform(struct!.tableName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_aggregation_granularity: {
      value: cdktf.stringToHclTerraform(struct!.timeAggregationGranularity),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    update_config_on_each_sync: {
      value: cdktf.booleanToHclTerraform(struct!.updateConfigOnEachSync),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    version_sync_strategy: {
      value: cdktf.stringToHclTerraform(struct!.versionSyncStrategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    versions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.versions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    accounts: {
      value: cdktf.listMapperHcl(connectorConfigReportsAccountsToHclTerraform, true)(struct!.accounts),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigReportsAccountsList",
    },
    filters: {
      value: cdktf.listMapperHcl(connectorConfigReportsFiltersToHclTerraform, true)(struct!.filters),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigReportsFiltersList",
    },
    levels: {
      value: cdktf.listMapperHcl(connectorConfigReportsLevelsToHclTerraform, true)(struct!.levels),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigReportsLevelsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigReportsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigReports | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._adUnitView !== undefined) {
      hasAnyValues = true;
      internalValueResult.adUnitView = this._adUnitView;
    }
    if (this._advertisers !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertisers = this._advertisers;
    }
    if (this._aggregation !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregation = this._aggregation;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._columns !== undefined) {
      hasAnyValues = true;
      internalValueResult.columns = this._columns;
    }
    if (this._configMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMethod = this._configMethod;
    }
    if (this._configType !== undefined) {
      hasAnyValues = true;
      internalValueResult.configType = this._configType;
    }
    if (this._conversionDimensions !== undefined) {
      hasAnyValues = true;
      internalValueResult.conversionDimensions = this._conversionDimensions;
    }
    if (this._currency !== undefined) {
      hasAnyValues = true;
      internalValueResult.currency = this._currency;
    }
    if (this._customDimensionKeyIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.customDimensionKeyIds = this._customDimensionKeyIds;
    }
    if (this._customFieldIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.customFieldIds = this._customFieldIds;
    }
    if (this._customFloodlightVariables !== undefined) {
      hasAnyValues = true;
      internalValueResult.customFloodlightVariables = this._customFloodlightVariables;
    }
    if (this._dimensionAttributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.dimensionAttributes = this._dimensionAttributes;
    }
    if (this._dimensions !== undefined) {
      hasAnyValues = true;
      internalValueResult.dimensions = this._dimensions;
    }
    if (this._dynamicParameterField !== undefined) {
      hasAnyValues = true;
      internalValueResult.dynamicParameterField = this._dynamicParameterField;
    }
    if (this._enableAllDimensionCombinations !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableAllDimensionCombinations = this._enableAllDimensionCombinations;
    }
    if (this._enableDynamicParameters !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableDynamicParameters = this._enableDynamicParameters;
    }
    if (this._fields !== undefined) {
      hasAnyValues = true;
      internalValueResult.fields = this._fields;
    }
    if (this._filter !== undefined) {
      hasAnyValues = true;
      internalValueResult.filter = this._filter;
    }
    if (this._filterFieldName !== undefined) {
      hasAnyValues = true;
      internalValueResult.filterFieldName = this._filterFieldName;
    }
    if (this._filterType !== undefined) {
      hasAnyValues = true;
      internalValueResult.filterType = this._filterType;
    }
    if (this._filterValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.filterValue = this._filterValue;
    }
    if (this._generateFivetranPk !== undefined) {
      hasAnyValues = true;
      internalValueResult.generateFivetranPk = this._generateFivetranPk;
    }
    if (this._includeZeroRows !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeZeroRows = this._includeZeroRows;
    }
    if (this._metrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.metrics = this._metrics;
    }
    if (this._partners !== undefined) {
      hasAnyValues = true;
      internalValueResult.partners = this._partners;
    }
    if (this._perInteractionDimensions !== undefined) {
      hasAnyValues = true;
      internalValueResult.perInteractionDimensions = this._perInteractionDimensions;
    }
    if (this._prebuiltReport !== undefined) {
      hasAnyValues = true;
      internalValueResult.prebuiltReport = this._prebuiltReport;
    }
    if (this._primaryKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.primaryKeys = this._primaryKeys;
    }
    if (this._queryId !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryId = this._queryId;
    }
    if (this._reportConfigurationIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportConfigurationIds = this._reportConfigurationIds;
    }
    if (this._reportFormatType !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportFormatType = this._reportFormatType;
    }
    if (this._reportType !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportType = this._reportType;
    }
    if (this._reportUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportUrl = this._reportUrl;
    }
    if (this._rollbackWindow !== undefined) {
      hasAnyValues = true;
      internalValueResult.rollbackWindow = this._rollbackWindow;
    }
    if (this._searchTypes !== undefined) {
      hasAnyValues = true;
      internalValueResult.searchTypes = this._searchTypes;
    }
    if (this._segmentIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.segmentIds = this._segmentIds;
    }
    if (this._segments !== undefined) {
      hasAnyValues = true;
      internalValueResult.segments = this._segments;
    }
    if (this._startDate !== undefined) {
      hasAnyValues = true;
      internalValueResult.startDate = this._startDate;
    }
    if (this._startDateParameterField !== undefined) {
      hasAnyValues = true;
      internalValueResult.startDateParameterField = this._startDateParameterField;
    }
    if (this._startMonth !== undefined) {
      hasAnyValues = true;
      internalValueResult.startMonth = this._startMonth;
    }
    if (this._startYear !== undefined) {
      hasAnyValues = true;
      internalValueResult.startYear = this._startYear;
    }
    if (this._supportNestedColumns !== undefined) {
      hasAnyValues = true;
      internalValueResult.supportNestedColumns = this._supportNestedColumns;
    }
    if (this._syncStrategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncStrategy = this._syncStrategy;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._tableName !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableName = this._tableName;
    }
    if (this._timeAggregationGranularity !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeAggregationGranularity = this._timeAggregationGranularity;
    }
    if (this._updateConfigOnEachSync !== undefined) {
      hasAnyValues = true;
      internalValueResult.updateConfigOnEachSync = this._updateConfigOnEachSync;
    }
    if (this._versionSyncStrategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.versionSyncStrategy = this._versionSyncStrategy;
    }
    if (this._versions !== undefined) {
      hasAnyValues = true;
      internalValueResult.versions = this._versions;
    }
    if (this._accounts?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accounts = this._accounts?.internalValue;
    }
    if (this._filters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.filters = this._filters?.internalValue;
    }
    if (this._levels?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.levels = this._levels?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigReports | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._adUnitView = undefined;
      this._advertisers = undefined;
      this._aggregation = undefined;
      this._attributes = undefined;
      this._columns = undefined;
      this._configMethod = undefined;
      this._configType = undefined;
      this._conversionDimensions = undefined;
      this._currency = undefined;
      this._customDimensionKeyIds = undefined;
      this._customFieldIds = undefined;
      this._customFloodlightVariables = undefined;
      this._dimensionAttributes = undefined;
      this._dimensions = undefined;
      this._dynamicParameterField = undefined;
      this._enableAllDimensionCombinations = undefined;
      this._enableDynamicParameters = undefined;
      this._fields = undefined;
      this._filter = undefined;
      this._filterFieldName = undefined;
      this._filterType = undefined;
      this._filterValue = undefined;
      this._generateFivetranPk = undefined;
      this._includeZeroRows = undefined;
      this._metrics = undefined;
      this._partners = undefined;
      this._perInteractionDimensions = undefined;
      this._prebuiltReport = undefined;
      this._primaryKeys = undefined;
      this._queryId = undefined;
      this._reportConfigurationIds = undefined;
      this._reportFormatType = undefined;
      this._reportType = undefined;
      this._reportUrl = undefined;
      this._rollbackWindow = undefined;
      this._searchTypes = undefined;
      this._segmentIds = undefined;
      this._segments = undefined;
      this._startDate = undefined;
      this._startDateParameterField = undefined;
      this._startMonth = undefined;
      this._startYear = undefined;
      this._supportNestedColumns = undefined;
      this._syncStrategy = undefined;
      this._table = undefined;
      this._tableName = undefined;
      this._timeAggregationGranularity = undefined;
      this._updateConfigOnEachSync = undefined;
      this._versionSyncStrategy = undefined;
      this._versions = undefined;
      this._accounts.internalValue = undefined;
      this._filters.internalValue = undefined;
      this._levels.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._adUnitView = value.adUnitView;
      this._advertisers = value.advertisers;
      this._aggregation = value.aggregation;
      this._attributes = value.attributes;
      this._columns = value.columns;
      this._configMethod = value.configMethod;
      this._configType = value.configType;
      this._conversionDimensions = value.conversionDimensions;
      this._currency = value.currency;
      this._customDimensionKeyIds = value.customDimensionKeyIds;
      this._customFieldIds = value.customFieldIds;
      this._customFloodlightVariables = value.customFloodlightVariables;
      this._dimensionAttributes = value.dimensionAttributes;
      this._dimensions = value.dimensions;
      this._dynamicParameterField = value.dynamicParameterField;
      this._enableAllDimensionCombinations = value.enableAllDimensionCombinations;
      this._enableDynamicParameters = value.enableDynamicParameters;
      this._fields = value.fields;
      this._filter = value.filter;
      this._filterFieldName = value.filterFieldName;
      this._filterType = value.filterType;
      this._filterValue = value.filterValue;
      this._generateFivetranPk = value.generateFivetranPk;
      this._includeZeroRows = value.includeZeroRows;
      this._metrics = value.metrics;
      this._partners = value.partners;
      this._perInteractionDimensions = value.perInteractionDimensions;
      this._prebuiltReport = value.prebuiltReport;
      this._primaryKeys = value.primaryKeys;
      this._queryId = value.queryId;
      this._reportConfigurationIds = value.reportConfigurationIds;
      this._reportFormatType = value.reportFormatType;
      this._reportType = value.reportType;
      this._reportUrl = value.reportUrl;
      this._rollbackWindow = value.rollbackWindow;
      this._searchTypes = value.searchTypes;
      this._segmentIds = value.segmentIds;
      this._segments = value.segments;
      this._startDate = value.startDate;
      this._startDateParameterField = value.startDateParameterField;
      this._startMonth = value.startMonth;
      this._startYear = value.startYear;
      this._supportNestedColumns = value.supportNestedColumns;
      this._syncStrategy = value.syncStrategy;
      this._table = value.table;
      this._tableName = value.tableName;
      this._timeAggregationGranularity = value.timeAggregationGranularity;
      this._updateConfigOnEachSync = value.updateConfigOnEachSync;
      this._versionSyncStrategy = value.versionSyncStrategy;
      this._versions = value.versions;
      this._accounts.internalValue = value.accounts;
      this._filters.internalValue = value.filters;
      this._levels.internalValue = value.levels;
    }
  }

  // ad_unit_view - computed: true, optional: true, required: false
  private _adUnitView?: string; 
  public get adUnitView() {
    return this.getStringAttribute('ad_unit_view');
  }
  public set adUnitView(value: string) {
    this._adUnitView = value;
  }
  public resetAdUnitView() {
    this._adUnitView = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adUnitViewInput() {
    return this._adUnitView;
  }

  // advertisers - computed: false, optional: true, required: false
  private _advertisers?: string[]; 
  public get advertisers() {
    return cdktf.Fn.tolist(this.getListAttribute('advertisers'));
  }
  public set advertisers(value: string[]) {
    this._advertisers = value;
  }
  public resetAdvertisers() {
    this._advertisers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertisersInput() {
    return this._advertisers;
  }

  // aggregation - computed: false, optional: true, required: false
  private _aggregation?: string; 
  public get aggregation() {
    return this.getStringAttribute('aggregation');
  }
  public set aggregation(value: string) {
    this._aggregation = value;
  }
  public resetAggregation() {
    this._aggregation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregationInput() {
    return this._aggregation;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: string[]; 
  public get attributes() {
    return cdktf.Fn.tolist(this.getListAttribute('attributes'));
  }
  public set attributes(value: string[]) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // columns - computed: false, optional: true, required: false
  private _columns?: string[]; 
  public get columns() {
    return cdktf.Fn.tolist(this.getListAttribute('columns'));
  }
  public set columns(value: string[]) {
    this._columns = value;
  }
  public resetColumns() {
    this._columns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get columnsInput() {
    return this._columns;
  }

  // config_method - computed: true, optional: true, required: false
  private _configMethod?: string; 
  public get configMethod() {
    return this.getStringAttribute('config_method');
  }
  public set configMethod(value: string) {
    this._configMethod = value;
  }
  public resetConfigMethod() {
    this._configMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMethodInput() {
    return this._configMethod;
  }

  // config_type - computed: true, optional: true, required: false
  private _configType?: string; 
  public get configType() {
    return this.getStringAttribute('config_type');
  }
  public set configType(value: string) {
    this._configType = value;
  }
  public resetConfigType() {
    this._configType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configTypeInput() {
    return this._configType;
  }

  // conversion_dimensions - computed: false, optional: true, required: false
  private _conversionDimensions?: string[]; 
  public get conversionDimensions() {
    return cdktf.Fn.tolist(this.getListAttribute('conversion_dimensions'));
  }
  public set conversionDimensions(value: string[]) {
    this._conversionDimensions = value;
  }
  public resetConversionDimensions() {
    this._conversionDimensions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get conversionDimensionsInput() {
    return this._conversionDimensions;
  }

  // currency - computed: false, optional: true, required: false
  private _currency?: string; 
  public get currency() {
    return this.getStringAttribute('currency');
  }
  public set currency(value: string) {
    this._currency = value;
  }
  public resetCurrency() {
    this._currency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get currencyInput() {
    return this._currency;
  }

  // custom_dimension_key_ids - computed: false, optional: true, required: false
  private _customDimensionKeyIds?: string[]; 
  public get customDimensionKeyIds() {
    return cdktf.Fn.tolist(this.getListAttribute('custom_dimension_key_ids'));
  }
  public set customDimensionKeyIds(value: string[]) {
    this._customDimensionKeyIds = value;
  }
  public resetCustomDimensionKeyIds() {
    this._customDimensionKeyIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customDimensionKeyIdsInput() {
    return this._customDimensionKeyIds;
  }

  // custom_field_ids - computed: false, optional: true, required: false
  private _customFieldIds?: string[]; 
  public get customFieldIds() {
    return cdktf.Fn.tolist(this.getListAttribute('custom_field_ids'));
  }
  public set customFieldIds(value: string[]) {
    this._customFieldIds = value;
  }
  public resetCustomFieldIds() {
    this._customFieldIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customFieldIdsInput() {
    return this._customFieldIds;
  }

  // custom_floodlight_variables - computed: false, optional: true, required: false
  private _customFloodlightVariables?: string[]; 
  public get customFloodlightVariables() {
    return cdktf.Fn.tolist(this.getListAttribute('custom_floodlight_variables'));
  }
  public set customFloodlightVariables(value: string[]) {
    this._customFloodlightVariables = value;
  }
  public resetCustomFloodlightVariables() {
    this._customFloodlightVariables = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customFloodlightVariablesInput() {
    return this._customFloodlightVariables;
  }

  // dimension_attributes - computed: false, optional: true, required: false
  private _dimensionAttributes?: string[]; 
  public get dimensionAttributes() {
    return cdktf.Fn.tolist(this.getListAttribute('dimension_attributes'));
  }
  public set dimensionAttributes(value: string[]) {
    this._dimensionAttributes = value;
  }
  public resetDimensionAttributes() {
    this._dimensionAttributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dimensionAttributesInput() {
    return this._dimensionAttributes;
  }

  // dimensions - computed: false, optional: true, required: false
  private _dimensions?: string[]; 
  public get dimensions() {
    return cdktf.Fn.tolist(this.getListAttribute('dimensions'));
  }
  public set dimensions(value: string[]) {
    this._dimensions = value;
  }
  public resetDimensions() {
    this._dimensions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dimensionsInput() {
    return this._dimensions;
  }

  // dynamic_parameter_field - computed: false, optional: true, required: false
  private _dynamicParameterField?: string; 
  public get dynamicParameterField() {
    return this.getStringAttribute('dynamic_parameter_field');
  }
  public set dynamicParameterField(value: string) {
    this._dynamicParameterField = value;
  }
  public resetDynamicParameterField() {
    this._dynamicParameterField = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dynamicParameterFieldInput() {
    return this._dynamicParameterField;
  }

  // enable_all_dimension_combinations - computed: true, optional: true, required: false
  private _enableAllDimensionCombinations?: boolean | cdktf.IResolvable; 
  public get enableAllDimensionCombinations() {
    return this.getBooleanAttribute('enable_all_dimension_combinations');
  }
  public set enableAllDimensionCombinations(value: boolean | cdktf.IResolvable) {
    this._enableAllDimensionCombinations = value;
  }
  public resetEnableAllDimensionCombinations() {
    this._enableAllDimensionCombinations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableAllDimensionCombinationsInput() {
    return this._enableAllDimensionCombinations;
  }

  // enable_dynamic_parameters - computed: true, optional: true, required: false
  private _enableDynamicParameters?: boolean | cdktf.IResolvable; 
  public get enableDynamicParameters() {
    return this.getBooleanAttribute('enable_dynamic_parameters');
  }
  public set enableDynamicParameters(value: boolean | cdktf.IResolvable) {
    this._enableDynamicParameters = value;
  }
  public resetEnableDynamicParameters() {
    this._enableDynamicParameters = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableDynamicParametersInput() {
    return this._enableDynamicParameters;
  }

  // fields - computed: false, optional: true, required: false
  private _fields?: string[]; 
  public get fields() {
    return cdktf.Fn.tolist(this.getListAttribute('fields'));
  }
  public set fields(value: string[]) {
    this._fields = value;
  }
  public resetFields() {
    this._fields = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldsInput() {
    return this._fields;
  }

  // filter - computed: true, optional: true, required: false
  private _filter?: string; 
  public get filter() {
    return this.getStringAttribute('filter');
  }
  public set filter(value: string) {
    this._filter = value;
  }
  public resetFilter() {
    this._filter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterInput() {
    return this._filter;
  }

  // filter_field_name - computed: false, optional: true, required: false
  private _filterFieldName?: string; 
  public get filterFieldName() {
    return this.getStringAttribute('filter_field_name');
  }
  public set filterFieldName(value: string) {
    this._filterFieldName = value;
  }
  public resetFilterFieldName() {
    this._filterFieldName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterFieldNameInput() {
    return this._filterFieldName;
  }

  // filter_type - computed: false, optional: true, required: false
  private _filterType?: string; 
  public get filterType() {
    return this.getStringAttribute('filter_type');
  }
  public set filterType(value: string) {
    this._filterType = value;
  }
  public resetFilterType() {
    this._filterType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterTypeInput() {
    return this._filterType;
  }

  // filter_value - computed: false, optional: true, required: false
  private _filterValue?: string; 
  public get filterValue() {
    return this.getStringAttribute('filter_value');
  }
  public set filterValue(value: string) {
    this._filterValue = value;
  }
  public resetFilterValue() {
    this._filterValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterValueInput() {
    return this._filterValue;
  }

  // generate_fivetran_pk - computed: true, optional: true, required: false
  private _generateFivetranPk?: boolean | cdktf.IResolvable; 
  public get generateFivetranPk() {
    return this.getBooleanAttribute('generate_fivetran_pk');
  }
  public set generateFivetranPk(value: boolean | cdktf.IResolvable) {
    this._generateFivetranPk = value;
  }
  public resetGenerateFivetranPk() {
    this._generateFivetranPk = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get generateFivetranPkInput() {
    return this._generateFivetranPk;
  }

  // include_zero_rows - computed: true, optional: true, required: false
  private _includeZeroRows?: boolean | cdktf.IResolvable; 
  public get includeZeroRows() {
    return this.getBooleanAttribute('include_zero_rows');
  }
  public set includeZeroRows(value: boolean | cdktf.IResolvable) {
    this._includeZeroRows = value;
  }
  public resetIncludeZeroRows() {
    this._includeZeroRows = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeZeroRowsInput() {
    return this._includeZeroRows;
  }

  // metrics - computed: false, optional: true, required: false
  private _metrics?: string[]; 
  public get metrics() {
    return cdktf.Fn.tolist(this.getListAttribute('metrics'));
  }
  public set metrics(value: string[]) {
    this._metrics = value;
  }
  public resetMetrics() {
    this._metrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricsInput() {
    return this._metrics;
  }

  // partners - computed: false, optional: true, required: false
  private _partners?: string[]; 
  public get partners() {
    return cdktf.Fn.tolist(this.getListAttribute('partners'));
  }
  public set partners(value: string[]) {
    this._partners = value;
  }
  public resetPartners() {
    this._partners = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partnersInput() {
    return this._partners;
  }

  // per_interaction_dimensions - computed: false, optional: true, required: false
  private _perInteractionDimensions?: string[]; 
  public get perInteractionDimensions() {
    return cdktf.Fn.tolist(this.getListAttribute('per_interaction_dimensions'));
  }
  public set perInteractionDimensions(value: string[]) {
    this._perInteractionDimensions = value;
  }
  public resetPerInteractionDimensions() {
    this._perInteractionDimensions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get perInteractionDimensionsInput() {
    return this._perInteractionDimensions;
  }

  // prebuilt_report - computed: true, optional: true, required: false
  private _prebuiltReport?: string; 
  public get prebuiltReport() {
    return this.getStringAttribute('prebuilt_report');
  }
  public set prebuiltReport(value: string) {
    this._prebuiltReport = value;
  }
  public resetPrebuiltReport() {
    this._prebuiltReport = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prebuiltReportInput() {
    return this._prebuiltReport;
  }

  // primary_keys - computed: false, optional: true, required: false
  private _primaryKeys?: string[]; 
  public get primaryKeys() {
    return cdktf.Fn.tolist(this.getListAttribute('primary_keys'));
  }
  public set primaryKeys(value: string[]) {
    this._primaryKeys = value;
  }
  public resetPrimaryKeys() {
    this._primaryKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get primaryKeysInput() {
    return this._primaryKeys;
  }

  // query_id - computed: false, optional: true, required: false
  private _queryId?: string; 
  public get queryId() {
    return this.getStringAttribute('query_id');
  }
  public set queryId(value: string) {
    this._queryId = value;
  }
  public resetQueryId() {
    this._queryId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryIdInput() {
    return this._queryId;
  }

  // report_configuration_ids - computed: false, optional: true, required: false
  private _reportConfigurationIds?: string[]; 
  public get reportConfigurationIds() {
    return cdktf.Fn.tolist(this.getListAttribute('report_configuration_ids'));
  }
  public set reportConfigurationIds(value: string[]) {
    this._reportConfigurationIds = value;
  }
  public resetReportConfigurationIds() {
    this._reportConfigurationIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportConfigurationIdsInput() {
    return this._reportConfigurationIds;
  }

  // report_format_type - computed: true, optional: true, required: false
  private _reportFormatType?: string; 
  public get reportFormatType() {
    return this.getStringAttribute('report_format_type');
  }
  public set reportFormatType(value: string) {
    this._reportFormatType = value;
  }
  public resetReportFormatType() {
    this._reportFormatType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportFormatTypeInput() {
    return this._reportFormatType;
  }

  // report_type - computed: true, optional: true, required: false
  private _reportType?: string; 
  public get reportType() {
    return this.getStringAttribute('report_type');
  }
  public set reportType(value: string) {
    this._reportType = value;
  }
  public resetReportType() {
    this._reportType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportTypeInput() {
    return this._reportType;
  }

  // report_url - computed: false, optional: true, required: false
  private _reportUrl?: string; 
  public get reportUrl() {
    return this.getStringAttribute('report_url');
  }
  public set reportUrl(value: string) {
    this._reportUrl = value;
  }
  public resetReportUrl() {
    this._reportUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportUrlInput() {
    return this._reportUrl;
  }

  // rollback_window - computed: true, optional: true, required: false
  private _rollbackWindow?: number; 
  public get rollbackWindow() {
    return this.getNumberAttribute('rollback_window');
  }
  public set rollbackWindow(value: number) {
    this._rollbackWindow = value;
  }
  public resetRollbackWindow() {
    this._rollbackWindow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rollbackWindowInput() {
    return this._rollbackWindow;
  }

  // search_types - computed: false, optional: true, required: false
  private _searchTypes?: string[]; 
  public get searchTypes() {
    return cdktf.Fn.tolist(this.getListAttribute('search_types'));
  }
  public set searchTypes(value: string[]) {
    this._searchTypes = value;
  }
  public resetSearchTypes() {
    this._searchTypes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get searchTypesInput() {
    return this._searchTypes;
  }

  // segment_ids - computed: false, optional: true, required: false
  private _segmentIds?: string[]; 
  public get segmentIds() {
    return cdktf.Fn.tolist(this.getListAttribute('segment_ids'));
  }
  public set segmentIds(value: string[]) {
    this._segmentIds = value;
  }
  public resetSegmentIds() {
    this._segmentIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get segmentIdsInput() {
    return this._segmentIds;
  }

  // segments - computed: false, optional: true, required: false
  private _segments?: string[]; 
  public get segments() {
    return cdktf.Fn.tolist(this.getListAttribute('segments'));
  }
  public set segments(value: string[]) {
    this._segments = value;
  }
  public resetSegments() {
    this._segments = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get segmentsInput() {
    return this._segments;
  }

  // start_date - computed: false, optional: true, required: false
  private _startDate?: string; 
  public get startDate() {
    return this.getStringAttribute('start_date');
  }
  public set startDate(value: string) {
    this._startDate = value;
  }
  public resetStartDate() {
    this._startDate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startDateInput() {
    return this._startDate;
  }

  // start_date_parameter_field - computed: false, optional: true, required: false
  private _startDateParameterField?: string; 
  public get startDateParameterField() {
    return this.getStringAttribute('start_date_parameter_field');
  }
  public set startDateParameterField(value: string) {
    this._startDateParameterField = value;
  }
  public resetStartDateParameterField() {
    this._startDateParameterField = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startDateParameterFieldInput() {
    return this._startDateParameterField;
  }

  // start_month - computed: true, optional: true, required: false
  private _startMonth?: string; 
  public get startMonth() {
    return this.getStringAttribute('start_month');
  }
  public set startMonth(value: string) {
    this._startMonth = value;
  }
  public resetStartMonth() {
    this._startMonth = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startMonthInput() {
    return this._startMonth;
  }

  // start_year - computed: true, optional: true, required: false
  private _startYear?: string; 
  public get startYear() {
    return this.getStringAttribute('start_year');
  }
  public set startYear(value: string) {
    this._startYear = value;
  }
  public resetStartYear() {
    this._startYear = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startYearInput() {
    return this._startYear;
  }

  // support_nested_columns - computed: true, optional: true, required: false
  private _supportNestedColumns?: boolean | cdktf.IResolvable; 
  public get supportNestedColumns() {
    return this.getBooleanAttribute('support_nested_columns');
  }
  public set supportNestedColumns(value: boolean | cdktf.IResolvable) {
    this._supportNestedColumns = value;
  }
  public resetSupportNestedColumns() {
    this._supportNestedColumns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get supportNestedColumnsInput() {
    return this._supportNestedColumns;
  }

  // sync_strategy - computed: true, optional: true, required: false
  private _syncStrategy?: string; 
  public get syncStrategy() {
    return this.getStringAttribute('sync_strategy');
  }
  public set syncStrategy(value: string) {
    this._syncStrategy = value;
  }
  public resetSyncStrategy() {
    this._syncStrategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncStrategyInput() {
    return this._syncStrategy;
  }

  // table - computed: true, optional: true, required: false
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  public resetTable() {
    this._table = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // table_name - computed: false, optional: true, required: false
  private _tableName?: string; 
  public get tableName() {
    return this.getStringAttribute('table_name');
  }
  public set tableName(value: string) {
    this._tableName = value;
  }
  public resetTableName() {
    this._tableName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableNameInput() {
    return this._tableName;
  }

  // time_aggregation_granularity - computed: true, optional: true, required: false
  private _timeAggregationGranularity?: string; 
  public get timeAggregationGranularity() {
    return this.getStringAttribute('time_aggregation_granularity');
  }
  public set timeAggregationGranularity(value: string) {
    this._timeAggregationGranularity = value;
  }
  public resetTimeAggregationGranularity() {
    this._timeAggregationGranularity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeAggregationGranularityInput() {
    return this._timeAggregationGranularity;
  }

  // update_config_on_each_sync - computed: true, optional: true, required: false
  private _updateConfigOnEachSync?: boolean | cdktf.IResolvable; 
  public get updateConfigOnEachSync() {
    return this.getBooleanAttribute('update_config_on_each_sync');
  }
  public set updateConfigOnEachSync(value: boolean | cdktf.IResolvable) {
    this._updateConfigOnEachSync = value;
  }
  public resetUpdateConfigOnEachSync() {
    this._updateConfigOnEachSync = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get updateConfigOnEachSyncInput() {
    return this._updateConfigOnEachSync;
  }

  // version_sync_strategy - computed: true, optional: true, required: false
  private _versionSyncStrategy?: string; 
  public get versionSyncStrategy() {
    return this.getStringAttribute('version_sync_strategy');
  }
  public set versionSyncStrategy(value: string) {
    this._versionSyncStrategy = value;
  }
  public resetVersionSyncStrategy() {
    this._versionSyncStrategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionSyncStrategyInput() {
    return this._versionSyncStrategy;
  }

  // versions - computed: false, optional: true, required: false
  private _versions?: string[]; 
  public get versions() {
    return cdktf.Fn.tolist(this.getListAttribute('versions'));
  }
  public set versions(value: string[]) {
    this._versions = value;
  }
  public resetVersions() {
    this._versions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionsInput() {
    return this._versions;
  }

  // accounts - computed: false, optional: true, required: false
  private _accounts = new ConnectorConfigReportsAccountsList(this, "accounts", true);
  public get accounts() {
    return this._accounts;
  }
  public putAccounts(value: ConnectorConfigReportsAccounts[] | cdktf.IResolvable) {
    this._accounts.internalValue = value;
  }
  public resetAccounts() {
    this._accounts.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountsInput() {
    return this._accounts.internalValue;
  }

  // filters - computed: false, optional: true, required: false
  private _filters = new ConnectorConfigReportsFiltersList(this, "filters", true);
  public get filters() {
    return this._filters;
  }
  public putFilters(value: ConnectorConfigReportsFilters[] | cdktf.IResolvable) {
    this._filters.internalValue = value;
  }
  public resetFilters() {
    this._filters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filtersInput() {
    return this._filters.internalValue;
  }

  // levels - computed: false, optional: true, required: false
  private _levels = new ConnectorConfigReportsLevelsList(this, "levels", true);
  public get levels() {
    return this._levels;
  }
  public putLevels(value: ConnectorConfigReportsLevels[] | cdktf.IResolvable) {
    this._levels.internalValue = value;
  }
  public resetLevels() {
    this._levels.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get levelsInput() {
    return this._levels.internalValue;
  }
}

export class ConnectorConfigReportsList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigReports[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigReportsOutputReference {
    return new ConnectorConfigReportsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigSecretsListStruct {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_lambda`: Secret Key.
  * 	- Service `azure_function`: Key
  * 	- Service `google_cloud_function`: Key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#key Connector#key}
  */
  readonly key?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_lambda`: Secret Value.
  * 	- Service `azure_function`: Value
  * 	- Service `google_cloud_function`: Value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#value Connector#value}
  */
  readonly value?: string;
}

export function connectorConfigSecretsListStructToTerraform(struct?: ConnectorConfigSecretsListStruct | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function connectorConfigSecretsListStructToHclTerraform(struct?: ConnectorConfigSecretsListStruct | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigSecretsListStructOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigSecretsListStruct | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigSecretsListStruct | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._value = value.value;
    }
  }

  // key - computed: true, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // value - computed: true, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class ConnectorConfigSecretsListStructList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigSecretsListStruct[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigSecretsListStructOutputReference {
    return new ConnectorConfigSecretsListStructOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigTenantConfigs {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reltio`: Your Reltio subdomain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#subdomain Connector#subdomain}
  */
  readonly subdomain?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reltio`: Your Reltio tenant ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tenant_id Connector#tenant_id}
  */
  readonly tenantId?: string;
}

export function connectorConfigTenantConfigsToTerraform(struct?: ConnectorConfigTenantConfigs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    subdomain: cdktf.stringToTerraform(struct!.subdomain),
    tenant_id: cdktf.stringToTerraform(struct!.tenantId),
  }
}


export function connectorConfigTenantConfigsToHclTerraform(struct?: ConnectorConfigTenantConfigs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    subdomain: {
      value: cdktf.stringToHclTerraform(struct!.subdomain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tenant_id: {
      value: cdktf.stringToHclTerraform(struct!.tenantId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigTenantConfigsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ConnectorConfigTenantConfigs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._subdomain !== undefined) {
      hasAnyValues = true;
      internalValueResult.subdomain = this._subdomain;
    }
    if (this._tenantId !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenantId = this._tenantId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigTenantConfigs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._subdomain = undefined;
      this._tenantId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._subdomain = value.subdomain;
      this._tenantId = value.tenantId;
    }
  }

  // subdomain - computed: false, optional: true, required: false
  private _subdomain?: string; 
  public get subdomain() {
    return this.getStringAttribute('subdomain');
  }
  public set subdomain(value: string) {
    this._subdomain = value;
  }
  public resetSubdomain() {
    this._subdomain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subdomainInput() {
    return this._subdomain;
  }

  // tenant_id - computed: false, optional: true, required: false
  private _tenantId?: string; 
  public get tenantId() {
    return this.getStringAttribute('tenant_id');
  }
  public set tenantId(value: string) {
    this._tenantId = value;
  }
  public resetTenantId() {
    this._tenantId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantIdInput() {
    return this._tenantId;
  }
}

export class ConnectorConfigTenantConfigsList extends cdktf.ComplexList {
  public internalValue? : ConnectorConfigTenantConfigs[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ConnectorConfigTenantConfigsOutputReference {
    return new ConnectorConfigTenantConfigsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ConnectorConfigA {
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: Azure Blob Storage connection method
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#abs_connection_method Connector#abs_connection_method}
  */
  readonly absConnectionMethod?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: Azure Blob Storage connection string.
  * 	- Service `braze`: Connection String
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#abs_connection_string Connector#abs_connection_string}
  */
  readonly absConnectionString?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: Azure Blob Storage container address
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#abs_container_address Connector#abs_container_address}
  */
  readonly absContainerAddress?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: Azure Blob Storage container name.
  * 	- Service `braze`: Container Name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#abs_container_name Connector#abs_container_name}
  */
  readonly absContainerName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: Azure Blob Storage host IP
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#abs_host_ip Connector#abs_host_ip}
  */
  readonly absHostIp?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: Azure Blob Storage username
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#abs_host_user Connector#abs_host_user}
  */
  readonly absHostUser?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Prefix
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#abs_prefix Connector#abs_prefix}
  */
  readonly absPrefix?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: Azure Blob Storage public key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#abs_public_key Connector#abs_public_key}
  */
  readonly absPublicKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workramp`: Your WorkRamp academy ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#academy_id Connector#academy_id}
  */
  readonly academyId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `ceridian_dayforce`: Your confirmation that you have granted Fivetran access to all the RESTful services and fields you want to sync. Possible values: `true`, `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#access_confirmation Connector#access_confirmation}
  */
  readonly accessConfirmation?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `planful`: Your Planful access ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#access_id Connector#access_id}
  */
  readonly accessId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `gainsight_customer_success`: The access key for API authentication.
  * 	- Service `gongio`: Your Gongio Access key.
  * 	- Service `line_ads`: Your LINE Ads access key.
  * 	- Service `planful`: Your Planful access key.
  * 	- Service `retailnext`: Your RetailNext access key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#access_key Connector#access_key}
  */
  readonly accessKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: Your AWS access key ID.
  * 	- Service `aws_cost_report`: Access Key ID
  * 	- Service `checkout`: Your Checkout.com access key ID.
  * 	- Service `cloudtalk`: Your CloudTalk Access Key ID.
  * 	- Service `nice`: Your NICE access key ID.
  * 	- Service `s3`: Access Key ID
  * 	- Service `s3_compatible_storage`: Access Key ID
  * 	- Service `validio`: Your Validio access key ID.
  * 	- Service `wasabi_cloud_storage`: Access Key ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#access_key_id Connector#access_key_id}
  */
  readonly accessKeyId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Access Key Secret
  * 	- Service `checkout`: Your Checkout.com access key secret.
  * 	- Service `cloudtalk`: Your CloudTalk Access Key Secret.
  * 	- Service `gongio`: Your Gongio Access Key Secret.
  * 	- Service `nice`: Your NICE access key secret.
  * 	- Service `s3`: Access Key Secret
  * 	- Service `s3_compatible_storage`: Access Key Secret
  * 	- Service `wasabi_cloud_storage`: Access Key Secret
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#access_key_secret Connector#access_key_secret}
  */
  readonly accessKeySecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `7shifts`: Your 7shifts access token.
  * 	- Service `attio`: Your Attio bearer token
  * 	- Service `big_commerce`: API access token of your store.
  * 	- Service `bitly`: Your Bitly access token.
  * 	- Service `calabrio`: Your Calabrio access token.
  * 	- Service `coalesce`: Your Coalesce access token.
  * 	- Service `coheris`: Your Coheris access token.
  * 	- Service `coupa`: Your Coupa access token fetched using client_id and client_secret
  * 	- Service `deputy`: Your Deputy API access token.
  * 	- Service `getfeedback`: Your GetFeedback Access token.
  * 	- Service `gocardless`: Your GoCardless API token.
  * 	- Service `higher_logic_vanilla`: Your Higher Logic Vanilla access token.
  * 	- Service `ironclad`: Your Ironclad access token.
  * 	- Service `khoros_marketing`: Your Khoros Marketing access token.
  * 	- Service `kustomer`: Your Kustomer API key.
  * 	- Service `lattice`: Your Lattice API access token.
  * 	- Service `launchdarkly`: Your LaunchDarkly access token.
  * 	- Service `leap_crm`: Your Leap CRM access token.
  * 	- Service `nylas`: Your Nylas access_token.
  * 	- Service `planhat`: Your Planhat access token.
  * 	- Service `poplar`: Your Poplar access token.
  * 	- Service `rollbar`: Your Rollbar Access Token.
  * 	- Service `samsara`: Your Samsara API token.
  * 	- Service `slab`: Your Slab API key.
  * 	- Service `stripe`: The Stripe API Restricted Key
  * 	- Service `stripe_test`: The Stripe API Restricted Key
  * 	- Service `talkwalker`: Your Talkwalker access token.
  * 	- Service `workable`: Your Workable Access Token.
  * 	- Service `workramp`: Your WorkRamp access token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#access_token Connector#access_token}
  */
  readonly accessToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `share_point`: Access Type
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#access_type Connector#access_type}
  */
  readonly accessType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `netsuite_suiteanalytics`: The NetSuite Account ID.
  * 	- Service `ordway`: Your Ordway account type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account Connector#account}
  */
  readonly account?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `rollbar`: Your Rollbar account access token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account_access_token Connector#account_access_token}
  */
  readonly accountAccessToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appcues`: Your Appcues Account ID.
  * 	- Service `brightcove`: Your Brightcove account ID.
  * 	- Service `cin7core`: Your Cin7 Core account ID.
  * 	- Service `dear`: Your Dear Account ID.
  * 	- Service `harvest`: Your Harvest Account ID.
  * 	- Service `optimizely`: Your Optimizely account ID.
  * 	- Service `rokt`: Your Rokt account ID.
  * 	- Service `udemy_business`: Your Udemy Business account ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account_id Connector#account_id}
  */
  readonly accountId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `taboola`: Specific Account IDs to sync.  Must be populated if `syncMode` is set to `SpecificAccounts`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account_ids Connector#account_ids}
  */
  readonly accountIds?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cosmos`: The read-only primary or secondary account key for the database account. Required for the `ACCOUNT_KEY` data access method.
  * 	- Service `simplesat`: Your Simplesat account key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account_key Connector#account_key}
  */
  readonly accountKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `eventsforce`: Your Eventsforce account name.
  * 	- Service `freshdesk_contact_center`: Your Freshdesk Contact Center account name.
  * 	- Service `happyfox`: Your HappyFox account name.
  * 	- Service `maxio_saasoptics`: Your Maxio SaaSOptics account name.
  * 	- Service `talkdesk`: Your Talkdesk Account Name.
  * 	- Service `udemy_business`: Your Udemy Business account name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account_name Connector#account_name}
  */
  readonly accountName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `tymeshift`: Your Tymeshift account plan.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account_plan Connector#account_plan}
  */
  readonly accountPlan?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `iterable`: If your Iterable account URL starts with `https://app.eu.iterable.com` then provide `EU` else `US`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account_region Connector#account_region}
  */
  readonly accountRegion?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `fone_dynamics`: Your Fone Dynamics account SID.
  * 	- Service `impact_partner`: Your Impact Partner account SID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account_sid Connector#account_sid}
  */
  readonly accountSid?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Account Sync Mode
  * 	- Service `snapchat_ads`: Whether to sync all accounts or specific accounts. Default value: `AllAccounts`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account_sync_mode Connector#account_sync_mode}
  */
  readonly accountSyncMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `konnect_insights`: Your Konnect Insights Account Token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account_token Connector#account_token}
  */
  readonly accountToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `freightview`: Your Freightview account type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#account_type Connector#account_type}
  */
  readonly accountType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `bingads`: Specific accounts to sync. Must be populated if `syncMode` is set to `SpecificAccounts`.
  * 	- Service `facebook`: List of accounts of which connector will sync the data.
  * 	- Service `facebook_ad_account`: Specific accounts to sync. Must be populated if `sync_mode` is set to `SpecificAccounts`.
  * 	- Service `facebook_ads`: List of accounts of which connector will sync the data.
  * 	- Service `google_ads`: The list of Account IDs to sync. Must be populated if `sync_mode` is set to `SpecificAccounts`.
  * 	- Service `google_analytics`: The list of specific Account IDs to sync.  Must be populated if `syncMode` is set to `SpecificAccounts`.
  * 	- Service `google_analytics_4`: The list of specific Account IDs to sync. Must be populated if `sync_mode` is set to `SPECIFIC_ACCOUNTS`.
  * 	- Service `google_analytics_mcf`: Specific Account IDs to sync.  Must be populated if `sync_mode` is set to `SPECIFIC_ACCOUNTS`.
  * 	- Service `google_search_ads_360`: Specific accounts to sync. Must be populated if `accountsSyncMode` is set to `SPECIFIC_ACCOUNTS`.
  * 	- Service `instagram_business`: Specific accounts to sync. Must be populated if `sync_mode` is set to `SpecificAccounts`.
  * 	- Service `itunes_connect`: Accounts
  * 	- Service `linkedin_ads`: Specific Account IDs to sync. Must be populated if `syncMode` is set to `SpecificAccounts`.
  * 	- Service `snapchat_ads`: Specific accounts IDs to sync. Must be populated if `accountSyncMode` is set to `SpecificAccounts`.
  * 	- Service `spotify_ads`: The list of Ad Account IDs to sync. Must be populated if `sync_mode` is set to `SPECIFIC_ACCOUNTS`.
  * 	- Service `tiktok_ads`: Specific accounts to sync.  Must be populated if `sync_mode` is set to `SpecificAccounts`.
  * 	- Service `twilio`: Specific Accounts to sync.  Must be populated if `sync_mode` is set to `SpecificAccounts`.
  * 	- Service `twitter`: Specific accounts to sync. Must be populated if `sync_mode` is set to `SpecificAccounts`.
  * 	- Service `twitter_ads`: Specific Accounts to sync.  Must be populated if `sync_mode` is set to `SpecificAccounts`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#accounts Connector#accounts}
  */
  readonly accounts?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_search_ads_360`: Whether to sync all accounts or specific.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#accounts_sync_mode Connector#accounts_sync_mode}
  */
  readonly accountsSyncMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook`: List of action_breakdowns which connector will sync. [Possible action_breakdowns values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#actionbreakdowns).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#action_breakdowns Connector#action_breakdowns}
  */
  readonly actionBreakdowns?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook`: The report time of action stats. [Possible action_report time values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#actionreporttime).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#action_report_time Connector#action_report_time}
  */
  readonly actionReportTime?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `linkedin_ads`: Whether to sync all analytic reports or specific. Default value: `AllReports`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ad_analytics Connector#ad_analytics}
  */
  readonly adAnalytics?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_publishers`: Ad unit view for the report.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ad_unit_view Connector#ad_unit_view}
  */
  readonly adUnitView?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `splitio`: Your Split admin api key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#admin_api_key Connector#admin_api_key}
  */
  readonly adminApiKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `brivo`: Your Brivo Admin username.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#admin_username Connector#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adroll`: Specific advertisables to sync. Must be populated if `sync_mode` is set to `SpecificAdvertisables`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#advertisables Connector#advertisables}
  */
  readonly advertisables?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_display_and_video_360`: The list of advertisers to include into a sync. This parameter only takes effect when `config_method` is set to `CREATE_NEW`.
  * 	- Service `google_search_ads_360`: Specific advertisers to sync. Must be populated if `advertisersSyncMode` is set to `SPECIFIC_ADVERTISERS`.
  * 	- Service `pinterest_ads`: Specific Advertisers to sync.  Must be populated if `sync_mode` is set to `SpecificAdvertisers`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#advertisers Connector#advertisers}
  */
  readonly advertisers?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_gemini`: Specific Advertiser IDs to sync. Must be populated if `syncMode` is set to `SpecificAccounts`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#advertisers_id Connector#advertisers_id}
  */
  readonly advertisersId?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_search_ads_360`: Whether to sync all or specific advertisers.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#advertisers_sync_mode Connector#advertisers_sync_mode}
  */
  readonly advertisersSyncMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: Specific Advertisers to sync. Must be populated if `sync_mode_advertiser` is set to `SPECIFIC_ADVERTISERS`. Pay attention to the format: `AdvertiserId:SeatId`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#advertisers_with_seat Connector#advertisers_with_seat}
  */
  readonly advertisersWithSeat?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#agent_config_method Connector#agent_config_method}
  */
  readonly agentConfigMethod?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `db2i_hva`: The agent host.
  * 	- Service `db2i_sap_hva`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
  * 	- Service `hana_sap_hva_b1`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
  * 	- Service `hana_sap_hva_ecc`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
  * 	- Service `hana_sap_hva_ecc_netweaver`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
  * 	- Service `hana_sap_hva_s4`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
  * 	- Service `hana_sap_hva_s4_netweaver`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
  * 	- Service `oracle_hva`: The host of the agent. This is the same as database host, since the agent must be installed in the same machine as source database.
  * 	- Service `oracle_sap_hva`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
  * 	- Service `oracle_sap_hva_netweaver`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
  * 	- Service `sql_server_hva`: The host address of the machine running the agent. Often the same as the DB host.
  * 	- Service `sql_server_sap_ecc_hva`: The host address of the machine running the agent. Often the same as the DB host.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#agent_host Connector#agent_host}
  */
  readonly agentHost?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `phoenix_ads`: Your Phoenix Ads Agent ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#agent_id Connector#agent_id}
  */
  readonly agentId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: The home directory of the Oracle database.
  * 	- Service `oracle_sap_hva`: The home directory of the Oracle database.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#agent_ora_home Connector#agent_ora_home}
  */
  readonly agentOraHome?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `db2i_hva`: The agent password.
  * 	- Service `db2i_sap_hva`: The agent user's password. It must have a minimum length of 10 characters.
  * 	- Service `hana_sap_hva_b1`: The agent user's password. It must have a minimum length of 10 characters.
  * 	- Service `hana_sap_hva_ecc`: The agent user's password. It must have a minimum length of 10 characters.
  * 	- Service `hana_sap_hva_ecc_netweaver`: The agent user's password. It must have a minimum length of 10 characters.
  * 	- Service `hana_sap_hva_s4`: The agent user's password. It must have a minimum length of 10 characters.
  * 	- Service `hana_sap_hva_s4_netweaver`: The agent user's password. It must have a minimum length of 10 characters.
  * 	- Service `oracle_hva`: The agent user's password. It should have a minimum length of 10 characters.
  * 	- Service `oracle_sap_hva`: The agent user's password. It must have a minimum length of 10 characters.
  * 	- Service `oracle_sap_hva_netweaver`: The agent user's password. It must have a minimum length of 10 characters.
  * 	- Service `sql_server_hva`: The password for the agent user.
  * 	- Service `sql_server_sap_ecc_hva`: The password for the agent user.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#agent_password Connector#agent_password}
  */
  readonly agentPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `db2i_hva`: The agent port.
  * 	- Service `db2i_sap_hva`: The port number of the agent.
  * 	- Service `hana_sap_hva_b1`: The port number of the agent.
  * 	- Service `hana_sap_hva_ecc`: The port number of the agent.
  * 	- Service `hana_sap_hva_ecc_netweaver`: The port number of the agent.
  * 	- Service `hana_sap_hva_s4`: The port number of the agent.
  * 	- Service `hana_sap_hva_s4_netweaver`: The port number of the agent.
  * 	- Service `oracle_hva`: The port number of the agent.
  * 	- Service `oracle_sap_hva`: The port number of the agent.
  * 	- Service `oracle_sap_hva_netweaver`: The port number of the agent.
  * 	- Service `sql_server_hva`: The port that the agent has open for Fivetran's connection. Default value is 4343.
  * 	- Service `sql_server_sap_ecc_hva`: The port that the agent has open for Fivetran's connection. Default value is 4343.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#agent_port Connector#agent_port}
  */
  readonly agentPort?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `db2i_hva`: The public certificate for the agent.
  * 	- Service `db2i_sap_hva`: The agent public certificate.
  * 	- Service `hana_sap_hva_b1`: The agent public certificate.
  * 	- Service `hana_sap_hva_ecc`: The agent public certificate.
  * 	- Service `hana_sap_hva_ecc_netweaver`: The agent public certificate.
  * 	- Service `hana_sap_hva_s4`: The agent public certificate.
  * 	- Service `hana_sap_hva_s4_netweaver`: The agent public certificate.
  * 	- Service `oracle_hva`: The agent public certificate.
  * 	- Service `oracle_sap_hva`: The agent public certificate.
  * 	- Service `oracle_sap_hva_netweaver`: The agent public certificate.
  * 	- Service `sql_server_hva`: The public certificate generated by the agent.
  * 	- Service `sql_server_sap_ecc_hva`: The public certificate generated by the agent.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#agent_public_cert Connector#agent_public_cert}
  */
  readonly agentPublicCert?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `db2i_hva`: The agent user name.
  * 	- Service `db2i_sap_hva`: The agent's user.
  * 	- Service `hana_sap_hva_b1`: The agent's user.
  * 	- Service `hana_sap_hva_ecc`: The agent's user.
  * 	- Service `hana_sap_hva_ecc_netweaver`: The agent's user.
  * 	- Service `hana_sap_hva_s4`: The agent's user.
  * 	- Service `hana_sap_hva_s4_netweaver`: The agent's user.
  * 	- Service `oracle_hva`: The agent's user.
  * 	- Service `oracle_sap_hva`: The agent's user.
  * 	- Service `oracle_sap_hva_netweaver`: The agent's user.
  * 	- Service `sql_server_hva`: The agent's username.
  * 	- Service `sql_server_sap_ecc_hva`: The agent's username.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#agent_user Connector#agent_user}
  */
  readonly agentUser?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook`: Options to select aggregation duration. [Possible aggregation values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#aggregation).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#aggregation Connector#aggregation}
  */
  readonly aggregation?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `economic`: Your E-conomic X-AgreementGrantToken goes here.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#agreement_grant_token Connector#agreement_grant_token}
  */
  readonly agreementGrantToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `webhooks`: HMAC algorithm used for generating the HMAC signature. Supported algorithms  INFER_FROM_HEADER, MD5, SHA_1, SHA_224, SHA_256, SHA_384, SHA_512. Default: SHA_256
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#algorithm Connector#algorithm}
  */
  readonly algorithm?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: Require TLS through Tunnel
  * 	- Service `aurora_postgres`: Require TLS through Tunnel
  * 	- Service `aveva_pi`: Require TLS.
  * 	- Service `azure_cosmos_for_mongo`: Require TLS
  * 	- Service `azure_postgres`: Require TLS through Tunnel
  * 	- Service `azure_sql_db`: Require TLS through Tunnel.
  * 	- Service `azure_sql_managed_db`: Require TLS.
  * 	- Service `clarity`: Require TLS through Tunnel.
  * 	- Service `cockroachdb`: Require TLS
  * 	- Service `db2i_hva`: Require TLS through Tunnel
  * 	- Service `db2i_sap_hva`: Require TLS through Tunnel
  * 	- Service `db2luw`: Require TLS through Tunnel
  * 	- Service `documentdb`: Require TLS encryption.
  * 	- Service `dynamics_365_fo`: Require TLS through Tunnel.
  * 	- Service `ehr`: Require TLS through Tunnel.
  * 	- Service `elastic_cloud`: Default value: true. Set to false if TLS is not required when using an SSH tunnel.
  * 	- Service `epic_clarity`: Require TLS through Tunnel.
  * 	- Service `es_self_hosted`: Default value: true. Set to false if TLS is not required when using an SSH tunnel.
  * 	- Service `google_cloud_mysql`: Require TLS through Tunnel
  * 	- Service `google_cloud_postgresql`: Require TLS through Tunnel
  * 	- Service `google_cloud_sqlserver`: Require TLS.
  * 	- Service `heroku_postgres`: Require TLS through Tunnel
  * 	- Service `magento_mysql`: Require TLS through Tunnel
  * 	- Service `magento_mysql_rds`: Require TLS through Tunnel
  * 	- Service `maria`: Require TLS through Tunnel
  * 	- Service `maria_azure`: Require TLS through Tunnel
  * 	- Service `maria_rds`: Require TLS through Tunnel
  * 	- Service `mongo`: Require TLS
  * 	- Service `mongo_sharded`: Require TLS through Tunnel
  * 	- Service `mysql`: Require TLS through Tunnel
  * 	- Service `mysql_azure`: Require TLS through Tunnel
  * 	- Service `mysql_rds`: Require TLS through Tunnel
  * 	- Service `opendistro`: Default value: true. Set to false if TLS is not required when using an SSH tunnel.
  * 	- Service `opensearch`: Default value: true. Set to false if TLS is not required when using an SSH tunnel.
  * 	- Service `oracle`: Require TLS through Tunnel
  * 	- Service `oracle_ebs`: Require TLS through Tunnel
  * 	- Service `oracle_hva`: Require TLS through Tunnel
  * 	- Service `oracle_rac`: Require TLS through Tunnel
  * 	- Service `oracle_rds`: Require TLS through Tunnel
  * 	- Service `oracle_sap_hva`: Require TLS through Tunnel
  * 	- Service `oracle_sap_hva_netweaver`: Require TLS.
  * 	- Service `postgres`: Require TLS through Tunnel
  * 	- Service `postgres_rds`: Require TLS through Tunnel
  * 	- Service `sql_server`: Require TLS.
  * 	- Service `sql_server_hva`: Require TLS.
  * 	- Service `sql_server_rds`: Require TLS.
  * 	- Service `sql_server_sap_ecc_hva`: Require TLS.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#always_encrypted Connector#always_encrypted}
  */
  readonly alwaysEncrypted?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `freshsuccess`: Set this parameter to `api`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api Connector#api}
  */
  readonly api?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `device_magic`: Your Device Magic API access token.
  * 	- Service `flywheel_digital`: Your Flywheel Digital API access token.
  * 	- Service `shopify`: API access token of your custom app.
  * 	- Service `square`: The Square API access token of your application.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_access_token Connector#api_access_token}
  */
  readonly apiAccessToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `afterpay`: Your Afterpay API environment.
  * 	- Service `tiktok_organic`: Your TikTok Organic API environment.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_environment Connector#api_environment}
  */
  readonly apiEnvironment?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aircall`: Your Aircall API ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_id Connector#api_id}
  */
  readonly apiId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `15five`: Your 15five API key.
  * 	- Service `360learning`: Your 360Learning API Key.
  * 	- Service `6sense`: Your 6sense API Key.
  * 	- Service `acculynx`: Your Acculynx API key.
  * 	- Service `activecampaign`: Your ActiveCampaign API key.
  * 	- Service `affinity`: Your Affinity API key.
  * 	- Service `airtable`: API key of the Airtable account.
  * 	- Service `algolia`: Your Algolia API key.
  * 	- Service `alida`: Your Alida API key.
  * 	- Service `anvyl`: Your Anvyl API key.
  * 	- Service `apollo`: Your Apollo API key.
  * 	- Service `appcues`: Your Appcues API key.
  * 	- Service `ascend_by_partnerize`: Your Ascend by Partnerize API Key
  * 	- Service `ashby`: Your Ashby API key.
  * 	- Service `assembled`: Your Assembled API key.
  * 	- Service `atlassian_jira_align`: Your Jira Align API key.
  * 	- Service `atlassian_ops_genie`: Your Opsgenie API key
  * 	- Service `attentive`: Your Attentive API key.
  * 	- Service `aumni`: Your Aumni API key.
  * 	- Service `avantlink`: Your AvantLink API key.
  * 	- Service `ballotready`: Your BallotReady API token.
  * 	- Service `bamboohr`: Your API Key.
  * 	- Service `bazaarvoice`: Your Bazaarvoice API key.
  * 	- Service `betterworks`: Your Betterworks API key.
  * 	- Service `bigmarker`: Your BigMarker API key.
  * 	- Service `bizzabo`: Your Bizzabo API key.
  * 	- Service `brave_ads`: Your Brave Ads API key
  * 	- Service `braze`: Your Braze API Key.
  * 	- Service `brevo`: Your Brevo API key.
  * 	- Service `brivo`: Your Brivo API key.
  * 	- Service `bubble`: Your Bubble API token.
  * 	- Service `buildium`: Your Buildium private API key.
  * 	- Service `callrail`: Your CallRail API key.
  * 	- Service `campaignmonitor`: Your Campaign Monitor API key.
  * 	- Service `canny`: Your Canny API key.
  * 	- Service `chargebee_product_catalog_1`: Your Chargebee Product Catalog 1 API key.
  * 	- Service `chargebee_product_catalog_2`: Your Chargebee API key.
  * 	- Service `chartmogul`: Your ChartMogul API key.
  * 	- Service `chorusai`: Your Chorus API key.
  * 	- Service `churnkey`: Your Churnkey API Key.
  * 	- Service `churnzero`: Your ChurnZero API key.
  * 	- Service `cimis`: Your Cimis API key.
  * 	- Service `circleci`: Your CircleCI API Key.
  * 	- Service `clickup`: Your ClickUp API key.
  * 	- Service `clockify`: Your Clockify API key.
  * 	- Service `clockodo`: Your Clockodo API key.
  * 	- Service `close`: Your Close API key.
  * 	- Service `cloudbeds`: Your Cloudbeds API key.
  * 	- Service `clubspeed`: Your Clubspeed API key.
  * 	- Service `coassemble`: Your Coassemble API key.
  * 	- Service `codefresh`: Your Codefresh API Key.
  * 	- Service `column`: Your Column API key.
  * 	- Service `concord`: Your Concord API key.
  * 	- Service `confluent_cloud`: API Key
  * 	- Service `consensus_demo_automation_platform`: Your Consensus Demo Automation Platform API key.
  * 	- Service `contrast_security`: Your Contrast Security API Key.
  * 	- Service `copper`: Your Copper API key.
  * 	- Service `coupa`: Your Coupa API key.
  * 	- Service `crunchbase`: Your Crunchbase API key.
  * 	- Service `datadog`: Your Datadog API key.
  * 	- Service `dbt_cloud`: Your dbt Cloud service token.
  * 	- Service `dcl_logistics`: Your DCL Logistics API key.
  * 	- Service `delighted`: API Key for your Delighted account
  * 	- Service `destini`: Your Destini API Key.
  * 	- Service `discourse`: Your Discourse API key.
  * 	- Service `donus`: Your Donus API key.
  * 	- Service `doorloop`: Your DoorLoop API key.
  * 	- Service `drata`: Your Drata API Key.
  * 	- Service `dropbox_sign`: Your Dropbox Sign API key.
  * 	- Service `duoplane`: Your Duoplane API key.
  * 	- Service `dutchie`: Your Dutchie API key.
  * 	- Service `easypost`: Your EasyPost API Key.
  * 	- Service `electronic_tenant_solutions`: Your Electronic Tenant Solutions API key.
  * 	- Service `eventsforce`: Your Eventsforce API secret key.
  * 	- Service `everflow`: Your Everflow API key.
  * 	- Service `everhour`: Your Everhour API Token.
  * 	- Service `expensein`: Your ExpenseIn API key.
  * 	- Service `factorial`: Your Factorial API key.
  * 	- Service `firehydrant`: Your FireHydrant API key.
  * 	- Service `float`: Your Float API key.
  * 	- Service `forj_community`: Your Forj Community API key.
  * 	- Service `fourkites`: Your FourKites API key.
  * 	- Service `freightview`: Your Freightview API key.
  * 	- Service `freshdesk`: Your Freshdesk API Key.
  * 	- Service `freshdesk_contact_center`: Your Freshdesk Contact Center API key.
  * 	- Service `freshsales`: Your Freshsales API key.
  * 	- Service `freshservice`: Your Freshservice API Key.
  * 	- Service `freshsuccess`: Your Freshsuccess API key.
  * 	- Service `freshteam`: Your Freshteam API key.
  * 	- Service `friendbuy`: Your Friendbuy API key.
  * 	- Service `fullstory`: Your Fullstory API key.
  * 	- Service `gainsight_product_experience`: Your Gainsight Product Experience API key.
  * 	- Service `gem`: Your Gem API key.
  * 	- Service `goldcast`: Your Goldcast API key.
  * 	- Service `gorgias`: Your Gorgias API key.
  * 	- Service `greenhouse`: Your Greenhouse API key.
  * 	- Service `grepsr`: Your Grepsr API Key.
  * 	- Service `grin`: Your Grin API key.
  * 	- Service `happyfox`: Your HappyFox API key.
  * 	- Service `height`: Your Height API key.
  * 	- Service `helpjuice`: Your Helpjuice API key.
  * 	- Service `helpshift`: Your Helpshift API Key.
  * 	- Service `incidentio`: Your incident.io API key.
  * 	- Service `infobip`: Your Infobip API key.
  * 	- Service `insightly`: Your Insightly API key.
  * 	- Service `integrate`: Your Integrate API key.
  * 	- Service `invoiced`: Your Invoiced API key.
  * 	- Service `iterable`: Your Iterable API key.
  * 	- Service `ivanti`: Your Ivanti API Key.
  * 	- Service `jotform`: Your Jotform API key.
  * 	- Service `justcall`: Your JustCall API key.
  * 	- Service `katana`: Your Katana API key.
  * 	- Service `kevel`: Your Kevel API key.
  * 	- Service `keypay`: Your KeyPay API key.
  * 	- Service `kisi`: Your Kisi API key.
  * 	- Service `klaviyo`: Your Klaviyo API key.
  * 	- Service `learnupon`: Your Learnupon API key.
  * 	- Service `lemlist`: Your Lemlist API key.
  * 	- Service `lever`: Your Lever API key.
  * 	- Service `liftoff`: Your Liftoff API key.
  * 	- Service `linear`: Your Linear API key.
  * 	- Service `linksquares`: Your LinkSquares API key.
  * 	- Service `listen360`: Your Listen360 API key.
  * 	- Service `lob`: Your Lob API key.
  * 	- Service `loop`: Your Loop API key.
  * 	- Service `lucca`: Your Lucca API key.
  * 	- Service `luma`: Your Luma API key.
  * 	- Service `maileon`: Your Maileon API key.
  * 	- Service `mailgun`: Your Mailgun API key.
  * 	- Service `mailjet`: Your Mailjet API key.
  * 	- Service `malomo`: Your Malomo API key.
  * 	- Service `mambu`: Your Mambu API key.
  * 	- Service `mandrill`: Your Mandrill API key.
  * 	- Service `maxio_chargify`: Enter Your API Key.
  * 	- Service `messagebird`: Your MessageBird API key.
  * 	- Service `moloco`: Your Moloco api_key
  * 	- Service `mountain`: Your MNTN API key.
  * 	- Service `myosh`: Your myosh API key.
  * 	- Service `okendo`: Your Okendo API key.
  * 	- Service `ometria`: Your Ometria API Key.
  * 	- Service `oncehub`: Your OnceHub API key.
  * 	- Service `openai`: Your OpenAI API key.
  * 	- Service `ordergroove`: Your Ordergroove API key.
  * 	- Service `ordway`: Your Ordway API key.
  * 	- Service `ortto`: Your Ortto API key.
  * 	- Service `paddle`: Your Paddle API key.
  * 	- Service `pagerduty`: Your PagerDuty API key.
  * 	- Service `pandadoc`: Your PandaDoc API key.
  * 	- Service `papershift`: Your Papershift API Key
  * 	- Service `partnerize`: Your Partnerize user API key.
  * 	- Service `persona`: Your Persona API key.
  * 	- Service `picqer`: Your Picqer API key.
  * 	- Service `pigment`: Your Pigment API key.
  * 	- Service `pinpoint`: Your Pinpoint API key.
  * 	- Service `pipe17`: The Pipe17 API key.
  * 	- Service `placerai`: Your Placer.ai API key.
  * 	- Service `playvox`: Your Playvox API Key.
  * 	- Service `posthog`: Your PostHog API key.
  * 	- Service `prive`: Your Prive API key.
  * 	- Service `prosperstack`: Your ProsperStack API key.
  * 	- Service `qualaroo`: Your Qualaroo API Key.
  * 	- Service `quorum`: Your Quorum API key.
  * 	- Service `rebound_returns`: Your ReBound Returns API key.
  * 	- Service `recurly`: The Recurly API key.
  * 	- Service `replyio`: Your Reply API key.
  * 	- Service `revenuecat`: Your RevenueCat API key.
  * 	- Service `reviewsio`: Your REVIEWS.io API key.
  * 	- Service `revops`: Your RevOps bearer token.
  * 	- Service `ricochet360`: Your Ricochet360 API key.
  * 	- Service `ringover`: Your Ringover API key.
  * 	- Service `rippling`: Your Rippling API token.
  * 	- Service `rocketlane`: Your Rocketlane API key.
  * 	- Service `rootly`: Your Rootly API key.
  * 	- Service `ruddr`: Your Ruddr API key.
  * 	- Service `safebase`: Your SafeBase API key.
  * 	- Service `sage_hr`: Your Sage HR API key.
  * 	- Service `sailthru`: The Sailthru API key.
  * 	- Service `salsify`: Your Salsify API Key.
  * 	- Service `security_journey`: Your Security Journey API key.
  * 	- Service `sendgrid`: The SendGrid API key.
  * 	- Service `sendinblue`: Your Sendinblue API key.
  * 	- Service `shortcut`: Your Shortcut API token.
  * 	- Service `shortio`: Your Short.io API key.
  * 	- Service `simplesat`: Your Simplesat API key.
  * 	- Service `sistrix`: Your SISTRIX API key.
  * 	- Service `skilljar`: Your Skilljar API key.
  * 	- Service `smartwaiver`: Your Smartwaiver API key.
  * 	- Service `snyk`: Your Snyk API key.
  * 	- Service `sonarqube`: Your Sonarqube API key.
  * 	- Service `sparkpost`: Your SparkPost API key.
  * 	- Service `squarespace`: Your Squarespace API key.
  * 	- Service `stackadapt`: Your StackAdapt API key.
  * 	- Service `statuspage`: Your Statuspage API Key.
  * 	- Service `stripe`: Restricted API key
  * 	- Service `stripe_test`: Restricted API key
  * 	- Service `subscript`: Your Subscript API key.
  * 	- Service `survicate`: Your Survicate API Key.
  * 	- Service `teads`: Your Teads API key.
  * 	- Service `teamtailor`: Your Teamtailor API key.
  * 	- Service `testrail`: Your TestRail API key.
  * 	- Service `ticket_tailor`: Your Ticket Tailor API key.
  * 	- Service `transcend`: Your Transcend API key.
  * 	- Service `trello`: Your TRELLO api key.
  * 	- Service `triple_whale`: Your Triple Whale API key.
  * 	- Service `uppromote`: Your UpPromote API key.
  * 	- Service `veeqo`: Your Veeqo API key.
  * 	- Service `venminder`: Your Venminder API key.
  * 	- Service `visit_by_ges`: Your Visit by GES API key.
  * 	- Service `vitally`: Your Vitally API key.
  * 	- Service `vonage`: Your Vonage API Key.
  * 	- Service `vts`: Your VTS API key.
  * 	- Service `webconnex`: Your Webconnex API key.
  * 	- Service `wicked_reports`: Your Wicked Reports API key.
  * 	- Service `workleap_officevibe`: Your Workleap Officevibe API key.
  * 	- Service `xsolla`: Your Xsolla API key.
  * 	- Service `yext`: Your Yext API key.
  * 	- Service `yougov_sport`: Your Yougov Sport API key.
  * 	- Service `zingtree`: Your Zingtree API key.
  * 	- Service `zip`: Your Zip API key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_key Connector#api_key}
  */
  readonly apiKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `revel`: Your Revel Systems API Key and API Secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_key_api_secret Connector#api_key_api_secret}
  */
  readonly apiKeyApiSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `mandrill`: Comma-separated list of API keys.  Required if `use_api_keys` is set to `true`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_keys Connector#api_keys}
  */
  readonly apiKeys?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `duoplane`: Your Duoplane API password.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_password Connector#api_password}
  */
  readonly apiPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `marketo`: Allowed number of API requests to Marketo instance per day, the default value is 10000.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_quota Connector#api_quota}
  */
  readonly apiQuota?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `the_movie_database`: Your The Movie Database API read access token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_read_access_token Connector#api_read_access_token}
  */
  readonly apiReadAccessToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `qualtrics`: Allowed number of API requests to Qualtrics per minute, the default value is 2000. Maximum allowed number is 3000 because brands may make up to 3000 API requests per minute across all of its API calls.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_requests_per_minute Connector#api_requests_per_minute}
  */
  readonly apiRequestsPerMinute?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `zuora`: The API role assigned to the integration user.
  * 	- Service `zuora_sandbox`: The API role assigned to the integration user.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_role Connector#api_role}
  */
  readonly apiRole?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `confluent_cloud`: API Secret
  * 	- Service `consensus_demo_automation_platform`: Your Consensus Demo Automation Platform API secret.
  * 	- Service `forj_community`: Your Forj Community API secret.
  * 	- Service `friendbuy`: Your Friendbuy API secret.
  * 	- Service `justcall`: Your JustCall API secret.
  * 	- Service `liftoff`: Your Liftoff API secret.
  * 	- Service `mixpanel`: Mixpanel API Secret.
  * 	- Service `qualaroo`: Your Qualaroo API Secret.
  * 	- Service `sailthru`: The Sailthru API secret.
  * 	- Service `shareasale`: Your ShareASale API secret.
  * 	- Service `vonage`: Your Vonage API Secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_secret Connector#api_secret}
  */
  readonly apiSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `alchemer`: Your Alchemer API Secret key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_secret_key Connector#api_secret_key}
  */
  readonly apiSecretKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sigma_computing_source`: Your Sigma Computing api server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_server Connector#api_server}
  */
  readonly apiServer?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aha`: Your Aha! API key.
  * 	- Service `aircall`: Your Aircall API token.
  * 	- Service `appsflyer`: API Token for AppsFlyer's PULL API.
  * 	- Service `aura_from_unity`: Your Aura from Unity API token.
  * 	- Service `awin`: Your Awin API Token.
  * 	- Service `backbone_plm`: Your Backbone PLM API token.
  * 	- Service `brex`: Your Brex API token
  * 	- Service `buildkite`: Your Buildkite API token.
  * 	- Service `buzzsprout`: Your Buzzsprout API token.
  * 	- Service `centra`: Your Centra API token.
  * 	- Service `chameleon`: Your Chameleon API token.
  * 	- Service `clari`: Your Clari API token.
  * 	- Service `cloudflare_analytics`: Your Cloudflare Analytics API token.
  * 	- Service `confluence`: The Confluence API token.
  * 	- Service `dixa`: Your Dixa API token.
  * 	- Service `drip`: Your Drip API Token.
  * 	- Service `factbird`: Your Factbird API token.
  * 	- Service `fone_dynamics`: Your Fone Dynamics API token.
  * 	- Service `forethought`: Your Forethought API token.
  * 	- Service `fountain`: Your Fountain API token.
  * 	- Service `g2`: Your G2 API token.
  * 	- Service `gladly`: Your Gladly API Token.
  * 	- Service `hibob`: Your Hibob API token.
  * 	- Service `kandji`: Your Kandji API token.
  * 	- Service `livechat`: Your Livechat Access token.
  * 	- Service `livechat_partner`: Your Livechat Partner API Token.
  * 	- Service `maxio_saasoptics`: Your Maxio SaaSOptics API token.
  * 	- Service `megaphone`: Your Megaphone API token.
  * 	- Service `missive`: Your Missive API token.
  * 	- Service `mixmax`: Mixmax API token.
  * 	- Service `okta`: Your Okta API token.
  * 	- Service `ordway`: Your Ordway API token.
  * 	- Service `packiyo`: Your Packiyo API token.
  * 	- Service `pipedrive`: (Optional)Your Pipedrive personal API token
  * 	- Service `pivotal_tracker`: Pivotal Tracker API token.
  * 	- Service `postmark`: Your Postmark account API token.
  * 	- Service `productive`: Your Productive API token.
  * 	- Service `pylon_support_platform`: Your Pylon Support Platform API token.
  * 	- Service `qualtrics`: API token of the Qualtrics account.
  * 	- Service `rakutenadvertising`: Your Rakuten Advertising API token.
  * 	- Service `recharge`: The Recharge API token.
  * 	- Service `referralhero`: Your Referralhero API token.
  * 	- Service `resource_management_by_smartsheet`: Your Resource Management by Smartsheet API token.
  * 	- Service `retently`: Your Retently API token.
  * 	- Service `reviewsai`: Your REVIEWS.ai API token.
  * 	- Service `rundeck`: Your Rundeck API token.
  * 	- Service `safetyculture`: Your SafetyCulture API token.
  * 	- Service `sensor_tower`: Your Sensor Tower API token.
  * 	- Service `sentry`: Your Sentry auth token.
  * 	- Service `simplecast`: Your Simplecast API token.
  * 	- Service `snyk`: Your Snyk API token.
  * 	- Service `textus`: Your TextUs API token.
  * 	- Service `toggl_track`: Your Toggl Track API token
  * 	- Service `trello`: Your TRELLO api token.
  * 	- Service `trisolute`: Your Trisolute API token.
  * 	- Service `vwo`: Your VWO API token.
  * 	- Service `web_scraper`: Your Web Scraper API token.
  * 	- Service `zendesk`: Zendesk API tokens are auto-generated passwords in the Support admin interface.
  * 	- Service `zendesk_sunshine`: Zendesk API tokens are auto-generated passwords in the Support admin interface.
  * 	- Service `zendesk_workforce_management`: Your Zendesk Workforce Management API token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_token Connector#api_token}
  */
  readonly apiToken?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_type Connector#api_type}
  */
  readonly apiType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Your Braze API URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_url Connector#api_url}
  */
  readonly apiUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_dsp`: Your Amazon DSP API URL region.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_url_region Connector#api_url_region}
  */
  readonly apiUrlRegion?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `zendesk`: Maximum Zendesk Api Usage allowed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_usage Connector#api_usage}
  */
  readonly apiUsage?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `shipnetwork`: Your ShipNetwork API user identifier.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_user_identifier Connector#api_user_identifier}
  */
  readonly apiUserIdentifier?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `shipnetwork`: Your ShipNetwork API user secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_user_secret Connector#api_user_secret}
  */
  readonly apiUserSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `discourse`: Your Discourse API username.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_username Connector#api_username}
  */
  readonly apiUsername?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `kustomer`: Api Utilization Percentage
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_utilization_percentage Connector#api_utilization_percentage}
  */
  readonly apiUtilizationPercentage?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pardot`: API Version
  * 	- Service `pardot_sandbox`: API Version
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#api_version Connector#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `churnkey`: Your Churnkey APP ID.
  * 	- Service `open_exchange_rates`: Your Open Exchange Rates App Id.
  * 	- Service `rokt`: Your Rokt app ID.
  * 	- Service `tiktok_organic`: Your Tiktok Organic app ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#app_id Connector#app_id}
  */
  readonly appId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pendo`: Specific App IDs to sync. Must be populated if `sync_mode` is set to `SpecificAppIds`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#app_ids Connector#app_ids}
  */
  readonly appIds?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `loopio`: Your Loopio App Key.
  * 	- Service `servicetitan`: Your ServiceTitan app key.
  * 	- Service `yotpo`: Your Yotpo app key.
  * 	- Service `yotpo_app`: Your Yotpo App key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#app_key Connector#app_key}
  */
  readonly appKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `brightpearl`: Your Brightpearl app reference.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#app_reference Connector#app_reference}
  */
  readonly appReference?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `rokt`: Your Rokt app secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#app_secret Connector#app_secret}
  */
  readonly appSecret?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#app_secret_token Connector#app_secret_token}
  */
  readonly appSecretToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Your app-specific password
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#app_specific_password Connector#app_specific_password}
  */
  readonly appSpecificPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Whether to sync all apps or specific apps.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#app_sync_mode Connector#app_sync_mode}
  */
  readonly appSyncMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: If you know that the source completely overwrites the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `azure_blob_storage`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `box`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `dropbox`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `email`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `ftp`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `gcs`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `google_drive`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `kinesis`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `s3`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `s3_compatible_storage`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `sftp`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `share_point`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  * 	- Service `wasabi_cloud_storage`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#append_file_option Connector#append_file_option}
  */
  readonly appendFileOption?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `algolia`: Your Algolia application ID.
  * 	- Service `xactly`: Your Xactly Application ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#application_id Connector#application_id}
  */
  readonly applicationId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cin7core`: Your Cin7 Core application key.
  * 	- Service `datadog`: Your Datadog application key.
  * 	- Service `dear`: Your Dear Application key.
  * 	- Service `partnerize`: Your Partnerize user application key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#application_key Connector#application_key}
  */
  readonly applicationKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Specific apps to sync. Must be populated if `app_sync_mode` is set to `SpecificApps`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#apps Connector#apps}
  */
  readonly apps?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: Archive log format.
  * 	- Service `oracle_sap_hva`: Archive log format.
  * 	- Service `oracle_sap_hva_netweaver`: Archive log format.
  * 	- Service `sql_server_hva`: Format for archive log file names
  * 	- Service `sql_server_sap_ecc_hva`: Format for archive log file names
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#archive_log_format Connector#archive_log_format}
  */
  readonly archiveLogFormat?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: Archive log path.
  * 	- Service `oracle_sap_hva`: Archive log path.
  * 	- Service `oracle_sap_hva_netweaver`: Archive log path.
  * 	- Service `sql_server_hva`: Directory where archive logs are located
  * 	- Service `sql_server_sap_ecc_hva`: Directory where archive logs are located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#archive_log_path Connector#archive_log_path}
  */
  readonly archiveLogPath?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Optional. Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `azure_blob_storage`: Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `box`: Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `dropbox`: Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `email`: Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `ftp`: Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `gcs`: Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `google_drive`: Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `kinesis`: Optional. Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `s3`: Files inside compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `s3_compatible_storage`: Files inside compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `sftp`: Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `share_point`: Files inside of compressed archives with filenames matching this regular expression will be synced.
  * 	- Service `wasabi_cloud_storage`: Files inside compressed archives with filenames matching this regular expression will be synced.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#archive_pattern Connector#archive_pattern}
  */
  readonly archivePattern?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `marketo`: Marketo SOAP credentials provided.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#are_soap_credentials_provided Connector#are_soap_credentials_provided}
  */
  readonly areSoapCredentialsProvided?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_service_bus`: The IP address (or) the URL of ASB namespace
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#asb_ip Connector#asb_ip}
  */
  readonly asbIp?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: Default value: `false`. Set to `true` if you're using ASM on a non-RAC instance.
  * 	- Service `oracle_sap_hva`: Default value: `false`. Set to `true` if you are using ASM on a non-RAC instance.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#asm_option Connector#asm_option}
  */
  readonly asmOption?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: ASM Oracle Home path.
  * 	- Service `oracle_sap_hva`: The Oracle ASM home directory.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#asm_oracle_home Connector#asm_oracle_home}
  */
  readonly asmOracleHome?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: ASM password. Mandatory if `use_oracle_rac` or `asm_option` is set to `true`.
  * 	- Service `oracle_sap_hva`: The ASM user's password. Mandatory if `use_oracle_rac` or `asm_option` is set to `true`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#asm_password Connector#asm_password}
  */
  readonly asmPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: ASM TNS.
  * 	- Service `oracle_sap_hva`: ASM TNS.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#asm_tns Connector#asm_tns}
  */
  readonly asmTns?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: ASM user. Mandatory if `use_oracle_rac` or `asm_option` is set to `true`.
  * 	- Service `oracle_sap_hva`: The ASM user. Mandatory if `use_oracle_rac` or `asm_option` is set to `true`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#asm_user Connector#asm_user}
  */
  readonly asmUser?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_ads`: Time period used to attribute conversions based on clicks.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#attribution_window Connector#attribution_window}
  */
  readonly attributionWindow?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `tiktok_ads`: Rollback sync duration to capture conversions. Set this to your configured attribution window in TikTok Ads. The default value is 7 days.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#attribution_window_size Connector#attribution_window_size}
  */
  readonly attributionWindowSize?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `auth0`: Your Auth0 API audience.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#audience Connector#audience}
  */
  readonly audience?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `databricks_db`: Token-based authentication type
  * 	- Service `redshift_db`: Password-based authentication type
  * 	- Service `snowflake_db`: Password-based or key-based authentication type
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#auth Connector#auth}
  */
  readonly auth?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `happyfox`: Your HappyFox auth code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#auth_code Connector#auth_code}
  */
  readonly authCode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `younium`: Your Younium auth environment.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#auth_environment Connector#auth_environment}
  */
  readonly authEnvironment?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `webhooks`: Set if you use HMAC/token-based auth methods. This is used to retrieve a key in headers
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#auth_header_key Connector#auth_header_key}
  */
  readonly authHeaderKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: Database authentication method
  * 	- Service `aurora_postgres`: Database authentication method
  * 	- Service `azure_postgres`: Database authentication method
  * 	- Service `azure_sql_db`: Authentication Method.
  * 	- Service `azure_sql_managed_db`: Authentication Method.
  * 	- Service `google_cloud_mysql`: Database authentication method
  * 	- Service `google_cloud_postgresql`: Database authentication method
  * 	- Service `heroku_postgres`: Database authentication method
  * 	- Service `magento_mysql`: Database authentication method
  * 	- Service `magento_mysql_rds`: Database authentication method
  * 	- Service `maria`: Database authentication method
  * 	- Service `maria_azure`: Database authentication method
  * 	- Service `maria_rds`: Database authentication method
  * 	- Service `microsoft_lists`: Authentication Method
  * 	- Service `mysql`: Database authentication method
  * 	- Service `mysql_azure`: Database authentication method
  * 	- Service `mysql_rds`: Database authentication method
  * 	- Service `postgres`: Database authentication method
  * 	- Service `postgres_rds`: Database authentication method
  * 	- Service `sql_server_hva`: Authentication Method
  * 	- Service `sql_server_sap_ecc_hva`: Authentication Method
  * 	- Service `webhooks`: The authentication mechanism you want to use
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#auth_method Connector#auth_method}
  */
  readonly authMethod?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `anaplan`: The Anaplan authentication method.
  * 	- Service `concur`: The Authentication Mode used by SAP Concur. It can be PasswordGrant or CompanyLevel auth mode
  * 	- Service `github`: Authorization type.
  * 	- Service `workday`: Authentication Mode
  * 	- Service `workday_financial_management`: Authentication Mode
  * 	- Service `workday_hcm`: Authentication Mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#auth_mode Connector#auth_mode}
  */
  readonly authMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `webhooks`: The secret you want to use for HMAC/token-based auth methods
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#auth_secret Connector#auth_secret}
  */
  readonly authSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `impact_partner`: Your Impact Partner auth token
  * 	- Service `zonka_feedback`: Your Zonka Feedback auth token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#auth_token Connector#auth_token}
  */
  readonly authToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `airtable`: Type of authentication being used by connector
  * 	- Service `aws_cost_report`: Access approach
  * 	- Service `azure_service_bus`: The authentication mode to access the topic
  * 	- Service `dynamics_365`: Authentication mechanism. Either one of `OAUTH2`, or `SERVICE_PRINCIPAL`. Default value `OAUTH2`
  * 	- Service `gcs`: Authorization type. Required for storage bucket authentication.
  * 	- Service `google_sheets`: The `OAuth` value must be specified for this type of authorization.
  * 	- Service `jira`: Authorization type.
  * 	- Service `mixpanel`: Authentication Method
  * 	- Service `pardot`: Authenticate using OAuth or HTTP Basic
  * 	- Service `pardot_sandbox`: Authenticate using OAuth or HTTP Basic
  * 	- Service `qualtrics`: Type of authentication being used by connector
  * 	- Service `s3`: Access approach
  * 	- Service `s3_compatible_storage`: Access approach
  * 	- Service `wasabi_cloud_storage`: The Wasabi Cloud Storage Access approach. Required for connector creation. Default value: `ACCESS_KEY`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#auth_type Connector#auth_type}
  */
  readonly authType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_dsp`: Your Amazon DSP auth grant URL region.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#auth_url_region Connector#auth_url_region}
  */
  readonly authUrlRegion?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: Authentication Method
  * 	- Service `elastic_cloud`: The authentication method used to connect to your cluster.
  * 	- Service `es_self_hosted`: The authentication method used to connect to your cluster.
  * 	- Service `opendistro`: The authentication method used to connect to your cluster.
  * 	- Service `opensearch`: The authentication method used to connect to your cluster.
  * 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud authentication method.
  * 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud authentication method.
  * 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud authentication method.
  * 	- Service `salesforce`: (Optional) Authentication type (default value = `STANDARD`)
  * 	- Service `salesforce_sandbox`: (Optional) Authentication type (default value = `STANDARD`)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#authentication_method Connector#authentication_method}
  */
  readonly authenticationMethod?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `tiktok_organic`: The authorization URL of the app registered in your TikTok developer account.
  * 	- Service `workday`: Authorization URL
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#authorization_url Connector#authorization_url}
  */
  readonly authorizationUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: The AWS region code for your RDS instance. Required if the authentication method is `AWS_IAM`.
  * 	- Service `dynamodb`: The AWS region code for the DynamoDB instance, e.g. `us-east-1`.
  * 	- Service `magento_mysql_rds`: The AWS region code for your RDS instance. Required if the authentication method is `AWS_IAM`.
  * 	- Service `maria_rds`: The AWS region code for your RDS instance. Required if the authentication method is `AWS_IAM`.
  * 	- Service `mysql_rds`: The AWS region code for your RDS instance. Required if the authentication method is `AWS_IAM`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#aws_region_code Connector#aws_region_code}
  */
  readonly awsRegionCode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#backint_configuration_path Connector#backint_configuration_path}
  */
  readonly backintConfigurationPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#backint_executable_path Connector#backint_executable_path}
  */
  readonly backintExecutablePath?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sql_server`: Filename pattern for transaction log backup files.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#backup_log_format Connector#backup_log_format}
  */
  readonly backupLogFormat?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sql_server`: Full path to the local directory containing transaction log backup files. Required if `backup_storage_type` is `ALTERNATE_LOCATION`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#backup_log_path Connector#backup_log_path}
  */
  readonly backupLogPath?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sql_server`: Location of transaction log backup files when using BACKUP binary log type. Possible values: `"AZURE"`, `"ALTERNATE_LOCATION"`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#backup_storage_type Connector#backup_storage_type}
  */
  readonly backupStorageType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_selling_partner`: The earliest date to sync data from, in YYYY-MM-DD format. Cannot be before 1994-01-01 or in the future.
  * 	- Service `shopify`: Limit of the Historical Sync Time for selected tables
  * 	- Service `stripe`: Limit of the Historical Sync Time for selected tables
  * 	- Service `stripe_test`: Limit of the Historical Sync Time for selected tables
  * 	- Service `zendesk`: Date Limit of the Historical Sync Time for selected tables. The format should be YYYY-MM-DD
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#backward_sync_limit Connector#backward_sync_limit}
  */
  readonly backwardSyncLimit?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hubspot`: Date Limit of the Historical Sync Time for selected tables. The Format should be YYYY-MM-DD
  * 	- Service `mixpanel`: Date from which data needs to be synced.
  * 	- Service `pendo`: The start date (YYYY-MM-DD) from which to sync historical data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#backward_sync_limit_date Connector#backward_sync_limit_date}
  */
  readonly backwardSyncLimitDate?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `open_exchange_rates`: Your Open Exchange Rates Base Currency.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#base_currency Connector#base_currency}
  */
  readonly baseCurrency?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `freshteam`: Your company's Freshteam base domain name (usually **company**.freshteam.com).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#base_domain Connector#base_domain}
  */
  readonly baseDomain?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `airtable`: ID of base in Airtable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#base_id Connector#base_id}
  */
  readonly baseId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aha`: Your Aha! subdomain.
  * 	- Service `akeneo`: Your Akeneo base URL.
  * 	- Service `bigmarker`: Your BigMarker base URL.
  * 	- Service `billing_platform`: Your BillingPlatform subdomain.
  * 	- Service `boostr`: Your Boostr base URL.
  * 	- Service `brex`: Your Brex Base URL
  * 	- Service `centra`: Your Centra base URL.
  * 	- Service `coalesce`: Your Coalesce base URL.
  * 	- Service `coheris`: Your Coheris base URL.
  * 	- Service `cornerstone`: Your Cornerstone base URL.
  * 	- Service `culture_amp`: Your Culture Amp base URL.
  * 	- Service `datadog`: Your Datadog base url.
  * 	- Service `factbird`: Your Factbird base url.
  * 	- Service `fillout`: Your Fillout Base URL.
  * 	- Service `financial_force`: (Optional) The custom Salesforce domain. Make sure that the `base_url` starts with `https://`.
  * 	- Service `freshsales`: Your Freshsales product.
  * 	- Service `gongio`: Your Gong API Base URL.
  * 	- Service `higher_logic_vanilla`: Your Higher Logic Vanilla base URL.
  * 	- Service `ironclad`: Your Ironclad base url.
  * 	- Service `jotform`: Your Jotform base URL.
  * 	- Service `mailgun`: Your Mailgun base URL.
  * 	- Service `nice`: Your NICE base URL.
  * 	- Service `ortto`: Your Ortto base URL. Possible values: `api`, `api.au`, `api.eu`.
  * 	- Service `prisma_cloud`: Your Prisma Cloud admin console URL.
  * 	- Service `salesforce`: (Optional) The custom Salesforce domain. Make sure that the `base_url` starts with `https://`.
  * 	- Service `salesforce_sandbox`: (Optional) The custom Salesforce domain. Make sure that the `base_url` starts with `https://`.
  * 	- Service `stickyio`: Your sticky.io base URL .
  * 	- Service `veeva_vault`: Base URL
  * 	- Service `veevavault`: Your Veeva Vault base URL.
  * 	- Service `vitally`: Your Vitally base URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#base_url Connector#base_url}
  */
  readonly baseUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `ada`: Your Ada API key.
  * 	- Service `crowddev`: Your crowd.dev Auth Token.
  * 	- Service `customerio`: Your Customer.io App API Key.
  * 	- Service `freshchat`: Your Freshchat API Token.
  * 	- Service `hopin`: Your Hopin API key.
  * 	- Service `orbit`: Your Orbit API Token.
  * 	- Service `productboard`: Your Productboard API key.
  * 	- Service `smarthr`: Your SmartHR access token.
  * 	- Service `sprout`: Your Sprout Social API Access Token.
  * 	- Service `zenefits`: Your Zenefits bearer token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#bearer_token Connector#bearer_token}
  */
  readonly bearerToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sql_server`: Source of transaction log data when using Binary Log Reader. Possible values: `"ONLINE"`, `"BACKUP"`. Default value is `"ONLINE"`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#binary_log_type Connector#binary_log_type}
  */
  readonly binaryLogType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_cosmos_for_mongo`: How binary data is represented in the database. Possible values: 'Base64' (default), 'Uuid'.
  * 	- Service `mongo`: How binary data is represented in the database. Possible values: 'Base64' (default), 'Uuid'.
  * 	- Service `mongo_sharded`: How binary data is represented in the database. Possible values: 'Base64' (default), 'Uuid'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#binary_representation Connector#binary_representation}
  */
  readonly binaryRepresentation?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `webhooks`: The blob SAS URL of your Azure container. Required if `bucket_service` is set to `AZURE`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#blob_sas_url Connector#blob_sas_url}
  */
  readonly blobSasUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `rarible`: Your Rarible Blockchain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#blockchain Connector#blockchain}
  */
  readonly blockchain?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_moat_analytics`: Your Oracle Moat Analytics Brand ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#brand_id Connector#brand_id}
  */
  readonly brandId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook`: List of breakdowns which connector will sync. [Possible breakdowns values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#breakdowns).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#breakdowns Connector#breakdowns}
  */
  readonly breakdowns?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: Customer S3 Bucket
  * 	- Service `aws_cloudtrail`: The AWS bucket name which is configured for AWS CloudTrail.
  * 	- Service `aws_cost_report`: The S3 bucket name with the AWS Cost and Usage Report 
  * 	- Service `aws_inventory`: The AWS bucket name that is configured for AWS Config.
  * 	- Service `aws_lambda`: S3 Bucket
  * 	- Service `cloudfront`: The bucket name for CloudFront.
  * 	- Service `gcs`: The name of the GCS bucket.
  * 	- Service `google_play`: The Google Cloud Storage source bucket.
  * 	- Service `heap`: The S3 bucket name.
  * 	- Service `kinesis`: The name of the Kinesis bucket.
  * 	- Service `s3`: The S3 bucket name. Required for connector creation.
  * 	- Service `s3_compatible_storage`: The S3-Compatible Storage bucket name. Required for connector creation.
  * 	- Service `segment`: The name of the Segment bucket. Must be populated if `sync_type` is set to `S3`.
  * 	- Service `sql_server`: The name of the S3 bucket.
  * 	- Service `wasabi_cloud_storage`: The Wasabi Cloud Storage bucket name. Required for connector creation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#bucket Connector#bucket}
  */
  readonly bucket?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adjust`: Your AWS S3 or GCS bucket.
  * 	- Service `google_analytics_360`: The name of the bucket.
  * 	- Service `google_analytics_4_export`: The name of the bucket.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#bucket_name Connector#bucket_name}
  */
  readonly bucketName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `webhooks`: Whether to store the events in Fivetran's container service or your S3 bucket. Default value: `Fivetran`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#bucket_service Connector#bucket_service}
  */
  readonly bucketService?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: Specific Accounts to sync.  Must be populated if `sync_mode` is set to `SpecificAccounts`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#business_accounts Connector#business_accounts}
  */
  readonly businessAccounts?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `birdeye`: Your Birdeye Business ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#business_id Connector#business_id}
  */
  readonly businessId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `deposco`: Your Deposco business unit.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#business_unit Connector#business_unit}
  */
  readonly businessUnit?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pardot`: Business Unit Id
  * 	- Service `pardot_sandbox`: Business Unit Id
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#business_unit_id Connector#business_unit_id}
  */
  readonly businessUnitId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `databricks_db`: catalog to sync
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#catalog Connector#catalog}
  */
  readonly catalog?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `anaplan`: The contents of your PEM certificate file. Must be populated if `auth_mode` is set to `Certificate`.
  * 	- Service `qualtrics`: Your Client Certificate
  * 	- Service `salesforce`: Provide content of the `.pem` certificate (only when authentication_method = `ADVANCED`).
  * 	- Service `salesforce_sandbox`: Provide content of the `.pem` certificate (only when authentication_method = `ADVANCED`).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#certificate Connector#certificate}
  */
  readonly certificate?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `netsuite_suiteanalytics`: Certificate Id
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#certificate_id Connector#certificate_id}
  */
  readonly certificateId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook`: Time period to attribute conversions based on clicks. [Possible click_attribution_window values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#clickattributionwindow).
  * 	- Service `pinterest_ads`: The number of days to use as the conversion attribution window for a 'click' action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#click_attribution_window Connector#click_attribution_window}
  */
  readonly clickAttributionWindow?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client Connector#client}
  */
  readonly client?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Kafka client certificate.
  * 	- Service `heroku_kafka`: Heroku Kafka client certificate. Required for `TLS` security protocol.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_cert Connector#client_cert}
  */
  readonly clientCert?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Kafka client certificate key.
  * 	- Service `heroku_kafka`: Heroku Kafka client certificate key.  Required for `TLS` security protocol.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_cert_key Connector#client_cert_key}
  */
  readonly clientCertKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `ceridian_dayforce`: Your Ceridian Dayforce client host.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_host Connector#client_host}
  */
  readonly clientHost?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `acumatica`: Your Acumatica client ID.
  * 	- Service `adobe_analytics`: Client ID from the OAuth Server-to-Server credentials of your Adobe Project.
  * 	- Service `adobe_workfront`: Your Adobe Workfront client ID.
  * 	- Service `adp_workforce_now`: Your ADP Client ID.
  * 	- Service `akamai`: Your Akamai client ID.
  * 	- Service `akeneo`: Your Akeneo client ID.
  * 	- Service `auth0`: Your Auth0 client ID.
  * 	- Service `autodesk_bim_360`: Your Autodesk BIM 360 client ID.
  * 	- Service `bigin_by_zoho_crm`: Your Bigin by Zoho CRM Client Id
  * 	- Service `billing_platform`: Your BillingPlatform client ID.
  * 	- Service `bing_webmaster_tools`: Your Bing Webmaster Tools client ID.
  * 	- Service `brightcove`: Your Brightcove client ID.
  * 	- Service `brightflag`: Your Brightflag client ID.
  * 	- Service `brightpearl`: Your Brightpearl client ID.
  * 	- Service `brivo`: Your Brivo client ID.
  * 	- Service `buildium`: Your Buildium API client ID.
  * 	- Service `cabcharge`: Your Cabcharge client ID.
  * 	- Service `canvas_by_instructure`: Your Canvas by Instructure client ID.
  * 	- Service `canvas_data_2_by_instructure`: Your Canvas Data 2 by Instructure client ID.
  * 	- Service `castor_edc`: Your Castor EDC client Id.
  * 	- Service `classy`: Your Classy client ID.
  * 	- Service `clazar`: Your Clazar client ID.
  * 	- Service `cloudbeds`: Your Cloudbeds client ID.
  * 	- Service `commercetools`: Your commercetools client ID.
  * 	- Service `concur`: The SAP Concur Client ID.
  * 	- Service `constant_contact`: Your Constant Contact client ID.
  * 	- Service `cornerstone`: Your Cornerstone client ID.
  * 	- Service `coupa`: Your Coupa client_id
  * 	- Service `criteo`: Your Criteo Client ID.
  * 	- Service `criteo_retail_media`: Your Criteo Retail Media client ID.
  * 	- Service `cube`: Your Cube client ID.
  * 	- Service `cube_software`: Your Cube Software Client ID.
  * 	- Service `culture_amp`: Your Culture Amp client ID.
  * 	- Service `cvent`: Your Cvent client ID.
  * 	- Service `d2l_brightspace`: Your D2L Brightspace client ID.
  * 	- Service `dialpad`: Your Dialpad client ID.
  * 	- Service `ebay`: Your eBay app ID.
  * 	- Service `exact_online`: Your Exact Online client ID.
  * 	- Service `fillout`: Your Fillout client ID.
  * 	- Service `flexport`: The Flexport API Key.
  * 	- Service `formstack`: Your Formstack client ID.
  * 	- Service `fortnox`: Your Fortnox client ID.
  * 	- Service `genesys`: Your Genesys client ID.
  * 	- Service `gofundme_pro`: Client ID of the API application in your GoFundMe Pro account.
  * 	- Service `hana_sap_hva_ecc_netweaver`: Three-digit (000-999) identifier of the SAP client, which is sent to an AS ABAP upon logon.
  * 	- Service `hana_sap_hva_s4_netweaver`: Three-digit (000-999) identifier of the SAP client, which is sent to an AS ABAP upon logon.
  * 	- Service `helpdesk`: Your HelpDesk client ID.
  * 	- Service `hilti_ontrack`: Your Hilti On!Track client ID.
  * 	- Service `ilevel`: Your iLevel Client ID.
  * 	- Service `instructure`: Your Instructure client ID.
  * 	- Service `integral_ad_science`: Your integral_ad_science client id.
  * 	- Service `ironclad`: Your Ironclad client ID.
  * 	- Service `jama_software`: Your Jama Software client ID.
  * 	- Service `jibble`: Your Jibble client ID.
  * 	- Service `khoros_communities`: Your Khoros Communities client ID.
  * 	- Service `learn_amp`: Your Learn Amp client ID.
  * 	- Service `looker_source`: Your Looker Client ID.
  * 	- Service `marketo`: Marketo REST API Client Id.
  * 	- Service `medallia`: Medallia Client ID
  * 	- Service `microsoft_entra_id`: Your Microsoft Entra ID Client ID.
  * 	- Service `microsoft_power_bi`: Your Microsoft Power BI client ID.
  * 	- Service `microsoft_teams`: Your Microsoft Teams client ID.
  * 	- Service `navan`: Your Navan client ID.
  * 	- Service `nice`: Your NICE client ID.
  * 	- Service `on24`: Your ON24 client ID.
  * 	- Service `oracle_fusion_field_service`: Your Oracle Fusion Field Service client ID.
  * 	- Service `oracle_netsuite_openair`: Your Oracle NetSuite OpenAir Client ID.
  * 	- Service `oracle_sap_hva_netweaver`: Three-digit (000-999) identifier of the SAP client, which is sent to an AS ABAP upon logon.
  * 	- Service `paychex`: Your Paychex client ID.
  * 	- Service `paylocity`: Your Paylocity client ID.
  * 	- Service `paypal`: `Client ID` of your PayPal client application.
  * 	- Service `paypal_sandbox`: `Client ID` of your PayPal client application.
  * 	- Service `personio`: Your Personio Client ID.
  * 	- Service `piwik_pro`: Your Piwik PRO client ID.
  * 	- Service `podio`: Your Podio client ID.
  * 	- Service `power_reviews_enterprise`: Your PowerReviews Enterprise Client ID.
  * 	- Service `prisma_cloud`: Your Prisma Cloud access key ID.
  * 	- Service `procore`: Your Procore client ID.
  * 	- Service `quora_ads`: Your Quora Ads client ID.
  * 	- Service `reltio`: Your Reltio client ID.
  * 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud Client ID.
  * 	- Service `salesforce_marketing_cloud`: The Salesforce Marketing Cloud client ID.
  * 	- Service `salesloft`: `Client ID` of your Salesloft client application.
  * 	- Service `sana`: Your Sana client ID.
  * 	- Service `sap_success_factors`: Your SAP SuccessFactors Client ID.
  * 	- Service `servicenow`: ServiceNow Client ID.
  * 	- Service `servicetitan`: Your ServiceTitan client ID.
  * 	- Service `sharetribe`: Your Sharetribe client ID.
  * 	- Service `shipnetwork`: Your ShipNetwork client ID.
  * 	- Service `showpad`: Your Showpad client ID.
  * 	- Service `sigma_computing_source`: Your Sigma Computing client ID.
  * 	- Service `skillstx`: Your SkillsTX client ID.
  * 	- Service `skimlinks`: Your Skimlinks client ID.
  * 	- Service `smartrecruiters`: Your SmartRecruiters client ID.
  * 	- Service `splash`: Your Splash client ID.
  * 	- Service `square`: The Application ID of your organization.
  * 	- Service `standard_metrics`: Your Standard Metrics Client ID.
  * 	- Service `sugarcrm`: Your SugarCRM client ID.
  * 	- Service `swoogo`: Your Swoogo client Id.
  * 	- Service `taboola`: The Taboola client ID.
  * 	- Service `talkdesk`: The Client ID of your OAuth Client
  * 	- Service `tive`: Your Tive client ID.
  * 	- Service `toast`: Your Toast client ID.
  * 	- Service `trelica`: Your Trelica client ID.
  * 	- Service `tremendous`: Your Tremendous client ID.
  * 	- Service `tymeshift`: Your Tymeshift email.
  * 	- Service `udemy_business`: Your Udemy Business client ID.
  * 	- Service `ukg_pro_workforce_management`: Your UKG Pro Workforce Management client ID.
  * 	- Service `vimeo`: Your Vimeo client ID.
  * 	- Service `visma`: Your Visma client ID.
  * 	- Service `vonage_contact_center`: Your Vonage Contact Center client ID.
  * 	- Service `walmart_marketplace`: Your Walmart Marketplace client ID.
  * 	- Service `xero`: your clientId
  * 	- Service `xray`: Your Xray Client ID.
  * 	- Service `yahoo_display_ads_on_yahoo_japan`: Your Yahoo Display Ads on Yahoo Japan client ID.
  * 	- Service `yougov_sport`: Your Yougov Sport client ID.
  * 	- Service `zendesk_chat`: Your Zendesk client ID.
  * 	- Service `zoho_books`: Your Zoho Books Client ID.
  * 	- Service `zoho_campaigns`: Your Zoho Campaigns Client ID.
  * 	- Service `zoho_desk`: Your Zoho Desk Client Id.
  * 	- Service `zoho_inventory`: Your Zoho Inventory client ID.
  * 	- Service `zoho_recruit`: Your Zoho Recruit client ID.
  * 	- Service `zuora`: Zuora Client ID.
  * 	- Service `zuora_sandbox`: Zuora Client ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_id Connector#client_id}
  */
  readonly clientId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appfigures`: Your Appfigures Client Key.
  * 	- Service `thinkific`: Your Thinkific client key.
  * 	- Service `yougov_sport`: Your Yougov Sport client key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_key Connector#client_key}
  */
  readonly clientKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `destini`: Your Destini Client Name.
  * 	- Service `medallia`: Medallia company name
  * 	- Service `zuora`: The name of your organization as registered with Zuora Revenue.
  * 	- Service `zuora_sandbox`: The name of your organization as registered with Zuora Revenue.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_name Connector#client_name}
  */
  readonly clientName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `ceridian_dayforce`: Your Ceridian Dayforce client namespace.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_namespace Connector#client_namespace}
  */
  readonly clientNamespace?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: Client Private Key in .pem format.
  * 	- Service `aurora_postgres`: Client Private Key in .pem format.
  * 	- Service `azure_postgres`: Client Private Key in .pem format.
  * 	- Service `google_cloud_mysql`: Client Private Key in .pem format.
  * 	- Service `google_cloud_postgresql`: Client Private Key in .pem format.
  * 	- Service `heroku_postgres`: Client Private Key in .pem format.
  * 	- Service `magento_mysql`: Client Private Key in .pem format.
  * 	- Service `magento_mysql_rds`: Client Private Key in .pem format.
  * 	- Service `maria`: Client Private Key in .pem format.
  * 	- Service `maria_azure`: Client Private Key in .pem format.
  * 	- Service `maria_rds`: Client Private Key in .pem format.
  * 	- Service `mysql`: Client Private Key in .pem format.
  * 	- Service `mysql_azure`: Client Private Key in .pem format.
  * 	- Service `mysql_rds`: Client Private Key in .pem format.
  * 	- Service `postgres`: Client Private Key in .pem format.
  * 	- Service `postgres_rds`: Client Private Key in .pem format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_private_key Connector#client_private_key}
  */
  readonly clientPrivateKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: Client Certificate in .pem format.
  * 	- Service `aurora_postgres`: Client Certificate in .pem format.
  * 	- Service `azure_postgres`: Client Certificate in .pem format.
  * 	- Service `google_cloud_mysql`: Client Certificate in .pem format.
  * 	- Service `google_cloud_postgresql`: Client Certificate in .pem format.
  * 	- Service `heroku_postgres`: Client Certificate in .pem format.
  * 	- Service `magento_mysql`: Client Certificate in .pem format.
  * 	- Service `magento_mysql_rds`: Client Certificate in .pem format.
  * 	- Service `maria`: Client Certificate in .pem format.
  * 	- Service `maria_azure`: Client Certificate in .pem format.
  * 	- Service `maria_rds`: Client Certificate in .pem format.
  * 	- Service `mysql`: Client Certificate in .pem format.
  * 	- Service `mysql_azure`: Client Certificate in .pem format.
  * 	- Service `mysql_rds`: Client Certificate in .pem format.
  * 	- Service `postgres`: Client Certificate in .pem format.
  * 	- Service `postgres_rds`: Client Certificate in .pem format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_public_certificate Connector#client_public_certificate}
  */
  readonly clientPublicCertificate?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `acumatica`: Your Acumatica client secret.
  * 	- Service `adobe_analytics`: Client Secret from the OAuth Server-to-Server credentials of your Adobe Project.
  * 	- Service `adobe_workfront`: Your Adobe Workfront client secret.
  * 	- Service `adp_workforce_now`: Your ADP Client Secret.
  * 	- Service `akamai`: Your Akamai client secret.
  * 	- Service `akeneo`: Your Akeneo client secret.
  * 	- Service `auth0`: Your Auth0 client secret.
  * 	- Service `autodesk_bim_360`: Your Autodesk BIM 360 client secret.
  * 	- Service `bigin_by_zoho_crm`: Your Bigin by Zoho CRM Client Secret
  * 	- Service `billing_platform`: Your BillingPlatform client secret.
  * 	- Service `bing_webmaster_tools`: Your Bing Webmaster Tools client secret.
  * 	- Service `brightcove`: Your Brightcove client secret.
  * 	- Service `brightflag`: Your Brightflag client secret.
  * 	- Service `brightpearl`: Your Brightpearl client secret.
  * 	- Service `brivo`: Your Brivo client secret.
  * 	- Service `canvas_by_instructure`: Your Canvas by Instructure client secret.
  * 	- Service `castor_edc`: Your Castor EDC client secret.
  * 	- Service `classy`: Your Classy client secret.
  * 	- Service `clazar`: Your Clazar client secret.
  * 	- Service `cloudbeds`: Your Cloudbeds client secret.
  * 	- Service `commercetools`: Your commercetools client secret.
  * 	- Service `concur`: The SAP Concur Client secret.
  * 	- Service `constant_contact`: Your Constant Contact client secret.
  * 	- Service `cornerstone`: Your Cornerstone client secret.
  * 	- Service `coupa`: Your Coupa client_id
  * 	- Service `criteo`: Your Criteo client secret key.
  * 	- Service `criteo_retail_media`: Your Criteo Retail Media client secret.
  * 	- Service `cube`: Your Cube client secret.
  * 	- Service `cube_software`: Your Cube Software Client Secret.
  * 	- Service `culture_amp`: Your Culture Amp client secret.
  * 	- Service `cvent`: Your Cvent client secret.
  * 	- Service `d2l_brightspace`: Your D2L Brightspace client secret.
  * 	- Service `dialpad`: Your Dialpad client secret.
  * 	- Service `ebay`: Your eBay cert ID.
  * 	- Service `exact_online`: Your Exact Online client secret.
  * 	- Service `fillout`: Your Fillout client secret
  * 	- Service `flexport`: The Flexport API Secret.
  * 	- Service `formstack`: Your Formstack client secret.
  * 	- Service `fortnox`: Your Fortnox client secret.
  * 	- Service `genesys`: Your Genesys client secret.
  * 	- Service `gofundme_pro`: Client secret of the API application in your GoFundMe Pro account.
  * 	- Service `helpdesk`: Your HelpDesk client secret.
  * 	- Service `hilti_ontrack`: Your Hilti On!Track client secret.
  * 	- Service `ilevel`: Your iLevel Client Secret.
  * 	- Service `instructure`: Your Instructure client secret.
  * 	- Service `integral_ad_science`: Your integral_ad_science client secret.
  * 	- Service `ironclad`: Your Ironclad client secret.
  * 	- Service `jama_software`: Your Jama Software client secret.
  * 	- Service `jibble`: Your Jibble client secret.
  * 	- Service `learn_amp`: Your Learn Amp client secret.
  * 	- Service `looker_source`: Your Looker Client Secret.
  * 	- Service `marketo`: Marketo REST API Client Secret.
  * 	- Service `medallia`: Medallia Client Secret key
  * 	- Service `microsoft_entra_id`: Your Microsoft Entra ID Client Secret.
  * 	- Service `microsoft_power_bi`: Your Microsoft Power BI client secret.
  * 	- Service `microsoft_teams`: Your Microsoft Teams client secret.
  * 	- Service `navan`: Your Navan client secret.
  * 	- Service `nice`: Your NICE client secret.
  * 	- Service `oracle_fusion_field_service`: Your Oracle Fusion Field Service client secret.
  * 	- Service `oracle_netsuite_openair`: Your Oracle NetSuite OpenAir Client Secret.
  * 	- Service `paychex`: Your Paychex client secret.
  * 	- Service `paylocity`: Your Paylocity client secret.
  * 	- Service `personio`: Your Personio secret.
  * 	- Service `piwik_pro`: Your Piwik PRO client secret.
  * 	- Service `podio`: Your Podio client secret.
  * 	- Service `power_reviews_enterprise`: Your PowerReviews Enterprise Client Secret.
  * 	- Service `prisma_cloud`: Your Prisma Cloud secret access Key.
  * 	- Service `procore`: Your Procore client secret.
  * 	- Service `quora_ads`: Your Quora Ads client secret.
  * 	- Service `reltio`: Your Reltio client secret.
  * 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud Client secret.
  * 	- Service `salesforce_marketing_cloud`: The Salesforce Marketing Cloud client secret.
  * 	- Service `salesloft`: `Client Secret` of your Salesloft client application.
  * 	- Service `sana`: Your Sana client secret.
  * 	- Service `sap_success_factors`: Your SAP SuccessFactors Client Secret that you generated through SAML Assertion.
  * 	- Service `servicenow`: ServiceNow Client Secret.
  * 	- Service `servicetitan`: Your ServiceTitan secret key.
  * 	- Service `sharetribe`: Your Sharetribe client secret.
  * 	- Service `showpad`: Your Showpad client secret.
  * 	- Service `sigma_computing_source`: Your Sigma Computing client secret.
  * 	- Service `skillstx`: Your SkillsTX client secret.
  * 	- Service `skimlinks`: Your Skimlinks client secret.
  * 	- Service `smartrecruiters`: Your SmartRecruiters client secret.
  * 	- Service `splash`: Your Splash client secret.
  * 	- Service `square`: The Application Secret of your organization.
  * 	- Service `standard_metrics`: Your Standard Metrics Client secret.
  * 	- Service `sugarcrm`: Your SugarCRM client secret.
  * 	- Service `swoogo`: Your Swoogo Client Secret.
  * 	- Service `taboola`: The Taboola client secret.
  * 	- Service `talkdesk`: The Client Secret of your OAuth Client
  * 	- Service `thinkific`: Your Thinkific client secret.
  * 	- Service `tive`: Your Tive client secret.
  * 	- Service `toast`: Your Toast client secret.
  * 	- Service `trelica`: Your Trelica client secret.
  * 	- Service `tremendous`: Your Tremendous client secret.
  * 	- Service `tymeshift`: Your Tymeshift password.
  * 	- Service `udemy_business`: Your Udemy Business client secret.
  * 	- Service `ukg_pro_workforce_management`: Your UKG Pro Workforce Management client secret.
  * 	- Service `vimeo`: Your Vimeo client secret.
  * 	- Service `visma`: Your Visma client secret.
  * 	- Service `vonage_contact_center`: Your Vonage Contact Center client secret.
  * 	- Service `walmart_marketplace`: Your Walmart Marketplace client secret.
  * 	- Service `xero`: your clientSecret
  * 	- Service `xray`: Your Xray Client Secret.
  * 	- Service `yahoo_display_ads_on_yahoo_japan`: Your Yahoo Display Ads on Yahoo Japan client secret.
  * 	- Service `zendesk_chat`: Your Zendesk client secret.
  * 	- Service `zoho_books`: Your Zoho Books Client Secret.
  * 	- Service `zoho_campaigns`: Your Zoho Campaigns Client Secret.
  * 	- Service `zoho_desk`: Your Zoho Desk Client secret.
  * 	- Service `zoho_inventory`: Your Zoho Inventory client secret.
  * 	- Service `zoho_recruit`: Your Zoho Recruit client secret.
  * 	- Service `zuora`: Zuora Client Secret.
  * 	- Service `zuora_sandbox`: Zuora Client Secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#client_secret Connector#client_secret}
  */
  readonly clientSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Cloud storage type Braze Current is connected to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#cloud_storage_type Connector#cloud_storage_type}
  */
  readonly cloudStorageType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `rarible`: Your Rarible Collection Address.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#collection_address Connector#collection_address}
  */
  readonly collectionAddress?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_publishers`: Columns provide all trafficking statistics and revenue information available for the chosen Dimensions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#columns Connector#columns}
  */
  readonly columns?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `alida`: Your Alida community API key name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#community_api_key_name Connector#community_api_key_name}
  */
  readonly communityApiKeyName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `khoros_communities`: Your Khoros Communities community domain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#community_domain Connector#community_domain}
  */
  readonly communityDomain?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `khoros_communities`: Your Khoros Communities community ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#community_id Connector#community_id}
  */
  readonly communityId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `business_central`: List of companies to sync
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#companies Connector#companies}
  */
  readonly companies?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `ordway`: Your Ordway company name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#company Connector#company}
  */
  readonly company?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `360learning`: Your 360Learning Company ID.
  * 	- Service `cube`: Your Cube company ID.
  * 	- Service `cube_software`: Your Cube Software Company ID.
  * 	- Service `oracle_netsuite_openair`: Your Oracle NetSuite OpenAir Company ID.
  * 	- Service `paylocity`: Your Paylocity companyId.
  * 	- Service `sage_intacct`: Company ID
  * 	- Service `sap_success_factors`: Your SAP SuccessFactors Company ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#company_id Connector#company_id}
  */
  readonly companyId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cj_commission_detail`: Your CJ Commission Detail company IDs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#company_ids Connector#company_ids}
  */
  readonly companyIds?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `khoros_care`: Your Khoros Care companyKey.
  * 	- Service `upland`: Your Upland Software Company Key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#company_key Connector#company_key}
  */
  readonly companyKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `clockodo`: Your Clockodo company name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#company_name Connector#company_name}
  */
  readonly companyName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `concur`: The SAP Concur Company Request Token
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#company_request_token Connector#company_request_token}
  */
  readonly companyRequestToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `concur`: The SAP Concur Company UUID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#company_uuid Connector#company_uuid}
  */
  readonly companyUuid?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: If your files are compressed, but do not have extensions indicating the compression method, you can force them to be uncompressed according to the selected compression algorithm. Leave the value as infer if your files are saved with the correct compression extensions.
  * 	- Service `azure_blob_storage`: The secrets that should be passed to the function at runtime.
  * 	- Service `box`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
  * 	- Service `dropbox`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
  * 	- Service `email`: The secrets that should be passed to the function at runtime.
  * 	- Service `ftp`: The secrets that should be passed to the function at runtime.
  * 	- Service `gcs`: The secrets that should be passed to the function at runtime.
  * 	- Service `google_drive`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
  * 	- Service `kinesis`: If your files are compressed, but do not have extensions indicating the compression method, you can force them to be uncompressed according to the selected compression algorithm. Leave the value as infer if your files are saved with the correct compression extensions.
  * 	- Service `s3`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
  * 	- Service `s3_compatible_storage`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
  * 	- Service `sftp`: The secrets that should be passed to the function at runtime.
  * 	- Service `share_point`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
  * 	- Service `wasabi_cloud_storage`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#compression Connector#compression}
  */
  readonly compression?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_display_and_video_360`: The report configuration method. Specifies whether a new configuration is defined manually or an existing configuration is reused. The default value is `CREATE_NEW`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#config_method Connector#config_method}
  */
  readonly configMethod?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snowplow`: Public repository URL containing JSON configuration files.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#config_repository_url Connector#config_repository_url}
  */
  readonly configRepositoryUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook`: Option to select Prebuilt Reports or Custom Reports. [Possible config_type values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#configtype).
  * 	- Service `google_analytics`: Whether to use the [Prebuilt Reports or Custom Reports](https://fivetran.com/docs/connectors/applications/google-analytics#schemainformation).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#config_type Connector#config_type}
  */
  readonly configType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `xactly`: Your Xactly Connect password.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#connect_password Connector#connect_password}
  */
  readonly connectPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `xactly`: Your Xactly Connect username.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#connect_username Connector#connect_username}
  */
  readonly connectUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#connecting_user Connector#connecting_user}
  */
  readonly connectingUser?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#connecting_user_email Connector#connecting_user_email}
  */
  readonly connectingUserEmail?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_msk`: How Fivetran connects to your message brokers in the cluster
  * 	- Service `azure_blob_storage`: Connection Method. Possible values:  `DIRECT`: Fivetran will connect directly to your storage container, `SSH_TUNNEL`: Fivetran will connect to your storage container using a host machine (commonly used for VPN connections), `PRIVATE_LINK`: Fivetran will connect to your storage container using PrivateLink.
  * 	- Service `azure_function`: Connection Method. Possible values:  `DIRECT`: Fivetran will connect directly to your function, `PRIVATE_LINK`: Fivetran will connect to your storage container using PrivateLink.
  * 	- Service `azure_service_bus`: The connection method
  * 	- Service `sftp`: The connection method used to connect to SFTP Server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#connection_method Connector#connection_method}
  */
  readonly connectionMethod?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: Your Data Locker Connection Name. Default value: `data-locker-hourly/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#connection_name Connector#connection_name}
  */
  readonly connectionName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: The blob storage container connection string.
  * 	- Service `azure_event_hub`: Connection string of the Event Hub Namespace you want to sync.
  * 	- Service `azure_service_bus`: The connection string used for authentication. Required if the authentication type is `ConnectionString` 
  * 	- Service `microsoft_dynamics_365_fno`: The blob storage container's connection string.
  * 	- Service `microsoft_dynamics_365_fo`: The blob storage container connection string.
  * 	- Service `sql_server`: The Azure Blob Storage container connection string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#connection_string Connector#connection_string}
  */
  readonly connectionString?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `aurora_postgres`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `aveva_pi`: Possible values: `Directly`, `PrivateLink`
  * 	- Service `aws_cost_report`: Connection method. Default value: `Directly`.
  * 	- Service `aws_lambda`: Connection method. Default value: `Directly`.
  * 	- Service `azure_blob_storage`: Connection method. Default value: `Directly`.
  * 	- Service `azure_cosmos_for_mongo`: Possible values:`Directly`, `PrivateLink`. `Directly` is the default value
  * 	- Service `azure_postgres`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `azure_sql_db`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `azure_sql_managed_db`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `bigquery_db`: Direct or PrivateLink connection
  * 	- Service `clarity`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `cockroachdb`: Possible values:`Directly`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `db2i_hva`: Possible values:`SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and the following parameter's values are specified: `tunnel_host`, `tunnel_port`, `tunnel_user`.
  * 	- Service `db2i_sap_hva`: Possible values:`SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`.
  * 	- Service `db2luw`: Possible values:`SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and the following parameter's values are specified: `tunnel_host`, `tunnel_port`, `tunnel_user`.
  * 	- Service `documentdb`: Possible values:`SshTunnel`, `PrivateLink` . `SshTunnel` is used as a value if this parameter is omitted in the request and the following parameter's values are specified: `tunnel_host`, `tunnel_port`, `tunnel_user`.
  * 	- Service `dynamics_365_fo`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `ehr`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `elastic_cloud`: Possible values:`Directly`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `email`: Connection method. Default value: `Directly`.
  * 	- Service `epic_clarity`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `es_self_hosted`: Possible values:`Directly`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `google_cloud_mysql`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `google_cloud_postgresql`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `google_cloud_sqlserver`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `hana_sap_hva_b1`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `hana_sap_hva_ecc`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `hana_sap_hva_ecc_netweaver`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `hana_sap_hva_s4`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `hana_sap_hva_s4_netweaver`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `heroku_postgres`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `kinesis`: Connection method. Default value: `Directly`.
  * 	- Service `magento_mysql`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `magento_mysql_rds`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `maria`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `maria_azure`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `maria_rds`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `mongo`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `mongo_sharded`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `mysql`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `mysql_azure`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `mysql_rds`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `opendistro`: Possible values:`Directly`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `opensearch`: Possible values:`Directly`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `oracle`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `oracle_ebs`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `oracle_hva`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `oracle_rac`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `oracle_rds`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `oracle_sap_hva`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `oracle_sap_hva_netweaver`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `postgres`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `postgres_rds`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `redshift_db`: Directly or Private Link
  * 	- Service `s3`: Connection method. Default value: `Directly`.
  * 	- Service `sap_hana`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `sap_s4hana`: Connection Method
  * 	- Service `snowflake_db`: Directly or Private Link
  * 	- Service `sql_server`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `sql_server_hva`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `sql_server_rds`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  * 	- Service `sql_server_sap_ecc_hva`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#connection_type Connector#connection_type}
  */
  readonly connectionType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `prisma_cloud`: Your Prisma Cloud console URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#console_url Connector#console_url}
  */
  readonly consoleUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Kafka consumer group name.
  * 	- Service `aws_msk`: The name of consumer group created for Fivetran.
  * 	- Service `azure_event_hub`: Name of consumer group created for Fivetran.
  * 	- Service `confluent_cloud`: Confluent Cloud consumer group name.
  * 	- Service `heroku_kafka`: Heroku Kafka consumer group name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#consumer_group Connector#consumer_group}
  */
  readonly consumerGroup?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `netsuite_suiteanalytics`: Consumer Key
  * 	- Service `odoo`: Your Odoo consumer key.
  * 	- Service `twitter`: API Key of your app
  * 	- Service `twitter_ads`: The Twitter App consumer key.
  * 	- Service `woocommerce`: Your WooCommerce Consumer key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#consumer_key Connector#consumer_key}
  */
  readonly consumerKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `xactly`: Your Xactly Connect consumer name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#consumer_name Connector#consumer_name}
  */
  readonly consumerName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `netsuite_suiteanalytics`: Consumer Secret
  * 	- Service `odoo`: Your Odoo consumer secret.
  * 	- Service `twitter`: API Secret of your app
  * 	- Service `twitter_ads`: The Twitter App consumer secret.
  * 	- Service `woocommerce`: Your WooCommerce Consumer secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#consumer_secret Connector#consumer_secret}
  */
  readonly consumerSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: IP address of the Azure Storage Container which is accessible from host machine.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#container_address Connector#container_address}
  */
  readonly containerAddress?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: The name of the blob container.
  * 	- Service `microsoft_dynamics_365_fno`: The name of the blob container.
  * 	- Service `microsoft_dynamics_365_fo`: The name of the blob container.
  * 	- Service `sql_server`: The name of the Azure Blob Storage container.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#container_name Connector#container_name}
  */
  readonly containerName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `youtube_analytics`: Used only for Content Owner reports. The ID of the content owner for whom the API request is being made.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#content_owner_id Connector#content_owner_id}
  */
  readonly contentOwnerId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `acumatica`: Your Acumatica contract version.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#contract_version Connector#contract_version}
  */
  readonly contractVersion?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `helpscout`: Your conversation webhook URL
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#conversation_webhook_url Connector#conversation_webhook_url}
  */
  readonly conversationWebhookUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Conversion Dimensions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#conversion_dimensions Connector#conversion_dimensions}
  */
  readonly conversionDimensions?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pinterest_ads`: The date that the user interacted with the ad OR completed a conversion event.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#conversion_report_time Connector#conversion_report_time}
  */
  readonly conversionReportTime?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_ads`: A period of time in days during which a conversion is recorded.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#conversion_window_size Connector#conversion_window_size}
  */
  readonly conversionWindowSize?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#convert_dats_type_to_date Connector#convert_dats_type_to_date}
  */
  readonly convertDatsTypeToDate?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adjust`: CSV definition for the CSV export (https://help.adjust.com/en/article/csv-uploads#how-do-i-format-my-csv-definition).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#csv_definition Connector#csv_definition}
  */
  readonly csvDefinition?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `criteo`: Currency
  * 	- Service `rokt`: Your Rokt currency.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#currency Connector#currency}
  */
  readonly currency?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `coalesce`: Your Coalesce custom base URL.
  * 	- Service `datadog`: Your Datadog custom base url.
  * 	- Service `deposco`: Your Deposco custom base URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_base_url Connector#custom_base_url}
  */
  readonly customBaseUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_publishers`: The list of custom dimension key IDs included in the report. Custom dimension keys can only be selected with the CUSTOM_DIMENSION dimension.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_dimension_key_ids Connector#custom_dimension_key_ids}
  */
  readonly customDimensionKeyIds?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `iterable`: Custom Events Sync Mode.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_event_sync_mode Connector#custom_event_sync_mode}
  */
  readonly customEventSyncMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `iterable`: List of custom events to sync. Should be specified when `custom_event_sync_mode` is `SelectedEvents`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_events Connector#custom_events}
  */
  readonly customEvents?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_publishers`: The list of custom field IDs included in the report. Custom fields can only be selected with their corresponding dimensions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_field_ids Connector#custom_field_ids}
  */
  readonly customFieldIds?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Custom Floodlight variables enable you to capture information beyond the basics (visits and revenue) that you can collect with standard parameters in your tags.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_floodlight_variables Connector#custom_floodlight_variables}
  */
  readonly customFloodlightVariables?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `toggl_track`: Your Toggl Track custom rate limit. Supports only numeric characters (0-9).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_rate_limit Connector#custom_rate_limit}
  */
  readonly customRateLimit?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `dbt_cloud`: Your dbt Cloud access url.
  * 	- Service `factbird`: Your Factbird custom base url.
  * 	- Service `jotform`: Your Jotform custom base URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_url Connector#custom_url}
  */
  readonly customUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `ukg_pro`: Your UKG Pro Customer API key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#customer_api_key Connector#customer_api_key}
  */
  readonly customerApiKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_ads`: ID of the customer, can be retrieved from your AdWords dashboard.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#customer_id Connector#customer_id}
  */
  readonly customerId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `salesforce_commerce_cloud`: The parameter to retrieve customer details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#customer_list_id Connector#customer_list_id}
  */
  readonly customerListId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#daily_api_call_limit Connector#daily_api_call_limit}
  */
  readonly dailyApiCallLimit?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cosmos`: The source data access method. Supported values:`ACCOUNT_KEY`- Data access method that uses account keys to authenticate to the source database. It comes in both read-write and read-only variants.`RESOURCE_TOKEN`- Fine-grained permission model based on native Azure Cosmos DB users and permissions. Learn more in our [Azure Cosmos DB Data Access Methods documentation](https://fivetran.com/docs/connectors/databases/cosmos#dataaccessmethods).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#data_access_method Connector#data_access_method}
  */
  readonly dataAccessMethod?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `brightpearl`: Your Brightpearl data center.
  * 	- Service `qualtrics`: Data center ID of the Qualtrics account. Can be found in the URL before `qualtrics.com`. (For example, if your URL is `youraccount.ca1.qualtrics.com`, then the data center is `ca1`.)
  * 	- Service `zoho_crm`: Data Center, depending on the Domain name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#data_center Connector#data_center}
  */
  readonly dataCenter?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `zonka_feedback`: Your Zonka Feedback data center ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#data_center_id Connector#data_center_id}
  */
  readonly dataCenterId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `bigquery_db`: Data set name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#data_set_name Connector#data_set_name}
  */
  readonly dataSetName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: The database name.
  * 	- Service `aurora_postgres`: The database name.
  * 	- Service `azure_cosmos_for_mongo`: Authentication database for the source. Usually 'admin'.
  * 	- Service `azure_postgres`: The database name.
  * 	- Service `azure_sql_db`: The database name.
  * 	- Service `azure_sql_managed_db`: The database name.
  * 	- Service `clarity`: The database name.
  * 	- Service `cockroachdb`: The database name.
  * 	- Service `db2i_hva`: The database name.
  * 	- Service `db2i_sap_hva`: The database name.
  * 	- Service `db2luw`: The database name.
  * 	- Service `dynamics_365_fo`: The database name.
  * 	- Service `ehr`: The database name.
  * 	- Service `epic_clarity`: The database name.
  * 	- Service `google_cloud_mysql`: The database name.
  * 	- Service `google_cloud_postgresql`: The database name.
  * 	- Service `google_cloud_sqlserver`: The database name.
  * 	- Service `hana_sap_hva_b1`: The Hana database name.
  * 	- Service `hana_sap_hva_ecc`: The Hana database name.
  * 	- Service `hana_sap_hva_ecc_netweaver`: The Hana database name.
  * 	- Service `hana_sap_hva_s4`: The Hana database name.
  * 	- Service `hana_sap_hva_s4_netweaver`: The Hana database name.
  * 	- Service `heroku_postgres`: The database name.
  * 	- Service `magento_mysql`: The database name.
  * 	- Service `magento_mysql_rds`: The database name.
  * 	- Service `maria`: The database name.
  * 	- Service `maria_azure`: The database name.
  * 	- Service `maria_rds`: The database name.
  * 	- Service `mysql`: The database name.
  * 	- Service `mysql_azure`: The database name.
  * 	- Service `mysql_rds`: The database name.
  * 	- Service `oracle`: The database name.
  * 	- Service `oracle_ebs`: The database name.
  * 	- Service `oracle_hva`: The database name.
  * 	- Service `oracle_rac`: The database name.
  * 	- Service `oracle_rds`: The database name.
  * 	- Service `oracle_sap_hva`: The database name.
  * 	- Service `postgres`: The database name.
  * 	- Service `postgres_rds`: The database name.
  * 	- Service `redshift_db`: The database name: Redshift
  * 	- Service `sap_hana`: The database name.
  * 	- Service `sap_s4hana`: The database name.
  * 	- Service `snowflake_db`: The database name: Snowflake
  * 	- Service `sql_server`: The database name.
  * 	- Service `sql_server_hva`: The database name.
  * 	- Service `sql_server_rds`: The database name.
  * 	- Service `sql_server_sap_ecc_hva`: The database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#database Connector#database}
  */
  readonly database?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `firebase`: Database Name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#database_name Connector#database_name}
  */
  readonly databaseName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics_360`: The dataset ID.
  * 	- Service `google_analytics_4_export`: The Dataset ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dataset_id Connector#dataset_id}
  */
  readonly datasetId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `netsuite_suiteanalytics`: The NetSuite data source value: `NetSuite.com`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#datasource Connector#datasource}
  */
  readonly datasource?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: The aggregation duration you want. Default value: `HOUR` .
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#date_granularity Connector#date_granularity}
  */
  readonly dateGranularity?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `myosh`: Your Myosh Server variables/db .
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#db Connector#db}
  */
  readonly db?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `discourse`: Your Discourse default host.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#default_host Connector#default_host}
  */
  readonly defaultHost?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Optional. You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible. If your files sync with the wrong number of columns, consider setting this value
  * 	- Service `azure_blob_storage`: You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  * 	- Service `box`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  * 	- Service `dropbox`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  * 	- Service `email`: You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  * 	- Service `ftp`: You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  * 	- Service `gcs`: You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  * 	- Service `google_drive`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  * 	- Service `kinesis`: Optional. You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible. If your files sync with the wrong number of columns, consider setting this value
  * 	- Service `s3`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  * 	- Service `s3_compatible_storage`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  * 	- Service `sftp`: You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  * 	- Service `share_point`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  * 	- Service `wasabi_cloud_storage`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#delimiter Connector#delimiter}
  */
  readonly delimiter?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `brightpearl`: Your Brightpearl dev reference.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#developer_reference Connector#developer_reference}
  */
  readonly developerReference?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_publishers`: Dimension attributes provide additional fields associated with a Dimension. Dimension attributes can only be selected with their corresponding Dimensions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dimension_attributes Connector#dimension_attributes}
  */
  readonly dimensionAttributes?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adroll`: The dimenstions that you want to sync.
  * 	- Service `double_click_campaign_manager`: Report dimensions to include into a sync. The `date` dimension is mandatory for all the report types. The `advertiser` dimension is mandatory for `REACH` report type
  * 	- Service `double_click_publishers`: Report dimensions to include in the sync. The `date` dimension is mandatory for all the report types.
  * 	- Service `google_analytics`: The report dimensions to include into a sync. The `date` dimension is mandatory for all the report types.
  * 	- Service `google_display_and_video_360`: The report dimensions (filters) to include into a sync. The dimension names are provided in the API format. This is a required parameter when `config_method` is set to `CREATE_NEW`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dimensions Connector#dimensions}
  */
  readonly dimensions?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: Possible values:`DIRECT`, `BFILE`, `ASM`, `ARCHIVE_ONLY`
  * 	- Service `oracle_sap_hva`: Possible values:`DIRECT`, `BFILE`, `ASM`, `ARCHIVE_ONLY`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#direct_capture_method Connector#direct_capture_method}
  */
  readonly directCaptureMethod?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `qualtrics`: Set of directories to be synced when syncMode is CUSTOM
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#directories Connector#directories}
  */
  readonly directories?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `qualtrics`: Sync mode to be used for fetching select directories. The Allowed Values are ALL and CUSTOM. If CUSTOM add the directories to be synced in the `directories` field.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#directory_sync_mode Connector#directory_sync_mode}
  */
  readonly directorySyncMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cosmos`: Specifies the total number of connectors in the Distributed Connector Cluster running in parallel.
  * 	- Service `dynamodb`: Specifies the total number of connectors in the Distributed Connector Cluster running in parallel.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#distributed_connector_cluster_size Connector#distributed_connector_cluster_size}
  */
  readonly distributedConnectorClusterSize?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `qualtrics`: Can be used to set the distributions fetch window for incremental sync. Fetch window cannot be lesser than 60 days.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#distribution_incremental_fetch_window_days Connector#distribution_incremental_fetch_window_days}
  */
  readonly distributionIncrementalFetchWindowDays?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `auth0`: Your Auth0 domain.
  * 	- Service `bubble`: Your Bubble app name or domain name.
  * 	- Service `confluence`: Your Confluence domain.
  * 	- Service `kustomer`: Domain is the beginning of your kustomer URL going before .kustomerapp.com, e.g. for yourcompany.kustomerapp.com the domain name is yourcompany
  * 	- Service `okta`: Your Okta domain.
  * 	- Service `pipedrive`: Your Pipedrive domain.
  * 	- Service `shopware`: Your Shopware domain.
  * 	- Service `sistrix`: Your SISTRIX domain.
  * 	- Service `solarwinds_service_desk`: Your SolarWinds Service Desk domain.
  * 	- Service `uservoice`: Domain of your UserVoice site. If it ends with ".uservoice.com", you can specify just the subdomain ("mydomain.uservoice.com" - "mydomain")
  * 	- Service `zendesk`: Zendesk domain.
  * 	- Service `zendesk_sunshine`: Zendesk domain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#domain Connector#domain}
  */
  readonly domain?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: Workday host name.
  * 	- Service `workday_financial_management`: Workday host name.
  * 	- Service `workday_hcm`: Workday host name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#domain_host_name Connector#domain_host_name}
  */
  readonly domainHostName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `calabrio`: Your Calabrio domain name
  * 	- Service `dynamics_365`: The custom domain name associated with Dynamics 365.
  * 	- Service `helpshift`: Your Helpshift domain name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#domain_name Connector#domain_name}
  */
  readonly domainName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `medallia`: Domain type of your Medallia URL
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#domain_type Connector#domain_type}
  */
  readonly domainType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dsv_service_auth Connector#dsv_service_auth}
  */
  readonly dsvServiceAuth?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#dsv_subscription_key Connector#dsv_subscription_key}
  */
  readonly dsvSubscriptionKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `mailchimp`: List of IDs of the Mailchimp E-Commerce Stores to Sync
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ecommerce_stores Connector#ecommerce_stores}
  */
  readonly ecommerceStores?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#edition Connector#edition}
  */
  readonly edition?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#elements Connector#elements}
  */
  readonly elements?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appcues`: Your Appcues Email.
  * 	- Service `asset_panda`: Your Asset Panda email.
  * 	- Service `boostr`: Your Boostr email.
  * 	- Service `consensus_demo_automation_platform`: The email address of the Consensus Demo Automation Platform account you want Fivetran to use to access your data.
  * 	- Service `copper`: Your Copper email address.
  * 	- Service `email`: Send your emails to this address.
  * 	- Service `moloco`: Your Moloco account email.
  * 	- Service `netsuite_suiteanalytics`: The NetSuite user's email address.
  * 	- Service `pardot`: The email of the Pardot user.
  * 	- Service `pardot_sandbox`: The email of the Pardot user.
  * 	- Service `skuvault`: Your SkuVault email.
  * 	- Service `smadex`: Your Smadex account's email ID.
  * 	- Service `zendesk`: Zendesk email.
  * 	- Service `zendesk_sunshine`: Zendesk email.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#email Connector#email}
  */
  readonly email?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `clockodo`: Your Clockodo email address.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#email_address Connector#email_address}
  */
  readonly emailAddress?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cabcharge`: Your Cabcharge email ID.
  * 	- Service `ordway`: Your Ordway user email ID.
  * 	- Service `planful`: Your Planful email ID.
  * 	- Service `zendesk_workforce_management`: Your Zendesk Workforce Management email ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#email_id Connector#email_id}
  */
  readonly emailId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
  * 	- Service `azure_blob_storage`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
  * 	- Service `box`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
  * 	- Service `dropbox`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
  * 	- Service `email`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
  * 	- Service `ftp`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
  * 	- Service `gcs`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
  * 	- Service `google_drive`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
  * 	- Service `kinesis`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
  * 	- Service `s3`: If your CSVs are headerless, set this is as `true`. When `true`, we will generate generic column names following the convention of `column_0`, `column_1`, ... `column_n` to map the rows. Default value: `false`.
  * 	- Service `s3_compatible_storage`: If your CSVs are headerless, set this is as `true`. When `true`, we will generate generic column names following the convention of `column_0`, `column_1`, ... `column_n` to map the rows. Default value: `false`.
  * 	- Service `sftp`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
  * 	- Service `share_point`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
  * 	- Service `wasabi_cloud_storage`: If your CSVs are headerless, set this is as `true`. When `true`, we will generate generic column names following the convention of `column_0`, `column_1`, ... `column_n` to map the rows. Default value: `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#empty_header Connector#empty_header}
  */
  readonly emptyHeader?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Whether to enable all reach dimension combinations in the report. Default value: `false`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#enable_all_dimension_combinations Connector#enable_all_dimension_combinations}
  */
  readonly enableAllDimensionCombinations?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: Default value: `false`. Set to `true` if you're using archive log only mode.
  * 	- Service `oracle_sap_hva`: Default value: `false`. Set to `true` if you're using archive log only mode.
  * 	- Service `oracle_sap_hva_netweaver`: Default value: `false`. Set to `true` if you're using archive log only mode.
  * 	- Service `sql_server_hva`: Use archive log only mode
  * 	- Service `sql_server_sap_ecc_hva`: Use archive log only mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#enable_archive_log_only Connector#enable_archive_log_only}
  */
  readonly enableArchiveLogOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#enable_data_extensions_syncing Connector#enable_data_extensions_syncing}
  */
  readonly enableDataExtensionsSyncing?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cosmos`: Enable to allow the connector to join a cluster of connectors forming a Distributed Connector Cluster. This cluster allows parallel syncs from the same source to the same destination using multiple connectors.
  * 	- Service `dynamodb`: Enable to allow the connector to join a cluster of connectors forming a Distributed Connector Cluster. This cluster allows parallel syncs from the same source to the same destination using multiple connectors.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#enable_distributed_connector_mode Connector#enable_distributed_connector_mode}
  */
  readonly enableDistributedConnectorMode?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snowplow`: Enable Enrichments
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#enable_enrichments Connector#enable_enrichments}
  */
  readonly enableEnrichments?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Enable User Profile Exports
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#enable_exports Connector#enable_exports}
  */
  readonly enableExports?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sql_server`: Use transparent data encryption (TDE)
  * 	- Service `sql_server_hva`: Using Transparent Data Encryption (TDE)
  * 	- Service `sql_server_sap_ecc_hva`: Using Transparent Data Encryption (TDE)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#enable_tde Connector#enable_tde}
  */
  readonly enableTde?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: Default value: `false`. Set to `true` if you're using TDE encryption.
  * 	- Service `oracle_sap_hva`: Default value: `false`. Set to `true` if you're using TDE encryption.
  * 	- Service `oracle_sap_hva_netweaver`: Default value: `false`. Set to `true` if you're using TDE encryption.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#enable_tde_encryption Connector#enable_tde_encryption}
  */
  readonly enableTdeEncryption?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apple_search_ads`: Use the public key to grant Fivetran access to Apple Search Ads api.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#encoded_public_key Connector#encoded_public_key}
  */
  readonly encodedPublicKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `marketo`: Marketo SOAP API Encryption Key (Discontinued).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#encryption_key Connector#encryption_key}
  */
  readonly encryptionKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `branch`: Webhook Endpoint
  * 	- Service `iterable`: Register the following URL for webhooks on your Iterable dashboard.
  * 	- Service `marketo`: Marketo REST API endpoint.
  * 	- Service `snowplow`: Connection-specific collector endpoint. The collector endpoint will have the `webhooks.fivetran.com/snowplow/endpoint_ID` format. You will need it to configure Snowplow to connect with Fivetran.
  * 	- Service `webhooks`: You can send your events to https://webhooks.fivetran.com/webhooks/{endpoint}
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#endpoint Connector#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `s3_compatible_storage`: S3-Compatible Storage Endpoint URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#endpoint_url Connector#endpoint_url}
  */
  readonly endpointUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pinterest_ads`: The number of days to use as the conversion attribution window for an engagement (i.e. closeup or save) action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#engagement_attribution_window Connector#engagement_attribution_window}
  */
  readonly engagementAttributionWindow?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `optimizely`: Enriched Events S3 bucket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#enriched_export Connector#enriched_export}
  */
  readonly enrichedExport?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `checkout`: Your Checkout.com entity ID.
  * 	- Service `zuora`: If `is_multi_entity_feature_enabled` is `true`, then it's `EntityId`.
  * 	- Service `zuora_sandbox`: If `is_multi_entity_feature_enabled` is `true`, then it's `EntityId`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#entity_id Connector#entity_id}
  */
  readonly entityId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora_postgres`: Registered Application ID (for Entra ID authentication).
  * 	- Service `azure_postgres`: Registered Application ID (for Entra ID authentication).
  * 	- Service `google_cloud_postgresql`: Registered Application ID (for Entra ID authentication).
  * 	- Service `heroku_postgres`: Registered Application ID (for Entra ID authentication).
  * 	- Service `postgres`: Registered Application ID (for Entra ID authentication).
  * 	- Service `postgres_rds`: Registered Application ID (for Entra ID authentication).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#entra_app_id Connector#entra_app_id}
  */
  readonly entraAppId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora_postgres`: Azure Tenant ID (for Entra ID authentication).
  * 	- Service `azure_postgres`: Azure Tenant ID (for Entra ID authentication).
  * 	- Service `google_cloud_postgresql`: Azure Tenant ID (for Entra ID authentication).
  * 	- Service `heroku_postgres`: Azure Tenant ID (for Entra ID authentication).
  * 	- Service `postgres`: Azure Tenant ID (for Entra ID authentication).
  * 	- Service `postgres_rds`: Azure Tenant ID (for Entra ID authentication).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#entra_tenant_id Connector#entra_tenant_id}
  */
  readonly entraTenantId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `bazaarvoice`: Your Bazaarvoice environment.
  * 	- Service `buildium`: Your Buildium environment.
  * 	- Service `checkout`: Your Checkout.com environment.
  * 	- Service `concord`: Your Concord environment.
  * 	- Service `deposco`: Your Deposco environment.
  * 	- Service `dialpad`: Your Dialpad environment.
  * 	- Service `invoiced`: Your Invoiced environment.
  * 	- Service `jibble`: Your Jibble environment.
  * 	- Service `lucca`: Your Lucca environment.
  * 	- Service `oracle_netsuite_openair`: Your Oracle NetSuite OpenAir Environment.
  * 	- Service `ordergroove`: Your Ordergroove environment.
  * 	- Service `paddle`: Your Paddle environment.
  * 	- Service `procore`: Your Procore account environment.
  * 	- Service `reltio`: Your Reltio environment.
  * 	- Service `servicetitan`: Your ServiceTitan environment.
  * 	- Service `smarthr`: Your SmartHR environment.
  * 	- Service `trelica`: Your Trelica environment.
  * 	- Service `tremendous`: Your Tremendous environment.
  * 	- Service `vts`: Your VTS environment.
  * 	- Service `xactly`: Your Xactly environment.
  * 	- Service `younium`: Your Younium API environment.
  * 	- Service `zuora`: Zuora Sandbox Environment. This accepts either of the two values Sandbox or Central Sandbox based on your subscription. The default environment is Sandbox.
  * 	- Service `zuora_sandbox`: Zuora Sandbox Environment. This accepts either of the two values Sandbox or Central Sandbox based on your subscription. The default environment is Sandbox.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#environment Connector#environment}
  */
  readonly environment?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `xactly`: Your Xactly environment host.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#environment_host Connector#environment_host}
  */
  readonly environmentHost?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `business_central`: Name of the environment
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#environment_name Connector#environment_name}
  */
  readonly environmentName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Optional. If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `azure_blob_storage`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `box`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `dropbox`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `email`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `ftp`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `gcs`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `google_drive`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `kinesis`: Optional. If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `s3`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `s3_compatible_storage`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `sftp`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `share_point`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  * 	- Service `wasabi_cloud_storage`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#escape_char Connector#escape_char}
  */
  readonly escapeChar?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `gcs`: Approach used by CSV parser. Default  value: `CUSTOM_ESCAPE_CHAR`. required for CSV parsing when `non_standard_escape_char` is `true`.
  * 	- Service `s3`: Approach used by CSV parser. Default  value: `CUSTOM_ESCAPE_CHAR`. required for CSV parsing when `non_standard_escape_char` is `true`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#escape_char_options Connector#escape_char_options}
  */
  readonly escapeCharOptions?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `kustomer`: Turn it on if your app is on EU region
  * 	- Service `survey_monkey`: The SurveyMonkey account region. Specify `true`, if your account is hosted in the EU region. Default value is `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#eu_region Connector#eu_region}
  */
  readonly euRegion?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `iterable`: List of events to sync. Should be specified when `sync_mode` is `SelectedEvents`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#events Connector#events}
  */
  readonly events?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_drive`: Optional. Set to true to export your Google Docs and Slides as PDF documents. By default, we export Google Docs and Slides as .docx and .pptx files, respectively.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#export_native_types_as_pdf Connector#export_native_types_as_pdf}
  */
  readonly exportNativeTypesAsPdf?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adjust`: Your cloud storage.
  * 	- Service `amplitude`: Your cloud storage type
  * 	- Service `braze`: Export Storage. Required if `enable_exports` is `true`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#export_storage_type Connector#export_storage_type}
  */
  readonly exportStorageType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: The external ID is a string that designates who can assume the role. For more information, click a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html"here/a
  * 	- Service `aws_cloudtrail`: This is the same as your `group_id`, used for authentication along with the `role_arn`.
  * 	- Service `aws_cost_report`: The external ID is a string that designates who can assume the role. For more information, click a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html"here/a
  * 	- Service `aws_lambda`: The external ID is a string that designates who can assume the role.
  * 	- Service `aws_msk`: This is the same as your `group_id`. This is required when `sasl_mechanism` is set to `IAM`.
  * 	- Service `azure_function`: External ID.
  * 	- Service `cloudfront`: This is the same as your `group_id`, used for authentication along with the `role_arn`.
  * 	- Service `dynamodb`: This is the same as your `group_id`, used for authentication along with the `role_arn`.
  * 	- Service `kinesis`: The external ID is a string that designates who can assume the role. For more information, click a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html"here/a
  * 	- Service `s3`: Used for authentication along with the `role_arn`. If not provided, it uses connector's `group_id`. Use the [List All Groups endpoint](https://fivetran.com/docs/rest-api/groups#listallgroups) to find the `group_id`.
  * 	- Service `segment`: The external ID is a string that designates who can assume the role. For more information, see a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html"Amazon's AWS Identity and Access Management User Guide/a.
  * 	- Service `sql_server`: The external ID to be used when assuming the IAM role.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#external_id Connector#external_id}
  */
  readonly externalId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `unicommerce`: Your uniware facility codes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#facility_codes Connector#facility_codes}
  */
  readonly facilityCodes?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook`: List of fields which connector will sync. [Possible field values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#fields).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#fields Connector#fields}
  */
  readonly fields?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `box`: Files will be processed and synced according to the selected file handling option. Supported values:`structured`- (Default) Extract structured data into destination tables for analysis. Commonly used.`unstructured`- Replicate files in their original format. Best for PDFs, images, and other unstructured content.  Learn more about unstructured file replication in our [documentation.](https://fivetran.com/docs/using-fivetran/features/unstructured-file-replication).
  * 	- Service `google_drive`: Files will be processed and synced according to the selected file handling option. Supported values:`structured`- (Default) Extract structured data into destination tables for analysis. Commonly used.`unstructured`- Replicate files in their original format. Best for PDFs, images, and other unstructured content.  Learn more about unstructured file replication in our [documentation.](https://fivetran.com/docs/using-fivetran/features/unstructured-file-replication).
  * 	- Service `sftp`: Files will be processed and synced according to the selected file handling option. Supported values:`structured`- (Default) Extract structured data into destination tables for analysis. Commonly used.`unstructured`- Replicate files in their original format. Best for PDFs, images, and other unstructured content.  Learn more about unstructured file replication in our [documentation.](https://fivetran.com/docs/using-fivetran/features/unstructured-file-replication).
  * 	- Service `share_point`: Files will be processed and synced according to the selected file handling option. Supported values:`structured`- (Default) Extract structured data into destination tables for analysis. Commonly used.`unstructured`- Replicate files in their original format. Best for PDFs, images, and other unstructured content.  Learn more about unstructured file replication in our [documentation.](https://fivetran.com/docs/using-fivetran/features/unstructured-file-replication).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#file_handling Connector#file_handling}
  */
  readonly fileHandling?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: If your files are saved with improper extensions, you can force them to by synced as the selected filetype. Leave the value as infer if your files have the correct extensions
  * 	- Service `azure_blob_storage`: If your files are saved with improper extensions, you can force them to by synced as the selected file type.
  * 	- Service `box`: If your files are saved with improper extensions, you can force them to be synced as the selected filetype.
  * 	- Service `dropbox`: If your files are saved with improper extensions, you can force them to be synced as the selected filetype.
  * 	- Service `email`: If your files are saved with improper extensions, you can force them to by synced as the selected file type.
  * 	- Service `ftp`: If your files are saved with improper extensions, you can force them to by synced as the selected file type.
  * 	- Service `gcs`: If your files are saved with improper extensions, you can force them to by synced as the selected file type.
  * 	- Service `google_drive`: If your files are saved with improper extensions, you can force them to be synced as the selected filetype.
  * 	- Service `kinesis`: If your files are saved with improper extensions, you can force them to by synced as the selected filetype. Leave the value as infer if your files have the correct extensions
  * 	- Service `s3`: If your files are saved with improper extensions, you can force them to be synced as the selected file type.
  * 	- Service `s3_compatible_storage`: If your files are saved with improper extensions, you can force them to be synced as the selected file type.
  * 	- Service `sftp`: If your files are saved with improper extensions, you can force them to by synced as the selected file type.
  * 	- Service `share_point`: If your files are saved with improper extensions, you can force them to be synced as the selected file type.
  * 	- Service `wasabi_cloud_storage`: If your files are saved with improper extensions, you can force them to be synced as the selected file type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#file_type Connector#file_type}
  */
  readonly fileType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics`: String parameter restricts the data returned for your report. To use the filter parameter, specify a dimension or metric on which to filter, followed by the filter expression
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#filter Connector#filter}
  */
  readonly filter?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Whether to sync all finance accounts or specific finance accounts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#finance_account_sync_mode Connector#finance_account_sync_mode}
  */
  readonly financeAccountSyncMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Specific finance accounts to sync. Must be populated if `finance_account_sync_mode` is set to `SpecificFinanceAccounts`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#finance_accounts Connector#finance_accounts}
  */
  readonly financeAccounts?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `dropbox`: Your Dropbox Folder URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#folder Connector#folder}
  */
  readonly folder?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `box`: Folder URL
  * 	- Service `google_drive`: Folder URL
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#folder_id Connector#folder_id}
  */
  readonly folderId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: Folder Path
  * 	- Service `one_drive`: Your OneDrive folder URL
  * 	- Service `oracle_business_intelligence_publisher`: The folder path to save data models and reports.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#folder_path Connector#folder_path}
  */
  readonly folderPath?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `clari`: Your Clari Forecast id .
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#forecast_id Connector#forecast_id}
  */
  readonly forecastId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: FTP host.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ftp_host Connector#ftp_host}
  */
  readonly ftpHost?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: FTP password.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ftp_password Connector#ftp_password}
  */
  readonly ftpPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: FTP port.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ftp_port Connector#ftp_port}
  */
  readonly ftpPort?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: FTP user.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ftp_user Connector#ftp_user}
  */
  readonly ftpUser?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_lambda`: The name of your AWS Lambda Function.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#function Connector#function}
  */
  readonly function?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_function`: Function app name in Azure portal.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#function_app Connector#function_app}
  */
  readonly functionApp?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_function`: Function key used for authorization.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#function_key Connector#function_key}
  */
  readonly functionKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_function`: Name of the function to be triggered.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#function_name Connector#function_name}
  */
  readonly functionName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_cloud_function`: The trigger URL of the cloud function.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#function_trigger Connector#function_trigger}
  */
  readonly functionTrigger?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Your GCS bucket. Required if `GCS` is the `cloud_storage_type`
  * 	- Service `webhooks`: The GCS bucket name. Required if `bucket_service` is set to `GCS`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#gcs_bucket Connector#gcs_bucket}
  */
  readonly gcsBucket?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Your GCS bucket. Required if `GCS` is the `export_storage_type`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#gcs_export_bucket Connector#gcs_export_bucket}
  */
  readonly gcsExportBucket?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Your GCS folder name. Required if `GCS` is the `export_storage_type`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#gcs_export_folder Connector#gcs_export_folder}
  */
  readonly gcsExportFolder?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Your GCS folder name. Required if `GCS` is the `cloud_storage_type`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#gcs_folder Connector#gcs_folder}
  */
  readonly gcsFolder?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: Select this option to generate a Primary Key for reports where no single column or combination of columns can be used to form a Primary Key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#generate_fivetran_pk Connector#generate_fivetran_pk}
  */
  readonly generateFivetranPk?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `line_ads`: Your LINE Ads group ID(s).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#group_id Connector#group_id}
  */
  readonly groupId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `fivetran_log`: (Optional) The group name of the `target_group_id`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#group_name Connector#group_name}
  */
  readonly groupName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#hana_backup_password Connector#hana_backup_password}
  */
  readonly hanaBackupPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_b1`: The mode for connecting to HANA server. Available options: Single container (default), Multiple containers - Tenant database, Multiple containers - System database, Manual port selection - This option is used only if the database port needs to be specified manually.
  * 	- Service `hana_sap_hva_ecc`: The mode for connecting to HANA server. Available options: Single container (default), Multiple containers - Tenant database, Multiple containers - System database, Manual port selection - This option is used only if the database port needs to be specified manually.
  * 	- Service `hana_sap_hva_ecc_netweaver`: The mode for connecting to HANA server. Available options: Single container (default), Multiple containers - Tenant database, Multiple containers - System database, Manual port selection - This option is used only if the database port needs to be specified manually.
  * 	- Service `hana_sap_hva_s4`: The mode for connecting to HANA server. Available options: Single container (default), Multiple containers - Tenant database, Multiple containers - System database, Manual port selection - This option is used only if the database port needs to be specified manually.
  * 	- Service `hana_sap_hva_s4_netweaver`: The mode for connecting to HANA server. Available options: Single container (default), Multiple containers - Tenant database, Multiple containers - System database, Manual port selection - This option is used only if the database port needs to be specified manually.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#hana_mode Connector#hana_mode}
  */
  readonly hanaMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_service_bus`: The boolean value specifying whether the connection string has manage permissions
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#has_manage_permissions Connector#has_manage_permissions}
  */
  readonly hasManagePermissions?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Range of data in history you would like to include in the initial sync.
  * 	- Service `iterable`: The time range for which historical data should be synced. Default value: `All Time`.
  * 	- Service `klaviyo`: Range of data in history you would like to include in the initial sync. Default value: `ALL_TIME`.
  * 	- Service `marketo`: Range of data in history you would like to include in the initial sync. Default value: `ALL_TIME`.
  * 	- Service `sailthru`: Range of historical data you would like to include in the initial sync. Default value: `ALL_TIME`.
  * 	- Service `salesforce_marketing_cloud`: Range of data in history you would like to include in the initial sync. Default value: `ALL_TIME`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#historic_sync_time_frame Connector#historic_sync_time_frame}
  */
  readonly historicSyncTimeFrame?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Range of data in history you would like to include in the initial sync. Valid values are `ALL_TIME` and `DATE_LIMIT`
  * 	- Service `concur`: Historical Sync Limit for the Sync
  * 	- Service `eloqua`: Range of data in history you would like to include in the initial sync. Default value: `ALL_TIME`.
  * 	- Service `iterable`: The time range for which historical data should be synced. Default value: `All Time`.
  * 	- Service `klaviyo`: The time range for which historical data should be synced. Default value: `All Time`.
  * 	- Service `marketo`: The time range for which historical data should be synced. Default value: `All Time`.
  * 	- Service `pardot`: The time range for which historical data should be synced. Default value: `All Time`.
  * 	- Service `pardot_sandbox`: The time range for which historical data should be synced. Default value: `All Time`.
  * 	- Service `sage_intacct`: Historical Sync Limit for the Sync
  * 	- Service `sailthru`: The time range for which historical data should be synced. Default value: `All Time`.
  * 	- Service `salesforce_marketing_cloud`: The time range for which historical data should be synced. Default value: `All Time`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#historical_sync_limit Connector#historical_sync_limit}
  */
  readonly historicalSyncLimit?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: The start date (in YYYY-MM-DD) from which to sync historical data. Only used when `historicalSyncLimit` is set to `DATE_LIMIT`.
  * 	- Service `iterable`: The start date (YYYY-MM-DD) from which to sync historical data.
  * 	- Service `klaviyo`: The start date (YYYY-MM-DD) from which to sync historical data.
  * 	- Service `marketo`: The start date (YYYY-MM-DD) from which to sync historical data.
  * 	- Service `pardot`: The start date (YYYY-MM-DD) from which to sync historical data.
  * 	- Service `pardot_sandbox`: The start date (YYYY-MM-DD) from which to sync historical data.
  * 	- Service `sailthru`: The start date (YYYY-MM-DD) from which to sync historical data.
  * 	- Service `salesforce_marketing_cloud`: The start date (YYYY-MM-DD) from which to sync historical data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#historical_sync_limit_date Connector#historical_sync_limit_date}
  */
  readonly historicalSyncLimitDate?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pardot`: The options for time range for which historical data should be synced. Default value: `All Time`.
  * 	- Service `pardot_sandbox`: The options for time range for which historical data should be synced. Default value: `All Time`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#historical_sync_limit_time_frame Connector#historical_sync_limit_time_frame}
  */
  readonly historicalSyncLimitTimeFrame?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_selling_partner`: The time frame for historical data synchronization. Default value: `ALL_TIME`.
  * 	- Service `ascend_by_partnerize`: Your Ascend by Partnerize Historical sync time frame
  * 	- Service `hubspot`: Used to configure Historical sync timeframe for selected tables
  * 	- Service `mixpanel`: Should sync all data or adhere to `backward_sync_limit_date`
  * 	- Service `pendo`: The time range for which historical data should be synced. Default value: `All Time`.
  * 	- Service `rokt`: Your Rokt historical sync time frame.
  * 	- Service `shopify`: Used to configure Historical sync timeframe for selected tables
  * 	- Service `skimlinks`: Your Skimlinks Historical sync time frame.
  * 	- Service `stripe`: Used to configure Historical sync timeframe for selected tables
  * 	- Service `stripe_test`: Used to configure Historical sync timeframe for selected tables
  * 	- Service `vimeo`: Your Vimeo Historical sync time frame.
  * 	- Service `zendesk`: Used to configure Historical sync timeframe for selected tables
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#historical_sync_time_frame Connector#historical_sync_time_frame}
  */
  readonly historicalSyncTimeFrame?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: Your S3 home folder path of the Data Locker.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#home_folder Connector#home_folder}
  */
  readonly homeFolder?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: DB instance host or IP address.
  * 	- Service `aurora_postgres`: DB instance host or IP address.
  * 	- Service `aveva_pi`: IP address of the AF Server
  * 	- Service `azure_postgres`: DB instance host or IP address.
  * 	- Service `azure_sql_db`: DB instance host or IP address.
  * 	- Service `azure_sql_managed_db`: DB instance host or IP address.
  * 	- Service `clarity`: DB instance host or IP address.
  * 	- Service `cockroachdb`: DB instance host or IP address.
  * 	- Service `commercetools`: Your commercetools host.
  * 	- Service `databricks_db`: The host URL for your Databricks account.
  * 	- Service `db2i_hva`: A host address of the primary node. It should be a DB instance host/IP address with a port number.
  * 	- Service `db2i_sap_hva`: DB instance host or IP address.
  * 	- Service `db2luw`: A host address of the primary node. It should be a DB instance host/IP address with a port number.
  * 	- Service `documentdb`: Host IP address of the primary node. Ignored if `hosts` value is provided.
  * 	- Service `dynamics_365_fo`: DB instance host or IP address.
  * 	- Service `ehr`: DB instance host or IP address.
  * 	- Service `elastic_cloud`: DB instance host or IP address.
  * 	- Service `epic_clarity`: DB instance host or IP address.
  * 	- Service `es_self_hosted`: DB instance host or IP address.
  * 	- Service `ftp`: FTP host address.
  * 	- Service `google_cloud_mysql`: DB instance host or IP address.
  * 	- Service `google_cloud_postgresql`: DB instance host or IP address.
  * 	- Service `google_cloud_sqlserver`: DB instance host or IP address.
  * 	- Service `hana_sap_hva_b1`: DB instance host or IP address.
  * 	- Service `hana_sap_hva_ecc`: DB instance host or IP address.
  * 	- Service `hana_sap_hva_ecc_netweaver`: DB instance host or IP address.
  * 	- Service `hana_sap_hva_s4`: DB instance host or IP address.
  * 	- Service `hana_sap_hva_s4_netweaver`: DB instance host or IP address.
  * 	- Service `heroku_postgres`: DB instance host or IP address.
  * 	- Service `jira`: The Jira service host address.
  * 	- Service `magento_mysql`: DB instance host or IP address.
  * 	- Service `magento_mysql_rds`: DB instance host or IP address.
  * 	- Service `maria`: DB instance host or IP address.
  * 	- Service `maria_azure`: DB instance host or IP address.
  * 	- Service `maria_rds`: DB instance host or IP address.
  * 	- Service `marin`: The Marin host address.
  * 	- Service `mysql`: DB instance host or IP address.
  * 	- Service `mysql_azure`: DB instance host or IP address.
  * 	- Service `mysql_rds`: DB instance host or IP address.
  * 	- Service `netsuite_suiteanalytics`: The NetSuite service host address.
  * 	- Service `opendistro`: DB instance host or IP address.
  * 	- Service `opensearch`: DB instance host or IP address.
  * 	- Service `oracle`: DB instance host or IP address.
  * 	- Service `oracle_ebs`: DB instance host or IP address.
  * 	- Service `oracle_hva`: DB instance host or IP address.
  * 	- Service `oracle_rac`: DB instance host or IP address.
  * 	- Service `oracle_rds`: DB instance host or IP address.
  * 	- Service `oracle_sap_hva`: DB instance host or IP address.
  * 	- Service `oracle_sap_hva_netweaver`: DB instance host or IP address.
  * 	- Service `postgres`: DB instance host or IP address.
  * 	- Service `postgres_rds`: DB instance host or IP address.
  * 	- Service `redshift_db`: Host name
  * 	- Service `sap_hana`: The SAP HANA host or IP address.
  * 	- Service `sap_s4hana`: The SAP S/4 host or IP address.
  * 	- Service `sftp`: SFTP host address.
  * 	- Service `snowflake_db`: Host name
  * 	- Service `splunk`: The Splunk service host address.
  * 	- Service `sql_server`: DB instance host or IP address.
  * 	- Service `sql_server_hva`: DB instance host or IP address.
  * 	- Service `sql_server_rds`: DB instance host or IP address.
  * 	- Service `sql_server_sap_ecc_hva`: DB instance host or IP address.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#host Connector#host}
  */
  readonly host?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: IP address of host tunnel machine which is used to connect to the Storage container.
  * 	- Service `azure_service_bus`: The IP address of the host machine which we use to connect to ASB via ssh
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#host_ip Connector#host_ip}
  */
  readonly hostIp?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `coassemble`: Your Coassemble Hostname.
  * 	- Service `datadog`: Your Datadog host name.
  * 	- Service `ukg_pro_workforce_management`: Your UKG Pro Workforce Management hostname.
  * 	- Service `zuora`: The domain or URL of your Zuora Revenue instance.
  * 	- Service `zuora_sandbox`: The domain or URL of your Zuora Revenue instance.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#host_name Connector#host_name}
  */
  readonly hostName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_commerce`: Your Adobe Commerce host url.
  * 	- Service `sparkpost`: Your SparkPost host URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#host_url Connector#host_url}
  */
  readonly hostUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: Username in the host machine.
  * 	- Service `azure_service_bus`: The username on the host machine which we use to connect to ASB via ssh
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#host_user Connector#host_user}
  */
  readonly hostUser?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `akamai`: Your Akamai hostname.
  * 	- Service `ukg_pro`: Your UKG Pro hostname.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#hostname Connector#hostname}
  */
  readonly hostname?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_cosmos_for_mongo`: A list of host addresses for Azure Cosmos DB for Mongo DB.
  * 	- Service `mongo`: A list of host addresses of the primary node and all replicas. Each list item is either: a DB instance host/IP address with a port number, or SRV host record.
  * 	- Service `mongo_sharded`: A list of host addresses of the primary node and all replicas. Each list item is either: a DB instance host/IP address with a port number, or SRV host record.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#hosts Connector#hosts}
  */
  readonly hosts?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `databricks_db`: http path
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#http_path Connector#http_path}
  */
  readonly httpPath?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `playvox_workforce_management`: Your Playvox Workforce Management client identifier.
  * 	- Service `statistics_netherlands_cbs`: Your Statistics Netherlands CBS catalog identifier.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#identifier Connector#identifier}
  */
  readonly identifier?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `marketo`: Marketo REST API identity url.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#identity Connector#identity}
  */
  readonly identity?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `servicenow`: Include inherited columns.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#include_inherited_columns Connector#include_inherited_columns}
  */
  readonly includeInheritedColumns?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `salesforce_commerce_cloud`: Whether to sync data through OCAPI endpoints.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#include_ocapi_endpoints Connector#include_ocapi_endpoints}
  */
  readonly includeOcapiEndpoints?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `acumatica`: Your Acumatica instance name.
  * 	- Service `coupa`: The instance name of your Coupa account in the URL.
  * 	- Service `flywheel_digital`: Your Flywheel Digital instance.
  * 	- Service `salesforce_marketing_cloud`: The Salesforce Marketing Cloud instance ID
  * 	- Service `servicenow`: ServiceNow Instance ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#instance Connector#instance}
  */
  readonly instance?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_adaptive`: Instance code for Workday Adaptive Planning
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#instance_code Connector#instance_code}
  */
  readonly instanceCode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_b1`: Two-digit number (00-97) of the SAP instance within its host.
  * 	- Service `hana_sap_hva_ecc`: Two-digit number (00-97) of the SAP instance within its host.
  * 	- Service `hana_sap_hva_ecc_netweaver`: Two-digit number (00-97) of the SAP instance within its host.
  * 	- Service `hana_sap_hva_s4`: Two-digit number (00-97) of the SAP instance within its host.
  * 	- Service `hana_sap_hva_s4_netweaver`: Two-digit number (00-97) of the SAP instance within its host.
  * 	- Service `oracle_sap_hva_netweaver`: Two-digit number (00-97) of the SAP instance within its host.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#instance_number Connector#instance_number}
  */
  readonly instanceNumber?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sap_business_by_design`: The SAP Business ByDesign instance URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#instance_url Connector#instance_url}
  */
  readonly instanceUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pendo`: The integration key of the Pendo account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#integration_key Connector#integration_key}
  */
  readonly integrationKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aveva_pi`: IP address of the AF Server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ip_address Connector#ip_address}
  */
  readonly ipAddress?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `fivetran_log`: (Optional) Retrieve account-level logs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_account_level_connector Connector#is_account_level_connector}
  */
  readonly isAccountLevelConnector?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apple_search_ads`: The contents of your PEM certificate file. Default value: `false`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_auth2_enabled Connector#is_auth2_enabled}
  */
  readonly isAuth2Enabled?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `twitter_ads`: Custom API credentials
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_custom_api_credentials Connector#is_custom_api_credentials}
  */
  readonly isCustomApiCredentials?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pardot`: Whether the `EXTERNAL_ACTIVITY` table must be synced or not.
  * 	- Service `pardot_sandbox`: Whether the `EXTERNAL_ACTIVITY` table must be synced or not.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_external_activities_endpoint_selected Connector#is_external_activities_endpoint_selected}
  */
  readonly isExternalActivitiesEndpointSelected?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: Use Secure FTP (FTPS).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_ftps Connector#is_ftps}
  */
  readonly isFtps?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sftp`: Whether to use a key pair for authentication.  When `true`, do not use `password`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_keypair Connector#is_keypair}
  */
  readonly isKeypair?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `zuora`: Set to `true` if there are multiple entities in your Zuora account and you only want to use one entity. Otherwise, set to `false`.
  * 	- Service `zuora_sandbox`: Set to `true` if there are multiple entities in your Zuora account and you only want to use one entity. Otherwise, set to `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_multi_entity_feature_enabled Connector#is_multi_entity_feature_enabled}
  */
  readonly isMultiEntityFeatureEnabled?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `salesforce_marketing_cloud`: Indicates that that your installed package uses OAuth 2.0. Default value: `false`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_new_package Connector#is_new_package}
  */
  readonly isNewPackage?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snowflake_db`: Indicates that a private key is encrypted. The default value: `false`. The field can be specified if authentication type is `KEY_PAIR`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_private_key_encrypted Connector#is_private_key_encrypted}
  */
  readonly isPrivateKeyEncrypted?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_lambda`: We use PrivateLink by default if your AWS Lambda is in the same region as Fivetran. Turning on this toggle ensures that Fivetran always connects to AWS lambda over PrivateLink. Learn more in our [PrivateLink documentation](https://fivetran.com/docs/connectors/databases/connection-options#awsprivatelink).
  * 	- Service `s3`: Set to `true` if you want to connect to S3 bucket over PrivateLink. Default value: `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_private_link_required Connector#is_private_link_required}
  */
  readonly isPrivateLinkRequired?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Whether you are syncing from a public bucket. Default value: `false`.
  * 	- Service `kinesis`: Is the bucket public? (you don't need an AWS account for syncing public buckets!)
  * 	- Service `s3`: Whether you are syncing from a public bucket. Default value: `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_public Connector#is_public}
  */
  readonly isPublic?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sailthru`: Enable this if you want to sync Sailthru Connect
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_sailthru_connect_enabled Connector#is_sailthru_connect_enabled}
  */
  readonly isSailthruConnectEnabled?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `ftp`: Whether the server supports FTPS.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_secure Connector#is_secure}
  */
  readonly isSecure?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `salesforce_marketing_cloud`: Provide SFTP credentials
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_sftp_creds_available Connector#is_sftp_creds_available}
  */
  readonly isSftpCredsAvailable?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `box`: Allows the creation of connector using Merge Mode strategy.
  * 	- Service `dropbox`: Allows the creation of connector using Merge Mode strategy.
  * 	- Service `google_drive`: Allows the creation of connector using Merge Mode strategy.
  * 	- Service `sftp`: Allows the creation of connector using the specified Sync strategy.
  * 	- Service `share_point`: Allows the creation of connector using Merge Mode strategy.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_single_table_mode Connector#is_single_table_mode}
  */
  readonly isSingleTableMode?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adyen`: Whether or not your Adyen Account is a Test Account. Default value: `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_test_account Connector#is_test_account}
  */
  readonly isTestAccount?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_selling_partner`: Whether or not you have a Vendor Account. Default value: `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#is_vendor Connector#is_vendor}
  */
  readonly isVendor?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud issuer name.
  * 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud issuer name.
  * 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud issuer name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#issuer Connector#issuer}
  */
  readonly issuer?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Your Issuer ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#issuer_id Connector#issuer_id}
  */
  readonly issuerId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Control how your JSON data is delivered into your destination
  * 	- Service `azure_blob_storage`: Control how your JSON data is delivered into your destination
  * 	- Service `box`: Control how your JSON data is delivered into your destination
  * 	- Service `dropbox`: Control how your JSON data is delivered into your destination
  * 	- Service `email`: Control how your JSON data is delivered into your destination
  * 	- Service `ftp`: Control how your JSON data is delivered into your destination
  * 	- Service `gcs`: Control how your JSON data is delivered into your destination
  * 	- Service `google_drive`: Control how your JSON data is delivered into your destination
  * 	- Service `kinesis`: Control how your JSON data is delivered into your destination
  * 	- Service `s3`: Control how your JSON data is delivered into your destination
  * 	- Service `s3_compatible_storage`: Control how your JSON data is delivered into your destination
  * 	- Service `sftp`: Control how your JSON data is delivered into your destination
  * 	- Service `share_point`: Control how your JSON data is delivered into your destination
  * 	- Service `wasabi_cloud_storage`: Specifies how Fivetran should handle your JSON data. Default value: `Packed`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#json_delivery_mode Connector#json_delivery_mode}
  */
  readonly jsonDeliveryMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `uservoice`: The UserVoice API key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#key Connector#key}
  */
  readonly key?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Your Key ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#key_id Connector#key_id}
  */
  readonly keyId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_msk`: If `security_protocol` is set to `TLS`, enter your `Key Password`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#key_password Connector#key_password}
  */
  readonly keyPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `heroku_kafka`: Key Store Type
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#key_store_type Connector#key_store_type}
  */
  readonly keyStoreType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_msk`: If `security_protocol` is set to `TLS`, add the `Keystore File` as Base64 encoded string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#keystore Connector#keystore}
  */
  readonly keystore?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_msk`: If `security_protocol` is set to `TLS`, enter your `Keystore Password`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#keystore_password Connector#keystore_password}
  */
  readonly keystorePassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `younium`: Your Younium legal entity ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#legal_entity_id Connector#legal_entity_id}
  */
  readonly legalEntityId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pardot`: API limit for the external activities endpoint.
  * 	- Service `pardot_sandbox`: API limit for the external activities endpoint.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#limit_for_api_calls_to_external_activities_endpoint Connector#limit_for_api_calls_to_external_activities_endpoint}
  */
  readonly limitForApiCallsToExternalActivitiesEndpoint?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `azure_blob_storage`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `box`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `dropbox`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `email`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `ftp`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `gcs`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `google_drive`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `kinesis`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `s3`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `s3_compatible_storage`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `sftp`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `share_point`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  * 	- Service `wasabi_cloud_storage`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#line_separator Connector#line_separator}
  */
  readonly lineSeparator?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pigment`: Your Pigment list ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#list_id Connector#list_id}
  */
  readonly listId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cj_commission_detail`: Your CJ Commission Detail list of company IDs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#list_of_company_ids Connector#list_of_company_ids}
  */
  readonly listOfCompanyIds?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Optional. If you have a file structure where new files are always named in lexicographically increasing order such as files being named in increasing order of time, you can select codetime_based_pattern_listing/code.
  * 	- Service `kinesis`: Optional. If you have a file structure where new files are always named in lexicographically increasing order such as files being named in increasing order of time, you can select codetime_based_pattern_listing/code.
  * 	- Service `s3`: The listing strategy you want to use. Default value: `complete_listing`.
  * 	- Service `s3_compatible_storage`: The listing strategy you want to use. Default value: `complete_listing`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#list_strategy Connector#list_strategy}
  */
  readonly listStrategy?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics_4_export`: The Sync Mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#list_sync_mode Connector#list_sync_mode}
  */
  readonly listSyncMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `db2i_hva`: The log journal name.
  * 	- Service `db2i_sap_hva`: The log journal name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#log_journal Connector#log_journal}
  */
  readonly logJournal?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `db2i_hva`: The log journal schema.
  * 	- Service `db2i_sap_hva`: The log journal schema.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#log_journal_schema Connector#log_journal_schema}
  */
  readonly logJournalSchema?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_ecc_netweaver`: Name of the SAP logon group. The default value is PUBLIC. This field is optional.
  * 	- Service `hana_sap_hva_s4_netweaver`: Name of the SAP logon group. The default value is PUBLIC. This field is optional.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#log_on_group Connector#log_on_group}
  */
  readonly logOnGroup?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `rebound_returns`: Your ReBound Returns login.
  * 	- Service `the_trade_desk`: The Trade Desk email. It is a part of the login credentials.
  * 	- Service `walmart_dsp`: Walmart DSP email. It is a part of the login credentials.
  * 	- Service `workday_adaptive`: User email address
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#login Connector#login}
  */
  readonly login?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `concur`: The SAP Concur password.
  * 	- Service `sage_intacct`: The login password. It is a part of the login credentials.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#login_password Connector#login_password}
  */
  readonly loginPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sage_intacct`: Lookback window for GL Batch endpoint lookback sync
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#look_back_window_for_gl_batch_endpoint Connector#look_back_window_for_gl_batch_endpoint}
  */
  readonly lookBackWindowForGlBatchEndpoint?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_ads`: The list of the Manager Account IDs whose clients will be synced. Must be populated if `sync_mode` is set to `ManagerAccounts`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#manager_accounts Connector#manager_accounts}
  */
  readonly managerAccounts?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reltio`: Maximum API requests per day
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#max_api_requests_per_day Connector#max_api_requests_per_day}
  */
  readonly maxApiRequestsPerDay?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `afterpay`: Your Afterpay Merchant ID.
  * 	- Service `amazon_selling_partner`: The Merchant ID or Vendor Code.
  * 	- Service `avantlink`: Your AvantLink Merchant ID.
  * 	- Service `braintree`: Your Braintree merchant ID.
  * 	- Service `braintree_sandbox`: Your Braintree merchant ID.
  * 	- Service `shareasale`: Your ShareASale merchant ID.
  * 	- Service `xsolla`: Your Xsolla Merchant ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#merchant_id Connector#merchant_id}
  */
  readonly merchantId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Kafka message type.
  * 	- Service `aws_msk`: The Message type.
  * 	- Service `azure_event_hub`: Message type.
  * 	- Service `azure_service_bus`: The format of messages in the topic
  * 	- Service `confluent_cloud`: Confluent Cloud message type.
  * 	- Service `heroku_kafka`: Heroku Kafka message type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#message_type Connector#message_type}
  */
  readonly messageType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pigment`: Your Pigment metric ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#metric_id Connector#metric_id}
  */
  readonly metricId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adroll`: The metrics that you want to sync.
  * 	- Service `criteo`: Metrics
  * 	- Service `double_click_campaign_manager`: Report metrics to include into a sync.
  * 	- Service `google_analytics`: The report metrics to include into a sync.
  * 	- Service `google_display_and_video_360`: The report metrics to include into a sync. The metric names are provided in the API format. This is a required parameter when `config_method` is set to `CREATE_NEW`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#metrics Connector#metrics}
  */
  readonly metrics?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_sheets`: The name of the named data range on the sheet that contains the data to be synced.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#named_range Connector#named_range}
  */
  readonly namedRange?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_service_bus`: The ASB namespace which we have to sync. Required for `AzureActiveDirectory` authentication.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#namespace Connector#namespace}
  */
  readonly namespace?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_publishers`: Network code is a unique, numeric identifier for your Ad Manager network.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#network_code Connector#network_code}
  */
  readonly networkCode?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `gcs`: Use this if your CSV generator uses non-standard ways of escaping characters. Default value: `false`.
  * 	- Service `s3`: Use this if your CSV generator uses non-standard ways of escaping characters. Default value: `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#non_standard_escape_char Connector#non_standard_escape_char}
  */
  readonly nonStandardEscapeChar?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Optional. If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `azure_blob_storage`: If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `box`: If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `dropbox`: If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `email`: If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `ftp`: If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `gcs`: If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `google_drive`: If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `kinesis`: Optional. If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `s3`: If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `s3_compatible_storage`: If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `sftp`: If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `share_point`: If your CSVs use a special value indicating null, you can specify it here.
  * 	- Service `wasabi_cloud_storage`: If your CSVs use a special value indicating null, you can specify it here.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#null_sequence Connector#null_sequence}
  */
  readonly nullSequence?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#oauth_token Connector#oauth_token}
  */
  readonly oauthToken?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#oauth_token_secret Connector#oauth_token_secret}
  */
  readonly oauthTokenSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud OCAPI Client ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ocapi_client_id Connector#ocapi_client_id}
  */
  readonly ocapiClientId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud OCAPI Client secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ocapi_client_secret Connector#ocapi_client_secret}
  */
  readonly ocapiClientSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud OCAPI custom object types.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ocapi_custom_object_types Connector#ocapi_custom_object_types}
  */
  readonly ocapiCustomObjectTypes?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud OCAPI hostname.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ocapi_hostname Connector#ocapi_hostname}
  */
  readonly ocapiHostname?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_b1`: ODBC manager library path
  * 	- Service `hana_sap_hva_ecc`: ODBC manager library path
  * 	- Service `hana_sap_hva_s4`: ODBC manager library path
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#odbc_driver_manager_library_path Connector#odbc_driver_manager_library_path}
  */
  readonly odbcDriverManagerLibraryPath?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_b1`: odbc.ini and odbcsinst.ini location
  * 	- Service `hana_sap_hva_ecc`: odbc.ini and odbcsinst.ini location
  * 	- Service `hana_sap_hva_s4`: odbc.ini and odbcsinst.ini location
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#odbc_sys_ini_path Connector#odbc_sys_ini_path}
  */
  readonly odbcSysIniPath?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
  * 	- Service `azure_blob_storage`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
  * 	- Service `box`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
  * 	- Service `dropbox`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
  * 	- Service `ftp`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
  * 	- Service `gcs`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
  * 	- Service `google_drive`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
  * 	- Service `kinesis`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
  * 	- Service `s3`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as `fail` unless you are certain that you have undesirable, malformed data.
  * 	- Service `s3_compatible_storage`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as `fail` unless you are certain that you have undesirable, malformed data.
  * 	- Service `sftp`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
  * 	- Service `share_point`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
  * 	- Service `wasabi_cloud_storage`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as `fail` unless you are certain that you have undesirable, malformed data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#on_error Connector#on_error}
  */
  readonly onError?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `jira`: Whether the Jira instance is local or in cloud.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#on_premise Connector#on_premise}
  */
  readonly onPremise?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `gladly`: Your Gladly Organization Name.
  * 	- Service `statuspage`: Your Statuspage Organization ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#organization Connector#organization}
  */
  readonly organization?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_workfront`: Your Adobe Workfront organization domain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#organization_domain Connector#organization_domain}
  */
  readonly organizationDomain?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: Organization ID from the Service Account (JWT) credentials of your Adobe Project.
  * 	- Service `device_magic`: Your Device Magic organization ID.
  * 	- Service `integrate`: Your Integrate organization ID.
  * 	- Service `megaphone`: Your Megaphone organization ID.
  * 	- Service `productive`: Your Productive Organization ID.
  * 	- Service `salesforce_commerce_cloud`: The organization ID from Salesforce Commerce Cloud account.
  * 	- Service `sentry`: Your Sentry organization ID.
  * 	- Service `zoho_books`: Your Zoho Books Organization ID.
  * 	- Service `zoho_inventory`: Your Zoho Inventory organization ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#organization_id Connector#organization_id}
  */
  readonly organizationId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `brightpearl`: Your Brightpearl organization name.
  * 	- Service `confluence`: Your Confluence organization name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#organization_name Connector#organization_name}
  */
  readonly organizationName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apple_search_ads`: Organizations
  * 	- Service `snapchat_ads`: Specific organizations IDs to sync. Must be populated if `syncMode` is set to `SpecificOrganizations`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#organizations Connector#organizations}
  */
  readonly organizations?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_cosmos_for_mongo`: List of tables to be synced in packed mode; format:`db.table`(case-sensitive).
  * 	- Service `dynamodb`: List of tables to be synced in packed mode.
  * 	- Service `firebase`: Specific tables to sync. Must be populated if `packing_mode` is set to `SelectTablesForPackedMode`.
  * 	- Service `mongo`: List of tables to be synced in packed mode; format:`db.table`(case-sensitive).
  * 	- Service `mongo_sharded`: List of tables to be synced in packed mode; format:`db.table`(case-sensitive).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#packed_mode_tables Connector#packed_mode_tables}
  */
  readonly packedModeTables?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_cosmos_for_mongo`: Indicates the desired sync pack mode. Accepted values are `UsePackedModeOnly` and `UseUnpackedModeOnly`. `SelectTablesForPackedMode` is deprecated. 
  * 	- Service `firebase`: Whether to sync all tables in unpacked mode or specific tables in packed mode. Default value: `UseUnpackedModeOnly`.
  * 	- Service `klaviyo`: Packing mode for EVENT and PERSON tables.
  * 	- Service `mongo`: Whether to sync all tables in unpacked mode only, all tables in packed mode only, or specific tables in packed mode. Default value: `UseUnpackedModeOnly`.
  * 	- Service `mongo_sharded`: Whether to sync all tables in unpacked mode only, all tables in packed mode only, or specific tables in packed mode. Default value: `UseUnpackedModeOnly`.
  * 	- Service `optimizely`: Packing mode for conversion and decision tables.
  * 	- Service `sailthru`: Packing mode for LIST_STATE and USER tables.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#packing_mode Connector#packing_mode}
  */
  readonly packingMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_pages`: Specific pages to sync. Must be populated if `sync_mode` is set to `SpecificPages`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pages Connector#pages}
  */
  readonly pages?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `care_quality_commission`: Your Care Quality Commission partner code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#partner_code Connector#partner_code}
  */
  readonly partnerCode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `expensify`: Your Expensify partnerUserID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#partner_user_id Connector#partner_user_id}
  */
  readonly partnerUserId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `expensify`: Your Expensify partnerUserSecret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#partner_user_secret Connector#partner_user_secret}
  */
  readonly partnerUserSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_display_and_video_360`: The list of partners to include into a sync. This parameter only takes effect when `config_method` is set to `CREATE_NEW`.
  * 	- Service `the_trade_desk`: Specific Partner IDs to sync.  Must be populated if `syncMode` is set to `SpecificAccounts`.
  * 	- Service `walmart_dsp`: Specific Partner IDs to sync.  Must be populated if `syncMode` is set to `SpecificAccounts`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#partners Connector#partners}
  */
  readonly partners?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `qualtrics`: Pass Phrase
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pass_phrase Connector#pass_phrase}
  */
  readonly passPhrase?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snowflake_db`: In case private key is encrypted, you are required to enter passphrase that was used to encrypt the private key. The field can be specified if authentication type is `KEY_PAIR`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#passphrase Connector#passphrase}
  */
  readonly passphrase?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `absorb_lms`: Your Absorb LMS password.
  * 	- Service `adobe_commerce`: Your Adobe Commerce password.
  * 	- Service `akeneo`: Your Akeneo password.
  * 	- Service `alida`: Your Alida client secret.
  * 	- Service `anaplan`: Your Anaplan password. Must be populated if `auth_mode` is set to `Basic`.
  * 	- Service `appfigures`: Your Appfigures Password.
  * 	- Service `asset_panda`: Your Asset Panda password.
  * 	- Service `aurora`: The user's password.
  * 	- Service `aurora_postgres`: The user's password.
  * 	- Service `azure_cosmos_for_mongo`: Password used for source database authentication.
  * 	- Service `azure_postgres`: The user's password.
  * 	- Service `azure_sql_db`: The user's password.
  * 	- Service `azure_sql_managed_db`: The user's password.
  * 	- Service `boostr`: Your Boostr password.
  * 	- Service `brivo`: Your Brivo password.
  * 	- Service `cabcharge`: Your Cabcharge password.
  * 	- Service `ceridian_dayforce`: Your Ceridian Dayforce password.
  * 	- Service `cin7`: Your Cin7 API Key.
  * 	- Service `clarity`: The user's password.
  * 	- Service `cockroachdb`: The user's password.
  * 	- Service `collibra`: Your collibra password.
  * 	- Service `compliance_checkpoint`: Your Compliance Checkpoint account password.
  * 	- Service `contrast_security`: Your Contrast Security API Password.
  * 	- Service `db2i_hva`: The user's password.
  * 	- Service `db2i_sap_hva`: The user's password.
  * 	- Service `db2luw`: The user's password.
  * 	- Service `deposco`: Your Deposco password.
  * 	- Service `documentdb`: The user's password.
  * 	- Service `dynamics_365_fo`: The user's password.
  * 	- Service `ehr`: The user's password.
  * 	- Service `elastic_cloud`: The user's password.
  * 	- Service `epic_clarity`: The user's password.
  * 	- Service `es_self_hosted`: The user's password.
  * 	- Service `ftp`: FTP password.
  * 	- Service `globalmeet`: Your GlobalMeet Password.
  * 	- Service `google_cloud_mysql`: The user's password.
  * 	- Service `google_cloud_postgresql`: The user's password.
  * 	- Service `google_cloud_sqlserver`: The user's password.
  * 	- Service `green_power_monitor`: Your GreenPowerMonitor password.
  * 	- Service `guru`: Your Guru password.
  * 	- Service `hana_sap_hva_b1`: The user's password.
  * 	- Service `hana_sap_hva_ecc`: The user's password.
  * 	- Service `hana_sap_hva_ecc_netweaver`: The user's password.
  * 	- Service `hana_sap_hva_s4`: The user's password.
  * 	- Service `hana_sap_hva_s4_netweaver`: The user's password.
  * 	- Service `heroku_postgres`: The user's password.
  * 	- Service `hilti_ontrack`: Your Hilti On!Track password.
  * 	- Service `impact`: Your Impact Brand Account Token
  * 	- Service `integral_ad_science`: Your integral_ad_science password.
  * 	- Service `itunes_connect`: Your password
  * 	- Service `jamf`: Your Jamf password.
  * 	- Service `jira`: The Jira user's password.
  * 	- Service `khoros_care`: Your Khoros Care password.
  * 	- Service `kissmetrics`: Your Kissmetrics API Password.
  * 	- Service `klarna`: Your Klarna Password.
  * 	- Service `lessonly`: Your Lessonly password.
  * 	- Service `magento_mysql`: The user's password.
  * 	- Service `magento_mysql_rds`: The user's password.
  * 	- Service `maria`: The user's password.
  * 	- Service `maria_azure`: The user's password.
  * 	- Service `maria_rds`: The user's password.
  * 	- Service `marin`: The Marin user's password.
  * 	- Service `moloco`: Your Moloco account password.
  * 	- Service `mongo`: The user's password.
  * 	- Service `mongo_sharded`: The user's password.
  * 	- Service `myosh`: Your myosh password.
  * 	- Service `mysql`: The user's password.
  * 	- Service `mysql_azure`: The user's password.
  * 	- Service `mysql_rds`: The user's password.
  * 	- Service `netsuite_suiteanalytics`: The NetSuite user's password.
  * 	- Service `opendistro`: The user's password.
  * 	- Service `opensearch`: The user's password.
  * 	- Service `oracle`: The user's password.
  * 	- Service `oracle_business_intelligence_publisher`: The Oracle Business Intelligence user password.
  * 	- Service `oracle_ebs`: The user's password.
  * 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud user password.
  * 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud user password.
  * 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud user password.
  * 	- Service `oracle_hva`: The user's password.
  * 	- Service `oracle_rac`: The user's password.
  * 	- Service `oracle_rds`: The user's password.
  * 	- Service `oracle_sap_hva`: The user's password.
  * 	- Service `oracle_sap_hva_netweaver`: The user's password.
  * 	- Service `outbrain`: The Outbrain user's password.
  * 	- Service `pardot`: The Pardot user's password.
  * 	- Service `pardot_sandbox`: The Pardot user's password.
  * 	- Service `partnerize`: Your Partnerize account's password.
  * 	- Service `podio`: Your Podio account password.
  * 	- Service `postgres`: The user's password.
  * 	- Service `postgres_rds`: The user's password.
  * 	- Service `qmatic_data_connect`: Your Qmatic Data Connect password.
  * 	- Service `redshift_db`: The Redshift user's password.
  * 	- Service `revx`: Your RevX Password.
  * 	- Service `rtb_house`: Your RTB House password.
  * 	- Service `sap_business_by_design`: The SAP Business ByDesign password.
  * 	- Service `sap_hana`: Your SAP HANA password.
  * 	- Service `sap_s4hana`: Your SAP S/4 password.
  * 	- Service `scorm`: Your Scorm Secret Key.
  * 	- Service `servicenow`: Your account password.
  * 	- Service `sftp`: SFTP password.
  * 	- Service `shiphero`: Your ShipHero password.
  * 	- Service `shipstation`: Your ShipStation password.
  * 	- Service `shopware`: Your Shopware password.
  * 	- Service `skuvault`: Your SkuVault password.
  * 	- Service `smadex`: Your Smadex Password.
  * 	- Service `snowflake_db`: The Snowflake user's password.
  * 	- Service `splash`: Your Splash password.
  * 	- Service `splunk`: The Splunk user's password.
  * 	- Service `sql_server`: The user's password.
  * 	- Service `sql_server_hva`: The user's password.
  * 	- Service `sql_server_rds`: The user's password.
  * 	- Service `sql_server_sap_ecc_hva`: The user's password.
  * 	- Service `starrez`: Your StarRez API password
  * 	- Service `stickyio`: Your sticky.io password.
  * 	- Service `stylight`: Your Stylight Password.
  * 	- Service `sugarcrm`: Your SugarCRM password.
  * 	- Service `teamwork`: Your Teamwork password.
  * 	- Service `the_trade_desk`: The Trade Desk password. It is a part of the login credentials.
  * 	- Service `toggl_track`: Your Toggl Track Password
  * 	- Service `ukg_pro`: Your UKG Pro password.
  * 	- Service `ukg_pro_workforce_management`: Your UKG Pro Workforce Management password.
  * 	- Service `unicommerce`: Your uniware login password.
  * 	- Service `upland`: Your Upland Software Password.
  * 	- Service `uptempo`: Your Uptempo password.
  * 	- Service `veeva_vault`: Password
  * 	- Service `veevavault`: Your Veeva Vault password.
  * 	- Service `walmart_dsp`: Walmart DSP password. It is a part of the login credentials.
  * 	- Service `when_i_work`: Your When I Work password.
  * 	- Service `wherefour`: Your Wherefour password.
  * 	- Service `workday`: Workday password.
  * 	- Service `workday_adaptive`: User password
  * 	- Service `workday_financial_management`: Workday password.
  * 	- Service `workday_hcm`: Workday password.
  * 	- Service `xandr`: Your Xandr password.
  * 	- Service `yougov_brandindex`: Your YouGov BrandIndex password.
  * 	- Service `younium`: Your Younium password.
  * 	- Service `zuora`: The corresponding password for the API user.
  * 	- Service `zuora_sandbox`: The corresponding password for the API user.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#password Connector#password}
  */
  readonly password?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `github`: The `Personal Access Token` generated in Github.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pat Connector#pat}
  */
  readonly pat?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `tableau_source`: Your Tableau Source PAT Name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pat_name Connector#pat_name}
  */
  readonly patName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `tableau_source`: Your Tableau Source PAT Secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pat_secret Connector#pat_secret}
  */
  readonly patSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `jira`: A URL subdirectory where the Jira instance is working.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#path Connector#path}
  */
  readonly path?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `github`: The `Personal Access Tokens`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pats Connector#pats}
  */
  readonly pats?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Optional. All files in your search path matching this regular expression will be synced. This parameter is optional.
  * 	- Service `azure_blob_storage`: All files in your search path matching this regular expression will be synced.
  * 	- Service `box`: All files in your search path matching this regular expression will be synced.
  * 	- Service `dropbox`: All files in your search path matching this regular expression will be synced.
  * 	- Service `email`: All files in your search path matching this regular expression will be synced. We have discontinued this field, and will delete it by Oct 31, 2025.
  * 	- Service `ftp`: All files in your search path matching this regular expression will be synced.
  * 	- Service `gcs`: All files in your search path matching this regular expression will be synced. We have discontinued this field, and will delete it by August 31, 2025.
  * 	- Service `google_drive`: All files in your search path matching this regular expression will be synced. We have discontinued this field, and will delete it by August 31, 2025.
  * 	- Service `kinesis`: Optional. All files in your search path matching this regular expression will be synced. This parameter is optional.
  * 	- Service `s3`: All files in your search path matching this regular expression will be synced. We have discontinued this field, and will delete it by August 31, 2025.
  * 	- Service `sftp`: All files in your search path matching this regular expression will be synced. We have discontinued this field, and will delete it by August 31, 2025.
  * 	- Service `share_point`: All files in your search path matching this regular expression will be synced.
  * 	- Service `wasabi_cloud_storage`: All files in your search path matching this regular expression will be synced.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pattern Connector#pattern}
  */
  readonly pattern?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle`: Optional: Required only for containerized database.
  * 	- Service `oracle_ebs`: Optional: Required only for containerized database.
  * 	- Service `oracle_hva`: (Multi-tenant databases only) The database's PDB name. Exclude this parameter for single-tenant databases.
  * 	- Service `oracle_rac`: Optional: Required only for containerized database.
  * 	- Service `oracle_rds`: Optional: Required only for containerized database.
  * 	- Service `oracle_sap_hva`: (Multi-tenant databases only) The database's PDB name. Exclude this parameter for single-tenant databases.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pdb_name Connector#pdb_name}
  */
  readonly pdbName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apple_search_ads`: The contents of your PEM certificate file. Must be populated if `is_auth2_enabled` is set to `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pem_certificate Connector#pem_certificate}
  */
  readonly pemCertificate?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apple_search_ads`: The contents of your PEM secret key file. Must be populated if `is_auth2_enabled` is set to `true`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pem_private_key Connector#pem_private_key}
  */
  readonly pemPrivateKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: Per Interaction Dimensions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#per_interaction_dimensions Connector#per_interaction_dimensions}
  */
  readonly perInteractionDimensions?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cj_commission_detail`: Your CJ Commission Detail personal access token.
  * 	- Service `databricks_db`: Access Token
  * 	- Service `harvest`: Your Harvest Personal Access Token.
  * 	- Service `productive`: Your Productive personal access token.
  * 	- Service `totango`: Your Totango personal access token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#personal_access_token Connector#personal_access_token}
  */
  readonly personalAccessToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `circleci`: Your CircleCI Personal API token.
  * 	- Service `monday`: Your Monday.com Personal API Token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#personal_api_token Connector#personal_api_token}
  */
  readonly personalApiToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `ftp`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `gcs`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `s3`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `s3_compatible_storage`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `sftp`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `wasabi_cloud_storage`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pgp_pass_phrase Connector#pgp_pass_phrase}
  */
  readonly pgpPassPhrase?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `ftp`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `gcs`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `s3`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `s3_compatible_storage`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `sftp`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
  * 	- Service `wasabi_cloud_storage`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pgp_secret_key Connector#pgp_secret_key}
  */
  readonly pgpSecretKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Register the number on AppleId Account Page for 2FA
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#phone_number Connector#phone_number}
  */
  readonly phoneNumber?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `wrike`: Your Wrike Subscription Plan.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#plan Connector#plan}
  */
  readonly plan?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `justcall`: Your JustCall Plan Type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#plan_type Connector#plan_type}
  */
  readonly planType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: The port number.
  * 	- Service `aurora_postgres`: The port number.
  * 	- Service `aveva_pi`: Port number at which the AF Server is running
  * 	- Service `azure_postgres`: The port number.
  * 	- Service `azure_sql_db`: The port number.
  * 	- Service `azure_sql_managed_db`: The port number.
  * 	- Service `clarity`: The port number.
  * 	- Service `cockroachdb`: The port number.
  * 	- Service `databricks_db`: The port of your SQL warehouse.
  * 	- Service `db2i_hva`: The port number.
  * 	- Service `db2i_sap_hva`: The port number.
  * 	- Service `db2luw`: The port number.
  * 	- Service `documentdb`: Port of the primary node. Ignored if `hosts` value is provided.
  * 	- Service `dynamics_365_fo`: The port number.
  * 	- Service `ehr`: The port number.
  * 	- Service `elastic_cloud`: The port number.
  * 	- Service `epic_clarity`: The port number.
  * 	- Service `es_self_hosted`: The port number.
  * 	- Service `ftp`: FTP port.
  * 	- Service `google_cloud_mysql`: The port number.
  * 	- Service `google_cloud_postgresql`: The port number.
  * 	- Service `google_cloud_sqlserver`: The port number.
  * 	- Service `hana_sap_hva_b1`: The port number.
  * 	- Service `hana_sap_hva_ecc`: The port number.
  * 	- Service `hana_sap_hva_ecc_netweaver`: The port number.
  * 	- Service `hana_sap_hva_s4`: The port number.
  * 	- Service `hana_sap_hva_s4_netweaver`: The port number.
  * 	- Service `heroku_postgres`: The port number.
  * 	- Service `jira`: The Jira service host port.
  * 	- Service `magento_mysql`: The port number.
  * 	- Service `magento_mysql_rds`: The port number.
  * 	- Service `maria`: The port number.
  * 	- Service `maria_azure`: The port number.
  * 	- Service `maria_rds`: The port number.
  * 	- Service `mysql`: The port number.
  * 	- Service `mysql_azure`: The port number.
  * 	- Service `mysql_rds`: The port number.
  * 	- Service `netsuite_suiteanalytics`: The NetSuite service host port.
  * 	- Service `opendistro`: The port number.
  * 	- Service `opensearch`: The port number.
  * 	- Service `oracle`: The port number.
  * 	- Service `oracle_ebs`: The port number.
  * 	- Service `oracle_hva`: The port number.
  * 	- Service `oracle_rac`: The port number.
  * 	- Service `oracle_rds`: The port number.
  * 	- Service `oracle_sap_hva`: The port number.
  * 	- Service `postgres`: The port number.
  * 	- Service `postgres_rds`: The port number.
  * 	- Service `redshift_db`: Port number
  * 	- Service `sap_hana`: The SAP HANA port number.
  * 	- Service `sap_s4hana`: The SAP S/4 port number.
  * 	- Service `sftp`: SFTP port.
  * 	- Service `snowflake_db`: The Snowflake optional port number.
  * 	- Service `splunk`: The Splunk service host port.
  * 	- Service `sql_server`: The port number.
  * 	- Service `sql_server_hva`: The port number.
  * 	- Service `sql_server_rds`: The port number.
  * 	- Service `sql_server_sap_ecc_hva`: The port number.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#port Connector#port}
  */
  readonly port?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `linkedin_ads`: The time period to attribute conversions based on clicks. Default value: `DAY_30`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#post_click_attribution_window_size Connector#post_click_attribution_window_size}
  */
  readonly postClickAttributionWindowSize?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook`: The name of report of which connector will sync the data. [Possible prebuilt_report values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#prebuiltreport).
  * 	- Service `google_analytics`: The name of the Prebuilt Report from which the connector will sync the data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#prebuilt_report Connector#prebuilt_report}
  */
  readonly prebuiltReport?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cloudtrail`: If prefix is present when configuring the bucket.
  * 	- Service `aws_cost_report`: Folder path to the aws_cost_report files within the bucket.
  * 	- Service `aws_inventory`: The prefix if you used one when configuring the bucket.
  * 	- Service `azure_blob_storage`: All files and folders under this folder path will be searched for files to sync.
  * 	- Service `box`: All files and folders under this folder path will be searched for files to sync.
  * 	- Service `cloudfront`: The name of the CloudFront folder in the bucket.
  * 	- Service `dropbox`: All files and folders under this folder path will be searched for files to sync.
  * 	- Service `ftp`: All files and folders under this folder path will be searched for files to sync.
  * 	- Service `gcs`: All files and folders under this folder path will be searched for files to sync.
  * 	- Service `google_drive`: All files and folders under this folder path will be searched for files to sync, this can be the entire drive link or a folder URL
  * 	- Service `kinesis`: Folder path to the Kinesis files within the bucket.
  * 	- Service `marin`: Folder path to the Marin manifest file.
  * 	- Service `microsoft_dynamics_365_fo`: Folder name in which the exported dynamics 365 data resides.
  * 	- Service `s3`: All files and folders under this folder path will be searched for files to sync.
  * 	- Service `s3_compatible_storage`: All files and folders under this folder path will be searched for files to sync.
  * 	- Service `segment`: Folder path to the Segment files within the bucket. Must be populated if `sync_type` is set to `S3`.
  * 	- Service `sftp`: All files and folders under this folder path will be searched for files to sync.
  * 	- Service `share_point`: All files and folders under this folder path link will be searched for files to sync. This can be any shared folder link.
  * 	- Service `wasabi_cloud_storage`: All files and folders under this folder path will be searched for files to sync.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#prefix Connector#prefix}
  */
  readonly prefix?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `care_quality_commission`: Your Care Quality Commission primary key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#primary_key Connector#primary_key}
  */
  readonly primaryKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: Primary Keys
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#primary_keys Connector#primary_keys}
  */
  readonly primaryKeys?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `marketo`: Use BULK for both LEAD and ACTIITIES
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#prioritise_bulk_export_over_rest Connector#prioritise_bulk_export_over_rest}
  */
  readonly prioritiseBulkExportOverRest?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `purple_dot`: Your PurpleDot Private access token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#private_access_token Connector#private_access_token}
  */
  readonly privateAccessToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `absorb_lms`: Your Absorb LMS REST API private key.
  * 	- Service `adobe_analytics`: The complete contents of your private key file including the start and end tags (`----BEGIN PRIVATE KEY----` to `----END PRIVATE KEY----`).
  * 	- Service `adp_workforce_now`: Private Key.
  * 	- Service `anaplan`: The contents of your private key file. Must be populated if `auth_mode` is set to `Certificate`.
  * 	- Service `apple_search_ads`: The contents of your secret key file. Must be populated if `is_auth2_enabled` is set to `false`.
  * 	- Service `braintree`: The contents of your secret key file.
  * 	- Service `braintree_sandbox`: The contents of your secret key file.
  * 	- Service `itunes_connect`: Your Private Key
  * 	- Service `netsuite_suiteanalytics`: Private Key
  * 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud private key.
  * 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud private key.
  * 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud private key.
  * 	- Service `qualtrics`: Your private key
  * 	- Service `salesforce`: Provide content of the `.key` private key (only when authentication_method = `ADVANCED`).
  * 	- Service `salesforce_sandbox`: Provide content of the `.key` private key (only when authentication_method = `ADVANCED`).
  * 	- Service `snowflake_db`: Private access key.  The field should be specified if authentication type is `KEY_PAIR`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#private_key Connector#private_key}
  */
  readonly privateKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `eventbrite`: Your Eventbrite private token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#private_token Connector#private_token}
  */
  readonly privateToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `webconnex`: Your Webconnex product.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#product Connector#product}
  */
  readonly product?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_ads`: Specific User Profile IDs to sync. Must be populated if `sync_mode` is set to `SpecificProfiles`.
  * 	- Service `google_analytics`: Specific User Profile IDs to sync.  Must be populated if `syncMode` is set to `SpecificAccounts`.
  * 	- Service `google_analytics_mcf`: Specific User Profile IDs to sync.  Must be populated if `sync_mode` is set to `SPECIFIC_ACCOUNTS`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#profiles Connector#profiles}
  */
  readonly profiles?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_dsp`: your Amazon DSP profiles pass it inside an Array list.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#profiles_amazon_dsp Connector#profiles_amazon_dsp}
  */
  readonly profilesAmazonDsp?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `rollbar`: Your Rollbar project access token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#project_access_token Connector#project_access_token}
  */
  readonly projectAccessToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `bigquery_db`: BigQuery project ID
  * 	- Service `google_analytics_360`: The project ID.
  * 	- Service `google_analytics_4_export`: The Project ID.
  * 	- Service `mixpanel`: Project ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#project_id Connector#project_id}
  */
  readonly projectId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sentry`: Your Sentry project IDs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#project_ids Connector#project_ids}
  */
  readonly projectIds?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `commercetools`: Your commercetools project key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#project_key Connector#project_key}
  */
  readonly projectKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `asana`: Specific Project IDs to sync. Must be populated if `syncMode` is set to `SpecificProjects`.
  * 	- Service `jira`: Specific projects to sync. Must be populated if `syncMode` is set to `CUSTOM`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#projects Connector#projects}
  */
  readonly projects?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics_4`: The array of strings in the `properties/{id}` format where `id` is a Google Analytics 4 property identifier. Must be populated if `sync_mode` is set to `SPECIFIC_ACCOUNTS`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#properties Connector#properties}
  */
  readonly properties?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cloudbeds`: Your Cloudbeds property IDs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#property_id Connector#property_id}
  */
  readonly propertyId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: Public Key
  * 	- Service `aurora_postgres`: Public Key
  * 	- Service `azure_blob_storage`: Public key generated by Fivetran to be copied into the host-machine's authorized keys file.
  * 	- Service `azure_cosmos_for_mongo`: Public Key
  * 	- Service `azure_postgres`: Public Key
  * 	- Service `azure_service_bus`: Public key generated by Fivetran to be copied into the host-machine's authorized keys file.
  * 	- Service `azure_sql_db`: Public Key.
  * 	- Service `azure_sql_managed_db`: Public Key.
  * 	- Service `braintree`: The contents of your PEM certificate file.
  * 	- Service `braintree_sandbox`: The contents of your PEM certificate file.
  * 	- Service `clarity`: Public Key.
  * 	- Service `cockroachdb`: Public Key
  * 	- Service `db2i_hva`: Public Key
  * 	- Service `db2i_sap_hva`: Public Key
  * 	- Service `documentdb`: Public Key
  * 	- Service `dynamics_365_fo`: Public Key.
  * 	- Service `ehr`: Public Key.
  * 	- Service `elastic_cloud`: Public Key
  * 	- Service `es_self_hosted`: Public Key
  * 	- Service `google_cloud_mysql`: Public Key
  * 	- Service `google_cloud_postgresql`: Public Key
  * 	- Service `google_cloud_sqlserver`: Public Key.
  * 	- Service `hana_sap_hva_b1`: Public Key
  * 	- Service `hana_sap_hva_ecc`: Public Key
  * 	- Service `hana_sap_hva_ecc_netweaver`: Public Key
  * 	- Service `hana_sap_hva_s4`: Public Key
  * 	- Service `hana_sap_hva_s4_netweaver`: Public Key
  * 	- Service `heroku_postgres`: Public Key
  * 	- Service `magento_mysql`: Public Key
  * 	- Service `magento_mysql_rds`: Public Key
  * 	- Service `maria`: Public Key
  * 	- Service `maria_azure`: Public Key
  * 	- Service `maria_rds`: Public Key
  * 	- Service `mongo`: Public Key
  * 	- Service `mongo_sharded`: Public Key
  * 	- Service `mysql`: Public Key
  * 	- Service `mysql_azure`: Public Key
  * 	- Service `mysql_rds`: Public Key
  * 	- Service `opendistro`: Public Key
  * 	- Service `opensearch`: Public Key
  * 	- Service `oracle`: Public Key
  * 	- Service `oracle_ebs`: Public Key
  * 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud public key.
  * 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud public key.
  * 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud public key.
  * 	- Service `oracle_hva`: Public Key
  * 	- Service `oracle_rac`: Public Key
  * 	- Service `oracle_rds`: Public Key
  * 	- Service `oracle_sap_hva`: Public Key
  * 	- Service `partnerstack_vendor`: Your PartnerStack Vendor Public key.
  * 	- Service `postgres`: Public Key
  * 	- Service `postgres_rds`: Public Key
  * 	- Service `sap_hana`: Public Key
  * 	- Service `sap_s4hana`: Public Key
  * 	- Service `sftp`: Public Key
  * 	- Service `sql_server`: Public Key.
  * 	- Service `sql_server_hva`: Public Key.
  * 	- Service `sql_server_rds`: Public Key.
  * 	- Service `sql_server_sap_ecc_hva`: Public Key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#public_key Connector#public_key}
  */
  readonly publicKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora_postgres`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
  * 	- Service `azure_postgres`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
  * 	- Service `google_cloud_postgresql`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
  * 	- Service `heroku_postgres`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
  * 	- Service `postgres`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
  * 	- Service `postgres_rds`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#publication_name Connector#publication_name}
  */
  readonly publicationName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `skimlinks`: Your Skimlinks publisher ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#publisher_id Connector#publisher_id}
  */
  readonly publisherId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `outbrain`: Include or ignore results from archived campaigns
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#pull_archived_campaigns Connector#pull_archived_campaigns}
  */
  readonly pullArchivedCampaigns?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#python_version Connector#python_version}
  */
  readonly pythonVersion?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_display_and_video_360`: The ID of the query whose configuration you want to reuse. This is a required parameter when `config_method` is set to `REUSE_EXISTING`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#query_id Connector#query_id}
  */
  readonly queryId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `alchemer`: Your Alchemer API key.
  * 	- Service `birdeye`: Your Birdeye query-param-value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#query_param_value Connector#query_param_value}
  */
  readonly queryParamValue?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `bigquery_db`: Specify a different project ID to account for quota and billing of Fivetran query workload
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#quota_project_id Connector#quota_project_id}
  */
  readonly quotaProjectId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
  * 	- Service `box`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
  * 	- Service `dropbox`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
  * 	- Service `email`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
  * 	- Service `ftp`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
  * 	- Service `gcs`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
  * 	- Service `google_drive`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
  * 	- Service `s3`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
  * 	- Service `s3_compatible_storage`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
  * 	- Service `sftp`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
  * 	- Service `share_point`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#quote_char Connector#quote_char}
  */
  readonly quoteChar?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as a quote character.
  * 	- Service `box`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
  * 	- Service `dropbox`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
  * 	- Service `email`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
  * 	- Service `ftp`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
  * 	- Service `gcs`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
  * 	- Service `google_drive`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
  * 	- Service `s3`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
  * 	- Service `s3_compatible_storage`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
  * 	- Service `sftp`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
  * 	- Service `share_point`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#quote_character_enabled Connector#quote_character_enabled}
  */
  readonly quoteCharacterEnabled?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `toggl_track`: Your Toggl Track plan type.
  * 	- Service `vimeo`: Your Vimeo rate limit plan.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#rate_limit_plan Connector#rate_limit_plan}
  */
  readonly rateLimitPlan?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `ironsource`: Your Ironsource `Client Secret`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#refresh_token Connector#refresh_token}
  */
  readonly refreshToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pinterest_ads`: The expiration date of the refresh token. Unix timestamp in seconds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#refresh_token_expires_at Connector#refresh_token_expires_at}
  */
  readonly refreshTokenExpiresAt?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `algolia`: Your Algolia analytics region.
  * 	- Service `alida`: Your Alida region.
  * 	- Service `amazon_ads`: The region used by the Amazon Ads profile.
  * 	- Service `amazon_selling_partner`: The region used by the Amazon Selling Partner profile.
  * 	- Service `anaplan`: Your Anaplan account region
  * 	- Service `atlassian_ops_genie`: Your company's Osgenie region (usually **company**.opsgenie.com)
  * 	- Service `awin`: Your Awin Region.
  * 	- Service `aws_lambda`: The AWS region code for the DynamoDB instance.
  * 	- Service `bigin_by_zoho_crm`: Your Bigin by Zoho CRM Region
  * 	- Service `brightflag`: Your Brightflag region.
  * 	- Service `concur`: The region.
  * 	- Service `cvent`: Your Cvent region.
  * 	- Service `everflow`: Your Everflow region.
  * 	- Service `exact_online`: Your Exact Online region.
  * 	- Service `getfeedback`: Your GetFeedback region.
  * 	- Service `happyfox`: Your HappyFox region.
  * 	- Service `keypay`: Your KeyPay region.
  * 	- Service `medallia_agile_research`: Your Medallia Agile region.
  * 	- Service `messagebird`: Your MessageBird Account region.
  * 	- Service `mixpanel`: Data Region
  * 	- Service `navan`: Your Navan region.
  * 	- Service `on24`: Your ON24 region.
  * 	- Service `pendo`: The Pendo account region.
  * 	- Service `proofpoint_security_awareness`: Your Proofpoint Security Awareness Region.
  * 	- Service `ringover`: Your Ringover region.
  * 	- Service `samsara`: The region of your Samsara account. For instance, if your region is `EUROPE`, provide `eu.samsara` in the `Region` field. If your region is not in Europe, provide `samsara`.
  * 	- Service `snyk`: Your Snyk region.
  * 	- Service `talkdesk`: Your Talkdesk region (".com",".eu","ca.com")
  * 	- Service `totango`: Your Totango region.
  * 	- Service `transcend`: Your Transcend region.
  * 	- Service `vonage_contact_center`: Your Vonage Contact Center region.
  * 	- Service `wasabi_cloud_storage`: The Wasabi Cloud Storage bucket region. Required for connector creation. Default value: `US_EAST_1`.
  * 	- Service `workday_strategic_sourcing`: Your Workday Strategic Sourcing Region.
  * 	- Service `xray`: Your Xray region.
  * 	- Service `zoho_books`: Your Zoho Books application host region.
  * 	- Service `zoho_campaigns`: Your Zoho Campaigns application host region.
  * 	- Service `zoho_desk`: Your Zoho Desk domain.
  * 	- Service `zoho_inventory`: Your Zoho Inventory application host region.
  * 	- Service `zoho_recruit`: Your Zoho Recruit region.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#region Connector#region}
  */
  readonly region?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_attribution`: Your Amazon Attribution API URL region.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#region_api_url Connector#region_api_url}
  */
  readonly regionApiUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_attribution`: Your Amazon Attribution auth URL region.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#region_auth_url Connector#region_auth_url}
  */
  readonly regionAuthUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_attribution`: Your Amazon Attribution token URL region.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#region_token_url Connector#region_token_url}
  */
  readonly regionTokenUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `playvox_workforce_management`: Your Playvox Workforce Management region URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#region_url Connector#region_url}
  */
  readonly regionUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
  * 	- Service `google_cloud_mysql`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
  * 	- Service `magento_mysql`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
  * 	- Service `magento_mysql_rds`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
  * 	- Service `maria`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
  * 	- Service `maria_azure`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
  * 	- Service `maria_rds`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
  * 	- Service `mysql`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
  * 	- Service `mysql_azure`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
  * 	- Service `mysql_rds`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#replica_id Connector#replica_id}
  */
  readonly replicaId?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora_postgres`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
  * 	- Service `azure_postgres`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
  * 	- Service `google_cloud_postgresql`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
  * 	- Service `heroku_postgres`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
  * 	- Service `postgres`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
  * 	- Service `postgres_rds`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#replication_slot Connector#replication_slot}
  */
  readonly replicationSlot?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: You can select only one Floodlight Configuration ID per account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_configuration_ids Connector#report_configuration_ids}
  */
  readonly reportConfigurationIds?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: This is to select report format from JSON and CSV. By default, report format is JSON.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_format_type Connector#report_format_type}
  */
  readonly reportFormatType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pinterest_ads`: Granularity at which reports will be 
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_granularity Connector#report_granularity}
  */
  readonly reportGranularity?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `rakutenadvertising`: Your Rakuten Advertising report keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_keys Connector#report_keys}
  */
  readonly reportKeys?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adyen`: Your Report Service API key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_service_api_key Connector#report_service_api_key}
  */
  readonly reportServiceApiKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_suites Connector#report_suites}
  */
  readonly reportSuites?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `criteo`: Report Timezone
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_timezone Connector#report_timezone}
  */
  readonly reportTimezone?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adroll`: The report type you want. Default value: `ALL_ADS`.
  * 	- Service `double_click_campaign_manager`: Type of reporting data to sync. Default value: `STANDARD`.
  * 	- Service `google_display_and_video_360`: The type of the report to create. This is a required parameter when `config_method` is set to `CREATE_NEW`.
  * 	- Service `youtube_analytics`: The name of report of which connector will sync the data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_type Connector#report_type}
  */
  readonly reportType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: URL for a live custom report.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_url Connector#report_url}
  */
  readonly reportUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `linkedin_ads`: Specific analytics reports to sync. Must be populated if adAnalytics is set to 'SpecificReports'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#reports_linkedin_ads Connector#reports_linkedin_ads}
  */
  readonly reportsLinkedinAds?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `github`: Specific Repository IDs to sync. Must be populated if `syncMode` is set to `SpecificRepositories`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#repositories Connector#repositories}
  */
  readonly repositories?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cosmos`: A token that provides access to a specific Azure Cosmos DB resource. Required for the `RESOURCE_TOKEN` data access method.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#resource_token Connector#resource_token}
  */
  readonly resourceToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `dynamics_365`: URL at which Dynamics 365 is accessed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#resource_url Connector#resource_url}
  */
  readonly resourceUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pardot`: The number of API calls that the connector should not exceed in a day. Default REST API call limit per day: 150,000.
  * 	- Service `pardot_sandbox`: The number of API calls that the connector should not exceed in a day. Default REST API call limit per day: 150,000.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#rest_api_limit Connector#rest_api_limit}
  */
  readonly restApiLimit?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_ecc_netweaver`: Directory path containing the SAP NetWeaver RFC SDK library files.
  * 	- Service `hana_sap_hva_s4_netweaver`: Directory path containing the SAP NetWeaver RFC SDK library files.
  * 	- Service `oracle_sap_hva_netweaver`: Directory path containing the SAP NetWeaver RFC SDK library files.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#rfc_library_path Connector#rfc_library_path}
  */
  readonly rfcLibraryPath?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `netsuite_suiteanalytics`: The NetSuite Role ID for connection.
  * 	- Service `snowflake_db`: Snowflake Connector role name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#role Connector#role}
  */
  readonly role?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: S3 Role ARN
  * 	- Service `aurora`: The ARN of the IAM role with RDS permissions. Required if the authentication method is `AWS_IAM` in the SaaS Deployment model.
  * 	- Service `aws_cloudtrail`: The Role ARN required for authentication.
  * 	- Service `aws_cost`: The Role ARN required for authentication.
  * 	- Service `aws_cost_report`: The Role ARN required for authentication.
  * 	- Service `aws_inventory`: The Role ARN required for authentication.
  * 	- Service `aws_lambda`: The Role ARN required for authentication.
  * 	- Service `aws_msk`: If `sasl_mechanism` is set to `IAM`, enter your Role ARN
  * 	- Service `cloudfront`: The Role ARN required for authentication.
  * 	- Service `dynamodb`: Role ARN
  * 	- Service `heap`: The Role ARN required for authentication.
  * 	- Service `kinesis`: The Role ARN required for authentication.
  * 	- Service `magento_mysql_rds`: The ARN of the IAM role with RDS permissions. Required if the authentication method is `AWS_IAM` in the SaaS Deployment model.
  * 	- Service `maria_rds`: The ARN of the IAM role with RDS permissions. Required if the authentication method is `AWS_IAM` in the SaaS Deployment model.
  * 	- Service `mysql_rds`: The ARN of the IAM role with RDS permissions. Required if the authentication method is `AWS_IAM` in the SaaS Deployment model.
  * 	- Service `s3`: The Role ARN required for authentication. Required for connector creation when syncing using private bucket.
  * 	- Service `segment`: The Role ARN required for authentication. Must be populated if `sync_type` is set to `S3`.
  * 	- Service `sql_server`: The ARN of the IAM role that has access to the S3 bucket.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#role_arn Connector#role_arn}
  */
  readonly roleArn?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: Rollback window
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#rollback_window Connector#rollback_window}
  */
  readonly rollbackWindow?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `bingads`: A period of time in days during which a conversion is recorded.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#rollback_window_size Connector#rollback_window_size}
  */
  readonly rollbackWindowSize?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_fusion_field_service`: Your Oracle Fusion Field Service rootresourceId.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#root_resource_id Connector#root_resource_id}
  */
  readonly rootResourceId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Your S3 user export bucket. Required if `AWS_S3` is the `export_storage_type`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#s3_export_bucket Connector#s3_export_bucket}
  */
  readonly s3ExportBucket?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: This is the same as your `group_id`, used if `export_storage_type` is `AWS_S3`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#s3_export_external_id Connector#s3_export_external_id}
  */
  readonly s3ExportExternalId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Your S3 user export folder name. Required if `AWS_S3` is the `export_storage_type`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#s3_export_folder Connector#s3_export_folder}
  */
  readonly s3ExportFolder?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: The Role ARN required for authentication required if `AWS_S3` is the `export_storage_type`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#s3_export_role_arn Connector#s3_export_role_arn}
  */
  readonly s3ExportRoleArn?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: The S3 bucket name.
  * 	- Service `braze`: Your S3 bucket required if `AWS_S3` is the `cloud_storage_type`
  * 	- Service `sailthru`: Name of the bucket configured to receive sailthru connect data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#s3bucket Connector#s3bucket}
  */
  readonly s3Bucket?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: This is the same as your `group_id`, used for authentication along with the `role_arn` required if `AWS_S3` is the `cloud_storage_type`
  * 	- Service `sailthru`: The external ID is a string that designates who can assume the role.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#s3external_id Connector#s3external_id}
  */
  readonly s3ExternalId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `braze`: Your S3 folder name required if `AWS_S3` is the `cloud_storage_type`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#s3folder Connector#s3folder}
  */
  readonly s3Folder?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sailthru`: Copy and use this to configure Sailthru Connect in your sailthru account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#s3path Connector#s3path}
  */
  readonly s3Path?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: The Role ARN required for authentication.
  * 	- Service `braze`: The Role ARN required for authentication required if `AWS_S3` is the `cloud_storage_type`
  * 	- Service `sailthru`: Role ARN of the IAM role created for Fivetran.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#s3role_arn Connector#s3role_arn}
  */
  readonly s3RoleArn?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Whether to sync all sales accounts or specific sales accounts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sales_account_sync_mode Connector#sales_account_sync_mode}
  */
  readonly salesAccountSyncMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Specific sales account to sync. Must be populated if `sales_account_sync_mode` is set to `SpecificSalesAccounts`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sales_accounts Connector#sales_accounts}
  */
  readonly salesAccounts?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pardot`: The Pardot user's Salesforce SSO Account Security Token.
  * 	- Service `pardot_sandbox`: The Pardot user's Salesforce SSO Account Security Token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#salesforce_security_token Connector#salesforce_security_token}
  */
  readonly salesforceSecurityToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `gocardless`: Your GoCardless account type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sandbox_account Connector#sandbox_account}
  */
  readonly sandboxAccount?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `db2i_hva`: The SAP schema.
  * 	- Service `db2i_sap_hva`: SAP schema name.
  * 	- Service `sql_server_hva`: SAP Schema Name. Required only for High-Volume Agent SAP ECC connector.
  * 	- Service `sql_server_sap_ecc_hva`: SAP Schema Name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sap_schema Connector#sap_schema}
  */
  readonly sapSchema?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_b1`: The schema name where the HANA tables reside.
  * 	- Service `hana_sap_hva_ecc`: The Hana schema name where the SAP tables reside.
  * 	- Service `hana_sap_hva_ecc_netweaver`: The Hana schema name where the SAP tables reside.
  * 	- Service `hana_sap_hva_s4`: The Hana schema name where the SAP tables reside.
  * 	- Service `hana_sap_hva_s4_netweaver`: The Hana schema name where the SAP tables reside.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sap_source_schema Connector#sap_source_schema}
  */
  readonly sapSourceSchema?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_sap_hva`: The Oracle schema name where the SAP tables reside.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sap_user Connector#sap_user}
  */
  readonly sapUser?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: SASL Mechanism
  * 	- Service `aws_msk`: If `security_protocol` is set to `SASL`, enter the SASL Mechanism
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sasl_mechanism Connector#sasl_mechanism}
  */
  readonly saslMechanism?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: API Key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sasl_plain_key Connector#sasl_plain_key}
  */
  readonly saslPlainKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: API Secret
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sasl_plain_secret Connector#sasl_plain_secret}
  */
  readonly saslPlainSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: API Key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sasl_scram256_key Connector#sasl_scram256_key}
  */
  readonly saslScram256Key?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: API Secret
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sasl_scram256_secret Connector#sasl_scram256_secret}
  */
  readonly saslScram256Secret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: API Key
  * 	- Service `aws_msk`: If `sasl_mechanism` is set to `SCRAM_SHA_512`, enter your secret's `saslScram512Key`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sasl_scram512_key Connector#sasl_scram512_key}
  */
  readonly saslScram512Key?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: API Secret
  * 	- Service `aws_msk`: If `sasl_mechanism` is set to `SCRAM_SHA_512`, enter your secret's `saslScram512Key`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sasl_scram512_secret Connector#sasl_scram512_secret}
  */
  readonly saslScram512Secret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Schema Registry Credentials source
  * 	- Service `aws_msk`: Schema Registry Credentials source
  * 	- Service `confluent_cloud`: Schema Registry Credentials source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#schema_registry_credentials_source Connector#schema_registry_credentials_source}
  */
  readonly schemaRegistryCredentialsSource?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Schema Registry Key
  * 	- Service `aws_msk`: Schema Registry Key
  * 	- Service `azure_service_bus`: The key used to access the schema registry. Required for the `avro` and `protobuf` message types
  * 	- Service `confluent_cloud`: Schema Registry Key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#schema_registry_key Connector#schema_registry_key}
  */
  readonly schemaRegistryKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Schema Registry Secret
  * 	- Service `aws_msk`: Schema Registry Secret
  * 	- Service `azure_service_bus`: The secret used to access the schema registry. Required for the `avro` and `protobuf` message types
  * 	- Service `confluent_cloud`: Schema Registry Secret
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#schema_registry_secret Connector#schema_registry_secret}
  */
  readonly schemaRegistrySecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Your schema registry URLs
  * 	- Service `aws_msk`: Your schema registry URLs
  * 	- Service `azure_service_bus`: The comma-separated list of schema registry servers in the `server:port` format
  * 	- Service `confluent_cloud`: Your schema registry URLs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#schema_registry_urls Connector#schema_registry_urls}
  */
  readonly schemaRegistryUrls?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `ebay`: Your eBay scopes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#scope Connector#scope}
  */
  readonly scope?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cornerstone`: Your Cornerstone scopes.
  * 	- Service `fortnox`: Your Fortnox app scopes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#scopes Connector#scopes}
  */
  readonly scopes?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: Specific Seats to sync. Must be populated if `sync_mode_seat` is set to `SPECIFIC_SEATS`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#seats Connector#seats}
  */
  readonly seats?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appcues`: Your Appcues Secret.
  * 	- Service `buildium`: Your Buildium API secret.
  * 	- Service `canvas_data_2_by_instructure`: Your Canvas Data 2 by Instructure secret.
  * 	- Service `loopio`: Your Loopio Secret.
  * 	- Service `mode`: Your Mode Secret.
  * 	- Service `playvox_workforce_management`: Your Playvox Workforce Management client secret.
  * 	- Service `tiktok_organic`: The secret of the app registered in your TikTok developer account.
  * 	- Service `twilio`: The Twilio API secret
  * 	- Service `uservoice`: The UserVoice API secret.
  * 	- Service `venminder`: Your Venminder secret.
  * 	- Service `vts`: Your VTS secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#secret Connector#secret}
  */
  readonly secret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `validio`: Your Validio secret access key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#secret_access_key Connector#secret_access_key}
  */
  readonly secretAccessKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `afterpay`: Your Afterpay Secret Key.
  * 	- Service `appsflyer`: Your AWS secret key.
  * 	- Service `bigquery_db`: Private key of the customer service account. If specified, your service account will be used to process the data instead of the Fivetran-managed service account.
  * 	- Service `checkr`: Your Checkr secret key.
  * 	- Service `ezofficeinventory`: Your EZOfficeInventory API secret key.
  * 	- Service `gcs`: Your JSON Private Key. Used to authorize service account. Required if you use a Custom Service Account to authenticate the storage bucket.
  * 	- Service `ironsource`: Your Ironsource `Client ID`.
  * 	- Service `line_ads`: Your LINE Ads secret key.
  * 	- Service `mailjet`: Your Mailjet secret key.
  * 	- Service `partnerstack_vendor`: Your PartnerStack Vendor Secret key.
  * 	- Service `paypal`: `Client Secret` of your PayPal client application.
  * 	- Service `paypal_sandbox`: `Client Secret` of your PayPal client application.
  * 	- Service `phoenix_ads`: Your Phoenix Ads Secret key.
  * 	- Service `retailnext`: Your RetailNext secret key.
  * 	- Service `statsig`: Your Statsig secret key.
  * 	- Service `yotpo`: Your Yotpo Secret key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#secret_key Connector#secret_key}
  */
  readonly secretKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_lambda`: The secrets that should be passed to the function at runtime.
  * 	- Service `azure_function`: The secrets that should be passed to the function at runtime.
  * 	- Service `google_cloud_function`: The secrets that should be passed to the function at runtime.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#secrets Connector#secrets}
  */
  readonly secrets?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Security protocol for Kafka interaction.
  * 	- Service `aws_msk`: The security protocol for Kafka interaction.
  * 	- Service `confluent_cloud`: Security protocol for Confluent Cloud interaction.
  * 	- Service `heroku_kafka`: Security protocol for Heroku Kafka interaction.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#security_protocol Connector#security_protocol}
  */
  readonly securityProtocol?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_analytics`: A segment is a subset of your Analytics data that is made up of one or more non-destructive filters (filters that do not alter the underlying data). Those filters isolate subsets of users, sessions, and hits.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#segments Connector#segments}
  */
  readonly segments?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `salesforce_marketing_cloud`: Select the event types to be synced.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#selected_event_types Connector#selected_event_types}
  */
  readonly selectedEventTypes?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `anaplan`: The list of export IDs in the format `workspace_id_model_id_export_id` that the connector will sync. Must be populated if `sync_mode` is set to `SpecificExports`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#selected_exports Connector#selected_exports}
  */
  readonly selectedExports?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `box`: Cell reference that will be used to sync all contiguous data starting from the top-left cell in all the spreadsheets matching the name. Cell reference is in the `'sheetName'!startColumnNamestartRowName` format.
  * 	- Service `dropbox`: Cell reference that will be used to sync all contiguous data starting from the top-left cell in all the spreadsheets matching the name. Cell reference is in the `'sheetName'!startColumnNamestartRowName` format.
  * 	- Service `email`: Cell reference that will be used to sync all contiguous data starting from the top-left cell in all the spreadsheets matching the name. Cell reference is in the `'sheetName'!startColumnNamestartRowName` format.
  * 	- Service `s3`: Cell reference that will be used to sync all contiguous data starting from the top-left cell in all the spreadsheets matching the name. Cell reference is in the `'sheetName'!startColumnNamestartRowName` format.
  * 	- Service `sftp`: Cell reference that will be used to sync all contiguous data starting from the top-left cell in all the spreadsheets matching the name. Cell reference is in the `'sheetName'!startColumnNamestartRowName` format.
  * 	- Service `share_point`: Cell reference that will be used to sync all contiguous data starting from the top-left cell in all the spreadsheets matching the name. Cell reference is in the `'sheetName'!startColumnNamestartRowName` format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#selected_range Connector#selected_range}
  */
  readonly selectedRange?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sage_intacct`: Your Sender ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sender_id Connector#sender_id}
  */
  readonly senderId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sage_intacct`: Your Sender Password
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sender_password Connector#sender_password}
  */
  readonly senderPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `castor_edc`: Your Castor EDC server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#server Connector#server}
  */
  readonly server?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `tableau_source`: Your Tableau Source server address.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#server_address Connector#server_address}
  */
  readonly serverAddress?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `clockify`: Your Clockify server region.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#server_region Connector#server_region}
  */
  readonly serverRegion?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_business_intelligence_publisher`: The Oracle Business Intelligence Instance URL.
  * 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud Instance URL.
  * 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud Instance URL.
  * 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud Instance URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#server_url Connector#server_url}
  */
  readonly serverUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `myosh`: Your myosh server variable.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#server_variable Connector#server_variable}
  */
  readonly serverVariable?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Comma-separated list of Kafka servers in the format `server:port`.
  * 	- Service `aws_msk`: Comma-separated list of Kafka servers in the `server:port` format.
  * 	- Service `confluent_cloud`: Comma-separated list of Confluent Cloud servers in the format `server:port`.
  * 	- Service `heroku_kafka`: Comma-separated list of Heroku Kafka servers in the format `server:port`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#servers Connector#servers}
  */
  readonly servers?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_drive`: Share the folder with the email address
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#service_account Connector#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_cloud_function`: Provide Invoker role to this service account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#service_account_email Connector#service_account_email}
  */
  readonly serviceAccountEmail?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `firebase`: The contents of your service account key file. Required for authentication.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#service_account_key Connector#service_account_key}
  */
  readonly serviceAccountKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `mixpanel`: Service Account Secret
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#service_account_secret Connector#service_account_secret}
  */
  readonly serviceAccountSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `mixpanel`: Service Account Username
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#service_account_username Connector#service_account_username}
  */
  readonly serviceAccountUsername?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `dsv`: A base64 encoded variant of your `username:password` string. Required for authentication.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#service_authentication Connector#service_authentication}
  */
  readonly serviceAuthentication?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_ecc_netweaver`: Unique identifier sapsid of the SAP system. This field is displayed only when the REMOTE SERVICE IDENTIFICATION is set to Service.
  * 	- Service `hana_sap_hva_s4_netweaver`: Unique identifier sapsid of the SAP system. This field is displayed only when the REMOTE SERVICE IDENTIFICATION is set to Service.
  * 	- Service `walmart_marketplace`: Your Walmart Marketplace service name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#service_name Connector#service_name}
  */
  readonly serviceName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: SFTP host.
  * 	- Service `salesforce_marketing_cloud`: Host
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sftp_host Connector#sftp_host}
  */
  readonly sftpHost?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: Log in with key pair or password
  * 	- Service `salesforce_marketing_cloud`: Set this field if you use a key pair for logging into your SFTP server. Don't set it if you use a username and password
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sftp_is_key_pair Connector#sftp_is_key_pair}
  */
  readonly sftpIsKeyPair?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: SFTP password required if sftp_is_key_pair is false
  * 	- Service `salesforce_marketing_cloud`: Password
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sftp_password Connector#sftp_password}
  */
  readonly sftpPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: SFTP port.
  * 	- Service `salesforce_marketing_cloud`: Port
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sftp_port Connector#sftp_port}
  */
  readonly sftpPort?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: Public Key
  * 	- Service `salesforce_marketing_cloud`: Public Key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sftp_public_key Connector#sftp_public_key}
  */
  readonly sftpPublicKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: SFTP user.
  * 	- Service `salesforce_marketing_cloud`: User
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sftp_user Connector#sftp_user}
  */
  readonly sftpUser?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `share_point`: Your SharePoint folder URL. You can find the folder URL by following the steps mentioned [here](https://fivetran.com/docs/connectors/files/share-point/setup-guide).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#share_url Connector#share_url}
  */
  readonly shareUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_sheets`: The URL of the sheet that can be copied from the browser address bar, or the ID of the sheet that can be found in the sheet's URL between ** /d/** and ** /edit**.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sheet_id Connector#sheet_id}
   *
  * Note: The above comment contained a comment block ending sequence (* followed by /). We have introduced a space between to prevent syntax errors. Please ignore the space.
  */
  readonly sheetId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `shopify`: The Shopify shop name. Can be found in the URL before **.myshopify.com**.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#shop Connector#shop}
  */
  readonly shop?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `triple_whale`: Your Triple Whale shop domain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#shop_domain Connector#shop_domain}
  */
  readonly shopDomain?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `salesforce_commerce_cloud`: The Salesforce eight-character string assigned to a realm for routing purposes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#short_code Connector#short_code}
  */
  readonly shortCode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `klaviyo`: Sync events linked to deleted profiles
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#should_sync_events_with_deleted_profiles Connector#should_sync_events_with_deleted_profiles}
  */
  readonly shouldSyncEventsWithDeletedProfiles?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `netsuite_suiteanalytics`: Re-sync re-import tables during every sync
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#should_sync_reimport_tables Connector#should_sync_reimport_tables}
  */
  readonly shouldSyncReimportTables?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apple_search_ads`: Turn the toggle on if you want the reports to also return records without metrics.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#show_records_with_no_metrics Connector#show_records_with_no_metrics}
  */
  readonly showRecordsWithNoMetrics?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `twilio`: The Twilio API key SID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sid Connector#sid}
  */
  readonly sid?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `webhooks`: This is used in HMAC auth method to decode and verify the signature. Supported encodings BASE64 and HEXA_DECIMAL. Default: BASE64
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#signature_encoding Connector#signature_encoding}
  */
  readonly signatureEncoding?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
  * 	- Service `ftp`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
  * 	- Service `gcs`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
  * 	- Service `s3`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
  * 	- Service `s3_compatible_storage`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
  * 	- Service `sftp`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
  * 	- Service `wasabi_cloud_storage`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#signer_public_key Connector#signer_public_key}
  */
  readonly signerPublicKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `teamwork`: Your Teamwork site address.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#site_address Connector#site_address}
  */
  readonly siteAddress?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `microsoft_lists`: The Site ID of the SharePoint site from which you want to sync your lists. The Site ID is the `id` field in the [Graph API](https://docs.microsoft.com/en-us/graph/api/site-search?view=graph-rest-1.0&tabs=http) response for sites.
  * 	- Service `salesforce_commerce_cloud`: The name of the site from which you want to sync data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#site_id Connector#site_id}
  */
  readonly siteId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `microsoft_lists`: The Name of the SharePoint site. The Site Name is the `name` field in the Graph API response for sites.
  * 	- Service `tableau_source`: Your Tableau Source site name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#site_name Connector#site_name}
  */
  readonly siteName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_search_console`: Specific Site URLs to sync. Must be populated if `sync_mode` is set to `SpecificSites`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#site_urls Connector#site_urls}
  */
  readonly siteUrls?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Enter 1 or greater
  * 	- Service `azure_blob_storage`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
  * 	- Service `box`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
  * 	- Service `dropbox`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
  * 	- Service `email`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
  * 	- Service `ftp`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
  * 	- Service `gcs`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
  * 	- Service `google_drive`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
  * 	- Service `kinesis`: Enter 1 or greater
  * 	- Service `s3`: We will skip over the number of lines specified at the end to avoid introducing aberrant data into your destination.
  * 	- Service `s3_compatible_storage`: We will skip over the number of lines specified at the end to avoid introducing aberrant data into your destination.
  * 	- Service `sftp`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
  * 	- Service `share_point`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
  * 	- Service `wasabi_cloud_storage`: We will skip over the number of lines specified at the end to avoid introducing aberrant data into your destination.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#skip_after Connector#skip_after}
  */
  readonly skipAfter?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_cost_report`: Enter 1 or greater
  * 	- Service `azure_blob_storage`: We will skip over the number of lines specified before syncing data.
  * 	- Service `box`: We will skip over the number of lines specified before syncing data.
  * 	- Service `dropbox`: We will skip over the number of lines specified before syncing data.
  * 	- Service `email`: We will skip over the number of lines specified before syncing data.
  * 	- Service `ftp`: We will skip over the number of lines specified before syncing data.
  * 	- Service `gcs`: We will skip over the number of lines specified before syncing data.
  * 	- Service `google_drive`: We will skip over the number of lines specified before syncing data.
  * 	- Service `kinesis`: Enter 1 or greater
  * 	- Service `s3`: We will skip over the number of lines specified before syncing data.
  * 	- Service `s3_compatible_storage`: We will skip over the number of lines specified before syncing data.
  * 	- Service `sftp`: We will skip over the number of lines specified before syncing data.
  * 	- Service `share_point`: We will skip over the number of lines specified before syncing data.
  * 	- Service `wasabi_cloud_storage`: We will skip over the number of lines specified before syncing data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#skip_before Connector#skip_before}
  */
  readonly skipBefore?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_ads`: Toggles the ["Skip empty reports"](https://fivetran.com/docs/connectors/applications/google-ads#skipemptyreports) feature. Enabled by default
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#skip_empty_reports Connector#skip_empty_reports}
  */
  readonly skipEmptyReports?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#snc_certificate Connector#snc_certificate}
  */
  readonly sncCertificate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#snc_certificate_source Connector#snc_certificate_source}
  */
  readonly sncCertificateSource?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#snc_fivetran_name Connector#snc_fivetran_name}
  */
  readonly sncFivetranName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_ecc_netweaver`: Path to the external security product's library.
  * 	- Service `hana_sap_hva_s4_netweaver`: Path to the external security product's library.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#snc_library_path Connector#snc_library_path}
  */
  readonly sncLibraryPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#snc_mode Connector#snc_mode}
  */
  readonly sncMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#snc_my_name Connector#snc_my_name}
  */
  readonly sncMyName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_ecc_netweaver`: Client SNC name.
  * 	- Service `hana_sap_hva_s4_netweaver`: Client SNC name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#snc_name Connector#snc_name}
  */
  readonly sncName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_ecc_netweaver`: Communication partner's SNC name.
  * 	- Service `hana_sap_hva_s4_netweaver`: Communication partner's SNC name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#snc_partner_name Connector#snc_partner_name}
  */
  readonly sncPartnerName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#snc_source_name Connector#snc_source_name}
  */
  readonly sncSourceName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `marketo`: Marketo SOAP API Endpoint (Discontinued).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#soap_uri Connector#soap_uri}
  */
  readonly soapUri?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `linkedin_company_pages`: The social data (UGCPosts, Shares, Comments) sync time frame in months. Default value: `SIX` .
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#social_data_sync_timeframe Connector#social_data_sync_timeframe}
  */
  readonly socialDataSyncTimeframe?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics_data_feed`: The data source.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#source Connector#source}
  */
  readonly source?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `consensus_demo_automation_platform`: Your Consensus Demo Automation Platform source name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#source_name Connector#source_name}
  */
  readonly sourceName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `big_commerce`: The BigCommerce store hash.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#store_hash Connector#store_hash}
  */
  readonly storeHash?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reviewsio`: Your REVIEWS.io store ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#store_id Connector#store_id}
  */
  readonly storeId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `firebase`: List of nested collections to sync. Only specified subCollections can be synced.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sub_collections Connector#sub_collections}
  */
  readonly subCollections?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `absorb_lms`: Your Absorb LMS subdomain.
  * 	- Service `activecampaign`: Your ActiveCampaign sub-domain.
  * 	- Service `acumatica`: Your Acumatica subdomain.
  * 	- Service `ada`: Your Ada sub-domain.
  * 	- Service `alchemer`: Your Alchemer sub-domain.
  * 	- Service `atlassian_jira_align`: Your Jira Align base URL.
  * 	- Service `azure_boards`: Your Azure Boards Organization Name.
  * 	- Service `azure_devops`: Your Azure Organization Name
  * 	- Service `betterworks`: Your Betterworks subdomain.
  * 	- Service `bubble`: Your Bubble subdomain.
  * 	- Service `buildium`: Your Buildium subdomain.
  * 	- Service `canvas_by_instructure`: Your Canvas by Instructure domain.
  * 	- Service `chargebee_product_catalog_1`: Your Chargebee Product Catalog 1 subdomain.
  * 	- Service `chargebee_product_catalog_2`: Your Chargebee subdomain.
  * 	- Service `checkr`: Your Checkr subdomain.
  * 	- Service `clubspeed`: Your Clubspeed subdomain.
  * 	- Service `collibra`: Your collibra subdomain.
  * 	- Service `compliance_checkpoint`: Your Compliance Checkpoint subdomain.
  * 	- Service `concord`: Your Concord Sub Domain.
  * 	- Service `contrast_security`: Your Contrast Security subdomain.
  * 	- Service `customerio`: Your Customer.io region-specific Subdomain.
  * 	- Service `dbt_cloud`: Your dbt Cloud API server region.
  * 	- Service `deputy`: Your Deputy subdomain.
  * 	- Service `docebo`: Your Docebo subdomain.
  * 	- Service `drata`: Your Drata sub_domain.
  * 	- Service `eventsforce`: Your Eventsforce subdomain.
  * 	- Service `ezofficeinventory`: Your EZOfficeInventory Subdomain.
  * 	- Service `fountain`: Your Fountain subdomain.
  * 	- Service `freshchat`: Your Freshchat Sub Domain
  * 	- Service `gainsight_customer_success`: The subdomain of your Gainsight account.
  * 	- Service `gainsight_product_experience`: Your Gainsight Product Experience subdomain.
  * 	- Service `genesys`: Your Genesys subdomain.
  * 	- Service `green_power_monitor`: Your GreenPowerMonitor subdomain.
  * 	- Service `heartland_retail_pos`: Your Heartland Retail POS subdomain.
  * 	- Service `infobip`: Your Infobip sub_domain.
  * 	- Service `insightly`: Your company's Insightly subdomain name.
  * 	- Service `instructure`: The Sub domain in which your Instructure account is hosted.
  * 	- Service `jamf`: Your Jamf subdomain.
  * 	- Service `kandji`: Your Kandji Subdomain.
  * 	- Service `khoros_care`: Your Khoros Care subDomain.
  * 	- Service `looker_source`: Your looker SubDomain name.
  * 	- Service `lucca`: Your Lucca subdomain.
  * 	- Service `mailgun`: Your Mailgun subdomain.
  * 	- Service `matomo`: Your Matomo subdomain.
  * 	- Service `maxio_chargify`: Enter Your Subdomain.
  * 	- Service `myosh`: Your myosh subdomain.
  * 	- Service `namely`: Your Namely subdomain.
  * 	- Service `nylas`: Your Nylas subdomain.
  * 	- Service `odoo`: Your Odoo subdomain.
  * 	- Service `okta`: Your Okta subdomain.
  * 	- Service `oracle_fusion_field_service`: Your Oracle Fusion Field Service subDomain.
  * 	- Service `paylocity`: Your Paylocity subDomain.
  * 	- Service `picqer`: Your Picqer subdomain.
  * 	- Service `pinpoint`: Your Pinpoint sub domain name.
  * 	- Service `piwik_pro`: Your Piwik PRO subdomain.
  * 	- Service `playvox`: Your Playvox Subdomain.
  * 	- Service `posthog`: Your PostHog data region (`app` or `eu`).
  * 	- Service `recurly`: Your company's Recurly subdomain.
  * 	- Service `reltio`: Your Reltio subdomain.
  * 	- Service `revel`: Your Revel Systems subDomain.
  * 	- Service `rundeck`: Your Rundeck subdomain.
  * 	- Service `sage_hr`: Your Sage HR subdomain.
  * 	- Service `salesforce_marketing_cloud`: Your Salesforce Marketing Cloud subdomain.
  * 	- Service `salsify`: Your Salsify Organization ID.
  * 	- Service `sap_success_factors`: Your SAP SuccessFactors Subdomain.
  * 	- Service `sonarqube`: Your Sonarqube subdomain.
  * 	- Service `starrez`: Your StarRez subdomain
  * 	- Service `sugarcrm`: Your SugarCRM subdomain.
  * 	- Service `tableau_source`: Your Tableau Source subdomain.
  * 	- Service `tempo`: Your Tempo subdomain.
  * 	- Service `testrail`: Your TestRail subdomain.
  * 	- Service `thinkific`: Your Thinkific subdomain.
  * 	- Service `totango`: Your Totango Subdomain.
  * 	- Service `tymeshift`: Your Tymeshift subdomain.
  * 	- Service `upland`: Your Upland Software subDomain.
  * 	- Service `validio`: Your Validio subdomain.
  * 	- Service `wordpress`: Your WordPress subdomain.
  * 	- Service `workable`: Your Workable Subdomain.
  * 	- Service `wrike`: Your Wrike Subdomain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sub_domain Connector#sub_domain}
  */
  readonly subDomain?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `bamboohr`: The subdomain used to access your account. If you access BambooHR at 'https://mycompany.bamboohr.com', then the subdomain is 'mycompany'.
  * 	- Service `datadog`: Your Datadog subdomain.
  * 	- Service `ebay`: Your eBay environment.
  * 	- Service `freshdesk`: Your company's freshdesk subdomain (usually **company**.freshdesk.com).
  * 	- Service `freshsales`: Your Freshsales domain.
  * 	- Service `freshservice`: Your company's freshservice subdomain (usually **company**.freshservice.com).
  * 	- Service `freshsuccess`: Your Freshsuccess subdomain.
  * 	- Service `gorgias`: Your Gorgias subdomain.
  * 	- Service `hex`: Your Hex subdomain.
  * 	- Service `jama_software`: Your Jama Software subdomain.
  * 	- Service `klarna`: Your Klarna subdomain.
  * 	- Service `learnupon`: Your Learnupon subdomain.
  * 	- Service `maxio_saasoptics`: Your Maxio SaaSOptics subdomain.
  * 	- Service `medallia`: Medallia subdomain
  * 	- Service `packiyo`: Your Packiyo subdomain.
  * 	- Service `qmatic_data_connect`: Your Qmatic Data Connect subdomain.
  * 	- Service `sana`: Your Sana subdomain.
  * 	- Service `showpad`: Your Showpad subdomain.
  * 	- Service `skillstx`: Your SkillsTX subdomain.
  * 	- Service `smarthr`: Your SmartHR subdomain.
  * 	- Service `sonarqube`: Your Sonarqube subdomain.
  * 	- Service `toast`: Your Toast domain.
  * 	- Service `uptempo`: Your Uptempo subdomain.
  * 	- Service `vts`: Your VTS Subdomain.
  * 	- Service `yext`: Your Yext subdomain. 
  * 	- Service `zendesk_chat`: Your Zendesk domain.
  * 	- Service `zendesk_workforce_management`: Your Zendesk Workforce Management subdomain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#subdomain Connector#subdomain}
  */
  readonly subdomain?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `retailnext`: Your RetailNext subscription.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#subscription Connector#subscription}
  */
  readonly subscription?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cabcharge`: Your Cabcharge subscription key.
  * 	- Service `dsv`: Your DSV subscription key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#subscription_key Connector#subscription_key}
  */
  readonly subscriptionKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `stripe`: Sync Connected Accounts. Connected Account Documentation - https://stripe.com/docs/api/connected_accounts.
  * 	- Service `stripe_test`: Sync Connected Accounts. Connected Account Documentation - https://stripe.com/docs/api/connected_accounts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#support_connected_accounts_sync Connector#support_connected_accounts_sync}
  */
  readonly supportConnectedAccountsSync?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: This option is to unpack the nested columns and sync them separately. By default, we sync the nested columns as JSON objects.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#support_nested_columns Connector#support_nested_columns}
  */
  readonly supportNestedColumns?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `qualaroo`: Array of Qualaroo Survey IDs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#survey_ids Connector#survey_ids}
  */
  readonly surveyIds?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snapchat_ads`: The time period to attribute conversions based on swipes. Default value: `DAY_28`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#swipe_attribution_window Connector#swipe_attribution_window}
  */
  readonly swipeAttributionWindow?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: Sync AppsFlyer Data Locker. Default value is `true`, set it to `false` to sync AppsFlyer data using only webhooks.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_data_locker Connector#sync_data_locker}
  */
  readonly syncDataLocker?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `webhooks`: The webhooks sync format.  Default value: `Unpacked`. Unpacked messages must be valid JSON.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_format Connector#sync_format}
  */
  readonly syncFormat?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `financial_force`: Enable this option to sync formula fields directly (default value = `false`)
  * 	- Service `salesforce`: Enable this option to sync formula fields directly (default value = `false`)
  * 	- Service `salesforce_sandbox`: Enable this option to sync formula fields directly (default value = `false`)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_formula_fields Connector#sync_formula_fields}
  */
  readonly syncFormulaFields?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook_ads`: Parameter defining whether to enable or disable metadata synchronisation. Default value: `TRUE`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_metadata Connector#sync_metadata}
  */
  readonly syncMetadata?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_lambda`: Sync Method
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_method Connector#sync_method}
  */
  readonly syncMethod?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adroll`: Whether to sync all advertisables or specific advertisables. Default value: `AllAdvertisables`.
  * 	- Service `amazon_ads`: Option to select connector should sync all profiles or specific profiles.
  * 	- Service `anaplan`: Whether to sync all exports or specific exports.
  * 	- Service `apple_search_ads`: Sync Mode
  * 	- Service `asana`: Whether to sync all projects or specific projects.
  * 	- Service `bingads`: Whether to sync all accounts or specific accounts. Default value: `AllAccounts`.
  * 	- Service `double_click_campaign_manager`: Whether to sync all user profiles or specific ones. Default value: `AllAccounts`.
  * 	- Service `dynamodb`: Which packed mode setting to use. Default value: `UsePackedModeOnly`.
  * 	- Service `facebook`: Option to select connector should sync all accounts or specific accounts. [Possible sync_mode values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#syncmode).
  * 	- Service `facebook_ad_account`: Whether to sync all accounts or specific accounts. Default value: `AllAccounts`.
  * 	- Service `facebook_ads`: Option to select connector should sync all accounts or specific accounts. [Possible sync_mode values](https://fivetran.com/docs/connectors/applications/facebook-ads#syncmode).
  * 	- Service `facebook_pages`: Whether to sync all accounts or specific accounts. Default value: `AllPages`.
  * 	- Service `github`: Whether to sync all repositories or specific repositories.
  * 	- Service `google_ads`: Whether to sync all accounts or specific accounts.
  * 	- Service `google_analytics`: Whether to sync all accounts or specific accounts.
  * 	- Service `google_analytics_4`: Whether to sync all accounts or specific accounts.
  * 	- Service `google_analytics_mcf`: Whether to sync all accounts or specific accounts. Default value: `ALL_ACCOUNTS`
  * 	- Service `google_search_console`: Whether to sync all sites or specific sites.
  * 	- Service `instagram_business`: Whether to sync all accounts or specific accounts. Default value: `AllAccounts`.
  * 	- Service `iterable`: Events Sync Mode.
  * 	- Service `jira`: Whether to sync all projects or specific projects.
  * 	- Service `linkedin_ads`: Whether to sync all accounts or specific accounts. Default value: `AllAccounts`
  * 	- Service `pendo`: Whether to sync all App IDs or specific App IDs. Default value: `AllAppIds`.
  * 	- Service `pinterest_ads`: Whether to sync all advertisers or specific advertisers.
  * 	- Service `reddit_ads`: Whether to sync all accounts or specific accounts.
  * 	- Service `salesforce_marketing_cloud`: Select the sync mode.
  * 	- Service `snapchat_ads`: Whether to sync all organizations or specific organizations. Default value: `AllOrganizations`.
  * 	- Service `spotify_ads`: Whether to sync all ad accounts or specific ad accounts.
  * 	- Service `taboola`: Whether to sync all accounts or specific accounts.
  * 	- Service `the_trade_desk`: Whether to sync all accounts or specific accounts.
  * 	- Service `tiktok_ads`: Whether to sync all advertiser accounts or specific accounts.
  * 	- Service `twilio`: Whether to sync all accounts or specific accounts.
  * 	- Service `twitter`: Whether to sync all accounts or specific accounts. Default value: `AllAccounts`.
  * 	- Service `twitter_ads`: Whether to sync all accounts or specific accounts.
  * 	- Service `walmart_dsp`: Whether to sync all accounts or specific accounts.
  * 	- Service `yahoo_gemini`: Whether to sync all accounts or specific accounts. Default value: `SpecificAccounts`.
  * 	- Service `zuora`: Select `Zuora Billing` to sync exclusively Zuora Billing related records. Choose `Zuora Revenue` for syncing only Zuora Revenue reports. If both Zuora Billing records and Zuora Revenue reports are to be synced, opt for `Both`.
  * 	- Service `zuora_sandbox`: Select `Zuora Billing` to sync exclusively Zuora Billing related records. Choose `Zuora Revenue` for syncing only Zuora Revenue reports. If both Zuora Billing records and Zuora Revenue reports are to be synced, opt for `Both`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_mode Connector#sync_mode}
  */
  readonly syncMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: Whether to sync all advertisers or specific advertisers. Default value: `ALL_ADVERTISERS`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_mode_advertiser Connector#sync_mode_advertiser}
  */
  readonly syncModeAdvertiser?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `yahoo_dsp`: Whether to sync all seats or specific seats. Default value: `ALL_SEATS`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_mode_seat Connector#sync_mode_seat}
  */
  readonly syncModeSeat?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `reddit_ads`: When this parameter is set to `true`, we sync the data of the additional linked accounts. When this parameter is set to `false`, we sync only the data from the main account that was used for authorization
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_multiple_accounts Connector#sync_multiple_accounts}
  */
  readonly syncMultipleAccounts?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cosmos`: The packing mode type. Supported values:`STANDARD_UNPACKED_MODE`- Unpacks _one_ layer of nested fields and infers types.`PACKED_MODE`- Delivers packed data as a single destination column value.Learn more in our [Azure Cosmos DB Sync Pack Mode Options documentation](https://fivetran.com/docs/connectors/databases/cosmos#packmodeoptions).
  * 	- Service `documentdb`: Indicates whether synced data will be packed into a single entry(column), or unpacked with one layer of nested fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_pack_mode Connector#sync_pack_mode}
  */
  readonly syncPackMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_drive`: Optional. Set to true to sync per-user file access permissions to control visibility in downstream applications.
  * 	- Service `share_point`: Optional. Set to true to sync per-user file access permissions to control visibility in downstream applications.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_permissions Connector#sync_permissions}
  */
  readonly syncPermissions?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: These options are for Appsflyer's Pull API, and are only necessary for syncing events from Pull API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_pull_api Connector#sync_pull_api}
  */
  readonly syncPullApi?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Kafka sync type.  Unpacked messages must be valid JSON.
  * 	- Service `aws_msk`: The sync type.  Unpacked messages must be valid JSON.
  * 	- Service `azure_event_hub`: Sync type.  Unpacked messages must be valid JSON.
  * 	- Service `azure_service_bus`: The sync type, which is based on the message type. For `text` and `xml`, `packed` is supported. For `protobuf` and `avro`, `unpacked` is supported. For `json`, both `packed` and `unpacked` are supported
  * 	- Service `confluent_cloud`: Kafka sync type.  Unpacked messages must be valid JSON.
  * 	- Service `heroku_kafka`: Heroku Kafka sync type.  Unpacked messages must be valid JSON.
  * 	- Service `segment`: The Segment connector sync type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sync_type Connector#sync_type}
  */
  readonly syncType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#sysnr Connector#sysnr}
  */
  readonly sysnr?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hana_sap_hva_ecc_netweaver`: Unique identifier sapsid of the SAP system. This field is displayed only when the REMOTE SERVICE IDENTIFICATION is set to System ID.
  * 	- Service `hana_sap_hva_s4_netweaver`: Unique identifier sapsid of the SAP system. This field is displayed only when the REMOTE SERVICE IDENTIFICATION is set to System ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#system_id Connector#system_id}
  */
  readonly systemId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pigment`: Your Pigment table ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#table_id Connector#table_id}
  */
  readonly tableId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `airtable`: Name of table in Airtable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#table_name Connector#table_name}
  */
  readonly tableName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hubspot`: Timestamp to indicate when tables without access was updated
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tables_without_access_updated_at Connector#tables_without_access_updated_at}
  */
  readonly tablesWithoutAccessUpdatedAt?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `culture_amp`: Your Culture Amp Target entity ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#target_entity_id Connector#target_entity_id}
  */
  readonly targetEntityId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `d2l_brightspace`: Your D2L Brightspace target host.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#target_host Connector#target_host}
  */
  readonly targetHost?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sql_server`: Certificate file path used to protect a database encryption key
  * 	- Service `sql_server_hva`: Certificate used to protect a database encryption key
  * 	- Service `sql_server_sap_ecc_hva`: Certificate used to protect a database encryption key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tde_certificate Connector#tde_certificate}
  */
  readonly tdeCertificate?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sql_server_hva`: Name of the Certificate used to protect a database encryption key
  * 	- Service `sql_server_sap_ecc_hva`: Name of the Certificate used to protect a database encryption key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tde_certificate_name Connector#tde_certificate_name}
  */
  readonly tdeCertificateName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sql_server`: Password of the TDE private key
  * 	- Service `sql_server_hva`: Password of the TDE private key
  * 	- Service `sql_server_sap_ecc_hva`: Password of the TDE private key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tde_password Connector#tde_password}
  */
  readonly tdePassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sql_server`: Private key file path associated with the TDE certificate
  * 	- Service `sql_server_hva`: Private key associated with the TDE certificate
  * 	- Service `sql_server_sap_ecc_hva`: Private key associated with the TDE certificate
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tde_private_key Connector#tde_private_key}
  */
  readonly tdePrivateKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: TDE wallet password. Required for password based wallet.
  * 	- Service `oracle_sap_hva`: TDE wallet password. Required for password based wallet.
  * 	- Service `oracle_sap_hva_netweaver`: TDE wallet password. Required for password based wallet.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tde_wallet_password Connector#tde_wallet_password}
  */
  readonly tdeWalletPassword?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `asana`: Team ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#team_id Connector#team_id}
  */
  readonly teamId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: Technical Account ID from the Service Account (JWT) credentials of your Adobe Project.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#technical_account_id Connector#technical_account_id}
  */
  readonly technicalAccountId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `mandrill`: Provide the labels to filter the templates
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#template_labels Connector#template_labels}
  */
  readonly templateLabels?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `microsoft_entra_id`: Your Microsoft Entra ID Tenant.
  * 	- Service `microsoft_power_bi`: Your Microsoft Power BI tenant.
  * 	- Service `microsoft_teams`: Your Microsoft Teams Tenant.
  * 	- Service `unicommerce`: Your uniware tenant.
  * 	- Service `workday`: Workday tenant name
  * 	- Service `workday_financial_management`: Workday tenant name
  * 	- Service `workday_hcm`: Workday tenant name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tenant Connector#tenant}
  */
  readonly tenant?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `planful`: Your Planful tenant app URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tenant_app_url Connector#tenant_app_url}
  */
  readonly tenantAppUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `deposco`: Your Deposco tenant code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tenant_code Connector#tenant_code}
  */
  readonly tenantCode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_sql_db`: Azure AD tenant ID.
  * 	- Service `azure_sql_managed_db`: Azure AD tenant ID.
  * 	- Service `business_central`: `Tenant ID` of your Business Central application
  * 	- Service `crowddev`: Your  crowd.dev Tenant ID.
  * 	- Service `reltio`: Your Reltio tenant ID.
  * 	- Service `servicetitan`: Your ServiceTitan tenant ID.
  * 	- Service `share_point`: `Tenant ID` of your Microsoft client application.
  * 	- Service `visma`: Your Visma tenant ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tenant_id Connector#tenant_id}
  */
  readonly tenantId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `mambu`: Your Mambu tenant name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tenant_name Connector#tenant_name}
  */
  readonly tenantName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `ivanti`: Your Ivanti Tenant URL.
  * 	- Service `playvox_workforce_management`: Your Playvox Workforce Management tenant URL.
  * 	- Service `reltio`: Your Reltio tenant URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tenant_url Connector#tenant_url}
  */
  readonly tenantUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `sap_hana`: testTableName
  * 	- Service `sap_s4hana`: testTableName
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#test_table_name Connector#test_table_name}
  */
  readonly testTableName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pardot`: The time zone configured in your Pardot instance. An empty value defaults to `UTC+00:00`.
  * 	- Service `pardot_sandbox`: The time zone configured in your Pardot instance. An empty value defaults to `UTC+00:00`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#time_zone Connector#time_zone}
  */
  readonly timeZone?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adobe_analytics`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector has been created. Default value: `TWELVE` .
  * 	- Service `adroll`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `TWELVE`.
  * 	- Service `apple_search_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once connection is created.  NOTE: The more months of reporting data you sync, the longer your initial sync will take.
  * 	- Service `bingads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `SIX`.
  * 	- Service `criteo`: The number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created.   NOTE: The greater number of months means the initial sync will take more time.
  * 	- Service `double_click_campaign_manager`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync. Default value: `TWELVE`.
  * 	- Service `double_click_publishers`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync.
  * 	- Service `facebook`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
  * 	- Service `facebook_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
  * 	- Service `google_ads`: The number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled custom and prebuilt reports during the next connector sync. Default value: `TWELVE`.
  * 	- Service `google_analytics`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync. The default value: `TWELVE`.
  * 	- Service `google_analytics_4`: The number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync. The default value: `TWELVE`.
  * 	- Service `google_analytics_mcf`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync. Default value: `TWELVE`.
  * 	- Service `google_display_and_video_360`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync.  NOTE: The more months of reporting data you sync, the longer your initial sync will take.
  * 	- Service `google_search_ads_360`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync. 
  * 	- Service `google_search_console`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync.
  * 	- Service `instagram_business`: Number of months' worth of data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `SIX`.
  * 	- Service `itunes_connect`: Historical sync time frame in months.
  * 	- Service `linkedin_ads`: Number of months for which to query reporting data included in the initial sync. This number cannot be modified once the connector is created. Default value: `ALL_TIME`.
  * 	- Service `outbrain`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once connection is created.  NOTE: The more months of reporting data you sync, the longer your initial sync will take.
  * 	- Service `pinterest_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
  * 	- Service `reddit_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `TWELVE`.
  * 	- Service `snapchat_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `TWELVE`.
  * 	- Service `spotify_ads`: The number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `SIX`.
  * 	- Service `taboola`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once connection is created.  NOTE: The more months of reporting data you sync, the longer your initial sync will take.
  * 	- Service `the_trade_desk`: Number of months' worth of data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
  * 	- Service `tiktok_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
  * 	- Service `twitter`: Number of months' worth of data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
  * 	- Service `twitter_ads`: Historical sync timeframe in months.
  * 	- Service `walmart_dsp`: Number of months' worth of data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
  * 	- Service `yahoo_dsp`: Number of months` worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
  * 	- Service `yahoo_gemini`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `TWELVE`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#timeframe_months Connector#timeframe_months}
  */
  readonly timeframeMonths?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `rokt`: Your Rokt timezone.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#timezone Connector#timezone}
  */
  readonly timezone?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apple_search_ads`: Determines whether to use UTC or the users timezone from the apple account
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#timezone_mode Connector#timezone_mode}
  */
  readonly timezoneMode?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: Single-tenant database: The database's SID.  Multi-tenant database: The database's TNS.
  * 	- Service `oracle_sap_hva`: Single-tenant database: The database SID.  Multi-tenant database: The database TNS.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tns Connector#tns}
  */
  readonly tns?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `toast`: Your Toast Restaurant External ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#toast_id Connector#toast_id}
  */
  readonly toastId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `khoros_communities`: Your Khoros Communities token.
  * 	- Service `matomo`: Your Matomo auth token.
  * 	- Service `mode`: Your Mode Token.
  * 	- Service `oracle_moat_analytics`: Your Oracle Moat Analytics Token.
  * 	- Service `shareasale`: Your ShareASale token.
  * 	- Service `solarwinds_service_desk`: Your SolarWinds Service Desk token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#token Connector#token}
  */
  readonly token?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cosmos`: The container name. Required for the `RESOURCE_TOKEN` data access method.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#token_authenticated_container Connector#token_authenticated_container}
  */
  readonly tokenAuthenticatedContainer?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cosmos`: The database name. Required for the `RESOURCE_TOKEN` data access method.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#token_authenticated_database Connector#token_authenticated_database}
  */
  readonly tokenAuthenticatedDatabase?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `chargedesk`: Your ChargeDesk token ID.
  * 	- Service `mux`: Your Mux token ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#token_id Connector#token_id}
  */
  readonly tokenId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `netsuite_suiteanalytics`: Token ID
  * 	- Service `on24`: Your ON24 token key.
  * 	- Service `proofpoint_security_awareness`: Your Proofpoint Security Awareness Token Key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#token_key Connector#token_key}
  */
  readonly tokenKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `netsuite_suiteanalytics`: Token Secret
  * 	- Service `on24`: Your ON24 token secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#token_secret Connector#token_secret}
  */
  readonly tokenSecret?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `mux`: Your Mux token secret key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#token_secret_key Connector#token_secret_key}
  */
  readonly tokenSecretKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amazon_dsp`: Your Amazon DSP token URL region.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#token_url_region Connector#token_url_region}
  */
  readonly tokenUrlRegion?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_service_bus`: The comma-separated list of topics which should be synced. Required if you do not have manage permissions
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#topics Connector#topics}
  */
  readonly topics?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `heroku_kafka`: Trust Store Type
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#trust_store_type Connector#trust_store_type}
  */
  readonly trustStoreType?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `apache_kafka`: Kafka trusted certificate.
  * 	- Service `heroku_kafka`: Heroku Kafka trusted certificate. Required for `TLS` security protocol.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#trusted_cert Connector#trusted_cert}
  */
  readonly trustedCert?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aws_msk`: If `security_protocol` is set to `TLS`, add the `Truststore File` as Base64 encoded string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#truststore Connector#truststore}
  */
  readonly truststore?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `aurora_postgres`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `aveva_pi`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `azure_cosmos_for_mongo`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `azure_postgres`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `azure_sql_db`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `azure_sql_managed_db`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `clarity`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `cockroachdb`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `db2i_hva`: SSH host, only specify when connecting via an SSH tunnel (do not use a load balancer). Required for connector creation.
  * 	- Service `db2i_sap_hva`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `db2luw`: SSH host, only specify when connecting via an SSH tunnel (do not use a load balancer). Required for connector creation.
  * 	- Service `documentdb`: SSH host, only specify when connecting via an SSH tunnel (do not use a load balancer). Required for connector creation.
  * 	- Service `dynamics_365_fo`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `ehr`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `elastic_cloud`: SSH host, specify only to connect using an SSH tunnel (do not use a load balancer).
  * 	- Service `epic_clarity`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `es_self_hosted`: SSH host, specify only to connect using an SSH tunnel (do not use a load balancer).
  * 	- Service `google_cloud_mysql`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `google_cloud_postgresql`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `google_cloud_sqlserver`: SSH host, only specify when connecting via an SSH tunnel (do not use a load balancer).
  * 	- Service `hana_sap_hva_b1`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `hana_sap_hva_ecc`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `hana_sap_hva_ecc_netweaver`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `hana_sap_hva_s4`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `hana_sap_hva_s4_netweaver`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `heroku_postgres`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `magento_mysql`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `magento_mysql_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `maria`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `maria_azure`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `maria_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `mongo`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `mongo_sharded`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `mysql`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `mysql_azure`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `mysql_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `opendistro`: SSH host, specify only to connect using an SSH tunnel (do not use a load balancer).
  * 	- Service `opensearch`: SSH host, specify only to connect using an SSH tunnel (do not use a load balancer).
  * 	- Service `oracle`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `oracle_ebs`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `oracle_hva`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `oracle_rac`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `oracle_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `oracle_sap_hva`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `oracle_sap_hva_netweaver`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `postgres`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `postgres_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `sap_hana`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `sap_hana_db`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `sap_s4hana`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `sftp`: Tunnel host address, specify only to connect via SSH tunnel.
  * 	- Service `sql_server`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `sql_server_hva`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `sql_server_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  * 	- Service `sql_server_sap_ecc_hva`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tunnel_host Connector#tunnel_host}
  */
  readonly tunnelHost?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `aurora_postgres`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `aveva_pi`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `azure_cosmos_for_mongo`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `azure_postgres`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `azure_sql_db`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `azure_sql_managed_db`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `clarity`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `cockroachdb`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `db2i_hva`: SSH port, only specify when connecting via an SSH tunnel. Required for connector creation.
  * 	- Service `db2i_sap_hva`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `db2luw`: SSH port, only specify when connecting via an SSH tunnel. Required for connector creation.
  * 	- Service `documentdb`: SSH port, only specify when connecting via an SSH tunnel. Required for connector creation.
  * 	- Service `dynamics_365_fo`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `ehr`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `elastic_cloud`: SSH port, specify only to connect using an SSH tunnel.
  * 	- Service `epic_clarity`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `es_self_hosted`: SSH port, specify only to connect using an SSH tunnel.
  * 	- Service `google_cloud_mysql`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `google_cloud_postgresql`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `google_cloud_sqlserver`: SSH port, only specify when connecting via an SSH tunnel.
  * 	- Service `hana_sap_hva_b1`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `hana_sap_hva_ecc`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `hana_sap_hva_ecc_netweaver`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `hana_sap_hva_s4`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `hana_sap_hva_s4_netweaver`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `heroku_postgres`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `magento_mysql`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `magento_mysql_rds`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `maria`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `maria_azure`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `maria_rds`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `mongo`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `mongo_sharded`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `mysql`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `mysql_azure`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `mysql_rds`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `opendistro`: SSH port, specify only to connect using an SSH tunnel.
  * 	- Service `opensearch`: SSH port, specify only to connect using an SSH tunnel.
  * 	- Service `oracle`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_ebs`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_hva`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_rac`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_rds`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_sap_hva`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_sap_hva_netweaver`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `postgres`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `postgres_rds`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `sap_hana`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `sap_hana_db`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `sap_s4hana`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `sftp`: Tunnel port, specify only to connect via SSH tunnel.
  * 	- Service `sql_server`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `sql_server_hva`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `sql_server_rds`: SSH port, specify only to connect via an SSH tunnel.
  * 	- Service `sql_server_sap_ecc_hva`: SSH port, specify only to connect via an SSH tunnel.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tunnel_port Connector#tunnel_port}
  */
  readonly tunnelPort?: number;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `aurora_postgres`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `aveva_pi`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `azure_cosmos_for_mongo`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `azure_postgres`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `azure_sql_db`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `azure_sql_managed_db`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `clarity`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `cockroachdb`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `db2i_hva`: SSH user, specify only to connect via an SSH tunnel. Required for connector creation.
  * 	- Service `db2i_sap_hva`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `db2luw`: SSH user, specify only to connect via an SSH tunnel. Required for connector creation.
  * 	- Service `documentdb`: SSH user, specify only to connect via an SSH tunnel. Required for connector creation.
  * 	- Service `dynamics_365_fo`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `ehr`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `elastic_cloud`: SSH user, specify only to connect using an SSH tunnel.
  * 	- Service `epic_clarity`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `es_self_hosted`: SSH user, specify only to connect using an SSH tunnel.
  * 	- Service `google_cloud_mysql`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `google_cloud_postgresql`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `google_cloud_sqlserver`: SSH user, only specify when connecting via an SSH tunnel.
  * 	- Service `hana_sap_hva_b1`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `hana_sap_hva_ecc`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `hana_sap_hva_ecc_netweaver`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `hana_sap_hva_s4`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `hana_sap_hva_s4_netweaver`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `heroku_postgres`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `magento_mysql`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `magento_mysql_rds`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `maria`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `maria_azure`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `maria_rds`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `mongo`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `mongo_sharded`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `mysql`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `mysql_azure`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `mysql_rds`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `opendistro`: SSH user, specify only to connect using an SSH tunnel.
  * 	- Service `opensearch`: SSH user, specify only to connect using an SSH tunnel.
  * 	- Service `oracle`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_ebs`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_hva`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_rac`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_rds`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_sap_hva`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `oracle_sap_hva_netweaver`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `postgres`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `postgres_rds`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `sap_hana`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `sap_hana_db`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `sap_s4hana`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `sftp`: Tunnel user, specify only to connect via SSH tunnel.
  * 	- Service `sql_server`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `sql_server_hva`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `sql_server_rds`: SSH user, specify only to connect via an SSH tunnel.
  * 	- Service `sql_server_sap_ecc_hva`: SSH user, specify only to connect via an SSH tunnel.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tunnel_user Connector#tunnel_user}
  */
  readonly tunnelUser?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `akamai`: Your Akamai type name.
  * 	- Service `bubble`: Your Bubble type name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#type_name Connector#type_name}
  */
  readonly typeName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#unique_id Connector#unique_id}
  */
  readonly uniqueId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `google_display_and_video_360`: Specifies whether the configuration is updated before each sync or only when the connector settings are saved. This parameter only takes effect when `config_method` is set to `REUSE_EXISTING`. The default value is `true`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#update_config_on_each_sync Connector#update_config_on_each_sync}
  */
  readonly updateConfigOnEachSync?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `aurora_postgres`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `azure_postgres`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `azure_sql_db`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
  * 	- Service `azure_sql_managed_db`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
  * 	- Service `clarity`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
  * 	- Service `dynamics_365_fo`: Update Method
  * 	- Service `ehr`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
  * 	- Service `epic_clarity`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
  * 	- Service `google_cloud_mysql`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `google_cloud_postgresql`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `google_cloud_sqlserver`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
  * 	- Service `heroku_postgres`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `magento_mysql`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `magento_mysql_rds`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `maria`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `maria_azure`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `maria_rds`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `mysql`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `mysql_azure`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `mysql_rds`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `oracle`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables. - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `oracle_ebs`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables.  - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `oracle_hva`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables. - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `oracle_rac`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables.  - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `oracle_rds`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables.  - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `oracle_sap_hva`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables. - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `postgres`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `postgres_rds`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
  * 	- Service `redshift_db`: Default value: `Teleport`
  * 	- Service `snowflake_db`: Default value: `Teleport`
  * 	- Service `sql_server`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
  * 	- Service `sql_server_hva`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
  * 	- Service `sql_server_rds`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
  * 	- Service `sql_server_sap_ecc_hva`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#update_method Connector#update_method}
  */
  readonly updateMethod?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `cosmos`: Cosmos resource instance address.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#uri Connector#uri}
  */
  readonly uri?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `fountain`: Your Fountain URL format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#url_format Connector#url_format}
  */
  readonly urlFormat?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `mandrill`: Whether to use multiple API keys for interaction.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#use_api_keys Connector#use_api_keys}
  */
  readonly useApiKeys?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `amplitude`: Sync events from cloud storage
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#use_cloud_storage Connector#use_cloud_storage}
  */
  readonly useCloudStorage?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: Use Custom Bucket. Set it to 'true' if the data is being synced to your S3 bucket instead of an AppsFlyer-managed bucket.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#use_customer_bucket Connector#use_customer_bucket}
  */
  readonly useCustomerBucket?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `oracle_hva`: Default value: `false`. Set to `true` if you're using a RAC instance.
  * 	- Service `oracle_sap_hva`: Default value: `false`. Set to `true` if you're using a RAC instance.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#use_oracle_rac Connector#use_oracle_rac}
  */
  readonly useOracleRac?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `azure_blob_storage`: Set to `true` if files present in the Azure Blob Storage container are encrypted using PGP. Default value: `false`.
  * 	- Service `ftp`: Set to `true` if files are encrypted using PGP in the S3 bucket. Default value: `false`.
  * 	- Service `gcs`: Set to `true` if files are encrypted using PGP in the GCS bucket. Default value: `false`.
  * 	- Service `s3`: Set to `true` if files are encrypted using PGP in the S3 bucket. Default value: `false`.
  * 	- Service `s3_compatible_storage`: Set to `true` if files are encrypted using PGP in the S3-Compatible Storage bucket. Default value: `false`.
  * 	- Service `sftp`: Set to `true` if files present in SFTP server are encrypted using PGP. Default value: `false`.
  * 	- Service `wasabi_cloud_storage`: Set to `true` if files are encrypted using PGP in the Wasabi Cloud Storage bucket. Default value: `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#use_pgp_encryption_options Connector#use_pgp_encryption_options}
  */
  readonly usePgpEncryptionOptions?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `bigquery_db`: BigQuery use service account; default is false
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#use_service_account Connector#use_service_account}
  */
  readonly useServiceAccount?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `mandrill`: Use template labels to filter templates for sync
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#use_template_labels Connector#use_template_labels}
  */
  readonly useTemplateLabels?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `github`: Set to `true` to capture deletes.
  * 	- Service `xero`: Updates to few fields like sent_to_contact in Invoice table might be missed if you don't enable this.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#use_webhooks Connector#use_webhooks}
  */
  readonly useWebhooks?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `bigquery_db`: Create and drop tables in a query results dataset. Default is false
  * 	- Service `snowflake_db`: Choose a database and schema to create temporary tables for syncs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#use_workspace Connector#use_workspace}
  */
  readonly useWorkspace?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `aurora`: The user name.
  * 	- Service `aurora_postgres`: The user name.
  * 	- Service `aveva_pi`: Username for the user to authenticate as with the AF Server
  * 	- Service `azure_cosmos_for_mongo`: Username for source database access.
  * 	- Service `azure_postgres`: The user name.
  * 	- Service `azure_sql_db`: The user name.  For Azure Databases, the format must be `user@domain`.
  * 	- Service `azure_sql_managed_db`: The user name.  For Azure Databases, the format must be `user@domain`.
  * 	- Service `clarity`: The user name.  For Azure Databases, the format must be `user@domain`.
  * 	- Service `cockroachdb`: The user name.
  * 	- Service `db2i_hva`: The user name.
  * 	- Service `db2i_sap_hva`: The username.
  * 	- Service `db2luw`: The user name.
  * 	- Service `documentdb`: The user name.
  * 	- Service `dynamics_365_fo`: The user name. The format must be `user@domain`.
  * 	- Service `ehr`: The user name.  For Azure Databases, the format must be `user@domain`.
  * 	- Service `elastic_cloud`: The user name.
  * 	- Service `epic_clarity`: The user name.  For Azure Databases, the format must be `user@domain`.
  * 	- Service `es_self_hosted`: The user name.
  * 	- Service `ftp`: FTP user.
  * 	- Service `google_cloud_mysql`: The user name.
  * 	- Service `google_cloud_postgresql`: The user name.
  * 	- Service `google_cloud_sqlserver`: The user name. For Azure Databases, the format must be `user@domain`.
  * 	- Service `hana_sap_hva_b1`: The username.
  * 	- Service `hana_sap_hva_ecc`: The username.
  * 	- Service `hana_sap_hva_ecc_netweaver`: The username.
  * 	- Service `hana_sap_hva_s4`: The username.
  * 	- Service `hana_sap_hva_s4_netweaver`: The username.
  * 	- Service `heroku_postgres`: The user name.
  * 	- Service `jira`: The Jira username.
  * 	- Service `magento_mysql`: The user name.
  * 	- Service `magento_mysql_rds`: The user name.
  * 	- Service `maria`: The user name.
  * 	- Service `maria_azure`: The user name.
  * 	- Service `maria_rds`: The user name.
  * 	- Service `marin`: The Marin username.
  * 	- Service `mongo`: The user name.
  * 	- Service `mongo_sharded`: The user name.
  * 	- Service `mysql`: The user name.
  * 	- Service `mysql_azure`: The user name.
  * 	- Service `mysql_rds`: The user name.
  * 	- Service `opendistro`: The user name.
  * 	- Service `opensearch`: The user name.
  * 	- Service `oracle`: The user name.
  * 	- Service `oracle_ebs`: The user name.
  * 	- Service `oracle_hva`: The user name.
  * 	- Service `oracle_rac`: The user name.
  * 	- Service `oracle_rds`: The user name.
  * 	- Service `oracle_sap_hva`: The username.
  * 	- Service `oracle_sap_hva_netweaver`: The username.
  * 	- Service `outbrain`: The username or email of the Outbrain user.
  * 	- Service `postgres`: The user name.
  * 	- Service `postgres_rds`: The user name.
  * 	- Service `redshift_db`: The Redshift username.
  * 	- Service `sap_hana`: Your SAP HANA user name.
  * 	- Service `sap_s4hana`: Your SAP S/4 user name.
  * 	- Service `sftp`: SFTP user.
  * 	- Service `snowflake_db`: The Snowflake username.
  * 	- Service `splunk`: The Splunk username.
  * 	- Service `sql_server`: The user name.  For Azure Databases, the format must be `user@domain`.
  * 	- Service `sql_server_hva`: The user name.  For Azure Databases, the format must be `user@domain`.
  * 	- Service `sql_server_rds`: The user name.  For Azure Databases, the format must be `user@domain`.
  * 	- Service `sql_server_sap_ecc_hva`: The user name.  For Azure Databases, the format must be `user@domain`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#user Connector#user}
  */
  readonly user?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `coassemble`: Your Coassemble user ID.
  * 	- Service `gmail`: (DEPRECATED) Your Gmail user ID.
  * 	- Service `hibob`: Your HiBob Service User Token.
  * 	- Service `marketo`: Marketo SOAP API User Id (Discontinued).
  * 	- Service `okendo`: Your Okendo user ID.
  * 	- Service `playvox`: Your Playvox User ID.
  * 	- Service `sage_intacct`: User ID
  * 	- Service `vimeo`: Your Vimeo user ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#user_id Connector#user_id}
  */
  readonly userId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#user_key Connector#user_key}
  */
  readonly userKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday`: Workday username.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#user_name Connector#user_name}
  */
  readonly userName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `double_click_campaign_manager`: IDs of specific User Profiles to sync. Must be populated if `sync_mode` is set to `SpecificAccounts`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#user_profiles Connector#user_profiles}
  */
  readonly userProfiles?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hibob`: Your HiBob Service User ID.
  * 	- Service `konnect_insights`: Your Konnect Insights User Token.
  * 	- Service `sonarqube`: Your Sonarqube user token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#user_token Connector#user_token}
  */
  readonly userToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `absorb_lms`: Your Absorb LMS username.
  * 	- Service `adobe_commerce`: Your Adobe Commerce username.
  * 	- Service `akeneo`: Your Akeneo username.
  * 	- Service `alida`: Your Alida client ID.
  * 	- Service `anaplan`: Your Anaplan user ID. Must be populated if `auth_mode` is set to `Basic`.
  * 	- Service `appfigures`: Your Appfigures Username.
  * 	- Service `aveva_pi`: Username for the user to authenticate as with the AF Server
  * 	- Service `ceridian_dayforce`: Your Ceridian Dayforce username.
  * 	- Service `churnzero`: Your ChurnZero username.
  * 	- Service `cin7`: Your Cin7 API Username.
  * 	- Service `collibra`: Your collibra username.
  * 	- Service `compliance_checkpoint`: Your Compliance Checkpoint account username.
  * 	- Service `concur`: The SAP Concur username.
  * 	- Service `confluence`: Your Confluence username.
  * 	- Service `contrast_security`: Your Contrast Security API Username.
  * 	- Service `dcl_logistics`: Your DCL Logistics username.
  * 	- Service `deposco`: Your Deposco username.
  * 	- Service `github`: `Login` of your GitHub profile.
  * 	- Service `gladly`: Your Gladly Username.
  * 	- Service `globalmeet`: Your GlobalMeet Username.
  * 	- Service `gorgias`: Your Gorgias username.
  * 	- Service `green_power_monitor`: Your GreenPowerMonitor username.
  * 	- Service `guru`: Your Guru username.
  * 	- Service `hilti_ontrack`: Your Hilti On!Track username.
  * 	- Service `impact`: Your Impact Brand Account SID
  * 	- Service `integral_ad_science`: Your integral_ad_science username.
  * 	- Service `itunes_connect`: Your Apple ID
  * 	- Service `jamf`: Your Jamf username.
  * 	- Service `khoros_care`: Your Khoros Care username.
  * 	- Service `kissmetrics`: Your Kissmetrics API Username.
  * 	- Service `klarna`: Your Klarna Username.
  * 	- Service `learnupon`: Your Learnupon username.
  * 	- Service `lessonly`: Your Lessonly username.
  * 	- Service `mailgun`: Your Mailgun API username.
  * 	- Service `myosh`: Your myosh username.
  * 	- Service `oracle_business_intelligence_publisher`: The Oracle Business Intelligence username.
  * 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud username.
  * 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud username.
  * 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud username.
  * 	- Service `partnerize`: Your Partnerize account's username.
  * 	- Service `pingdom`: Your Pingdom Username.
  * 	- Service `podio`: Your Podio account username.
  * 	- Service `qmatic_data_connect`: Your Qmatic Data Connect username.
  * 	- Service `quorum`: Your Quorum username .
  * 	- Service `revx`: Your RevX Username.
  * 	- Service `rtb_house`: Your RTB House username.
  * 	- Service `sap_business_by_design`: The SAP Business ByDesign username.
  * 	- Service `scorm`: Your Scorm App ID.
  * 	- Service `servicenow`: Your ServiceNow User ID (username).
  * 	- Service `shiphero`: Your ShipHero username.
  * 	- Service `shipstation`: Your ShipStation username.
  * 	- Service `shopware`: Your Shopware username.
  * 	- Service `splash`: Your Splash username.
  * 	- Service `starrez`: Your StarRez API username
  * 	- Service `stickyio`: Your sticky.io username .
  * 	- Service `stylight`: Your Stylight Username.
  * 	- Service `sugarcrm`: Your SugarCRM username.
  * 	- Service `teamwork`: Your Teamwork username.
  * 	- Service `testrail`: Your TestRail username.
  * 	- Service `ukg_pro`: Your UKG Pro username.
  * 	- Service `ukg_pro_workforce_management`: Your UKG Pro Workforce Management username.
  * 	- Service `unicommerce`: Your uniware login username.
  * 	- Service `upland`: Your Upland Software Username.
  * 	- Service `uptempo`: Your Uptempo username.
  * 	- Service `veeva_vault`: Username
  * 	- Service `veevavault`: Your Veeva Vault username.
  * 	- Service `when_i_work`: Your When I Work username.
  * 	- Service `wherefour`: Your Wherefour username.
  * 	- Service `workday_financial_management`: Workday username.
  * 	- Service `workday_hcm`: Username of your Workday Integration System User account
  * 	- Service `xandr`: Your Xandr username.
  * 	- Service `yougov_brandindex`: Your YouGov BrandIndex username.
  * 	- Service `younium`: Your Younium username.
  * 	- Service `zuora`: The API username with the necessary access permissions.
  * 	- Service `zuora_sandbox`: The API username with the necessary access permissions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#username Connector#username}
  */
  readonly username?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `itunes_connect`: Your vendors id
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#vendors_id Connector#vendors_id}
  */
  readonly vendorsId?: string[];
  /**
  * Field usage depends on `service` value: 
  * 	- Service `criteo_retail_media`: Your Criteo Retail Media version.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#version Connector#version}
  */
  readonly version?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `facebook`: Time period to attribute conversions based on views. [Possible view_attribution_window values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#viewattributionwindow).
  * 	- Service `pinterest_ads`: The number of days to use as the conversion attribution window for a 'view' action.
  * 	- Service `snapchat_ads`: The time period to attribute conversions based on views. Default value: `DAY_1`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#view_attribution_window Connector#view_attribution_window}
  */
  readonly viewAttributionWindow?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `pigment`: Your Pigment view ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#view_id Connector#view_id}
  */
  readonly viewId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `linkedin_ads`: The time period to attribute conversions based on views. Default value: `DAY_7`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#view_through_attribution_window_size Connector#view_through_attribution_window_size}
  */
  readonly viewThroughAttributionWindowSize?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adyen`: Your Adyen Web Service API key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#web_service_api_key Connector#web_service_api_key}
  */
  readonly webServiceApiKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `appsflyer`: Webhook Url
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#webhook_endpoint Connector#webhook_endpoint}
  */
  readonly webhookEndpoint?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `xero`: Webhook Key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#webhook_key Connector#webhook_key}
  */
  readonly webhookKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `ordway`: Your Ordway Webhook name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#webhook_name Connector#webhook_name}
  */
  readonly webhookName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `branch`: Webhook URL
  * 	- Service `pipedrive`: The registered URL for webhooks in your Pipedrive dashboard.
  * 	- Service `segment`: Webhook URL.
  * 	- Service `xero`: (ReadOnly) The Webhook URL generated by Fivetran. You can configure this in XERO.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#webhook_url Connector#webhook_url}
  */
  readonly webhookUrl?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `woocommerce`: The Site ID of your WordPress hosted WooCommerce instance or the subdomain of your self-hosted WooCommerce instance.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#word_press_site_id_or_woocommerce_domain_name Connector#word_press_site_id_or_woocommerce_domain_name}
  */
  readonly wordPressSiteIdOrWoocommerceDomainName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `moloco`: Your Moloco workplace ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#workplace_id Connector#workplace_id}
  */
  readonly workplaceId?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `mode`: Your Mode Workspace.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#workspace Connector#workspace}
  */
  readonly workspace?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `bigquery_db`: Workspace Dataset Name
  * 	- Service `snowflake_db`: The name of the database where the temporary tables will be created.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#workspace_name Connector#workspace_name}
  */
  readonly workspaceName?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `bigquery_db`: Use the source dataset as the workspace dataset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#workspace_same_as_source Connector#workspace_same_as_source}
  */
  readonly workspaceSameAsSource?: boolean | cdktf.IResolvable;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `snowflake_db`: The name of the schema that belongs to the workspace database where the temporary tables will be created.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#workspace_schema Connector#workspace_schema}
  */
  readonly workspaceSchema?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `hex`: Your Hex workspace token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#workspace_token Connector#workspace_token}
  */
  readonly workspaceToken?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `adp_workforce_now`: Web Services Certificate.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#ws_certificate Connector#ws_certificate}
  */
  readonly wsCertificate?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_strategic_sourcing`: Your Workday Strategic Sourcing X API key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#x_api_key Connector#x_api_key}
  */
  readonly xApiKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `medallia_agile_research`: Your Medallia Agile Research key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#x_key Connector#x_key}
  */
  readonly xKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `medallia_agile_research`: Your Medallia Agile Research master key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#x_master_key Connector#x_master_key}
  */
  readonly xMasterKey?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_strategic_sourcing`: Your Workday Strategic Sourcing X User Email.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#x_user_email Connector#x_user_email}
  */
  readonly xUserEmail?: string;
  /**
  * Field usage depends on `service` value: 
  * 	- Service `workday_strategic_sourcing`: Your Workday Strategic Sourcing X User Token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#x_user_token Connector#x_user_token}
  */
  readonly xUserToken?: string;
  /**
  * accounts_reddit_ads block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#accounts_reddit_ads Connector#accounts_reddit_ads}
  */
  readonly accountsRedditAds?: ConnectorConfigAccountsRedditAds[] | cdktf.IResolvable;
  /**
  * adobe_analytics_configurations block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#adobe_analytics_configurations Connector#adobe_analytics_configurations}
  */
  readonly adobeAnalyticsConfigurations?: ConnectorConfigAdobeAnalyticsConfigurations[] | cdktf.IResolvable;
  /**
  * app_ids_appsflyer block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#app_ids_appsflyer Connector#app_ids_appsflyer}
  */
  readonly appIdsAppsflyer?: ConnectorConfigAppIdsAppsflyer[] | cdktf.IResolvable;
  /**
  * custom_payloads block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_payloads Connector#custom_payloads}
  */
  readonly customPayloads?: ConnectorConfigCustomPayloads[] | cdktf.IResolvable;
  /**
  * custom_reports block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_reports Connector#custom_reports}
  */
  readonly customReports?: ConnectorConfigCustomReports[] | cdktf.IResolvable;
  /**
  * custom_tables block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#custom_tables Connector#custom_tables}
  */
  readonly customTables?: ConnectorConfigCustomTables[] | cdktf.IResolvable;
  /**
  * data_model_path_alias_list block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#data_model_path_alias_list Connector#data_model_path_alias_list}
  */
  readonly dataModelPathAliasList?: ConnectorConfigDataModelPathAliasListStruct[] | cdktf.IResolvable;
  /**
  * files block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#files Connector#files}
  */
  readonly files?: ConnectorConfigFiles[] | cdktf.IResolvable;
  /**
  * project_credentials block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#project_credentials Connector#project_credentials}
  */
  readonly projectCredentials?: ConnectorConfigProjectCredentials[] | cdktf.IResolvable;
  /**
  * report_configs block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_configs Connector#report_configs}
  */
  readonly reportConfigs?: ConnectorConfigReportConfigs[] | cdktf.IResolvable;
  /**
  * report_list block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#report_list Connector#report_list}
  */
  readonly reportList?: ConnectorConfigReportListStruct[] | cdktf.IResolvable;
  /**
  * reports block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#reports Connector#reports}
  */
  readonly reports?: ConnectorConfigReports[] | cdktf.IResolvable;
  /**
  * secrets_list block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#secrets_list Connector#secrets_list}
  */
  readonly secretsList?: ConnectorConfigSecretsListStruct[] | cdktf.IResolvable;
  /**
  * tenant_configs block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#tenant_configs Connector#tenant_configs}
  */
  readonly tenantConfigs?: ConnectorConfigTenantConfigs[] | cdktf.IResolvable;
}

export function connectorConfigAToTerraform(struct?: ConnectorConfigA | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    abs_connection_method: cdktf.stringToTerraform(struct!.absConnectionMethod),
    abs_connection_string: cdktf.stringToTerraform(struct!.absConnectionString),
    abs_container_address: cdktf.stringToTerraform(struct!.absContainerAddress),
    abs_container_name: cdktf.stringToTerraform(struct!.absContainerName),
    abs_host_ip: cdktf.stringToTerraform(struct!.absHostIp),
    abs_host_user: cdktf.stringToTerraform(struct!.absHostUser),
    abs_prefix: cdktf.stringToTerraform(struct!.absPrefix),
    abs_public_key: cdktf.stringToTerraform(struct!.absPublicKey),
    academy_id: cdktf.stringToTerraform(struct!.academyId),
    access_confirmation: cdktf.stringToTerraform(struct!.accessConfirmation),
    access_id: cdktf.stringToTerraform(struct!.accessId),
    access_key: cdktf.stringToTerraform(struct!.accessKey),
    access_key_id: cdktf.stringToTerraform(struct!.accessKeyId),
    access_key_secret: cdktf.stringToTerraform(struct!.accessKeySecret),
    access_token: cdktf.stringToTerraform(struct!.accessToken),
    access_type: cdktf.stringToTerraform(struct!.accessType),
    account: cdktf.stringToTerraform(struct!.account),
    account_access_token: cdktf.stringToTerraform(struct!.accountAccessToken),
    account_id: cdktf.stringToTerraform(struct!.accountId),
    account_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.accountIds),
    account_key: cdktf.stringToTerraform(struct!.accountKey),
    account_name: cdktf.stringToTerraform(struct!.accountName),
    account_plan: cdktf.stringToTerraform(struct!.accountPlan),
    account_region: cdktf.stringToTerraform(struct!.accountRegion),
    account_sid: cdktf.stringToTerraform(struct!.accountSid),
    account_sync_mode: cdktf.stringToTerraform(struct!.accountSyncMode),
    account_token: cdktf.stringToTerraform(struct!.accountToken),
    account_type: cdktf.stringToTerraform(struct!.accountType),
    accounts: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.accounts),
    accounts_sync_mode: cdktf.stringToTerraform(struct!.accountsSyncMode),
    action_breakdowns: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.actionBreakdowns),
    action_report_time: cdktf.stringToTerraform(struct!.actionReportTime),
    ad_analytics: cdktf.stringToTerraform(struct!.adAnalytics),
    ad_unit_view: cdktf.stringToTerraform(struct!.adUnitView),
    admin_api_key: cdktf.stringToTerraform(struct!.adminApiKey),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    advertisables: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.advertisables),
    advertisers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.advertisers),
    advertisers_id: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.advertisersId),
    advertisers_sync_mode: cdktf.stringToTerraform(struct!.advertisersSyncMode),
    advertisers_with_seat: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.advertisersWithSeat),
    agent_config_method: cdktf.stringToTerraform(struct!.agentConfigMethod),
    agent_host: cdktf.stringToTerraform(struct!.agentHost),
    agent_id: cdktf.stringToTerraform(struct!.agentId),
    agent_ora_home: cdktf.stringToTerraform(struct!.agentOraHome),
    agent_password: cdktf.stringToTerraform(struct!.agentPassword),
    agent_port: cdktf.numberToTerraform(struct!.agentPort),
    agent_public_cert: cdktf.stringToTerraform(struct!.agentPublicCert),
    agent_user: cdktf.stringToTerraform(struct!.agentUser),
    aggregation: cdktf.stringToTerraform(struct!.aggregation),
    agreement_grant_token: cdktf.stringToTerraform(struct!.agreementGrantToken),
    algorithm: cdktf.stringToTerraform(struct!.algorithm),
    always_encrypted: cdktf.booleanToTerraform(struct!.alwaysEncrypted),
    api: cdktf.stringToTerraform(struct!.api),
    api_access_token: cdktf.stringToTerraform(struct!.apiAccessToken),
    api_environment: cdktf.stringToTerraform(struct!.apiEnvironment),
    api_id: cdktf.stringToTerraform(struct!.apiId),
    api_key: cdktf.stringToTerraform(struct!.apiKey),
    api_key_api_secret: cdktf.stringToTerraform(struct!.apiKeyApiSecret),
    api_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.apiKeys),
    api_password: cdktf.stringToTerraform(struct!.apiPassword),
    api_quota: cdktf.numberToTerraform(struct!.apiQuota),
    api_read_access_token: cdktf.stringToTerraform(struct!.apiReadAccessToken),
    api_requests_per_minute: cdktf.numberToTerraform(struct!.apiRequestsPerMinute),
    api_role: cdktf.stringToTerraform(struct!.apiRole),
    api_secret: cdktf.stringToTerraform(struct!.apiSecret),
    api_secret_key: cdktf.stringToTerraform(struct!.apiSecretKey),
    api_server: cdktf.stringToTerraform(struct!.apiServer),
    api_token: cdktf.stringToTerraform(struct!.apiToken),
    api_type: cdktf.stringToTerraform(struct!.apiType),
    api_url: cdktf.stringToTerraform(struct!.apiUrl),
    api_url_region: cdktf.stringToTerraform(struct!.apiUrlRegion),
    api_usage: cdktf.stringToTerraform(struct!.apiUsage),
    api_user_identifier: cdktf.stringToTerraform(struct!.apiUserIdentifier),
    api_user_secret: cdktf.stringToTerraform(struct!.apiUserSecret),
    api_username: cdktf.stringToTerraform(struct!.apiUsername),
    api_utilization_percentage: cdktf.stringToTerraform(struct!.apiUtilizationPercentage),
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    app_id: cdktf.stringToTerraform(struct!.appId),
    app_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.appIds),
    app_key: cdktf.stringToTerraform(struct!.appKey),
    app_reference: cdktf.stringToTerraform(struct!.appReference),
    app_secret: cdktf.stringToTerraform(struct!.appSecret),
    app_secret_token: cdktf.stringToTerraform(struct!.appSecretToken),
    app_specific_password: cdktf.stringToTerraform(struct!.appSpecificPassword),
    app_sync_mode: cdktf.stringToTerraform(struct!.appSyncMode),
    append_file_option: cdktf.stringToTerraform(struct!.appendFileOption),
    application_id: cdktf.stringToTerraform(struct!.applicationId),
    application_key: cdktf.stringToTerraform(struct!.applicationKey),
    apps: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.apps),
    archive_log_format: cdktf.stringToTerraform(struct!.archiveLogFormat),
    archive_log_path: cdktf.stringToTerraform(struct!.archiveLogPath),
    archive_pattern: cdktf.stringToTerraform(struct!.archivePattern),
    are_soap_credentials_provided: cdktf.booleanToTerraform(struct!.areSoapCredentialsProvided),
    asb_ip: cdktf.stringToTerraform(struct!.asbIp),
    asm_option: cdktf.booleanToTerraform(struct!.asmOption),
    asm_oracle_home: cdktf.stringToTerraform(struct!.asmOracleHome),
    asm_password: cdktf.stringToTerraform(struct!.asmPassword),
    asm_tns: cdktf.stringToTerraform(struct!.asmTns),
    asm_user: cdktf.stringToTerraform(struct!.asmUser),
    attribution_window: cdktf.stringToTerraform(struct!.attributionWindow),
    attribution_window_size: cdktf.stringToTerraform(struct!.attributionWindowSize),
    audience: cdktf.stringToTerraform(struct!.audience),
    auth: cdktf.stringToTerraform(struct!.auth),
    auth_code: cdktf.stringToTerraform(struct!.authCode),
    auth_environment: cdktf.stringToTerraform(struct!.authEnvironment),
    auth_header_key: cdktf.stringToTerraform(struct!.authHeaderKey),
    auth_method: cdktf.stringToTerraform(struct!.authMethod),
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    auth_secret: cdktf.stringToTerraform(struct!.authSecret),
    auth_token: cdktf.stringToTerraform(struct!.authToken),
    auth_type: cdktf.stringToTerraform(struct!.authType),
    auth_url_region: cdktf.stringToTerraform(struct!.authUrlRegion),
    authentication_method: cdktf.stringToTerraform(struct!.authenticationMethod),
    authorization_url: cdktf.stringToTerraform(struct!.authorizationUrl),
    aws_region_code: cdktf.stringToTerraform(struct!.awsRegionCode),
    backint_configuration_path: cdktf.stringToTerraform(struct!.backintConfigurationPath),
    backint_executable_path: cdktf.stringToTerraform(struct!.backintExecutablePath),
    backup_log_format: cdktf.stringToTerraform(struct!.backupLogFormat),
    backup_log_path: cdktf.stringToTerraform(struct!.backupLogPath),
    backup_storage_type: cdktf.stringToTerraform(struct!.backupStorageType),
    backward_sync_limit: cdktf.stringToTerraform(struct!.backwardSyncLimit),
    backward_sync_limit_date: cdktf.stringToTerraform(struct!.backwardSyncLimitDate),
    base_currency: cdktf.stringToTerraform(struct!.baseCurrency),
    base_domain: cdktf.stringToTerraform(struct!.baseDomain),
    base_id: cdktf.stringToTerraform(struct!.baseId),
    base_url: cdktf.stringToTerraform(struct!.baseUrl),
    bearer_token: cdktf.stringToTerraform(struct!.bearerToken),
    binary_log_type: cdktf.stringToTerraform(struct!.binaryLogType),
    binary_representation: cdktf.stringToTerraform(struct!.binaryRepresentation),
    blob_sas_url: cdktf.stringToTerraform(struct!.blobSasUrl),
    blockchain: cdktf.stringToTerraform(struct!.blockchain),
    brand_id: cdktf.stringToTerraform(struct!.brandId),
    breakdowns: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.breakdowns),
    bucket: cdktf.stringToTerraform(struct!.bucket),
    bucket_name: cdktf.stringToTerraform(struct!.bucketName),
    bucket_service: cdktf.stringToTerraform(struct!.bucketService),
    business_accounts: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.businessAccounts),
    business_id: cdktf.stringToTerraform(struct!.businessId),
    business_unit: cdktf.stringToTerraform(struct!.businessUnit),
    business_unit_id: cdktf.stringToTerraform(struct!.businessUnitId),
    catalog: cdktf.stringToTerraform(struct!.catalog),
    certificate: cdktf.stringToTerraform(struct!.certificate),
    certificate_id: cdktf.stringToTerraform(struct!.certificateId),
    click_attribution_window: cdktf.stringToTerraform(struct!.clickAttributionWindow),
    client: cdktf.stringToTerraform(struct!.client),
    client_cert: cdktf.stringToTerraform(struct!.clientCert),
    client_cert_key: cdktf.stringToTerraform(struct!.clientCertKey),
    client_host: cdktf.stringToTerraform(struct!.clientHost),
    client_id: cdktf.stringToTerraform(struct!.clientId),
    client_key: cdktf.stringToTerraform(struct!.clientKey),
    client_name: cdktf.stringToTerraform(struct!.clientName),
    client_namespace: cdktf.stringToTerraform(struct!.clientNamespace),
    client_private_key: cdktf.stringToTerraform(struct!.clientPrivateKey),
    client_public_certificate: cdktf.stringToTerraform(struct!.clientPublicCertificate),
    client_secret: cdktf.stringToTerraform(struct!.clientSecret),
    cloud_storage_type: cdktf.stringToTerraform(struct!.cloudStorageType),
    collection_address: cdktf.stringToTerraform(struct!.collectionAddress),
    columns: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.columns),
    community_api_key_name: cdktf.stringToTerraform(struct!.communityApiKeyName),
    community_domain: cdktf.stringToTerraform(struct!.communityDomain),
    community_id: cdktf.stringToTerraform(struct!.communityId),
    companies: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.companies),
    company: cdktf.stringToTerraform(struct!.company),
    company_id: cdktf.stringToTerraform(struct!.companyId),
    company_ids: cdktf.stringToTerraform(struct!.companyIds),
    company_key: cdktf.stringToTerraform(struct!.companyKey),
    company_name: cdktf.stringToTerraform(struct!.companyName),
    company_request_token: cdktf.stringToTerraform(struct!.companyRequestToken),
    company_uuid: cdktf.stringToTerraform(struct!.companyUuid),
    compression: cdktf.stringToTerraform(struct!.compression),
    config_method: cdktf.stringToTerraform(struct!.configMethod),
    config_repository_url: cdktf.stringToTerraform(struct!.configRepositoryUrl),
    config_type: cdktf.stringToTerraform(struct!.configType),
    connect_password: cdktf.stringToTerraform(struct!.connectPassword),
    connect_username: cdktf.stringToTerraform(struct!.connectUsername),
    connecting_user: cdktf.stringToTerraform(struct!.connectingUser),
    connecting_user_email: cdktf.stringToTerraform(struct!.connectingUserEmail),
    connection_method: cdktf.stringToTerraform(struct!.connectionMethod),
    connection_name: cdktf.stringToTerraform(struct!.connectionName),
    connection_string: cdktf.stringToTerraform(struct!.connectionString),
    connection_type: cdktf.stringToTerraform(struct!.connectionType),
    console_url: cdktf.stringToTerraform(struct!.consoleUrl),
    consumer_group: cdktf.stringToTerraform(struct!.consumerGroup),
    consumer_key: cdktf.stringToTerraform(struct!.consumerKey),
    consumer_name: cdktf.stringToTerraform(struct!.consumerName),
    consumer_secret: cdktf.stringToTerraform(struct!.consumerSecret),
    container_address: cdktf.stringToTerraform(struct!.containerAddress),
    container_name: cdktf.stringToTerraform(struct!.containerName),
    content_owner_id: cdktf.stringToTerraform(struct!.contentOwnerId),
    contract_version: cdktf.stringToTerraform(struct!.contractVersion),
    conversation_webhook_url: cdktf.stringToTerraform(struct!.conversationWebhookUrl),
    conversion_dimensions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.conversionDimensions),
    conversion_report_time: cdktf.stringToTerraform(struct!.conversionReportTime),
    conversion_window_size: cdktf.numberToTerraform(struct!.conversionWindowSize),
    convert_dats_type_to_date: cdktf.booleanToTerraform(struct!.convertDatsTypeToDate),
    csv_definition: cdktf.stringToTerraform(struct!.csvDefinition),
    currency: cdktf.stringToTerraform(struct!.currency),
    custom_base_url: cdktf.stringToTerraform(struct!.customBaseUrl),
    custom_dimension_key_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.customDimensionKeyIds),
    custom_event_sync_mode: cdktf.stringToTerraform(struct!.customEventSyncMode),
    custom_events: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.customEvents),
    custom_field_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.customFieldIds),
    custom_floodlight_variables: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.customFloodlightVariables),
    custom_rate_limit: cdktf.stringToTerraform(struct!.customRateLimit),
    custom_url: cdktf.stringToTerraform(struct!.customUrl),
    customer_api_key: cdktf.stringToTerraform(struct!.customerApiKey),
    customer_id: cdktf.stringToTerraform(struct!.customerId),
    customer_list_id: cdktf.stringToTerraform(struct!.customerListId),
    daily_api_call_limit: cdktf.numberToTerraform(struct!.dailyApiCallLimit),
    data_access_method: cdktf.stringToTerraform(struct!.dataAccessMethod),
    data_center: cdktf.stringToTerraform(struct!.dataCenter),
    data_center_id: cdktf.stringToTerraform(struct!.dataCenterId),
    data_set_name: cdktf.stringToTerraform(struct!.dataSetName),
    database: cdktf.stringToTerraform(struct!.database),
    database_name: cdktf.stringToTerraform(struct!.databaseName),
    dataset_id: cdktf.stringToTerraform(struct!.datasetId),
    datasource: cdktf.stringToTerraform(struct!.datasource),
    date_granularity: cdktf.stringToTerraform(struct!.dateGranularity),
    db: cdktf.stringToTerraform(struct!.db),
    default_host: cdktf.stringToTerraform(struct!.defaultHost),
    delimiter: cdktf.stringToTerraform(struct!.delimiter),
    developer_reference: cdktf.stringToTerraform(struct!.developerReference),
    dimension_attributes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.dimensionAttributes),
    dimensions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.dimensions),
    direct_capture_method: cdktf.stringToTerraform(struct!.directCaptureMethod),
    directories: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.directories),
    directory_sync_mode: cdktf.stringToTerraform(struct!.directorySyncMode),
    distributed_connector_cluster_size: cdktf.numberToTerraform(struct!.distributedConnectorClusterSize),
    distribution_incremental_fetch_window_days: cdktf.numberToTerraform(struct!.distributionIncrementalFetchWindowDays),
    domain: cdktf.stringToTerraform(struct!.domain),
    domain_host_name: cdktf.stringToTerraform(struct!.domainHostName),
    domain_name: cdktf.stringToTerraform(struct!.domainName),
    domain_type: cdktf.stringToTerraform(struct!.domainType),
    dsv_service_auth: cdktf.stringToTerraform(struct!.dsvServiceAuth),
    dsv_subscription_key: cdktf.stringToTerraform(struct!.dsvSubscriptionKey),
    ecommerce_stores: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.ecommerceStores),
    edition: cdktf.stringToTerraform(struct!.edition),
    elements: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.elements),
    email: cdktf.stringToTerraform(struct!.email),
    email_address: cdktf.stringToTerraform(struct!.emailAddress),
    email_id: cdktf.stringToTerraform(struct!.emailId),
    empty_header: cdktf.booleanToTerraform(struct!.emptyHeader),
    enable_all_dimension_combinations: cdktf.booleanToTerraform(struct!.enableAllDimensionCombinations),
    enable_archive_log_only: cdktf.booleanToTerraform(struct!.enableArchiveLogOnly),
    enable_data_extensions_syncing: cdktf.booleanToTerraform(struct!.enableDataExtensionsSyncing),
    enable_distributed_connector_mode: cdktf.booleanToTerraform(struct!.enableDistributedConnectorMode),
    enable_enrichments: cdktf.booleanToTerraform(struct!.enableEnrichments),
    enable_exports: cdktf.booleanToTerraform(struct!.enableExports),
    enable_tde: cdktf.booleanToTerraform(struct!.enableTde),
    enable_tde_encryption: cdktf.booleanToTerraform(struct!.enableTdeEncryption),
    encoded_public_key: cdktf.stringToTerraform(struct!.encodedPublicKey),
    encryption_key: cdktf.stringToTerraform(struct!.encryptionKey),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    endpoint_url: cdktf.stringToTerraform(struct!.endpointUrl),
    engagement_attribution_window: cdktf.stringToTerraform(struct!.engagementAttributionWindow),
    enriched_export: cdktf.stringToTerraform(struct!.enrichedExport),
    entity_id: cdktf.stringToTerraform(struct!.entityId),
    entra_app_id: cdktf.stringToTerraform(struct!.entraAppId),
    entra_tenant_id: cdktf.stringToTerraform(struct!.entraTenantId),
    environment: cdktf.stringToTerraform(struct!.environment),
    environment_host: cdktf.stringToTerraform(struct!.environmentHost),
    environment_name: cdktf.stringToTerraform(struct!.environmentName),
    escape_char: cdktf.stringToTerraform(struct!.escapeChar),
    escape_char_options: cdktf.stringToTerraform(struct!.escapeCharOptions),
    eu_region: cdktf.booleanToTerraform(struct!.euRegion),
    events: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.events),
    export_native_types_as_pdf: cdktf.booleanToTerraform(struct!.exportNativeTypesAsPdf),
    export_storage_type: cdktf.stringToTerraform(struct!.exportStorageType),
    external_id: cdktf.stringToTerraform(struct!.externalId),
    facility_codes: cdktf.stringToTerraform(struct!.facilityCodes),
    fields: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.fields),
    file_handling: cdktf.stringToTerraform(struct!.fileHandling),
    file_type: cdktf.stringToTerraform(struct!.fileType),
    filter: cdktf.stringToTerraform(struct!.filter),
    finance_account_sync_mode: cdktf.stringToTerraform(struct!.financeAccountSyncMode),
    finance_accounts: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.financeAccounts),
    folder: cdktf.stringToTerraform(struct!.folder),
    folder_id: cdktf.stringToTerraform(struct!.folderId),
    folder_path: cdktf.stringToTerraform(struct!.folderPath),
    forecast_id: cdktf.stringToTerraform(struct!.forecastId),
    ftp_host: cdktf.stringToTerraform(struct!.ftpHost),
    ftp_password: cdktf.stringToTerraform(struct!.ftpPassword),
    ftp_port: cdktf.numberToTerraform(struct!.ftpPort),
    ftp_user: cdktf.stringToTerraform(struct!.ftpUser),
    function: cdktf.stringToTerraform(struct!.function),
    function_app: cdktf.stringToTerraform(struct!.functionApp),
    function_key: cdktf.stringToTerraform(struct!.functionKey),
    function_name: cdktf.stringToTerraform(struct!.functionName),
    function_trigger: cdktf.stringToTerraform(struct!.functionTrigger),
    gcs_bucket: cdktf.stringToTerraform(struct!.gcsBucket),
    gcs_export_bucket: cdktf.stringToTerraform(struct!.gcsExportBucket),
    gcs_export_folder: cdktf.stringToTerraform(struct!.gcsExportFolder),
    gcs_folder: cdktf.stringToTerraform(struct!.gcsFolder),
    generate_fivetran_pk: cdktf.booleanToTerraform(struct!.generateFivetranPk),
    group_id: cdktf.stringToTerraform(struct!.groupId),
    group_name: cdktf.stringToTerraform(struct!.groupName),
    hana_backup_password: cdktf.stringToTerraform(struct!.hanaBackupPassword),
    hana_mode: cdktf.stringToTerraform(struct!.hanaMode),
    has_manage_permissions: cdktf.booleanToTerraform(struct!.hasManagePermissions),
    historic_sync_time_frame: cdktf.stringToTerraform(struct!.historicSyncTimeFrame),
    historical_sync_limit: cdktf.stringToTerraform(struct!.historicalSyncLimit),
    historical_sync_limit_date: cdktf.stringToTerraform(struct!.historicalSyncLimitDate),
    historical_sync_limit_time_frame: cdktf.stringToTerraform(struct!.historicalSyncLimitTimeFrame),
    historical_sync_time_frame: cdktf.stringToTerraform(struct!.historicalSyncTimeFrame),
    home_folder: cdktf.stringToTerraform(struct!.homeFolder),
    host: cdktf.stringToTerraform(struct!.host),
    host_ip: cdktf.stringToTerraform(struct!.hostIp),
    host_name: cdktf.stringToTerraform(struct!.hostName),
    host_url: cdktf.stringToTerraform(struct!.hostUrl),
    host_user: cdktf.stringToTerraform(struct!.hostUser),
    hostname: cdktf.stringToTerraform(struct!.hostname),
    hosts: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.hosts),
    http_path: cdktf.stringToTerraform(struct!.httpPath),
    identifier: cdktf.stringToTerraform(struct!.identifier),
    identity: cdktf.stringToTerraform(struct!.identity),
    include_inherited_columns: cdktf.booleanToTerraform(struct!.includeInheritedColumns),
    include_ocapi_endpoints: cdktf.booleanToTerraform(struct!.includeOcapiEndpoints),
    instance: cdktf.stringToTerraform(struct!.instance),
    instance_code: cdktf.stringToTerraform(struct!.instanceCode),
    instance_number: cdktf.stringToTerraform(struct!.instanceNumber),
    instance_url: cdktf.stringToTerraform(struct!.instanceUrl),
    integration_key: cdktf.stringToTerraform(struct!.integrationKey),
    ip_address: cdktf.stringToTerraform(struct!.ipAddress),
    is_account_level_connector: cdktf.booleanToTerraform(struct!.isAccountLevelConnector),
    is_auth2_enabled: cdktf.booleanToTerraform(struct!.isAuth2Enabled),
    is_custom_api_credentials: cdktf.booleanToTerraform(struct!.isCustomApiCredentials),
    is_external_activities_endpoint_selected: cdktf.booleanToTerraform(struct!.isExternalActivitiesEndpointSelected),
    is_ftps: cdktf.booleanToTerraform(struct!.isFtps),
    is_keypair: cdktf.booleanToTerraform(struct!.isKeypair),
    is_multi_entity_feature_enabled: cdktf.booleanToTerraform(struct!.isMultiEntityFeatureEnabled),
    is_new_package: cdktf.booleanToTerraform(struct!.isNewPackage),
    is_private_key_encrypted: cdktf.booleanToTerraform(struct!.isPrivateKeyEncrypted),
    is_private_link_required: cdktf.booleanToTerraform(struct!.isPrivateLinkRequired),
    is_public: cdktf.booleanToTerraform(struct!.isPublic),
    is_sailthru_connect_enabled: cdktf.booleanToTerraform(struct!.isSailthruConnectEnabled),
    is_secure: cdktf.booleanToTerraform(struct!.isSecure),
    is_sftp_creds_available: cdktf.booleanToTerraform(struct!.isSftpCredsAvailable),
    is_single_table_mode: cdktf.booleanToTerraform(struct!.isSingleTableMode),
    is_test_account: cdktf.booleanToTerraform(struct!.isTestAccount),
    is_vendor: cdktf.booleanToTerraform(struct!.isVendor),
    issuer: cdktf.stringToTerraform(struct!.issuer),
    issuer_id: cdktf.stringToTerraform(struct!.issuerId),
    json_delivery_mode: cdktf.stringToTerraform(struct!.jsonDeliveryMode),
    key: cdktf.stringToTerraform(struct!.key),
    key_id: cdktf.stringToTerraform(struct!.keyId),
    key_password: cdktf.stringToTerraform(struct!.keyPassword),
    key_store_type: cdktf.stringToTerraform(struct!.keyStoreType),
    keystore: cdktf.stringToTerraform(struct!.keystore),
    keystore_password: cdktf.stringToTerraform(struct!.keystorePassword),
    legal_entity_id: cdktf.stringToTerraform(struct!.legalEntityId),
    limit_for_api_calls_to_external_activities_endpoint: cdktf.numberToTerraform(struct!.limitForApiCallsToExternalActivitiesEndpoint),
    line_separator: cdktf.stringToTerraform(struct!.lineSeparator),
    list_id: cdktf.stringToTerraform(struct!.listId),
    list_of_company_ids: cdktf.stringToTerraform(struct!.listOfCompanyIds),
    list_strategy: cdktf.stringToTerraform(struct!.listStrategy),
    list_sync_mode: cdktf.stringToTerraform(struct!.listSyncMode),
    log_journal: cdktf.stringToTerraform(struct!.logJournal),
    log_journal_schema: cdktf.stringToTerraform(struct!.logJournalSchema),
    log_on_group: cdktf.stringToTerraform(struct!.logOnGroup),
    login: cdktf.stringToTerraform(struct!.login),
    login_password: cdktf.stringToTerraform(struct!.loginPassword),
    look_back_window_for_gl_batch_endpoint: cdktf.numberToTerraform(struct!.lookBackWindowForGlBatchEndpoint),
    manager_accounts: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.managerAccounts),
    max_api_requests_per_day: cdktf.numberToTerraform(struct!.maxApiRequestsPerDay),
    merchant_id: cdktf.stringToTerraform(struct!.merchantId),
    message_type: cdktf.stringToTerraform(struct!.messageType),
    metric_id: cdktf.stringToTerraform(struct!.metricId),
    metrics: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.metrics),
    named_range: cdktf.stringToTerraform(struct!.namedRange),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    network_code: cdktf.numberToTerraform(struct!.networkCode),
    non_standard_escape_char: cdktf.booleanToTerraform(struct!.nonStandardEscapeChar),
    null_sequence: cdktf.stringToTerraform(struct!.nullSequence),
    oauth_token: cdktf.stringToTerraform(struct!.oauthToken),
    oauth_token_secret: cdktf.stringToTerraform(struct!.oauthTokenSecret),
    ocapi_client_id: cdktf.stringToTerraform(struct!.ocapiClientId),
    ocapi_client_secret: cdktf.stringToTerraform(struct!.ocapiClientSecret),
    ocapi_custom_object_types: cdktf.stringToTerraform(struct!.ocapiCustomObjectTypes),
    ocapi_hostname: cdktf.stringToTerraform(struct!.ocapiHostname),
    odbc_driver_manager_library_path: cdktf.stringToTerraform(struct!.odbcDriverManagerLibraryPath),
    odbc_sys_ini_path: cdktf.stringToTerraform(struct!.odbcSysIniPath),
    on_error: cdktf.stringToTerraform(struct!.onError),
    on_premise: cdktf.booleanToTerraform(struct!.onPremise),
    organization: cdktf.stringToTerraform(struct!.organization),
    organization_domain: cdktf.stringToTerraform(struct!.organizationDomain),
    organization_id: cdktf.stringToTerraform(struct!.organizationId),
    organization_name: cdktf.stringToTerraform(struct!.organizationName),
    organizations: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.organizations),
    packed_mode_tables: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.packedModeTables),
    packing_mode: cdktf.stringToTerraform(struct!.packingMode),
    pages: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.pages),
    partner_code: cdktf.stringToTerraform(struct!.partnerCode),
    partner_user_id: cdktf.stringToTerraform(struct!.partnerUserId),
    partner_user_secret: cdktf.stringToTerraform(struct!.partnerUserSecret),
    partners: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.partners),
    pass_phrase: cdktf.stringToTerraform(struct!.passPhrase),
    passphrase: cdktf.stringToTerraform(struct!.passphrase),
    password: cdktf.stringToTerraform(struct!.password),
    pat: cdktf.stringToTerraform(struct!.pat),
    pat_name: cdktf.stringToTerraform(struct!.patName),
    pat_secret: cdktf.stringToTerraform(struct!.patSecret),
    path: cdktf.stringToTerraform(struct!.path),
    pats: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.pats),
    pattern: cdktf.stringToTerraform(struct!.pattern),
    pdb_name: cdktf.stringToTerraform(struct!.pdbName),
    pem_certificate: cdktf.stringToTerraform(struct!.pemCertificate),
    pem_private_key: cdktf.stringToTerraform(struct!.pemPrivateKey),
    per_interaction_dimensions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.perInteractionDimensions),
    personal_access_token: cdktf.stringToTerraform(struct!.personalAccessToken),
    personal_api_token: cdktf.stringToTerraform(struct!.personalApiToken),
    pgp_pass_phrase: cdktf.stringToTerraform(struct!.pgpPassPhrase),
    pgp_secret_key: cdktf.stringToTerraform(struct!.pgpSecretKey),
    phone_number: cdktf.stringToTerraform(struct!.phoneNumber),
    plan: cdktf.stringToTerraform(struct!.plan),
    plan_type: cdktf.stringToTerraform(struct!.planType),
    port: cdktf.numberToTerraform(struct!.port),
    post_click_attribution_window_size: cdktf.stringToTerraform(struct!.postClickAttributionWindowSize),
    prebuilt_report: cdktf.stringToTerraform(struct!.prebuiltReport),
    prefix: cdktf.stringToTerraform(struct!.prefix),
    primary_key: cdktf.stringToTerraform(struct!.primaryKey),
    primary_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.primaryKeys),
    prioritise_bulk_export_over_rest: cdktf.booleanToTerraform(struct!.prioritiseBulkExportOverRest),
    private_access_token: cdktf.stringToTerraform(struct!.privateAccessToken),
    private_key: cdktf.stringToTerraform(struct!.privateKey),
    private_token: cdktf.stringToTerraform(struct!.privateToken),
    product: cdktf.stringToTerraform(struct!.product),
    profiles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.profiles),
    profiles_amazon_dsp: cdktf.stringToTerraform(struct!.profilesAmazonDsp),
    project_access_token: cdktf.stringToTerraform(struct!.projectAccessToken),
    project_id: cdktf.stringToTerraform(struct!.projectId),
    project_ids: cdktf.stringToTerraform(struct!.projectIds),
    project_key: cdktf.stringToTerraform(struct!.projectKey),
    projects: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.projects),
    properties: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.properties),
    property_id: cdktf.stringToTerraform(struct!.propertyId),
    public_key: cdktf.stringToTerraform(struct!.publicKey),
    publication_name: cdktf.stringToTerraform(struct!.publicationName),
    publisher_id: cdktf.stringToTerraform(struct!.publisherId),
    pull_archived_campaigns: cdktf.booleanToTerraform(struct!.pullArchivedCampaigns),
    python_version: cdktf.stringToTerraform(struct!.pythonVersion),
    query_id: cdktf.stringToTerraform(struct!.queryId),
    query_param_value: cdktf.stringToTerraform(struct!.queryParamValue),
    quota_project_id: cdktf.stringToTerraform(struct!.quotaProjectId),
    quote_char: cdktf.stringToTerraform(struct!.quoteChar),
    quote_character_enabled: cdktf.booleanToTerraform(struct!.quoteCharacterEnabled),
    rate_limit_plan: cdktf.stringToTerraform(struct!.rateLimitPlan),
    refresh_token: cdktf.stringToTerraform(struct!.refreshToken),
    refresh_token_expires_at: cdktf.stringToTerraform(struct!.refreshTokenExpiresAt),
    region: cdktf.stringToTerraform(struct!.region),
    region_api_url: cdktf.stringToTerraform(struct!.regionApiUrl),
    region_auth_url: cdktf.stringToTerraform(struct!.regionAuthUrl),
    region_token_url: cdktf.stringToTerraform(struct!.regionTokenUrl),
    region_url: cdktf.stringToTerraform(struct!.regionUrl),
    replica_id: cdktf.numberToTerraform(struct!.replicaId),
    replication_slot: cdktf.stringToTerraform(struct!.replicationSlot),
    report_configuration_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.reportConfigurationIds),
    report_format_type: cdktf.stringToTerraform(struct!.reportFormatType),
    report_granularity: cdktf.stringToTerraform(struct!.reportGranularity),
    report_keys: cdktf.stringToTerraform(struct!.reportKeys),
    report_service_api_key: cdktf.stringToTerraform(struct!.reportServiceApiKey),
    report_suites: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.reportSuites),
    report_timezone: cdktf.stringToTerraform(struct!.reportTimezone),
    report_type: cdktf.stringToTerraform(struct!.reportType),
    report_url: cdktf.stringToTerraform(struct!.reportUrl),
    reports_linkedin_ads: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.reportsLinkedinAds),
    repositories: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.repositories),
    resource_token: cdktf.stringToTerraform(struct!.resourceToken),
    resource_url: cdktf.stringToTerraform(struct!.resourceUrl),
    rest_api_limit: cdktf.numberToTerraform(struct!.restApiLimit),
    rfc_library_path: cdktf.stringToTerraform(struct!.rfcLibraryPath),
    role: cdktf.stringToTerraform(struct!.role),
    role_arn: cdktf.stringToTerraform(struct!.roleArn),
    rollback_window: cdktf.numberToTerraform(struct!.rollbackWindow),
    rollback_window_size: cdktf.numberToTerraform(struct!.rollbackWindowSize),
    root_resource_id: cdktf.stringToTerraform(struct!.rootResourceId),
    s3_export_bucket: cdktf.stringToTerraform(struct!.s3ExportBucket),
    s3_export_external_id: cdktf.stringToTerraform(struct!.s3ExportExternalId),
    s3_export_folder: cdktf.stringToTerraform(struct!.s3ExportFolder),
    s3_export_role_arn: cdktf.stringToTerraform(struct!.s3ExportRoleArn),
    s3bucket: cdktf.stringToTerraform(struct!.s3Bucket),
    s3external_id: cdktf.stringToTerraform(struct!.s3ExternalId),
    s3folder: cdktf.stringToTerraform(struct!.s3Folder),
    s3path: cdktf.stringToTerraform(struct!.s3Path),
    s3role_arn: cdktf.stringToTerraform(struct!.s3RoleArn),
    sales_account_sync_mode: cdktf.stringToTerraform(struct!.salesAccountSyncMode),
    sales_accounts: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.salesAccounts),
    salesforce_security_token: cdktf.stringToTerraform(struct!.salesforceSecurityToken),
    sandbox_account: cdktf.stringToTerraform(struct!.sandboxAccount),
    sap_schema: cdktf.stringToTerraform(struct!.sapSchema),
    sap_source_schema: cdktf.stringToTerraform(struct!.sapSourceSchema),
    sap_user: cdktf.stringToTerraform(struct!.sapUser),
    sasl_mechanism: cdktf.stringToTerraform(struct!.saslMechanism),
    sasl_plain_key: cdktf.stringToTerraform(struct!.saslPlainKey),
    sasl_plain_secret: cdktf.stringToTerraform(struct!.saslPlainSecret),
    sasl_scram256_key: cdktf.stringToTerraform(struct!.saslScram256Key),
    sasl_scram256_secret: cdktf.stringToTerraform(struct!.saslScram256Secret),
    sasl_scram512_key: cdktf.stringToTerraform(struct!.saslScram512Key),
    sasl_scram512_secret: cdktf.stringToTerraform(struct!.saslScram512Secret),
    schema_registry_credentials_source: cdktf.stringToTerraform(struct!.schemaRegistryCredentialsSource),
    schema_registry_key: cdktf.stringToTerraform(struct!.schemaRegistryKey),
    schema_registry_secret: cdktf.stringToTerraform(struct!.schemaRegistrySecret),
    schema_registry_urls: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.schemaRegistryUrls),
    scope: cdktf.stringToTerraform(struct!.scope),
    scopes: cdktf.stringToTerraform(struct!.scopes),
    seats: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.seats),
    secret: cdktf.stringToTerraform(struct!.secret),
    secret_access_key: cdktf.stringToTerraform(struct!.secretAccessKey),
    secret_key: cdktf.stringToTerraform(struct!.secretKey),
    secrets: cdktf.stringToTerraform(struct!.secrets),
    security_protocol: cdktf.stringToTerraform(struct!.securityProtocol),
    segments: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.segments),
    selected_event_types: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.selectedEventTypes),
    selected_exports: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.selectedExports),
    selected_range: cdktf.stringToTerraform(struct!.selectedRange),
    sender_id: cdktf.stringToTerraform(struct!.senderId),
    sender_password: cdktf.stringToTerraform(struct!.senderPassword),
    server: cdktf.stringToTerraform(struct!.server),
    server_address: cdktf.stringToTerraform(struct!.serverAddress),
    server_region: cdktf.stringToTerraform(struct!.serverRegion),
    server_url: cdktf.stringToTerraform(struct!.serverUrl),
    server_variable: cdktf.stringToTerraform(struct!.serverVariable),
    servers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.servers),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_email: cdktf.stringToTerraform(struct!.serviceAccountEmail),
    service_account_key: cdktf.stringToTerraform(struct!.serviceAccountKey),
    service_account_secret: cdktf.stringToTerraform(struct!.serviceAccountSecret),
    service_account_username: cdktf.stringToTerraform(struct!.serviceAccountUsername),
    service_authentication: cdktf.stringToTerraform(struct!.serviceAuthentication),
    service_name: cdktf.stringToTerraform(struct!.serviceName),
    sftp_host: cdktf.stringToTerraform(struct!.sftpHost),
    sftp_is_key_pair: cdktf.booleanToTerraform(struct!.sftpIsKeyPair),
    sftp_password: cdktf.stringToTerraform(struct!.sftpPassword),
    sftp_port: cdktf.numberToTerraform(struct!.sftpPort),
    sftp_public_key: cdktf.stringToTerraform(struct!.sftpPublicKey),
    sftp_user: cdktf.stringToTerraform(struct!.sftpUser),
    share_url: cdktf.stringToTerraform(struct!.shareUrl),
    sheet_id: cdktf.stringToTerraform(struct!.sheetId),
    shop: cdktf.stringToTerraform(struct!.shop),
    shop_domain: cdktf.stringToTerraform(struct!.shopDomain),
    short_code: cdktf.stringToTerraform(struct!.shortCode),
    should_sync_events_with_deleted_profiles: cdktf.booleanToTerraform(struct!.shouldSyncEventsWithDeletedProfiles),
    should_sync_reimport_tables: cdktf.booleanToTerraform(struct!.shouldSyncReimportTables),
    show_records_with_no_metrics: cdktf.booleanToTerraform(struct!.showRecordsWithNoMetrics),
    sid: cdktf.stringToTerraform(struct!.sid),
    signature_encoding: cdktf.stringToTerraform(struct!.signatureEncoding),
    signer_public_key: cdktf.stringToTerraform(struct!.signerPublicKey),
    site_address: cdktf.stringToTerraform(struct!.siteAddress),
    site_id: cdktf.stringToTerraform(struct!.siteId),
    site_name: cdktf.stringToTerraform(struct!.siteName),
    site_urls: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.siteUrls),
    skip_after: cdktf.numberToTerraform(struct!.skipAfter),
    skip_before: cdktf.numberToTerraform(struct!.skipBefore),
    skip_empty_reports: cdktf.booleanToTerraform(struct!.skipEmptyReports),
    snc_certificate: cdktf.stringToTerraform(struct!.sncCertificate),
    snc_certificate_source: cdktf.stringToTerraform(struct!.sncCertificateSource),
    snc_fivetran_name: cdktf.stringToTerraform(struct!.sncFivetranName),
    snc_library_path: cdktf.stringToTerraform(struct!.sncLibraryPath),
    snc_mode: cdktf.stringToTerraform(struct!.sncMode),
    snc_my_name: cdktf.stringToTerraform(struct!.sncMyName),
    snc_name: cdktf.stringToTerraform(struct!.sncName),
    snc_partner_name: cdktf.stringToTerraform(struct!.sncPartnerName),
    snc_source_name: cdktf.stringToTerraform(struct!.sncSourceName),
    soap_uri: cdktf.stringToTerraform(struct!.soapUri),
    social_data_sync_timeframe: cdktf.stringToTerraform(struct!.socialDataSyncTimeframe),
    source: cdktf.stringToTerraform(struct!.source),
    source_name: cdktf.stringToTerraform(struct!.sourceName),
    store_hash: cdktf.stringToTerraform(struct!.storeHash),
    store_id: cdktf.stringToTerraform(struct!.storeId),
    sub_collections: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.subCollections),
    sub_domain: cdktf.stringToTerraform(struct!.subDomain),
    subdomain: cdktf.stringToTerraform(struct!.subdomain),
    subscription: cdktf.stringToTerraform(struct!.subscription),
    subscription_key: cdktf.stringToTerraform(struct!.subscriptionKey),
    support_connected_accounts_sync: cdktf.booleanToTerraform(struct!.supportConnectedAccountsSync),
    support_nested_columns: cdktf.booleanToTerraform(struct!.supportNestedColumns),
    survey_ids: cdktf.stringToTerraform(struct!.surveyIds),
    swipe_attribution_window: cdktf.stringToTerraform(struct!.swipeAttributionWindow),
    sync_data_locker: cdktf.booleanToTerraform(struct!.syncDataLocker),
    sync_format: cdktf.stringToTerraform(struct!.syncFormat),
    sync_formula_fields: cdktf.booleanToTerraform(struct!.syncFormulaFields),
    sync_metadata: cdktf.booleanToTerraform(struct!.syncMetadata),
    sync_method: cdktf.stringToTerraform(struct!.syncMethod),
    sync_mode: cdktf.stringToTerraform(struct!.syncMode),
    sync_mode_advertiser: cdktf.stringToTerraform(struct!.syncModeAdvertiser),
    sync_mode_seat: cdktf.stringToTerraform(struct!.syncModeSeat),
    sync_multiple_accounts: cdktf.booleanToTerraform(struct!.syncMultipleAccounts),
    sync_pack_mode: cdktf.stringToTerraform(struct!.syncPackMode),
    sync_permissions: cdktf.booleanToTerraform(struct!.syncPermissions),
    sync_pull_api: cdktf.booleanToTerraform(struct!.syncPullApi),
    sync_type: cdktf.stringToTerraform(struct!.syncType),
    sysnr: cdktf.stringToTerraform(struct!.sysnr),
    system_id: cdktf.stringToTerraform(struct!.systemId),
    table_id: cdktf.stringToTerraform(struct!.tableId),
    table_name: cdktf.stringToTerraform(struct!.tableName),
    tables_without_access_updated_at: cdktf.stringToTerraform(struct!.tablesWithoutAccessUpdatedAt),
    target_entity_id: cdktf.stringToTerraform(struct!.targetEntityId),
    target_host: cdktf.stringToTerraform(struct!.targetHost),
    tde_certificate: cdktf.stringToTerraform(struct!.tdeCertificate),
    tde_certificate_name: cdktf.stringToTerraform(struct!.tdeCertificateName),
    tde_password: cdktf.stringToTerraform(struct!.tdePassword),
    tde_private_key: cdktf.stringToTerraform(struct!.tdePrivateKey),
    tde_wallet_password: cdktf.stringToTerraform(struct!.tdeWalletPassword),
    team_id: cdktf.stringToTerraform(struct!.teamId),
    technical_account_id: cdktf.stringToTerraform(struct!.technicalAccountId),
    template_labels: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.templateLabels),
    tenant: cdktf.stringToTerraform(struct!.tenant),
    tenant_app_url: cdktf.stringToTerraform(struct!.tenantAppUrl),
    tenant_code: cdktf.stringToTerraform(struct!.tenantCode),
    tenant_id: cdktf.stringToTerraform(struct!.tenantId),
    tenant_name: cdktf.stringToTerraform(struct!.tenantName),
    tenant_url: cdktf.stringToTerraform(struct!.tenantUrl),
    test_table_name: cdktf.stringToTerraform(struct!.testTableName),
    time_zone: cdktf.stringToTerraform(struct!.timeZone),
    timeframe_months: cdktf.stringToTerraform(struct!.timeframeMonths),
    timezone: cdktf.stringToTerraform(struct!.timezone),
    timezone_mode: cdktf.stringToTerraform(struct!.timezoneMode),
    tns: cdktf.stringToTerraform(struct!.tns),
    toast_id: cdktf.stringToTerraform(struct!.toastId),
    token: cdktf.stringToTerraform(struct!.token),
    token_authenticated_container: cdktf.stringToTerraform(struct!.tokenAuthenticatedContainer),
    token_authenticated_database: cdktf.stringToTerraform(struct!.tokenAuthenticatedDatabase),
    token_id: cdktf.stringToTerraform(struct!.tokenId),
    token_key: cdktf.stringToTerraform(struct!.tokenKey),
    token_secret: cdktf.stringToTerraform(struct!.tokenSecret),
    token_secret_key: cdktf.stringToTerraform(struct!.tokenSecretKey),
    token_url_region: cdktf.stringToTerraform(struct!.tokenUrlRegion),
    topics: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.topics),
    trust_store_type: cdktf.stringToTerraform(struct!.trustStoreType),
    trusted_cert: cdktf.stringToTerraform(struct!.trustedCert),
    truststore: cdktf.stringToTerraform(struct!.truststore),
    tunnel_host: cdktf.stringToTerraform(struct!.tunnelHost),
    tunnel_port: cdktf.numberToTerraform(struct!.tunnelPort),
    tunnel_user: cdktf.stringToTerraform(struct!.tunnelUser),
    type_name: cdktf.stringToTerraform(struct!.typeName),
    unique_id: cdktf.stringToTerraform(struct!.uniqueId),
    update_config_on_each_sync: cdktf.booleanToTerraform(struct!.updateConfigOnEachSync),
    update_method: cdktf.stringToTerraform(struct!.updateMethod),
    uri: cdktf.stringToTerraform(struct!.uri),
    url_format: cdktf.stringToTerraform(struct!.urlFormat),
    use_api_keys: cdktf.booleanToTerraform(struct!.useApiKeys),
    use_cloud_storage: cdktf.booleanToTerraform(struct!.useCloudStorage),
    use_customer_bucket: cdktf.booleanToTerraform(struct!.useCustomerBucket),
    use_oracle_rac: cdktf.booleanToTerraform(struct!.useOracleRac),
    use_pgp_encryption_options: cdktf.booleanToTerraform(struct!.usePgpEncryptionOptions),
    use_service_account: cdktf.booleanToTerraform(struct!.useServiceAccount),
    use_template_labels: cdktf.booleanToTerraform(struct!.useTemplateLabels),
    use_webhooks: cdktf.booleanToTerraform(struct!.useWebhooks),
    use_workspace: cdktf.booleanToTerraform(struct!.useWorkspace),
    user: cdktf.stringToTerraform(struct!.user),
    user_id: cdktf.stringToTerraform(struct!.userId),
    user_key: cdktf.stringToTerraform(struct!.userKey),
    user_name: cdktf.stringToTerraform(struct!.userName),
    user_profiles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.userProfiles),
    user_token: cdktf.stringToTerraform(struct!.userToken),
    username: cdktf.stringToTerraform(struct!.username),
    vendors_id: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.vendorsId),
    version: cdktf.stringToTerraform(struct!.version),
    view_attribution_window: cdktf.stringToTerraform(struct!.viewAttributionWindow),
    view_id: cdktf.stringToTerraform(struct!.viewId),
    view_through_attribution_window_size: cdktf.stringToTerraform(struct!.viewThroughAttributionWindowSize),
    web_service_api_key: cdktf.stringToTerraform(struct!.webServiceApiKey),
    webhook_endpoint: cdktf.stringToTerraform(struct!.webhookEndpoint),
    webhook_key: cdktf.stringToTerraform(struct!.webhookKey),
    webhook_name: cdktf.stringToTerraform(struct!.webhookName),
    webhook_url: cdktf.stringToTerraform(struct!.webhookUrl),
    word_press_site_id_or_woocommerce_domain_name: cdktf.stringToTerraform(struct!.wordPressSiteIdOrWoocommerceDomainName),
    workplace_id: cdktf.stringToTerraform(struct!.workplaceId),
    workspace: cdktf.stringToTerraform(struct!.workspace),
    workspace_name: cdktf.stringToTerraform(struct!.workspaceName),
    workspace_same_as_source: cdktf.booleanToTerraform(struct!.workspaceSameAsSource),
    workspace_schema: cdktf.stringToTerraform(struct!.workspaceSchema),
    workspace_token: cdktf.stringToTerraform(struct!.workspaceToken),
    ws_certificate: cdktf.stringToTerraform(struct!.wsCertificate),
    x_api_key: cdktf.stringToTerraform(struct!.xApiKey),
    x_key: cdktf.stringToTerraform(struct!.xKey),
    x_master_key: cdktf.stringToTerraform(struct!.xMasterKey),
    x_user_email: cdktf.stringToTerraform(struct!.xUserEmail),
    x_user_token: cdktf.stringToTerraform(struct!.xUserToken),
    accounts_reddit_ads: cdktf.listMapper(connectorConfigAccountsRedditAdsToTerraform, true)(struct!.accountsRedditAds),
    adobe_analytics_configurations: cdktf.listMapper(connectorConfigAdobeAnalyticsConfigurationsToTerraform, true)(struct!.adobeAnalyticsConfigurations),
    app_ids_appsflyer: cdktf.listMapper(connectorConfigAppIdsAppsflyerToTerraform, true)(struct!.appIdsAppsflyer),
    custom_payloads: cdktf.listMapper(connectorConfigCustomPayloadsToTerraform, true)(struct!.customPayloads),
    custom_reports: cdktf.listMapper(connectorConfigCustomReportsToTerraform, true)(struct!.customReports),
    custom_tables: cdktf.listMapper(connectorConfigCustomTablesToTerraform, true)(struct!.customTables),
    data_model_path_alias_list: cdktf.listMapper(connectorConfigDataModelPathAliasListStructToTerraform, true)(struct!.dataModelPathAliasList),
    files: cdktf.listMapper(connectorConfigFilesToTerraform, true)(struct!.files),
    project_credentials: cdktf.listMapper(connectorConfigProjectCredentialsToTerraform, true)(struct!.projectCredentials),
    report_configs: cdktf.listMapper(connectorConfigReportConfigsToTerraform, true)(struct!.reportConfigs),
    report_list: cdktf.listMapper(connectorConfigReportListStructToTerraform, true)(struct!.reportList),
    reports: cdktf.listMapper(connectorConfigReportsToTerraform, true)(struct!.reports),
    secrets_list: cdktf.listMapper(connectorConfigSecretsListStructToTerraform, true)(struct!.secretsList),
    tenant_configs: cdktf.listMapper(connectorConfigTenantConfigsToTerraform, true)(struct!.tenantConfigs),
  }
}


export function connectorConfigAToHclTerraform(struct?: ConnectorConfigA | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    abs_connection_method: {
      value: cdktf.stringToHclTerraform(struct!.absConnectionMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    abs_connection_string: {
      value: cdktf.stringToHclTerraform(struct!.absConnectionString),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    abs_container_address: {
      value: cdktf.stringToHclTerraform(struct!.absContainerAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    abs_container_name: {
      value: cdktf.stringToHclTerraform(struct!.absContainerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    abs_host_ip: {
      value: cdktf.stringToHclTerraform(struct!.absHostIp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    abs_host_user: {
      value: cdktf.stringToHclTerraform(struct!.absHostUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    abs_prefix: {
      value: cdktf.stringToHclTerraform(struct!.absPrefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    abs_public_key: {
      value: cdktf.stringToHclTerraform(struct!.absPublicKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    academy_id: {
      value: cdktf.stringToHclTerraform(struct!.academyId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    access_confirmation: {
      value: cdktf.stringToHclTerraform(struct!.accessConfirmation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    access_id: {
      value: cdktf.stringToHclTerraform(struct!.accessId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    access_key: {
      value: cdktf.stringToHclTerraform(struct!.accessKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    access_key_id: {
      value: cdktf.stringToHclTerraform(struct!.accessKeyId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    access_key_secret: {
      value: cdktf.stringToHclTerraform(struct!.accessKeySecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    access_token: {
      value: cdktf.stringToHclTerraform(struct!.accessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    access_type: {
      value: cdktf.stringToHclTerraform(struct!.accessType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    account: {
      value: cdktf.stringToHclTerraform(struct!.account),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    account_access_token: {
      value: cdktf.stringToHclTerraform(struct!.accountAccessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    account_id: {
      value: cdktf.stringToHclTerraform(struct!.accountId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    account_ids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.accountIds),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    account_key: {
      value: cdktf.stringToHclTerraform(struct!.accountKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    account_name: {
      value: cdktf.stringToHclTerraform(struct!.accountName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    account_plan: {
      value: cdktf.stringToHclTerraform(struct!.accountPlan),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    account_region: {
      value: cdktf.stringToHclTerraform(struct!.accountRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    account_sid: {
      value: cdktf.stringToHclTerraform(struct!.accountSid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    account_sync_mode: {
      value: cdktf.stringToHclTerraform(struct!.accountSyncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    account_token: {
      value: cdktf.stringToHclTerraform(struct!.accountToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    account_type: {
      value: cdktf.stringToHclTerraform(struct!.accountType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    accounts: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.accounts),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    accounts_sync_mode: {
      value: cdktf.stringToHclTerraform(struct!.accountsSyncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    action_breakdowns: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.actionBreakdowns),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    action_report_time: {
      value: cdktf.stringToHclTerraform(struct!.actionReportTime),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ad_analytics: {
      value: cdktf.stringToHclTerraform(struct!.adAnalytics),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ad_unit_view: {
      value: cdktf.stringToHclTerraform(struct!.adUnitView),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_api_key: {
      value: cdktf.stringToHclTerraform(struct!.adminApiKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    advertisables: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.advertisables),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    advertisers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.advertisers),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    advertisers_id: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.advertisersId),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    advertisers_sync_mode: {
      value: cdktf.stringToHclTerraform(struct!.advertisersSyncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    advertisers_with_seat: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.advertisersWithSeat),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    agent_config_method: {
      value: cdktf.stringToHclTerraform(struct!.agentConfigMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    agent_host: {
      value: cdktf.stringToHclTerraform(struct!.agentHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    agent_id: {
      value: cdktf.stringToHclTerraform(struct!.agentId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    agent_ora_home: {
      value: cdktf.stringToHclTerraform(struct!.agentOraHome),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    agent_password: {
      value: cdktf.stringToHclTerraform(struct!.agentPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    agent_port: {
      value: cdktf.numberToHclTerraform(struct!.agentPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    agent_public_cert: {
      value: cdktf.stringToHclTerraform(struct!.agentPublicCert),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    agent_user: {
      value: cdktf.stringToHclTerraform(struct!.agentUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    aggregation: {
      value: cdktf.stringToHclTerraform(struct!.aggregation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    agreement_grant_token: {
      value: cdktf.stringToHclTerraform(struct!.agreementGrantToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    algorithm: {
      value: cdktf.stringToHclTerraform(struct!.algorithm),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    always_encrypted: {
      value: cdktf.booleanToHclTerraform(struct!.alwaysEncrypted),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    api: {
      value: cdktf.stringToHclTerraform(struct!.api),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_access_token: {
      value: cdktf.stringToHclTerraform(struct!.apiAccessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_environment: {
      value: cdktf.stringToHclTerraform(struct!.apiEnvironment),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_id: {
      value: cdktf.stringToHclTerraform(struct!.apiId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_key: {
      value: cdktf.stringToHclTerraform(struct!.apiKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_key_api_secret: {
      value: cdktf.stringToHclTerraform(struct!.apiKeyApiSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.apiKeys),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    api_password: {
      value: cdktf.stringToHclTerraform(struct!.apiPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_quota: {
      value: cdktf.numberToHclTerraform(struct!.apiQuota),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    api_read_access_token: {
      value: cdktf.stringToHclTerraform(struct!.apiReadAccessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_requests_per_minute: {
      value: cdktf.numberToHclTerraform(struct!.apiRequestsPerMinute),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    api_role: {
      value: cdktf.stringToHclTerraform(struct!.apiRole),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_secret: {
      value: cdktf.stringToHclTerraform(struct!.apiSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_secret_key: {
      value: cdktf.stringToHclTerraform(struct!.apiSecretKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_server: {
      value: cdktf.stringToHclTerraform(struct!.apiServer),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_token: {
      value: cdktf.stringToHclTerraform(struct!.apiToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_type: {
      value: cdktf.stringToHclTerraform(struct!.apiType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_url: {
      value: cdktf.stringToHclTerraform(struct!.apiUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_url_region: {
      value: cdktf.stringToHclTerraform(struct!.apiUrlRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_usage: {
      value: cdktf.stringToHclTerraform(struct!.apiUsage),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_user_identifier: {
      value: cdktf.stringToHclTerraform(struct!.apiUserIdentifier),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_user_secret: {
      value: cdktf.stringToHclTerraform(struct!.apiUserSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_username: {
      value: cdktf.stringToHclTerraform(struct!.apiUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_utilization_percentage: {
      value: cdktf.stringToHclTerraform(struct!.apiUtilizationPercentage),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    app_id: {
      value: cdktf.stringToHclTerraform(struct!.appId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    app_ids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.appIds),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    app_key: {
      value: cdktf.stringToHclTerraform(struct!.appKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    app_reference: {
      value: cdktf.stringToHclTerraform(struct!.appReference),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    app_secret: {
      value: cdktf.stringToHclTerraform(struct!.appSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    app_secret_token: {
      value: cdktf.stringToHclTerraform(struct!.appSecretToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    app_specific_password: {
      value: cdktf.stringToHclTerraform(struct!.appSpecificPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    app_sync_mode: {
      value: cdktf.stringToHclTerraform(struct!.appSyncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    append_file_option: {
      value: cdktf.stringToHclTerraform(struct!.appendFileOption),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    application_id: {
      value: cdktf.stringToHclTerraform(struct!.applicationId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    application_key: {
      value: cdktf.stringToHclTerraform(struct!.applicationKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    apps: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.apps),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    archive_log_format: {
      value: cdktf.stringToHclTerraform(struct!.archiveLogFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    archive_log_path: {
      value: cdktf.stringToHclTerraform(struct!.archiveLogPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    archive_pattern: {
      value: cdktf.stringToHclTerraform(struct!.archivePattern),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    are_soap_credentials_provided: {
      value: cdktf.booleanToHclTerraform(struct!.areSoapCredentialsProvided),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    asb_ip: {
      value: cdktf.stringToHclTerraform(struct!.asbIp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    asm_option: {
      value: cdktf.booleanToHclTerraform(struct!.asmOption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    asm_oracle_home: {
      value: cdktf.stringToHclTerraform(struct!.asmOracleHome),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    asm_password: {
      value: cdktf.stringToHclTerraform(struct!.asmPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    asm_tns: {
      value: cdktf.stringToHclTerraform(struct!.asmTns),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    asm_user: {
      value: cdktf.stringToHclTerraform(struct!.asmUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    attribution_window: {
      value: cdktf.stringToHclTerraform(struct!.attributionWindow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    attribution_window_size: {
      value: cdktf.stringToHclTerraform(struct!.attributionWindowSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    audience: {
      value: cdktf.stringToHclTerraform(struct!.audience),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth: {
      value: cdktf.stringToHclTerraform(struct!.auth),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_code: {
      value: cdktf.stringToHclTerraform(struct!.authCode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_environment: {
      value: cdktf.stringToHclTerraform(struct!.authEnvironment),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_header_key: {
      value: cdktf.stringToHclTerraform(struct!.authHeaderKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_method: {
      value: cdktf.stringToHclTerraform(struct!.authMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_secret: {
      value: cdktf.stringToHclTerraform(struct!.authSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_token: {
      value: cdktf.stringToHclTerraform(struct!.authToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_type: {
      value: cdktf.stringToHclTerraform(struct!.authType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_url_region: {
      value: cdktf.stringToHclTerraform(struct!.authUrlRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    authentication_method: {
      value: cdktf.stringToHclTerraform(struct!.authenticationMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    authorization_url: {
      value: cdktf.stringToHclTerraform(struct!.authorizationUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    aws_region_code: {
      value: cdktf.stringToHclTerraform(struct!.awsRegionCode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    backint_configuration_path: {
      value: cdktf.stringToHclTerraform(struct!.backintConfigurationPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    backint_executable_path: {
      value: cdktf.stringToHclTerraform(struct!.backintExecutablePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    backup_log_format: {
      value: cdktf.stringToHclTerraform(struct!.backupLogFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    backup_log_path: {
      value: cdktf.stringToHclTerraform(struct!.backupLogPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    backup_storage_type: {
      value: cdktf.stringToHclTerraform(struct!.backupStorageType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    backward_sync_limit: {
      value: cdktf.stringToHclTerraform(struct!.backwardSyncLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    backward_sync_limit_date: {
      value: cdktf.stringToHclTerraform(struct!.backwardSyncLimitDate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    base_currency: {
      value: cdktf.stringToHclTerraform(struct!.baseCurrency),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    base_domain: {
      value: cdktf.stringToHclTerraform(struct!.baseDomain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    base_id: {
      value: cdktf.stringToHclTerraform(struct!.baseId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    base_url: {
      value: cdktf.stringToHclTerraform(struct!.baseUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    bearer_token: {
      value: cdktf.stringToHclTerraform(struct!.bearerToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    binary_log_type: {
      value: cdktf.stringToHclTerraform(struct!.binaryLogType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    binary_representation: {
      value: cdktf.stringToHclTerraform(struct!.binaryRepresentation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    blob_sas_url: {
      value: cdktf.stringToHclTerraform(struct!.blobSasUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    blockchain: {
      value: cdktf.stringToHclTerraform(struct!.blockchain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    brand_id: {
      value: cdktf.stringToHclTerraform(struct!.brandId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    breakdowns: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.breakdowns),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    bucket: {
      value: cdktf.stringToHclTerraform(struct!.bucket),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    bucket_name: {
      value: cdktf.stringToHclTerraform(struct!.bucketName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    bucket_service: {
      value: cdktf.stringToHclTerraform(struct!.bucketService),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    business_accounts: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.businessAccounts),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    business_id: {
      value: cdktf.stringToHclTerraform(struct!.businessId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    business_unit: {
      value: cdktf.stringToHclTerraform(struct!.businessUnit),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    business_unit_id: {
      value: cdktf.stringToHclTerraform(struct!.businessUnitId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    catalog: {
      value: cdktf.stringToHclTerraform(struct!.catalog),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    certificate: {
      value: cdktf.stringToHclTerraform(struct!.certificate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    certificate_id: {
      value: cdktf.stringToHclTerraform(struct!.certificateId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    click_attribution_window: {
      value: cdktf.stringToHclTerraform(struct!.clickAttributionWindow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client: {
      value: cdktf.stringToHclTerraform(struct!.client),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_cert: {
      value: cdktf.stringToHclTerraform(struct!.clientCert),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_cert_key: {
      value: cdktf.stringToHclTerraform(struct!.clientCertKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_host: {
      value: cdktf.stringToHclTerraform(struct!.clientHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_key: {
      value: cdktf.stringToHclTerraform(struct!.clientKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_name: {
      value: cdktf.stringToHclTerraform(struct!.clientName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_namespace: {
      value: cdktf.stringToHclTerraform(struct!.clientNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_private_key: {
      value: cdktf.stringToHclTerraform(struct!.clientPrivateKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_public_certificate: {
      value: cdktf.stringToHclTerraform(struct!.clientPublicCertificate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_secret: {
      value: cdktf.stringToHclTerraform(struct!.clientSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    cloud_storage_type: {
      value: cdktf.stringToHclTerraform(struct!.cloudStorageType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    collection_address: {
      value: cdktf.stringToHclTerraform(struct!.collectionAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    columns: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.columns),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    community_api_key_name: {
      value: cdktf.stringToHclTerraform(struct!.communityApiKeyName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    community_domain: {
      value: cdktf.stringToHclTerraform(struct!.communityDomain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    community_id: {
      value: cdktf.stringToHclTerraform(struct!.communityId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    companies: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.companies),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    company: {
      value: cdktf.stringToHclTerraform(struct!.company),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    company_id: {
      value: cdktf.stringToHclTerraform(struct!.companyId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    company_ids: {
      value: cdktf.stringToHclTerraform(struct!.companyIds),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    company_key: {
      value: cdktf.stringToHclTerraform(struct!.companyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    company_name: {
      value: cdktf.stringToHclTerraform(struct!.companyName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    company_request_token: {
      value: cdktf.stringToHclTerraform(struct!.companyRequestToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    company_uuid: {
      value: cdktf.stringToHclTerraform(struct!.companyUuid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    compression: {
      value: cdktf.stringToHclTerraform(struct!.compression),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config_method: {
      value: cdktf.stringToHclTerraform(struct!.configMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config_repository_url: {
      value: cdktf.stringToHclTerraform(struct!.configRepositoryUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config_type: {
      value: cdktf.stringToHclTerraform(struct!.configType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    connect_password: {
      value: cdktf.stringToHclTerraform(struct!.connectPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    connect_username: {
      value: cdktf.stringToHclTerraform(struct!.connectUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    connecting_user: {
      value: cdktf.stringToHclTerraform(struct!.connectingUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    connecting_user_email: {
      value: cdktf.stringToHclTerraform(struct!.connectingUserEmail),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    connection_method: {
      value: cdktf.stringToHclTerraform(struct!.connectionMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    connection_name: {
      value: cdktf.stringToHclTerraform(struct!.connectionName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    connection_string: {
      value: cdktf.stringToHclTerraform(struct!.connectionString),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    connection_type: {
      value: cdktf.stringToHclTerraform(struct!.connectionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    console_url: {
      value: cdktf.stringToHclTerraform(struct!.consoleUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    consumer_group: {
      value: cdktf.stringToHclTerraform(struct!.consumerGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    consumer_key: {
      value: cdktf.stringToHclTerraform(struct!.consumerKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    consumer_name: {
      value: cdktf.stringToHclTerraform(struct!.consumerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    consumer_secret: {
      value: cdktf.stringToHclTerraform(struct!.consumerSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    container_address: {
      value: cdktf.stringToHclTerraform(struct!.containerAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    container_name: {
      value: cdktf.stringToHclTerraform(struct!.containerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    content_owner_id: {
      value: cdktf.stringToHclTerraform(struct!.contentOwnerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    contract_version: {
      value: cdktf.stringToHclTerraform(struct!.contractVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    conversation_webhook_url: {
      value: cdktf.stringToHclTerraform(struct!.conversationWebhookUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    conversion_dimensions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.conversionDimensions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    conversion_report_time: {
      value: cdktf.stringToHclTerraform(struct!.conversionReportTime),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    conversion_window_size: {
      value: cdktf.numberToHclTerraform(struct!.conversionWindowSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    convert_dats_type_to_date: {
      value: cdktf.booleanToHclTerraform(struct!.convertDatsTypeToDate),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    csv_definition: {
      value: cdktf.stringToHclTerraform(struct!.csvDefinition),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    currency: {
      value: cdktf.stringToHclTerraform(struct!.currency),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    custom_base_url: {
      value: cdktf.stringToHclTerraform(struct!.customBaseUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    custom_dimension_key_ids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.customDimensionKeyIds),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    custom_event_sync_mode: {
      value: cdktf.stringToHclTerraform(struct!.customEventSyncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    custom_events: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.customEvents),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    custom_field_ids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.customFieldIds),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    custom_floodlight_variables: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.customFloodlightVariables),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    custom_rate_limit: {
      value: cdktf.stringToHclTerraform(struct!.customRateLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    custom_url: {
      value: cdktf.stringToHclTerraform(struct!.customUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    customer_api_key: {
      value: cdktf.stringToHclTerraform(struct!.customerApiKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    customer_id: {
      value: cdktf.stringToHclTerraform(struct!.customerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    customer_list_id: {
      value: cdktf.stringToHclTerraform(struct!.customerListId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    daily_api_call_limit: {
      value: cdktf.numberToHclTerraform(struct!.dailyApiCallLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    data_access_method: {
      value: cdktf.stringToHclTerraform(struct!.dataAccessMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_center: {
      value: cdktf.stringToHclTerraform(struct!.dataCenter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_center_id: {
      value: cdktf.stringToHclTerraform(struct!.dataCenterId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_set_name: {
      value: cdktf.stringToHclTerraform(struct!.dataSetName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    database_name: {
      value: cdktf.stringToHclTerraform(struct!.databaseName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dataset_id: {
      value: cdktf.stringToHclTerraform(struct!.datasetId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    datasource: {
      value: cdktf.stringToHclTerraform(struct!.datasource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    date_granularity: {
      value: cdktf.stringToHclTerraform(struct!.dateGranularity),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    db: {
      value: cdktf.stringToHclTerraform(struct!.db),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    default_host: {
      value: cdktf.stringToHclTerraform(struct!.defaultHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    delimiter: {
      value: cdktf.stringToHclTerraform(struct!.delimiter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    developer_reference: {
      value: cdktf.stringToHclTerraform(struct!.developerReference),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dimension_attributes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.dimensionAttributes),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    dimensions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.dimensions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    direct_capture_method: {
      value: cdktf.stringToHclTerraform(struct!.directCaptureMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    directories: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.directories),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    directory_sync_mode: {
      value: cdktf.stringToHclTerraform(struct!.directorySyncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    distributed_connector_cluster_size: {
      value: cdktf.numberToHclTerraform(struct!.distributedConnectorClusterSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    distribution_incremental_fetch_window_days: {
      value: cdktf.numberToHclTerraform(struct!.distributionIncrementalFetchWindowDays),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    domain: {
      value: cdktf.stringToHclTerraform(struct!.domain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    domain_host_name: {
      value: cdktf.stringToHclTerraform(struct!.domainHostName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    domain_name: {
      value: cdktf.stringToHclTerraform(struct!.domainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    domain_type: {
      value: cdktf.stringToHclTerraform(struct!.domainType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dsv_service_auth: {
      value: cdktf.stringToHclTerraform(struct!.dsvServiceAuth),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dsv_subscription_key: {
      value: cdktf.stringToHclTerraform(struct!.dsvSubscriptionKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ecommerce_stores: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.ecommerceStores),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    edition: {
      value: cdktf.stringToHclTerraform(struct!.edition),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    elements: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.elements),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    email: {
      value: cdktf.stringToHclTerraform(struct!.email),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    email_address: {
      value: cdktf.stringToHclTerraform(struct!.emailAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    email_id: {
      value: cdktf.stringToHclTerraform(struct!.emailId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    empty_header: {
      value: cdktf.booleanToHclTerraform(struct!.emptyHeader),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_all_dimension_combinations: {
      value: cdktf.booleanToHclTerraform(struct!.enableAllDimensionCombinations),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_archive_log_only: {
      value: cdktf.booleanToHclTerraform(struct!.enableArchiveLogOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_data_extensions_syncing: {
      value: cdktf.booleanToHclTerraform(struct!.enableDataExtensionsSyncing),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_distributed_connector_mode: {
      value: cdktf.booleanToHclTerraform(struct!.enableDistributedConnectorMode),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_enrichments: {
      value: cdktf.booleanToHclTerraform(struct!.enableEnrichments),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_exports: {
      value: cdktf.booleanToHclTerraform(struct!.enableExports),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_tde: {
      value: cdktf.booleanToHclTerraform(struct!.enableTde),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enable_tde_encryption: {
      value: cdktf.booleanToHclTerraform(struct!.enableTdeEncryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    encoded_public_key: {
      value: cdktf.stringToHclTerraform(struct!.encodedPublicKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    encryption_key: {
      value: cdktf.stringToHclTerraform(struct!.encryptionKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint_url: {
      value: cdktf.stringToHclTerraform(struct!.endpointUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    engagement_attribution_window: {
      value: cdktf.stringToHclTerraform(struct!.engagementAttributionWindow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enriched_export: {
      value: cdktf.stringToHclTerraform(struct!.enrichedExport),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    entity_id: {
      value: cdktf.stringToHclTerraform(struct!.entityId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    entra_app_id: {
      value: cdktf.stringToHclTerraform(struct!.entraAppId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    entra_tenant_id: {
      value: cdktf.stringToHclTerraform(struct!.entraTenantId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    environment: {
      value: cdktf.stringToHclTerraform(struct!.environment),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    environment_host: {
      value: cdktf.stringToHclTerraform(struct!.environmentHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    environment_name: {
      value: cdktf.stringToHclTerraform(struct!.environmentName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    escape_char: {
      value: cdktf.stringToHclTerraform(struct!.escapeChar),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    escape_char_options: {
      value: cdktf.stringToHclTerraform(struct!.escapeCharOptions),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    eu_region: {
      value: cdktf.booleanToHclTerraform(struct!.euRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    events: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.events),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    export_native_types_as_pdf: {
      value: cdktf.booleanToHclTerraform(struct!.exportNativeTypesAsPdf),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    export_storage_type: {
      value: cdktf.stringToHclTerraform(struct!.exportStorageType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    external_id: {
      value: cdktf.stringToHclTerraform(struct!.externalId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    facility_codes: {
      value: cdktf.stringToHclTerraform(struct!.facilityCodes),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fields: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.fields),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    file_handling: {
      value: cdktf.stringToHclTerraform(struct!.fileHandling),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    file_type: {
      value: cdktf.stringToHclTerraform(struct!.fileType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    filter: {
      value: cdktf.stringToHclTerraform(struct!.filter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    finance_account_sync_mode: {
      value: cdktf.stringToHclTerraform(struct!.financeAccountSyncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    finance_accounts: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.financeAccounts),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    folder: {
      value: cdktf.stringToHclTerraform(struct!.folder),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    folder_id: {
      value: cdktf.stringToHclTerraform(struct!.folderId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    folder_path: {
      value: cdktf.stringToHclTerraform(struct!.folderPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    forecast_id: {
      value: cdktf.stringToHclTerraform(struct!.forecastId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ftp_host: {
      value: cdktf.stringToHclTerraform(struct!.ftpHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ftp_password: {
      value: cdktf.stringToHclTerraform(struct!.ftpPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ftp_port: {
      value: cdktf.numberToHclTerraform(struct!.ftpPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ftp_user: {
      value: cdktf.stringToHclTerraform(struct!.ftpUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    function: {
      value: cdktf.stringToHclTerraform(struct!.function),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    function_app: {
      value: cdktf.stringToHclTerraform(struct!.functionApp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    function_key: {
      value: cdktf.stringToHclTerraform(struct!.functionKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    function_name: {
      value: cdktf.stringToHclTerraform(struct!.functionName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    function_trigger: {
      value: cdktf.stringToHclTerraform(struct!.functionTrigger),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gcs_bucket: {
      value: cdktf.stringToHclTerraform(struct!.gcsBucket),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gcs_export_bucket: {
      value: cdktf.stringToHclTerraform(struct!.gcsExportBucket),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gcs_export_folder: {
      value: cdktf.stringToHclTerraform(struct!.gcsExportFolder),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gcs_folder: {
      value: cdktf.stringToHclTerraform(struct!.gcsFolder),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    generate_fivetran_pk: {
      value: cdktf.booleanToHclTerraform(struct!.generateFivetranPk),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    group_id: {
      value: cdktf.stringToHclTerraform(struct!.groupId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    group_name: {
      value: cdktf.stringToHclTerraform(struct!.groupName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hana_backup_password: {
      value: cdktf.stringToHclTerraform(struct!.hanaBackupPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hana_mode: {
      value: cdktf.stringToHclTerraform(struct!.hanaMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    has_manage_permissions: {
      value: cdktf.booleanToHclTerraform(struct!.hasManagePermissions),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    historic_sync_time_frame: {
      value: cdktf.stringToHclTerraform(struct!.historicSyncTimeFrame),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    historical_sync_limit: {
      value: cdktf.stringToHclTerraform(struct!.historicalSyncLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    historical_sync_limit_date: {
      value: cdktf.stringToHclTerraform(struct!.historicalSyncLimitDate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    historical_sync_limit_time_frame: {
      value: cdktf.stringToHclTerraform(struct!.historicalSyncLimitTimeFrame),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    historical_sync_time_frame: {
      value: cdktf.stringToHclTerraform(struct!.historicalSyncTimeFrame),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    home_folder: {
      value: cdktf.stringToHclTerraform(struct!.homeFolder),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    host_ip: {
      value: cdktf.stringToHclTerraform(struct!.hostIp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    host_name: {
      value: cdktf.stringToHclTerraform(struct!.hostName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    host_url: {
      value: cdktf.stringToHclTerraform(struct!.hostUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    host_user: {
      value: cdktf.stringToHclTerraform(struct!.hostUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hostname: {
      value: cdktf.stringToHclTerraform(struct!.hostname),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hosts: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.hosts),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    http_path: {
      value: cdktf.stringToHclTerraform(struct!.httpPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    identifier: {
      value: cdktf.stringToHclTerraform(struct!.identifier),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    identity: {
      value: cdktf.stringToHclTerraform(struct!.identity),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    include_inherited_columns: {
      value: cdktf.booleanToHclTerraform(struct!.includeInheritedColumns),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    include_ocapi_endpoints: {
      value: cdktf.booleanToHclTerraform(struct!.includeOcapiEndpoints),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    instance: {
      value: cdktf.stringToHclTerraform(struct!.instance),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    instance_code: {
      value: cdktf.stringToHclTerraform(struct!.instanceCode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    instance_number: {
      value: cdktf.stringToHclTerraform(struct!.instanceNumber),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    instance_url: {
      value: cdktf.stringToHclTerraform(struct!.instanceUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    integration_key: {
      value: cdktf.stringToHclTerraform(struct!.integrationKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_address: {
      value: cdktf.stringToHclTerraform(struct!.ipAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    is_account_level_connector: {
      value: cdktf.booleanToHclTerraform(struct!.isAccountLevelConnector),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_auth2_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.isAuth2Enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_custom_api_credentials: {
      value: cdktf.booleanToHclTerraform(struct!.isCustomApiCredentials),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_external_activities_endpoint_selected: {
      value: cdktf.booleanToHclTerraform(struct!.isExternalActivitiesEndpointSelected),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_ftps: {
      value: cdktf.booleanToHclTerraform(struct!.isFtps),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_keypair: {
      value: cdktf.booleanToHclTerraform(struct!.isKeypair),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_multi_entity_feature_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.isMultiEntityFeatureEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_new_package: {
      value: cdktf.booleanToHclTerraform(struct!.isNewPackage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_private_key_encrypted: {
      value: cdktf.booleanToHclTerraform(struct!.isPrivateKeyEncrypted),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_private_link_required: {
      value: cdktf.booleanToHclTerraform(struct!.isPrivateLinkRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_public: {
      value: cdktf.booleanToHclTerraform(struct!.isPublic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_sailthru_connect_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.isSailthruConnectEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_secure: {
      value: cdktf.booleanToHclTerraform(struct!.isSecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_sftp_creds_available: {
      value: cdktf.booleanToHclTerraform(struct!.isSftpCredsAvailable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_single_table_mode: {
      value: cdktf.booleanToHclTerraform(struct!.isSingleTableMode),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_test_account: {
      value: cdktf.booleanToHclTerraform(struct!.isTestAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_vendor: {
      value: cdktf.booleanToHclTerraform(struct!.isVendor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    issuer: {
      value: cdktf.stringToHclTerraform(struct!.issuer),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    issuer_id: {
      value: cdktf.stringToHclTerraform(struct!.issuerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    json_delivery_mode: {
      value: cdktf.stringToHclTerraform(struct!.jsonDeliveryMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key_id: {
      value: cdktf.stringToHclTerraform(struct!.keyId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key_password: {
      value: cdktf.stringToHclTerraform(struct!.keyPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key_store_type: {
      value: cdktf.stringToHclTerraform(struct!.keyStoreType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystore: {
      value: cdktf.stringToHclTerraform(struct!.keystore),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystore_password: {
      value: cdktf.stringToHclTerraform(struct!.keystorePassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    legal_entity_id: {
      value: cdktf.stringToHclTerraform(struct!.legalEntityId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    limit_for_api_calls_to_external_activities_endpoint: {
      value: cdktf.numberToHclTerraform(struct!.limitForApiCallsToExternalActivitiesEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    line_separator: {
      value: cdktf.stringToHclTerraform(struct!.lineSeparator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    list_id: {
      value: cdktf.stringToHclTerraform(struct!.listId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    list_of_company_ids: {
      value: cdktf.stringToHclTerraform(struct!.listOfCompanyIds),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    list_strategy: {
      value: cdktf.stringToHclTerraform(struct!.listStrategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    list_sync_mode: {
      value: cdktf.stringToHclTerraform(struct!.listSyncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    log_journal: {
      value: cdktf.stringToHclTerraform(struct!.logJournal),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    log_journal_schema: {
      value: cdktf.stringToHclTerraform(struct!.logJournalSchema),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    log_on_group: {
      value: cdktf.stringToHclTerraform(struct!.logOnGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    login: {
      value: cdktf.stringToHclTerraform(struct!.login),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    login_password: {
      value: cdktf.stringToHclTerraform(struct!.loginPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    look_back_window_for_gl_batch_endpoint: {
      value: cdktf.numberToHclTerraform(struct!.lookBackWindowForGlBatchEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    manager_accounts: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.managerAccounts),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    max_api_requests_per_day: {
      value: cdktf.numberToHclTerraform(struct!.maxApiRequestsPerDay),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    merchant_id: {
      value: cdktf.stringToHclTerraform(struct!.merchantId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    message_type: {
      value: cdktf.stringToHclTerraform(struct!.messageType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metric_id: {
      value: cdktf.stringToHclTerraform(struct!.metricId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metrics: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.metrics),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    named_range: {
      value: cdktf.stringToHclTerraform(struct!.namedRange),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    network_code: {
      value: cdktf.numberToHclTerraform(struct!.networkCode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    non_standard_escape_char: {
      value: cdktf.booleanToHclTerraform(struct!.nonStandardEscapeChar),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    null_sequence: {
      value: cdktf.stringToHclTerraform(struct!.nullSequence),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    oauth_token: {
      value: cdktf.stringToHclTerraform(struct!.oauthToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    oauth_token_secret: {
      value: cdktf.stringToHclTerraform(struct!.oauthTokenSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ocapi_client_id: {
      value: cdktf.stringToHclTerraform(struct!.ocapiClientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ocapi_client_secret: {
      value: cdktf.stringToHclTerraform(struct!.ocapiClientSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ocapi_custom_object_types: {
      value: cdktf.stringToHclTerraform(struct!.ocapiCustomObjectTypes),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ocapi_hostname: {
      value: cdktf.stringToHclTerraform(struct!.ocapiHostname),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    odbc_driver_manager_library_path: {
      value: cdktf.stringToHclTerraform(struct!.odbcDriverManagerLibraryPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    odbc_sys_ini_path: {
      value: cdktf.stringToHclTerraform(struct!.odbcSysIniPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    on_error: {
      value: cdktf.stringToHclTerraform(struct!.onError),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    on_premise: {
      value: cdktf.booleanToHclTerraform(struct!.onPremise),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    organization: {
      value: cdktf.stringToHclTerraform(struct!.organization),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    organization_domain: {
      value: cdktf.stringToHclTerraform(struct!.organizationDomain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    organization_id: {
      value: cdktf.stringToHclTerraform(struct!.organizationId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    organization_name: {
      value: cdktf.stringToHclTerraform(struct!.organizationName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    organizations: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.organizations),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    packed_mode_tables: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.packedModeTables),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    packing_mode: {
      value: cdktf.stringToHclTerraform(struct!.packingMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pages: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.pages),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    partner_code: {
      value: cdktf.stringToHclTerraform(struct!.partnerCode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partner_user_id: {
      value: cdktf.stringToHclTerraform(struct!.partnerUserId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partner_user_secret: {
      value: cdktf.stringToHclTerraform(struct!.partnerUserSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partners: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.partners),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    pass_phrase: {
      value: cdktf.stringToHclTerraform(struct!.passPhrase),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    passphrase: {
      value: cdktf.stringToHclTerraform(struct!.passphrase),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pat: {
      value: cdktf.stringToHclTerraform(struct!.pat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pat_name: {
      value: cdktf.stringToHclTerraform(struct!.patName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pat_secret: {
      value: cdktf.stringToHclTerraform(struct!.patSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pats: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.pats),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    pattern: {
      value: cdktf.stringToHclTerraform(struct!.pattern),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pdb_name: {
      value: cdktf.stringToHclTerraform(struct!.pdbName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pem_certificate: {
      value: cdktf.stringToHclTerraform(struct!.pemCertificate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pem_private_key: {
      value: cdktf.stringToHclTerraform(struct!.pemPrivateKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    per_interaction_dimensions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.perInteractionDimensions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    personal_access_token: {
      value: cdktf.stringToHclTerraform(struct!.personalAccessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    personal_api_token: {
      value: cdktf.stringToHclTerraform(struct!.personalApiToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pgp_pass_phrase: {
      value: cdktf.stringToHclTerraform(struct!.pgpPassPhrase),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pgp_secret_key: {
      value: cdktf.stringToHclTerraform(struct!.pgpSecretKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    phone_number: {
      value: cdktf.stringToHclTerraform(struct!.phoneNumber),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    plan: {
      value: cdktf.stringToHclTerraform(struct!.plan),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    plan_type: {
      value: cdktf.stringToHclTerraform(struct!.planType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    post_click_attribution_window_size: {
      value: cdktf.stringToHclTerraform(struct!.postClickAttributionWindowSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prebuilt_report: {
      value: cdktf.stringToHclTerraform(struct!.prebuiltReport),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    primary_key: {
      value: cdktf.stringToHclTerraform(struct!.primaryKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    primary_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.primaryKeys),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    prioritise_bulk_export_over_rest: {
      value: cdktf.booleanToHclTerraform(struct!.prioritiseBulkExportOverRest),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    private_access_token: {
      value: cdktf.stringToHclTerraform(struct!.privateAccessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    private_key: {
      value: cdktf.stringToHclTerraform(struct!.privateKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    private_token: {
      value: cdktf.stringToHclTerraform(struct!.privateToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    product: {
      value: cdktf.stringToHclTerraform(struct!.product),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    profiles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.profiles),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    profiles_amazon_dsp: {
      value: cdktf.stringToHclTerraform(struct!.profilesAmazonDsp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    project_access_token: {
      value: cdktf.stringToHclTerraform(struct!.projectAccessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    project_id: {
      value: cdktf.stringToHclTerraform(struct!.projectId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    project_ids: {
      value: cdktf.stringToHclTerraform(struct!.projectIds),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    project_key: {
      value: cdktf.stringToHclTerraform(struct!.projectKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    projects: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.projects),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    properties: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.properties),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    property_id: {
      value: cdktf.stringToHclTerraform(struct!.propertyId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    public_key: {
      value: cdktf.stringToHclTerraform(struct!.publicKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    publication_name: {
      value: cdktf.stringToHclTerraform(struct!.publicationName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    publisher_id: {
      value: cdktf.stringToHclTerraform(struct!.publisherId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pull_archived_campaigns: {
      value: cdktf.booleanToHclTerraform(struct!.pullArchivedCampaigns),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    python_version: {
      value: cdktf.stringToHclTerraform(struct!.pythonVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    query_id: {
      value: cdktf.stringToHclTerraform(struct!.queryId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    query_param_value: {
      value: cdktf.stringToHclTerraform(struct!.queryParamValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    quota_project_id: {
      value: cdktf.stringToHclTerraform(struct!.quotaProjectId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    quote_char: {
      value: cdktf.stringToHclTerraform(struct!.quoteChar),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    quote_character_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.quoteCharacterEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    rate_limit_plan: {
      value: cdktf.stringToHclTerraform(struct!.rateLimitPlan),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    refresh_token: {
      value: cdktf.stringToHclTerraform(struct!.refreshToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    refresh_token_expires_at: {
      value: cdktf.stringToHclTerraform(struct!.refreshTokenExpiresAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region_api_url: {
      value: cdktf.stringToHclTerraform(struct!.regionApiUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region_auth_url: {
      value: cdktf.stringToHclTerraform(struct!.regionAuthUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region_token_url: {
      value: cdktf.stringToHclTerraform(struct!.regionTokenUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region_url: {
      value: cdktf.stringToHclTerraform(struct!.regionUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    replica_id: {
      value: cdktf.numberToHclTerraform(struct!.replicaId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    replication_slot: {
      value: cdktf.stringToHclTerraform(struct!.replicationSlot),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_configuration_ids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.reportConfigurationIds),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    report_format_type: {
      value: cdktf.stringToHclTerraform(struct!.reportFormatType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_granularity: {
      value: cdktf.stringToHclTerraform(struct!.reportGranularity),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_keys: {
      value: cdktf.stringToHclTerraform(struct!.reportKeys),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_service_api_key: {
      value: cdktf.stringToHclTerraform(struct!.reportServiceApiKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_suites: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.reportSuites),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    report_timezone: {
      value: cdktf.stringToHclTerraform(struct!.reportTimezone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_type: {
      value: cdktf.stringToHclTerraform(struct!.reportType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    report_url: {
      value: cdktf.stringToHclTerraform(struct!.reportUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reports_linkedin_ads: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.reportsLinkedinAds),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    repositories: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.repositories),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    resource_token: {
      value: cdktf.stringToHclTerraform(struct!.resourceToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_url: {
      value: cdktf.stringToHclTerraform(struct!.resourceUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    rest_api_limit: {
      value: cdktf.numberToHclTerraform(struct!.restApiLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rfc_library_path: {
      value: cdktf.stringToHclTerraform(struct!.rfcLibraryPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role_arn: {
      value: cdktf.stringToHclTerraform(struct!.roleArn),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    rollback_window: {
      value: cdktf.numberToHclTerraform(struct!.rollbackWindow),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rollback_window_size: {
      value: cdktf.numberToHclTerraform(struct!.rollbackWindowSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    root_resource_id: {
      value: cdktf.stringToHclTerraform(struct!.rootResourceId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    s3_export_bucket: {
      value: cdktf.stringToHclTerraform(struct!.s3ExportBucket),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    s3_export_external_id: {
      value: cdktf.stringToHclTerraform(struct!.s3ExportExternalId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    s3_export_folder: {
      value: cdktf.stringToHclTerraform(struct!.s3ExportFolder),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    s3_export_role_arn: {
      value: cdktf.stringToHclTerraform(struct!.s3ExportRoleArn),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    s3bucket: {
      value: cdktf.stringToHclTerraform(struct!.s3Bucket),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    s3external_id: {
      value: cdktf.stringToHclTerraform(struct!.s3ExternalId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    s3folder: {
      value: cdktf.stringToHclTerraform(struct!.s3Folder),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    s3path: {
      value: cdktf.stringToHclTerraform(struct!.s3Path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    s3role_arn: {
      value: cdktf.stringToHclTerraform(struct!.s3RoleArn),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sales_account_sync_mode: {
      value: cdktf.stringToHclTerraform(struct!.salesAccountSyncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sales_accounts: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.salesAccounts),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    salesforce_security_token: {
      value: cdktf.stringToHclTerraform(struct!.salesforceSecurityToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sandbox_account: {
      value: cdktf.stringToHclTerraform(struct!.sandboxAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sap_schema: {
      value: cdktf.stringToHclTerraform(struct!.sapSchema),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sap_source_schema: {
      value: cdktf.stringToHclTerraform(struct!.sapSourceSchema),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sap_user: {
      value: cdktf.stringToHclTerraform(struct!.sapUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sasl_mechanism: {
      value: cdktf.stringToHclTerraform(struct!.saslMechanism),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sasl_plain_key: {
      value: cdktf.stringToHclTerraform(struct!.saslPlainKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sasl_plain_secret: {
      value: cdktf.stringToHclTerraform(struct!.saslPlainSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sasl_scram256_key: {
      value: cdktf.stringToHclTerraform(struct!.saslScram256Key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sasl_scram256_secret: {
      value: cdktf.stringToHclTerraform(struct!.saslScram256Secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sasl_scram512_key: {
      value: cdktf.stringToHclTerraform(struct!.saslScram512Key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sasl_scram512_secret: {
      value: cdktf.stringToHclTerraform(struct!.saslScram512Secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    schema_registry_credentials_source: {
      value: cdktf.stringToHclTerraform(struct!.schemaRegistryCredentialsSource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    schema_registry_key: {
      value: cdktf.stringToHclTerraform(struct!.schemaRegistryKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    schema_registry_secret: {
      value: cdktf.stringToHclTerraform(struct!.schemaRegistrySecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    schema_registry_urls: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.schemaRegistryUrls),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    scope: {
      value: cdktf.stringToHclTerraform(struct!.scope),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scopes: {
      value: cdktf.stringToHclTerraform(struct!.scopes),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    seats: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.seats),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: cdktf.stringToHclTerraform(struct!.secretAccessKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_key: {
      value: cdktf.stringToHclTerraform(struct!.secretKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secrets: {
      value: cdktf.stringToHclTerraform(struct!.secrets),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    security_protocol: {
      value: cdktf.stringToHclTerraform(struct!.securityProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    segments: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.segments),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    selected_event_types: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.selectedEventTypes),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    selected_exports: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.selectedExports),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    selected_range: {
      value: cdktf.stringToHclTerraform(struct!.selectedRange),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sender_id: {
      value: cdktf.stringToHclTerraform(struct!.senderId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sender_password: {
      value: cdktf.stringToHclTerraform(struct!.senderPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    server: {
      value: cdktf.stringToHclTerraform(struct!.server),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    server_address: {
      value: cdktf.stringToHclTerraform(struct!.serverAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    server_region: {
      value: cdktf.stringToHclTerraform(struct!.serverRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    server_url: {
      value: cdktf.stringToHclTerraform(struct!.serverUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    server_variable: {
      value: cdktf.stringToHclTerraform(struct!.serverVariable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    servers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.servers),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_email: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountEmail),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_key: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_secret: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_username: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_authentication: {
      value: cdktf.stringToHclTerraform(struct!.serviceAuthentication),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_name: {
      value: cdktf.stringToHclTerraform(struct!.serviceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sftp_host: {
      value: cdktf.stringToHclTerraform(struct!.sftpHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sftp_is_key_pair: {
      value: cdktf.booleanToHclTerraform(struct!.sftpIsKeyPair),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sftp_password: {
      value: cdktf.stringToHclTerraform(struct!.sftpPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sftp_port: {
      value: cdktf.numberToHclTerraform(struct!.sftpPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sftp_public_key: {
      value: cdktf.stringToHclTerraform(struct!.sftpPublicKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sftp_user: {
      value: cdktf.stringToHclTerraform(struct!.sftpUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    share_url: {
      value: cdktf.stringToHclTerraform(struct!.shareUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sheet_id: {
      value: cdktf.stringToHclTerraform(struct!.sheetId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    shop: {
      value: cdktf.stringToHclTerraform(struct!.shop),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    shop_domain: {
      value: cdktf.stringToHclTerraform(struct!.shopDomain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    short_code: {
      value: cdktf.stringToHclTerraform(struct!.shortCode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    should_sync_events_with_deleted_profiles: {
      value: cdktf.booleanToHclTerraform(struct!.shouldSyncEventsWithDeletedProfiles),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    should_sync_reimport_tables: {
      value: cdktf.booleanToHclTerraform(struct!.shouldSyncReimportTables),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    show_records_with_no_metrics: {
      value: cdktf.booleanToHclTerraform(struct!.showRecordsWithNoMetrics),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sid: {
      value: cdktf.stringToHclTerraform(struct!.sid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signature_encoding: {
      value: cdktf.stringToHclTerraform(struct!.signatureEncoding),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signer_public_key: {
      value: cdktf.stringToHclTerraform(struct!.signerPublicKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    site_address: {
      value: cdktf.stringToHclTerraform(struct!.siteAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    site_id: {
      value: cdktf.stringToHclTerraform(struct!.siteId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    site_name: {
      value: cdktf.stringToHclTerraform(struct!.siteName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    site_urls: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.siteUrls),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    skip_after: {
      value: cdktf.numberToHclTerraform(struct!.skipAfter),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    skip_before: {
      value: cdktf.numberToHclTerraform(struct!.skipBefore),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    skip_empty_reports: {
      value: cdktf.booleanToHclTerraform(struct!.skipEmptyReports),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    snc_certificate: {
      value: cdktf.stringToHclTerraform(struct!.sncCertificate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snc_certificate_source: {
      value: cdktf.stringToHclTerraform(struct!.sncCertificateSource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snc_fivetran_name: {
      value: cdktf.stringToHclTerraform(struct!.sncFivetranName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snc_library_path: {
      value: cdktf.stringToHclTerraform(struct!.sncLibraryPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snc_mode: {
      value: cdktf.stringToHclTerraform(struct!.sncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snc_my_name: {
      value: cdktf.stringToHclTerraform(struct!.sncMyName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snc_name: {
      value: cdktf.stringToHclTerraform(struct!.sncName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snc_partner_name: {
      value: cdktf.stringToHclTerraform(struct!.sncPartnerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snc_source_name: {
      value: cdktf.stringToHclTerraform(struct!.sncSourceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    soap_uri: {
      value: cdktf.stringToHclTerraform(struct!.soapUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    social_data_sync_timeframe: {
      value: cdktf.stringToHclTerraform(struct!.socialDataSyncTimeframe),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    source: {
      value: cdktf.stringToHclTerraform(struct!.source),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    source_name: {
      value: cdktf.stringToHclTerraform(struct!.sourceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    store_hash: {
      value: cdktf.stringToHclTerraform(struct!.storeHash),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    store_id: {
      value: cdktf.stringToHclTerraform(struct!.storeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sub_collections: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.subCollections),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    sub_domain: {
      value: cdktf.stringToHclTerraform(struct!.subDomain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subdomain: {
      value: cdktf.stringToHclTerraform(struct!.subdomain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subscription: {
      value: cdktf.stringToHclTerraform(struct!.subscription),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subscription_key: {
      value: cdktf.stringToHclTerraform(struct!.subscriptionKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    support_connected_accounts_sync: {
      value: cdktf.booleanToHclTerraform(struct!.supportConnectedAccountsSync),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    support_nested_columns: {
      value: cdktf.booleanToHclTerraform(struct!.supportNestedColumns),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    survey_ids: {
      value: cdktf.stringToHclTerraform(struct!.surveyIds),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    swipe_attribution_window: {
      value: cdktf.stringToHclTerraform(struct!.swipeAttributionWindow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sync_data_locker: {
      value: cdktf.booleanToHclTerraform(struct!.syncDataLocker),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sync_format: {
      value: cdktf.stringToHclTerraform(struct!.syncFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sync_formula_fields: {
      value: cdktf.booleanToHclTerraform(struct!.syncFormulaFields),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sync_metadata: {
      value: cdktf.booleanToHclTerraform(struct!.syncMetadata),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sync_method: {
      value: cdktf.stringToHclTerraform(struct!.syncMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sync_mode: {
      value: cdktf.stringToHclTerraform(struct!.syncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sync_mode_advertiser: {
      value: cdktf.stringToHclTerraform(struct!.syncModeAdvertiser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sync_mode_seat: {
      value: cdktf.stringToHclTerraform(struct!.syncModeSeat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sync_multiple_accounts: {
      value: cdktf.booleanToHclTerraform(struct!.syncMultipleAccounts),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sync_pack_mode: {
      value: cdktf.stringToHclTerraform(struct!.syncPackMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sync_permissions: {
      value: cdktf.booleanToHclTerraform(struct!.syncPermissions),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sync_pull_api: {
      value: cdktf.booleanToHclTerraform(struct!.syncPullApi),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sync_type: {
      value: cdktf.stringToHclTerraform(struct!.syncType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sysnr: {
      value: cdktf.stringToHclTerraform(struct!.sysnr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    system_id: {
      value: cdktf.stringToHclTerraform(struct!.systemId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table_id: {
      value: cdktf.stringToHclTerraform(struct!.tableId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table_name: {
      value: cdktf.stringToHclTerraform(struct!.tableName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tables_without_access_updated_at: {
      value: cdktf.stringToHclTerraform(struct!.tablesWithoutAccessUpdatedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    target_entity_id: {
      value: cdktf.stringToHclTerraform(struct!.targetEntityId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    target_host: {
      value: cdktf.stringToHclTerraform(struct!.targetHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tde_certificate: {
      value: cdktf.stringToHclTerraform(struct!.tdeCertificate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tde_certificate_name: {
      value: cdktf.stringToHclTerraform(struct!.tdeCertificateName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tde_password: {
      value: cdktf.stringToHclTerraform(struct!.tdePassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tde_private_key: {
      value: cdktf.stringToHclTerraform(struct!.tdePrivateKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tde_wallet_password: {
      value: cdktf.stringToHclTerraform(struct!.tdeWalletPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    team_id: {
      value: cdktf.stringToHclTerraform(struct!.teamId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    technical_account_id: {
      value: cdktf.stringToHclTerraform(struct!.technicalAccountId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    template_labels: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.templateLabels),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    tenant: {
      value: cdktf.stringToHclTerraform(struct!.tenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tenant_app_url: {
      value: cdktf.stringToHclTerraform(struct!.tenantAppUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tenant_code: {
      value: cdktf.stringToHclTerraform(struct!.tenantCode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tenant_id: {
      value: cdktf.stringToHclTerraform(struct!.tenantId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tenant_name: {
      value: cdktf.stringToHclTerraform(struct!.tenantName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tenant_url: {
      value: cdktf.stringToHclTerraform(struct!.tenantUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    test_table_name: {
      value: cdktf.stringToHclTerraform(struct!.testTableName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_zone: {
      value: cdktf.stringToHclTerraform(struct!.timeZone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    timeframe_months: {
      value: cdktf.stringToHclTerraform(struct!.timeframeMonths),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    timezone: {
      value: cdktf.stringToHclTerraform(struct!.timezone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    timezone_mode: {
      value: cdktf.stringToHclTerraform(struct!.timezoneMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tns: {
      value: cdktf.stringToHclTerraform(struct!.tns),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toast_id: {
      value: cdktf.stringToHclTerraform(struct!.toastId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    token: {
      value: cdktf.stringToHclTerraform(struct!.token),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    token_authenticated_container: {
      value: cdktf.stringToHclTerraform(struct!.tokenAuthenticatedContainer),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    token_authenticated_database: {
      value: cdktf.stringToHclTerraform(struct!.tokenAuthenticatedDatabase),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    token_id: {
      value: cdktf.stringToHclTerraform(struct!.tokenId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    token_key: {
      value: cdktf.stringToHclTerraform(struct!.tokenKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    token_secret: {
      value: cdktf.stringToHclTerraform(struct!.tokenSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    token_secret_key: {
      value: cdktf.stringToHclTerraform(struct!.tokenSecretKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    token_url_region: {
      value: cdktf.stringToHclTerraform(struct!.tokenUrlRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topics: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.topics),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    trust_store_type: {
      value: cdktf.stringToHclTerraform(struct!.trustStoreType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    trusted_cert: {
      value: cdktf.stringToHclTerraform(struct!.trustedCert),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    truststore: {
      value: cdktf.stringToHclTerraform(struct!.truststore),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tunnel_host: {
      value: cdktf.stringToHclTerraform(struct!.tunnelHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tunnel_port: {
      value: cdktf.numberToHclTerraform(struct!.tunnelPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tunnel_user: {
      value: cdktf.stringToHclTerraform(struct!.tunnelUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type_name: {
      value: cdktf.stringToHclTerraform(struct!.typeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    unique_id: {
      value: cdktf.stringToHclTerraform(struct!.uniqueId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    update_config_on_each_sync: {
      value: cdktf.booleanToHclTerraform(struct!.updateConfigOnEachSync),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    update_method: {
      value: cdktf.stringToHclTerraform(struct!.updateMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    url_format: {
      value: cdktf.stringToHclTerraform(struct!.urlFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_api_keys: {
      value: cdktf.booleanToHclTerraform(struct!.useApiKeys),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_cloud_storage: {
      value: cdktf.booleanToHclTerraform(struct!.useCloudStorage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_customer_bucket: {
      value: cdktf.booleanToHclTerraform(struct!.useCustomerBucket),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_oracle_rac: {
      value: cdktf.booleanToHclTerraform(struct!.useOracleRac),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_pgp_encryption_options: {
      value: cdktf.booleanToHclTerraform(struct!.usePgpEncryptionOptions),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_service_account: {
      value: cdktf.booleanToHclTerraform(struct!.useServiceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_template_labels: {
      value: cdktf.booleanToHclTerraform(struct!.useTemplateLabels),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_webhooks: {
      value: cdktf.booleanToHclTerraform(struct!.useWebhooks),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_workspace: {
      value: cdktf.booleanToHclTerraform(struct!.useWorkspace),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_id: {
      value: cdktf.stringToHclTerraform(struct!.userId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_key: {
      value: cdktf.stringToHclTerraform(struct!.userKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_name: {
      value: cdktf.stringToHclTerraform(struct!.userName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_profiles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.userProfiles),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    user_token: {
      value: cdktf.stringToHclTerraform(struct!.userToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    username: {
      value: cdktf.stringToHclTerraform(struct!.username),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vendors_id: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.vendorsId),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    view_attribution_window: {
      value: cdktf.stringToHclTerraform(struct!.viewAttributionWindow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    view_id: {
      value: cdktf.stringToHclTerraform(struct!.viewId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    view_through_attribution_window_size: {
      value: cdktf.stringToHclTerraform(struct!.viewThroughAttributionWindowSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_service_api_key: {
      value: cdktf.stringToHclTerraform(struct!.webServiceApiKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    webhook_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.webhookEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    webhook_key: {
      value: cdktf.stringToHclTerraform(struct!.webhookKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    webhook_name: {
      value: cdktf.stringToHclTerraform(struct!.webhookName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    webhook_url: {
      value: cdktf.stringToHclTerraform(struct!.webhookUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    word_press_site_id_or_woocommerce_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.wordPressSiteIdOrWoocommerceDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    workplace_id: {
      value: cdktf.stringToHclTerraform(struct!.workplaceId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    workspace: {
      value: cdktf.stringToHclTerraform(struct!.workspace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    workspace_name: {
      value: cdktf.stringToHclTerraform(struct!.workspaceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    workspace_same_as_source: {
      value: cdktf.booleanToHclTerraform(struct!.workspaceSameAsSource),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    workspace_schema: {
      value: cdktf.stringToHclTerraform(struct!.workspaceSchema),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    workspace_token: {
      value: cdktf.stringToHclTerraform(struct!.workspaceToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ws_certificate: {
      value: cdktf.stringToHclTerraform(struct!.wsCertificate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    x_api_key: {
      value: cdktf.stringToHclTerraform(struct!.xApiKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    x_key: {
      value: cdktf.stringToHclTerraform(struct!.xKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    x_master_key: {
      value: cdktf.stringToHclTerraform(struct!.xMasterKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    x_user_email: {
      value: cdktf.stringToHclTerraform(struct!.xUserEmail),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    x_user_token: {
      value: cdktf.stringToHclTerraform(struct!.xUserToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    accounts_reddit_ads: {
      value: cdktf.listMapperHcl(connectorConfigAccountsRedditAdsToHclTerraform, true)(struct!.accountsRedditAds),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigAccountsRedditAdsList",
    },
    adobe_analytics_configurations: {
      value: cdktf.listMapperHcl(connectorConfigAdobeAnalyticsConfigurationsToHclTerraform, true)(struct!.adobeAnalyticsConfigurations),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigAdobeAnalyticsConfigurationsList",
    },
    app_ids_appsflyer: {
      value: cdktf.listMapperHcl(connectorConfigAppIdsAppsflyerToHclTerraform, true)(struct!.appIdsAppsflyer),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigAppIdsAppsflyerList",
    },
    custom_payloads: {
      value: cdktf.listMapperHcl(connectorConfigCustomPayloadsToHclTerraform, true)(struct!.customPayloads),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigCustomPayloadsList",
    },
    custom_reports: {
      value: cdktf.listMapperHcl(connectorConfigCustomReportsToHclTerraform, true)(struct!.customReports),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigCustomReportsList",
    },
    custom_tables: {
      value: cdktf.listMapperHcl(connectorConfigCustomTablesToHclTerraform, true)(struct!.customTables),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigCustomTablesList",
    },
    data_model_path_alias_list: {
      value: cdktf.listMapperHcl(connectorConfigDataModelPathAliasListStructToHclTerraform, true)(struct!.dataModelPathAliasList),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigDataModelPathAliasListStructList",
    },
    files: {
      value: cdktf.listMapperHcl(connectorConfigFilesToHclTerraform, true)(struct!.files),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigFilesList",
    },
    project_credentials: {
      value: cdktf.listMapperHcl(connectorConfigProjectCredentialsToHclTerraform, true)(struct!.projectCredentials),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigProjectCredentialsList",
    },
    report_configs: {
      value: cdktf.listMapperHcl(connectorConfigReportConfigsToHclTerraform, true)(struct!.reportConfigs),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigReportConfigsList",
    },
    report_list: {
      value: cdktf.listMapperHcl(connectorConfigReportListStructToHclTerraform, true)(struct!.reportList),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigReportListStructList",
    },
    reports: {
      value: cdktf.listMapperHcl(connectorConfigReportsToHclTerraform, true)(struct!.reports),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigReportsList",
    },
    secrets_list: {
      value: cdktf.listMapperHcl(connectorConfigSecretsListStructToHclTerraform, true)(struct!.secretsList),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigSecretsListStructList",
    },
    tenant_configs: {
      value: cdktf.listMapperHcl(connectorConfigTenantConfigsToHclTerraform, true)(struct!.tenantConfigs),
      isBlock: true,
      type: "set",
      storageClassType: "ConnectorConfigTenantConfigsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorConfigAOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): ConnectorConfigA | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._absConnectionMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.absConnectionMethod = this._absConnectionMethod;
    }
    if (this._absConnectionString !== undefined) {
      hasAnyValues = true;
      internalValueResult.absConnectionString = this._absConnectionString;
    }
    if (this._absContainerAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.absContainerAddress = this._absContainerAddress;
    }
    if (this._absContainerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.absContainerName = this._absContainerName;
    }
    if (this._absHostIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.absHostIp = this._absHostIp;
    }
    if (this._absHostUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.absHostUser = this._absHostUser;
    }
    if (this._absPrefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.absPrefix = this._absPrefix;
    }
    if (this._absPublicKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.absPublicKey = this._absPublicKey;
    }
    if (this._academyId !== undefined) {
      hasAnyValues = true;
      internalValueResult.academyId = this._academyId;
    }
    if (this._accessConfirmation !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessConfirmation = this._accessConfirmation;
    }
    if (this._accessId !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessId = this._accessId;
    }
    if (this._accessKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKey = this._accessKey;
    }
    if (this._accessKeyId !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId;
    }
    if (this._accessKeySecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeySecret = this._accessKeySecret;
    }
    if (this._accessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessToken = this._accessToken;
    }
    if (this._accessType !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessType = this._accessType;
    }
    if (this._account !== undefined) {
      hasAnyValues = true;
      internalValueResult.account = this._account;
    }
    if (this._accountAccessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountAccessToken = this._accountAccessToken;
    }
    if (this._accountId !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountId = this._accountId;
    }
    if (this._accountIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountIds = this._accountIds;
    }
    if (this._accountKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountKey = this._accountKey;
    }
    if (this._accountName !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountName = this._accountName;
    }
    if (this._accountPlan !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountPlan = this._accountPlan;
    }
    if (this._accountRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountRegion = this._accountRegion;
    }
    if (this._accountSid !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountSid = this._accountSid;
    }
    if (this._accountSyncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountSyncMode = this._accountSyncMode;
    }
    if (this._accountToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountToken = this._accountToken;
    }
    if (this._accountType !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountType = this._accountType;
    }
    if (this._accounts !== undefined) {
      hasAnyValues = true;
      internalValueResult.accounts = this._accounts;
    }
    if (this._accountsSyncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountsSyncMode = this._accountsSyncMode;
    }
    if (this._actionBreakdowns !== undefined) {
      hasAnyValues = true;
      internalValueResult.actionBreakdowns = this._actionBreakdowns;
    }
    if (this._actionReportTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.actionReportTime = this._actionReportTime;
    }
    if (this._adAnalytics !== undefined) {
      hasAnyValues = true;
      internalValueResult.adAnalytics = this._adAnalytics;
    }
    if (this._adUnitView !== undefined) {
      hasAnyValues = true;
      internalValueResult.adUnitView = this._adUnitView;
    }
    if (this._adminApiKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminApiKey = this._adminApiKey;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._advertisables !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertisables = this._advertisables;
    }
    if (this._advertisers !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertisers = this._advertisers;
    }
    if (this._advertisersId !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertisersId = this._advertisersId;
    }
    if (this._advertisersSyncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertisersSyncMode = this._advertisersSyncMode;
    }
    if (this._advertisersWithSeat !== undefined) {
      hasAnyValues = true;
      internalValueResult.advertisersWithSeat = this._advertisersWithSeat;
    }
    if (this._agentConfigMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentConfigMethod = this._agentConfigMethod;
    }
    if (this._agentHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentHost = this._agentHost;
    }
    if (this._agentId !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentId = this._agentId;
    }
    if (this._agentOraHome !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentOraHome = this._agentOraHome;
    }
    if (this._agentPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentPassword = this._agentPassword;
    }
    if (this._agentPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentPort = this._agentPort;
    }
    if (this._agentPublicCert !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentPublicCert = this._agentPublicCert;
    }
    if (this._agentUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentUser = this._agentUser;
    }
    if (this._aggregation !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregation = this._aggregation;
    }
    if (this._agreementGrantToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.agreementGrantToken = this._agreementGrantToken;
    }
    if (this._algorithm !== undefined) {
      hasAnyValues = true;
      internalValueResult.algorithm = this._algorithm;
    }
    if (this._alwaysEncrypted !== undefined) {
      hasAnyValues = true;
      internalValueResult.alwaysEncrypted = this._alwaysEncrypted;
    }
    if (this._api !== undefined) {
      hasAnyValues = true;
      internalValueResult.api = this._api;
    }
    if (this._apiAccessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiAccessToken = this._apiAccessToken;
    }
    if (this._apiEnvironment !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiEnvironment = this._apiEnvironment;
    }
    if (this._apiId !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiId = this._apiId;
    }
    if (this._apiKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiKey = this._apiKey;
    }
    if (this._apiKeyApiSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiKeyApiSecret = this._apiKeyApiSecret;
    }
    if (this._apiKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiKeys = this._apiKeys;
    }
    if (this._apiPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiPassword = this._apiPassword;
    }
    if (this._apiQuota !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiQuota = this._apiQuota;
    }
    if (this._apiReadAccessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiReadAccessToken = this._apiReadAccessToken;
    }
    if (this._apiRequestsPerMinute !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiRequestsPerMinute = this._apiRequestsPerMinute;
    }
    if (this._apiRole !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiRole = this._apiRole;
    }
    if (this._apiSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiSecret = this._apiSecret;
    }
    if (this._apiSecretKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiSecretKey = this._apiSecretKey;
    }
    if (this._apiServer !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiServer = this._apiServer;
    }
    if (this._apiToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiToken = this._apiToken;
    }
    if (this._apiType !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiType = this._apiType;
    }
    if (this._apiUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiUrl = this._apiUrl;
    }
    if (this._apiUrlRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiUrlRegion = this._apiUrlRegion;
    }
    if (this._apiUsage !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiUsage = this._apiUsage;
    }
    if (this._apiUserIdentifier !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiUserIdentifier = this._apiUserIdentifier;
    }
    if (this._apiUserSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiUserSecret = this._apiUserSecret;
    }
    if (this._apiUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiUsername = this._apiUsername;
    }
    if (this._apiUtilizationPercentage !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiUtilizationPercentage = this._apiUtilizationPercentage;
    }
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._appId !== undefined) {
      hasAnyValues = true;
      internalValueResult.appId = this._appId;
    }
    if (this._appIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.appIds = this._appIds;
    }
    if (this._appKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.appKey = this._appKey;
    }
    if (this._appReference !== undefined) {
      hasAnyValues = true;
      internalValueResult.appReference = this._appReference;
    }
    if (this._appSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.appSecret = this._appSecret;
    }
    if (this._appSecretToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.appSecretToken = this._appSecretToken;
    }
    if (this._appSpecificPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.appSpecificPassword = this._appSpecificPassword;
    }
    if (this._appSyncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.appSyncMode = this._appSyncMode;
    }
    if (this._appendFileOption !== undefined) {
      hasAnyValues = true;
      internalValueResult.appendFileOption = this._appendFileOption;
    }
    if (this._applicationId !== undefined) {
      hasAnyValues = true;
      internalValueResult.applicationId = this._applicationId;
    }
    if (this._applicationKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.applicationKey = this._applicationKey;
    }
    if (this._apps !== undefined) {
      hasAnyValues = true;
      internalValueResult.apps = this._apps;
    }
    if (this._archiveLogFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.archiveLogFormat = this._archiveLogFormat;
    }
    if (this._archiveLogPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.archiveLogPath = this._archiveLogPath;
    }
    if (this._archivePattern !== undefined) {
      hasAnyValues = true;
      internalValueResult.archivePattern = this._archivePattern;
    }
    if (this._areSoapCredentialsProvided !== undefined) {
      hasAnyValues = true;
      internalValueResult.areSoapCredentialsProvided = this._areSoapCredentialsProvided;
    }
    if (this._asbIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.asbIp = this._asbIp;
    }
    if (this._asmOption !== undefined) {
      hasAnyValues = true;
      internalValueResult.asmOption = this._asmOption;
    }
    if (this._asmOracleHome !== undefined) {
      hasAnyValues = true;
      internalValueResult.asmOracleHome = this._asmOracleHome;
    }
    if (this._asmPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.asmPassword = this._asmPassword;
    }
    if (this._asmTns !== undefined) {
      hasAnyValues = true;
      internalValueResult.asmTns = this._asmTns;
    }
    if (this._asmUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.asmUser = this._asmUser;
    }
    if (this._attributionWindow !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributionWindow = this._attributionWindow;
    }
    if (this._attributionWindowSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributionWindowSize = this._attributionWindowSize;
    }
    if (this._audience !== undefined) {
      hasAnyValues = true;
      internalValueResult.audience = this._audience;
    }
    if (this._auth !== undefined) {
      hasAnyValues = true;
      internalValueResult.auth = this._auth;
    }
    if (this._authCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authCode = this._authCode;
    }
    if (this._authEnvironment !== undefined) {
      hasAnyValues = true;
      internalValueResult.authEnvironment = this._authEnvironment;
    }
    if (this._authHeaderKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.authHeaderKey = this._authHeaderKey;
    }
    if (this._authMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMethod = this._authMethod;
    }
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._authSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.authSecret = this._authSecret;
    }
    if (this._authToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.authToken = this._authToken;
    }
    if (this._authType !== undefined) {
      hasAnyValues = true;
      internalValueResult.authType = this._authType;
    }
    if (this._authUrlRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.authUrlRegion = this._authUrlRegion;
    }
    if (this._authenticationMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.authenticationMethod = this._authenticationMethod;
    }
    if (this._authorizationUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizationUrl = this._authorizationUrl;
    }
    if (this._awsRegionCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.awsRegionCode = this._awsRegionCode;
    }
    if (this._backintConfigurationPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.backintConfigurationPath = this._backintConfigurationPath;
    }
    if (this._backintExecutablePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.backintExecutablePath = this._backintExecutablePath;
    }
    if (this._backupLogFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.backupLogFormat = this._backupLogFormat;
    }
    if (this._backupLogPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.backupLogPath = this._backupLogPath;
    }
    if (this._backupStorageType !== undefined) {
      hasAnyValues = true;
      internalValueResult.backupStorageType = this._backupStorageType;
    }
    if (this._backwardSyncLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.backwardSyncLimit = this._backwardSyncLimit;
    }
    if (this._backwardSyncLimitDate !== undefined) {
      hasAnyValues = true;
      internalValueResult.backwardSyncLimitDate = this._backwardSyncLimitDate;
    }
    if (this._baseCurrency !== undefined) {
      hasAnyValues = true;
      internalValueResult.baseCurrency = this._baseCurrency;
    }
    if (this._baseDomain !== undefined) {
      hasAnyValues = true;
      internalValueResult.baseDomain = this._baseDomain;
    }
    if (this._baseId !== undefined) {
      hasAnyValues = true;
      internalValueResult.baseId = this._baseId;
    }
    if (this._baseUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.baseUrl = this._baseUrl;
    }
    if (this._bearerToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.bearerToken = this._bearerToken;
    }
    if (this._binaryLogType !== undefined) {
      hasAnyValues = true;
      internalValueResult.binaryLogType = this._binaryLogType;
    }
    if (this._binaryRepresentation !== undefined) {
      hasAnyValues = true;
      internalValueResult.binaryRepresentation = this._binaryRepresentation;
    }
    if (this._blobSasUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.blobSasUrl = this._blobSasUrl;
    }
    if (this._blockchain !== undefined) {
      hasAnyValues = true;
      internalValueResult.blockchain = this._blockchain;
    }
    if (this._brandId !== undefined) {
      hasAnyValues = true;
      internalValueResult.brandId = this._brandId;
    }
    if (this._breakdowns !== undefined) {
      hasAnyValues = true;
      internalValueResult.breakdowns = this._breakdowns;
    }
    if (this._bucket !== undefined) {
      hasAnyValues = true;
      internalValueResult.bucket = this._bucket;
    }
    if (this._bucketName !== undefined) {
      hasAnyValues = true;
      internalValueResult.bucketName = this._bucketName;
    }
    if (this._bucketService !== undefined) {
      hasAnyValues = true;
      internalValueResult.bucketService = this._bucketService;
    }
    if (this._businessAccounts !== undefined) {
      hasAnyValues = true;
      internalValueResult.businessAccounts = this._businessAccounts;
    }
    if (this._businessId !== undefined) {
      hasAnyValues = true;
      internalValueResult.businessId = this._businessId;
    }
    if (this._businessUnit !== undefined) {
      hasAnyValues = true;
      internalValueResult.businessUnit = this._businessUnit;
    }
    if (this._businessUnitId !== undefined) {
      hasAnyValues = true;
      internalValueResult.businessUnitId = this._businessUnitId;
    }
    if (this._catalog !== undefined) {
      hasAnyValues = true;
      internalValueResult.catalog = this._catalog;
    }
    if (this._certificate !== undefined) {
      hasAnyValues = true;
      internalValueResult.certificate = this._certificate;
    }
    if (this._certificateId !== undefined) {
      hasAnyValues = true;
      internalValueResult.certificateId = this._certificateId;
    }
    if (this._clickAttributionWindow !== undefined) {
      hasAnyValues = true;
      internalValueResult.clickAttributionWindow = this._clickAttributionWindow;
    }
    if (this._client !== undefined) {
      hasAnyValues = true;
      internalValueResult.client = this._client;
    }
    if (this._clientCert !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientCert = this._clientCert;
    }
    if (this._clientCertKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientCertKey = this._clientCertKey;
    }
    if (this._clientHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientHost = this._clientHost;
    }
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._clientKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientKey = this._clientKey;
    }
    if (this._clientName !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientName = this._clientName;
    }
    if (this._clientNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientNamespace = this._clientNamespace;
    }
    if (this._clientPrivateKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientPrivateKey = this._clientPrivateKey;
    }
    if (this._clientPublicCertificate !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientPublicCertificate = this._clientPublicCertificate;
    }
    if (this._clientSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientSecret = this._clientSecret;
    }
    if (this._cloudStorageType !== undefined) {
      hasAnyValues = true;
      internalValueResult.cloudStorageType = this._cloudStorageType;
    }
    if (this._collectionAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectionAddress = this._collectionAddress;
    }
    if (this._columns !== undefined) {
      hasAnyValues = true;
      internalValueResult.columns = this._columns;
    }
    if (this._communityApiKeyName !== undefined) {
      hasAnyValues = true;
      internalValueResult.communityApiKeyName = this._communityApiKeyName;
    }
    if (this._communityDomain !== undefined) {
      hasAnyValues = true;
      internalValueResult.communityDomain = this._communityDomain;
    }
    if (this._communityId !== undefined) {
      hasAnyValues = true;
      internalValueResult.communityId = this._communityId;
    }
    if (this._companies !== undefined) {
      hasAnyValues = true;
      internalValueResult.companies = this._companies;
    }
    if (this._company !== undefined) {
      hasAnyValues = true;
      internalValueResult.company = this._company;
    }
    if (this._companyId !== undefined) {
      hasAnyValues = true;
      internalValueResult.companyId = this._companyId;
    }
    if (this._companyIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.companyIds = this._companyIds;
    }
    if (this._companyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.companyKey = this._companyKey;
    }
    if (this._companyName !== undefined) {
      hasAnyValues = true;
      internalValueResult.companyName = this._companyName;
    }
    if (this._companyRequestToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.companyRequestToken = this._companyRequestToken;
    }
    if (this._companyUuid !== undefined) {
      hasAnyValues = true;
      internalValueResult.companyUuid = this._companyUuid;
    }
    if (this._compression !== undefined) {
      hasAnyValues = true;
      internalValueResult.compression = this._compression;
    }
    if (this._configMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMethod = this._configMethod;
    }
    if (this._configRepositoryUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.configRepositoryUrl = this._configRepositoryUrl;
    }
    if (this._configType !== undefined) {
      hasAnyValues = true;
      internalValueResult.configType = this._configType;
    }
    if (this._connectPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectPassword = this._connectPassword;
    }
    if (this._connectUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectUsername = this._connectUsername;
    }
    if (this._connectingUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectingUser = this._connectingUser;
    }
    if (this._connectingUserEmail !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectingUserEmail = this._connectingUserEmail;
    }
    if (this._connectionMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionMethod = this._connectionMethod;
    }
    if (this._connectionName !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionName = this._connectionName;
    }
    if (this._connectionString !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionString = this._connectionString;
    }
    if (this._connectionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionType = this._connectionType;
    }
    if (this._consoleUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.consoleUrl = this._consoleUrl;
    }
    if (this._consumerGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.consumerGroup = this._consumerGroup;
    }
    if (this._consumerKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.consumerKey = this._consumerKey;
    }
    if (this._consumerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.consumerName = this._consumerName;
    }
    if (this._consumerSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.consumerSecret = this._consumerSecret;
    }
    if (this._containerAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerAddress = this._containerAddress;
    }
    if (this._containerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerName = this._containerName;
    }
    if (this._contentOwnerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.contentOwnerId = this._contentOwnerId;
    }
    if (this._contractVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.contractVersion = this._contractVersion;
    }
    if (this._conversationWebhookUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.conversationWebhookUrl = this._conversationWebhookUrl;
    }
    if (this._conversionDimensions !== undefined) {
      hasAnyValues = true;
      internalValueResult.conversionDimensions = this._conversionDimensions;
    }
    if (this._conversionReportTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.conversionReportTime = this._conversionReportTime;
    }
    if (this._conversionWindowSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.conversionWindowSize = this._conversionWindowSize;
    }
    if (this._convertDatsTypeToDate !== undefined) {
      hasAnyValues = true;
      internalValueResult.convertDatsTypeToDate = this._convertDatsTypeToDate;
    }
    if (this._csvDefinition !== undefined) {
      hasAnyValues = true;
      internalValueResult.csvDefinition = this._csvDefinition;
    }
    if (this._currency !== undefined) {
      hasAnyValues = true;
      internalValueResult.currency = this._currency;
    }
    if (this._customBaseUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.customBaseUrl = this._customBaseUrl;
    }
    if (this._customDimensionKeyIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.customDimensionKeyIds = this._customDimensionKeyIds;
    }
    if (this._customEventSyncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.customEventSyncMode = this._customEventSyncMode;
    }
    if (this._customEvents !== undefined) {
      hasAnyValues = true;
      internalValueResult.customEvents = this._customEvents;
    }
    if (this._customFieldIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.customFieldIds = this._customFieldIds;
    }
    if (this._customFloodlightVariables !== undefined) {
      hasAnyValues = true;
      internalValueResult.customFloodlightVariables = this._customFloodlightVariables;
    }
    if (this._customRateLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.customRateLimit = this._customRateLimit;
    }
    if (this._customUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.customUrl = this._customUrl;
    }
    if (this._customerApiKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.customerApiKey = this._customerApiKey;
    }
    if (this._customerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.customerId = this._customerId;
    }
    if (this._customerListId !== undefined) {
      hasAnyValues = true;
      internalValueResult.customerListId = this._customerListId;
    }
    if (this._dailyApiCallLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.dailyApiCallLimit = this._dailyApiCallLimit;
    }
    if (this._dataAccessMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataAccessMethod = this._dataAccessMethod;
    }
    if (this._dataCenter !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataCenter = this._dataCenter;
    }
    if (this._dataCenterId !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataCenterId = this._dataCenterId;
    }
    if (this._dataSetName !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSetName = this._dataSetName;
    }
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._databaseName !== undefined) {
      hasAnyValues = true;
      internalValueResult.databaseName = this._databaseName;
    }
    if (this._datasetId !== undefined) {
      hasAnyValues = true;
      internalValueResult.datasetId = this._datasetId;
    }
    if (this._datasource !== undefined) {
      hasAnyValues = true;
      internalValueResult.datasource = this._datasource;
    }
    if (this._dateGranularity !== undefined) {
      hasAnyValues = true;
      internalValueResult.dateGranularity = this._dateGranularity;
    }
    if (this._db !== undefined) {
      hasAnyValues = true;
      internalValueResult.db = this._db;
    }
    if (this._defaultHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultHost = this._defaultHost;
    }
    if (this._delimiter !== undefined) {
      hasAnyValues = true;
      internalValueResult.delimiter = this._delimiter;
    }
    if (this._developerReference !== undefined) {
      hasAnyValues = true;
      internalValueResult.developerReference = this._developerReference;
    }
    if (this._dimensionAttributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.dimensionAttributes = this._dimensionAttributes;
    }
    if (this._dimensions !== undefined) {
      hasAnyValues = true;
      internalValueResult.dimensions = this._dimensions;
    }
    if (this._directCaptureMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.directCaptureMethod = this._directCaptureMethod;
    }
    if (this._directories !== undefined) {
      hasAnyValues = true;
      internalValueResult.directories = this._directories;
    }
    if (this._directorySyncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.directorySyncMode = this._directorySyncMode;
    }
    if (this._distributedConnectorClusterSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.distributedConnectorClusterSize = this._distributedConnectorClusterSize;
    }
    if (this._distributionIncrementalFetchWindowDays !== undefined) {
      hasAnyValues = true;
      internalValueResult.distributionIncrementalFetchWindowDays = this._distributionIncrementalFetchWindowDays;
    }
    if (this._domain !== undefined) {
      hasAnyValues = true;
      internalValueResult.domain = this._domain;
    }
    if (this._domainHostName !== undefined) {
      hasAnyValues = true;
      internalValueResult.domainHostName = this._domainHostName;
    }
    if (this._domainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.domainName = this._domainName;
    }
    if (this._domainType !== undefined) {
      hasAnyValues = true;
      internalValueResult.domainType = this._domainType;
    }
    if (this._dsvServiceAuth !== undefined) {
      hasAnyValues = true;
      internalValueResult.dsvServiceAuth = this._dsvServiceAuth;
    }
    if (this._dsvSubscriptionKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.dsvSubscriptionKey = this._dsvSubscriptionKey;
    }
    if (this._ecommerceStores !== undefined) {
      hasAnyValues = true;
      internalValueResult.ecommerceStores = this._ecommerceStores;
    }
    if (this._edition !== undefined) {
      hasAnyValues = true;
      internalValueResult.edition = this._edition;
    }
    if (this._elements !== undefined) {
      hasAnyValues = true;
      internalValueResult.elements = this._elements;
    }
    if (this._email !== undefined) {
      hasAnyValues = true;
      internalValueResult.email = this._email;
    }
    if (this._emailAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.emailAddress = this._emailAddress;
    }
    if (this._emailId !== undefined) {
      hasAnyValues = true;
      internalValueResult.emailId = this._emailId;
    }
    if (this._emptyHeader !== undefined) {
      hasAnyValues = true;
      internalValueResult.emptyHeader = this._emptyHeader;
    }
    if (this._enableAllDimensionCombinations !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableAllDimensionCombinations = this._enableAllDimensionCombinations;
    }
    if (this._enableArchiveLogOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableArchiveLogOnly = this._enableArchiveLogOnly;
    }
    if (this._enableDataExtensionsSyncing !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableDataExtensionsSyncing = this._enableDataExtensionsSyncing;
    }
    if (this._enableDistributedConnectorMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableDistributedConnectorMode = this._enableDistributedConnectorMode;
    }
    if (this._enableEnrichments !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableEnrichments = this._enableEnrichments;
    }
    if (this._enableExports !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableExports = this._enableExports;
    }
    if (this._enableTde !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableTde = this._enableTde;
    }
    if (this._enableTdeEncryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableTdeEncryption = this._enableTdeEncryption;
    }
    if (this._encodedPublicKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.encodedPublicKey = this._encodedPublicKey;
    }
    if (this._encryptionKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.encryptionKey = this._encryptionKey;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._endpointUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpointUrl = this._endpointUrl;
    }
    if (this._engagementAttributionWindow !== undefined) {
      hasAnyValues = true;
      internalValueResult.engagementAttributionWindow = this._engagementAttributionWindow;
    }
    if (this._enrichedExport !== undefined) {
      hasAnyValues = true;
      internalValueResult.enrichedExport = this._enrichedExport;
    }
    if (this._entityId !== undefined) {
      hasAnyValues = true;
      internalValueResult.entityId = this._entityId;
    }
    if (this._entraAppId !== undefined) {
      hasAnyValues = true;
      internalValueResult.entraAppId = this._entraAppId;
    }
    if (this._entraTenantId !== undefined) {
      hasAnyValues = true;
      internalValueResult.entraTenantId = this._entraTenantId;
    }
    if (this._environment !== undefined) {
      hasAnyValues = true;
      internalValueResult.environment = this._environment;
    }
    if (this._environmentHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.environmentHost = this._environmentHost;
    }
    if (this._environmentName !== undefined) {
      hasAnyValues = true;
      internalValueResult.environmentName = this._environmentName;
    }
    if (this._escapeChar !== undefined) {
      hasAnyValues = true;
      internalValueResult.escapeChar = this._escapeChar;
    }
    if (this._escapeCharOptions !== undefined) {
      hasAnyValues = true;
      internalValueResult.escapeCharOptions = this._escapeCharOptions;
    }
    if (this._euRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.euRegion = this._euRegion;
    }
    if (this._events !== undefined) {
      hasAnyValues = true;
      internalValueResult.events = this._events;
    }
    if (this._exportNativeTypesAsPdf !== undefined) {
      hasAnyValues = true;
      internalValueResult.exportNativeTypesAsPdf = this._exportNativeTypesAsPdf;
    }
    if (this._exportStorageType !== undefined) {
      hasAnyValues = true;
      internalValueResult.exportStorageType = this._exportStorageType;
    }
    if (this._externalId !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalId = this._externalId;
    }
    if (this._facilityCodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.facilityCodes = this._facilityCodes;
    }
    if (this._fields !== undefined) {
      hasAnyValues = true;
      internalValueResult.fields = this._fields;
    }
    if (this._fileHandling !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileHandling = this._fileHandling;
    }
    if (this._fileType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileType = this._fileType;
    }
    if (this._filter !== undefined) {
      hasAnyValues = true;
      internalValueResult.filter = this._filter;
    }
    if (this._financeAccountSyncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.financeAccountSyncMode = this._financeAccountSyncMode;
    }
    if (this._financeAccounts !== undefined) {
      hasAnyValues = true;
      internalValueResult.financeAccounts = this._financeAccounts;
    }
    if (this._folder !== undefined) {
      hasAnyValues = true;
      internalValueResult.folder = this._folder;
    }
    if (this._folderId !== undefined) {
      hasAnyValues = true;
      internalValueResult.folderId = this._folderId;
    }
    if (this._folderPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.folderPath = this._folderPath;
    }
    if (this._forecastId !== undefined) {
      hasAnyValues = true;
      internalValueResult.forecastId = this._forecastId;
    }
    if (this._ftpHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.ftpHost = this._ftpHost;
    }
    if (this._ftpPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.ftpPassword = this._ftpPassword;
    }
    if (this._ftpPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.ftpPort = this._ftpPort;
    }
    if (this._ftpUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.ftpUser = this._ftpUser;
    }
    if (this._function !== undefined) {
      hasAnyValues = true;
      internalValueResult.function = this._function;
    }
    if (this._functionApp !== undefined) {
      hasAnyValues = true;
      internalValueResult.functionApp = this._functionApp;
    }
    if (this._functionKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.functionKey = this._functionKey;
    }
    if (this._functionName !== undefined) {
      hasAnyValues = true;
      internalValueResult.functionName = this._functionName;
    }
    if (this._functionTrigger !== undefined) {
      hasAnyValues = true;
      internalValueResult.functionTrigger = this._functionTrigger;
    }
    if (this._gcsBucket !== undefined) {
      hasAnyValues = true;
      internalValueResult.gcsBucket = this._gcsBucket;
    }
    if (this._gcsExportBucket !== undefined) {
      hasAnyValues = true;
      internalValueResult.gcsExportBucket = this._gcsExportBucket;
    }
    if (this._gcsExportFolder !== undefined) {
      hasAnyValues = true;
      internalValueResult.gcsExportFolder = this._gcsExportFolder;
    }
    if (this._gcsFolder !== undefined) {
      hasAnyValues = true;
      internalValueResult.gcsFolder = this._gcsFolder;
    }
    if (this._generateFivetranPk !== undefined) {
      hasAnyValues = true;
      internalValueResult.generateFivetranPk = this._generateFivetranPk;
    }
    if (this._groupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupId = this._groupId;
    }
    if (this._groupName !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupName = this._groupName;
    }
    if (this._hanaBackupPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.hanaBackupPassword = this._hanaBackupPassword;
    }
    if (this._hanaMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.hanaMode = this._hanaMode;
    }
    if (this._hasManagePermissions !== undefined) {
      hasAnyValues = true;
      internalValueResult.hasManagePermissions = this._hasManagePermissions;
    }
    if (this._historicSyncTimeFrame !== undefined) {
      hasAnyValues = true;
      internalValueResult.historicSyncTimeFrame = this._historicSyncTimeFrame;
    }
    if (this._historicalSyncLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.historicalSyncLimit = this._historicalSyncLimit;
    }
    if (this._historicalSyncLimitDate !== undefined) {
      hasAnyValues = true;
      internalValueResult.historicalSyncLimitDate = this._historicalSyncLimitDate;
    }
    if (this._historicalSyncLimitTimeFrame !== undefined) {
      hasAnyValues = true;
      internalValueResult.historicalSyncLimitTimeFrame = this._historicalSyncLimitTimeFrame;
    }
    if (this._historicalSyncTimeFrame !== undefined) {
      hasAnyValues = true;
      internalValueResult.historicalSyncTimeFrame = this._historicalSyncTimeFrame;
    }
    if (this._homeFolder !== undefined) {
      hasAnyValues = true;
      internalValueResult.homeFolder = this._homeFolder;
    }
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._hostIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostIp = this._hostIp;
    }
    if (this._hostName !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostName = this._hostName;
    }
    if (this._hostUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostUrl = this._hostUrl;
    }
    if (this._hostUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostUser = this._hostUser;
    }
    if (this._hostname !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostname = this._hostname;
    }
    if (this._hosts !== undefined) {
      hasAnyValues = true;
      internalValueResult.hosts = this._hosts;
    }
    if (this._httpPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpPath = this._httpPath;
    }
    if (this._identifier !== undefined) {
      hasAnyValues = true;
      internalValueResult.identifier = this._identifier;
    }
    if (this._identity !== undefined) {
      hasAnyValues = true;
      internalValueResult.identity = this._identity;
    }
    if (this._includeInheritedColumns !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeInheritedColumns = this._includeInheritedColumns;
    }
    if (this._includeOcapiEndpoints !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeOcapiEndpoints = this._includeOcapiEndpoints;
    }
    if (this._instance !== undefined) {
      hasAnyValues = true;
      internalValueResult.instance = this._instance;
    }
    if (this._instanceCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.instanceCode = this._instanceCode;
    }
    if (this._instanceNumber !== undefined) {
      hasAnyValues = true;
      internalValueResult.instanceNumber = this._instanceNumber;
    }
    if (this._instanceUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.instanceUrl = this._instanceUrl;
    }
    if (this._integrationKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.integrationKey = this._integrationKey;
    }
    if (this._ipAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipAddress = this._ipAddress;
    }
    if (this._isAccountLevelConnector !== undefined) {
      hasAnyValues = true;
      internalValueResult.isAccountLevelConnector = this._isAccountLevelConnector;
    }
    if (this._isAuth2Enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.isAuth2Enabled = this._isAuth2Enabled;
    }
    if (this._isCustomApiCredentials !== undefined) {
      hasAnyValues = true;
      internalValueResult.isCustomApiCredentials = this._isCustomApiCredentials;
    }
    if (this._isExternalActivitiesEndpointSelected !== undefined) {
      hasAnyValues = true;
      internalValueResult.isExternalActivitiesEndpointSelected = this._isExternalActivitiesEndpointSelected;
    }
    if (this._isFtps !== undefined) {
      hasAnyValues = true;
      internalValueResult.isFtps = this._isFtps;
    }
    if (this._isKeypair !== undefined) {
      hasAnyValues = true;
      internalValueResult.isKeypair = this._isKeypair;
    }
    if (this._isMultiEntityFeatureEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.isMultiEntityFeatureEnabled = this._isMultiEntityFeatureEnabled;
    }
    if (this._isNewPackage !== undefined) {
      hasAnyValues = true;
      internalValueResult.isNewPackage = this._isNewPackage;
    }
    if (this._isPrivateKeyEncrypted !== undefined) {
      hasAnyValues = true;
      internalValueResult.isPrivateKeyEncrypted = this._isPrivateKeyEncrypted;
    }
    if (this._isPrivateLinkRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.isPrivateLinkRequired = this._isPrivateLinkRequired;
    }
    if (this._isPublic !== undefined) {
      hasAnyValues = true;
      internalValueResult.isPublic = this._isPublic;
    }
    if (this._isSailthruConnectEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.isSailthruConnectEnabled = this._isSailthruConnectEnabled;
    }
    if (this._isSecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.isSecure = this._isSecure;
    }
    if (this._isSftpCredsAvailable !== undefined) {
      hasAnyValues = true;
      internalValueResult.isSftpCredsAvailable = this._isSftpCredsAvailable;
    }
    if (this._isSingleTableMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.isSingleTableMode = this._isSingleTableMode;
    }
    if (this._isTestAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.isTestAccount = this._isTestAccount;
    }
    if (this._isVendor !== undefined) {
      hasAnyValues = true;
      internalValueResult.isVendor = this._isVendor;
    }
    if (this._issuer !== undefined) {
      hasAnyValues = true;
      internalValueResult.issuer = this._issuer;
    }
    if (this._issuerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.issuerId = this._issuerId;
    }
    if (this._jsonDeliveryMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonDeliveryMode = this._jsonDeliveryMode;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._keyId !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyId = this._keyId;
    }
    if (this._keyPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyPassword = this._keyPassword;
    }
    if (this._keyStoreType !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyStoreType = this._keyStoreType;
    }
    if (this._keystore !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystore = this._keystore;
    }
    if (this._keystorePassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystorePassword = this._keystorePassword;
    }
    if (this._legalEntityId !== undefined) {
      hasAnyValues = true;
      internalValueResult.legalEntityId = this._legalEntityId;
    }
    if (this._limitForApiCallsToExternalActivitiesEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.limitForApiCallsToExternalActivitiesEndpoint = this._limitForApiCallsToExternalActivitiesEndpoint;
    }
    if (this._lineSeparator !== undefined) {
      hasAnyValues = true;
      internalValueResult.lineSeparator = this._lineSeparator;
    }
    if (this._listId !== undefined) {
      hasAnyValues = true;
      internalValueResult.listId = this._listId;
    }
    if (this._listOfCompanyIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.listOfCompanyIds = this._listOfCompanyIds;
    }
    if (this._listStrategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.listStrategy = this._listStrategy;
    }
    if (this._listSyncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.listSyncMode = this._listSyncMode;
    }
    if (this._logJournal !== undefined) {
      hasAnyValues = true;
      internalValueResult.logJournal = this._logJournal;
    }
    if (this._logJournalSchema !== undefined) {
      hasAnyValues = true;
      internalValueResult.logJournalSchema = this._logJournalSchema;
    }
    if (this._logOnGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.logOnGroup = this._logOnGroup;
    }
    if (this._login !== undefined) {
      hasAnyValues = true;
      internalValueResult.login = this._login;
    }
    if (this._loginPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.loginPassword = this._loginPassword;
    }
    if (this._lookBackWindowForGlBatchEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.lookBackWindowForGlBatchEndpoint = this._lookBackWindowForGlBatchEndpoint;
    }
    if (this._managerAccounts !== undefined) {
      hasAnyValues = true;
      internalValueResult.managerAccounts = this._managerAccounts;
    }
    if (this._maxApiRequestsPerDay !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxApiRequestsPerDay = this._maxApiRequestsPerDay;
    }
    if (this._merchantId !== undefined) {
      hasAnyValues = true;
      internalValueResult.merchantId = this._merchantId;
    }
    if (this._messageType !== undefined) {
      hasAnyValues = true;
      internalValueResult.messageType = this._messageType;
    }
    if (this._metricId !== undefined) {
      hasAnyValues = true;
      internalValueResult.metricId = this._metricId;
    }
    if (this._metrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.metrics = this._metrics;
    }
    if (this._namedRange !== undefined) {
      hasAnyValues = true;
      internalValueResult.namedRange = this._namedRange;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._networkCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkCode = this._networkCode;
    }
    if (this._nonStandardEscapeChar !== undefined) {
      hasAnyValues = true;
      internalValueResult.nonStandardEscapeChar = this._nonStandardEscapeChar;
    }
    if (this._nullSequence !== undefined) {
      hasAnyValues = true;
      internalValueResult.nullSequence = this._nullSequence;
    }
    if (this._oauthToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauthToken = this._oauthToken;
    }
    if (this._oauthTokenSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauthTokenSecret = this._oauthTokenSecret;
    }
    if (this._ocapiClientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.ocapiClientId = this._ocapiClientId;
    }
    if (this._ocapiClientSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.ocapiClientSecret = this._ocapiClientSecret;
    }
    if (this._ocapiCustomObjectTypes !== undefined) {
      hasAnyValues = true;
      internalValueResult.ocapiCustomObjectTypes = this._ocapiCustomObjectTypes;
    }
    if (this._ocapiHostname !== undefined) {
      hasAnyValues = true;
      internalValueResult.ocapiHostname = this._ocapiHostname;
    }
    if (this._odbcDriverManagerLibraryPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.odbcDriverManagerLibraryPath = this._odbcDriverManagerLibraryPath;
    }
    if (this._odbcSysIniPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.odbcSysIniPath = this._odbcSysIniPath;
    }
    if (this._onError !== undefined) {
      hasAnyValues = true;
      internalValueResult.onError = this._onError;
    }
    if (this._onPremise !== undefined) {
      hasAnyValues = true;
      internalValueResult.onPremise = this._onPremise;
    }
    if (this._organization !== undefined) {
      hasAnyValues = true;
      internalValueResult.organization = this._organization;
    }
    if (this._organizationDomain !== undefined) {
      hasAnyValues = true;
      internalValueResult.organizationDomain = this._organizationDomain;
    }
    if (this._organizationId !== undefined) {
      hasAnyValues = true;
      internalValueResult.organizationId = this._organizationId;
    }
    if (this._organizationName !== undefined) {
      hasAnyValues = true;
      internalValueResult.organizationName = this._organizationName;
    }
    if (this._organizations !== undefined) {
      hasAnyValues = true;
      internalValueResult.organizations = this._organizations;
    }
    if (this._packedModeTables !== undefined) {
      hasAnyValues = true;
      internalValueResult.packedModeTables = this._packedModeTables;
    }
    if (this._packingMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.packingMode = this._packingMode;
    }
    if (this._pages !== undefined) {
      hasAnyValues = true;
      internalValueResult.pages = this._pages;
    }
    if (this._partnerCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.partnerCode = this._partnerCode;
    }
    if (this._partnerUserId !== undefined) {
      hasAnyValues = true;
      internalValueResult.partnerUserId = this._partnerUserId;
    }
    if (this._partnerUserSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.partnerUserSecret = this._partnerUserSecret;
    }
    if (this._partners !== undefined) {
      hasAnyValues = true;
      internalValueResult.partners = this._partners;
    }
    if (this._passPhrase !== undefined) {
      hasAnyValues = true;
      internalValueResult.passPhrase = this._passPhrase;
    }
    if (this._passphrase !== undefined) {
      hasAnyValues = true;
      internalValueResult.passphrase = this._passphrase;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._pat !== undefined) {
      hasAnyValues = true;
      internalValueResult.pat = this._pat;
    }
    if (this._patName !== undefined) {
      hasAnyValues = true;
      internalValueResult.patName = this._patName;
    }
    if (this._patSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.patSecret = this._patSecret;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._pats !== undefined) {
      hasAnyValues = true;
      internalValueResult.pats = this._pats;
    }
    if (this._pattern !== undefined) {
      hasAnyValues = true;
      internalValueResult.pattern = this._pattern;
    }
    if (this._pdbName !== undefined) {
      hasAnyValues = true;
      internalValueResult.pdbName = this._pdbName;
    }
    if (this._pemCertificate !== undefined) {
      hasAnyValues = true;
      internalValueResult.pemCertificate = this._pemCertificate;
    }
    if (this._pemPrivateKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.pemPrivateKey = this._pemPrivateKey;
    }
    if (this._perInteractionDimensions !== undefined) {
      hasAnyValues = true;
      internalValueResult.perInteractionDimensions = this._perInteractionDimensions;
    }
    if (this._personalAccessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.personalAccessToken = this._personalAccessToken;
    }
    if (this._personalApiToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.personalApiToken = this._personalApiToken;
    }
    if (this._pgpPassPhrase !== undefined) {
      hasAnyValues = true;
      internalValueResult.pgpPassPhrase = this._pgpPassPhrase;
    }
    if (this._pgpSecretKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.pgpSecretKey = this._pgpSecretKey;
    }
    if (this._phoneNumber !== undefined) {
      hasAnyValues = true;
      internalValueResult.phoneNumber = this._phoneNumber;
    }
    if (this._plan !== undefined) {
      hasAnyValues = true;
      internalValueResult.plan = this._plan;
    }
    if (this._planType !== undefined) {
      hasAnyValues = true;
      internalValueResult.planType = this._planType;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._postClickAttributionWindowSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.postClickAttributionWindowSize = this._postClickAttributionWindowSize;
    }
    if (this._prebuiltReport !== undefined) {
      hasAnyValues = true;
      internalValueResult.prebuiltReport = this._prebuiltReport;
    }
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    if (this._primaryKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.primaryKey = this._primaryKey;
    }
    if (this._primaryKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.primaryKeys = this._primaryKeys;
    }
    if (this._prioritiseBulkExportOverRest !== undefined) {
      hasAnyValues = true;
      internalValueResult.prioritiseBulkExportOverRest = this._prioritiseBulkExportOverRest;
    }
    if (this._privateAccessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.privateAccessToken = this._privateAccessToken;
    }
    if (this._privateKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.privateKey = this._privateKey;
    }
    if (this._privateToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.privateToken = this._privateToken;
    }
    if (this._product !== undefined) {
      hasAnyValues = true;
      internalValueResult.product = this._product;
    }
    if (this._profiles !== undefined) {
      hasAnyValues = true;
      internalValueResult.profiles = this._profiles;
    }
    if (this._profilesAmazonDsp !== undefined) {
      hasAnyValues = true;
      internalValueResult.profilesAmazonDsp = this._profilesAmazonDsp;
    }
    if (this._projectAccessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectAccessToken = this._projectAccessToken;
    }
    if (this._projectId !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectId = this._projectId;
    }
    if (this._projectIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectIds = this._projectIds;
    }
    if (this._projectKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectKey = this._projectKey;
    }
    if (this._projects !== undefined) {
      hasAnyValues = true;
      internalValueResult.projects = this._projects;
    }
    if (this._properties !== undefined) {
      hasAnyValues = true;
      internalValueResult.properties = this._properties;
    }
    if (this._propertyId !== undefined) {
      hasAnyValues = true;
      internalValueResult.propertyId = this._propertyId;
    }
    if (this._publicKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.publicKey = this._publicKey;
    }
    if (this._publicationName !== undefined) {
      hasAnyValues = true;
      internalValueResult.publicationName = this._publicationName;
    }
    if (this._publisherId !== undefined) {
      hasAnyValues = true;
      internalValueResult.publisherId = this._publisherId;
    }
    if (this._pullArchivedCampaigns !== undefined) {
      hasAnyValues = true;
      internalValueResult.pullArchivedCampaigns = this._pullArchivedCampaigns;
    }
    if (this._pythonVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.pythonVersion = this._pythonVersion;
    }
    if (this._queryId !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryId = this._queryId;
    }
    if (this._queryParamValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryParamValue = this._queryParamValue;
    }
    if (this._quotaProjectId !== undefined) {
      hasAnyValues = true;
      internalValueResult.quotaProjectId = this._quotaProjectId;
    }
    if (this._quoteChar !== undefined) {
      hasAnyValues = true;
      internalValueResult.quoteChar = this._quoteChar;
    }
    if (this._quoteCharacterEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.quoteCharacterEnabled = this._quoteCharacterEnabled;
    }
    if (this._rateLimitPlan !== undefined) {
      hasAnyValues = true;
      internalValueResult.rateLimitPlan = this._rateLimitPlan;
    }
    if (this._refreshToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.refreshToken = this._refreshToken;
    }
    if (this._refreshTokenExpiresAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.refreshTokenExpiresAt = this._refreshTokenExpiresAt;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._regionApiUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.regionApiUrl = this._regionApiUrl;
    }
    if (this._regionAuthUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.regionAuthUrl = this._regionAuthUrl;
    }
    if (this._regionTokenUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.regionTokenUrl = this._regionTokenUrl;
    }
    if (this._regionUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.regionUrl = this._regionUrl;
    }
    if (this._replicaId !== undefined) {
      hasAnyValues = true;
      internalValueResult.replicaId = this._replicaId;
    }
    if (this._replicationSlot !== undefined) {
      hasAnyValues = true;
      internalValueResult.replicationSlot = this._replicationSlot;
    }
    if (this._reportConfigurationIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportConfigurationIds = this._reportConfigurationIds;
    }
    if (this._reportFormatType !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportFormatType = this._reportFormatType;
    }
    if (this._reportGranularity !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportGranularity = this._reportGranularity;
    }
    if (this._reportKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportKeys = this._reportKeys;
    }
    if (this._reportServiceApiKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportServiceApiKey = this._reportServiceApiKey;
    }
    if (this._reportSuites !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportSuites = this._reportSuites;
    }
    if (this._reportTimezone !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportTimezone = this._reportTimezone;
    }
    if (this._reportType !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportType = this._reportType;
    }
    if (this._reportUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportUrl = this._reportUrl;
    }
    if (this._reportsLinkedinAds !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportsLinkedinAds = this._reportsLinkedinAds;
    }
    if (this._repositories !== undefined) {
      hasAnyValues = true;
      internalValueResult.repositories = this._repositories;
    }
    if (this._resourceToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceToken = this._resourceToken;
    }
    if (this._resourceUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceUrl = this._resourceUrl;
    }
    if (this._restApiLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.restApiLimit = this._restApiLimit;
    }
    if (this._rfcLibraryPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.rfcLibraryPath = this._rfcLibraryPath;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._roleArn !== undefined) {
      hasAnyValues = true;
      internalValueResult.roleArn = this._roleArn;
    }
    if (this._rollbackWindow !== undefined) {
      hasAnyValues = true;
      internalValueResult.rollbackWindow = this._rollbackWindow;
    }
    if (this._rollbackWindowSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.rollbackWindowSize = this._rollbackWindowSize;
    }
    if (this._rootResourceId !== undefined) {
      hasAnyValues = true;
      internalValueResult.rootResourceId = this._rootResourceId;
    }
    if (this._s3ExportBucket !== undefined) {
      hasAnyValues = true;
      internalValueResult.s3ExportBucket = this._s3ExportBucket;
    }
    if (this._s3ExportExternalId !== undefined) {
      hasAnyValues = true;
      internalValueResult.s3ExportExternalId = this._s3ExportExternalId;
    }
    if (this._s3ExportFolder !== undefined) {
      hasAnyValues = true;
      internalValueResult.s3ExportFolder = this._s3ExportFolder;
    }
    if (this._s3ExportRoleArn !== undefined) {
      hasAnyValues = true;
      internalValueResult.s3ExportRoleArn = this._s3ExportRoleArn;
    }
    if (this._s3Bucket !== undefined) {
      hasAnyValues = true;
      internalValueResult.s3Bucket = this._s3Bucket;
    }
    if (this._s3ExternalId !== undefined) {
      hasAnyValues = true;
      internalValueResult.s3ExternalId = this._s3ExternalId;
    }
    if (this._s3Folder !== undefined) {
      hasAnyValues = true;
      internalValueResult.s3Folder = this._s3Folder;
    }
    if (this._s3Path !== undefined) {
      hasAnyValues = true;
      internalValueResult.s3Path = this._s3Path;
    }
    if (this._s3RoleArn !== undefined) {
      hasAnyValues = true;
      internalValueResult.s3RoleArn = this._s3RoleArn;
    }
    if (this._salesAccountSyncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.salesAccountSyncMode = this._salesAccountSyncMode;
    }
    if (this._salesAccounts !== undefined) {
      hasAnyValues = true;
      internalValueResult.salesAccounts = this._salesAccounts;
    }
    if (this._salesforceSecurityToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.salesforceSecurityToken = this._salesforceSecurityToken;
    }
    if (this._sandboxAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.sandboxAccount = this._sandboxAccount;
    }
    if (this._sapSchema !== undefined) {
      hasAnyValues = true;
      internalValueResult.sapSchema = this._sapSchema;
    }
    if (this._sapSourceSchema !== undefined) {
      hasAnyValues = true;
      internalValueResult.sapSourceSchema = this._sapSourceSchema;
    }
    if (this._sapUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.sapUser = this._sapUser;
    }
    if (this._saslMechanism !== undefined) {
      hasAnyValues = true;
      internalValueResult.saslMechanism = this._saslMechanism;
    }
    if (this._saslPlainKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.saslPlainKey = this._saslPlainKey;
    }
    if (this._saslPlainSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.saslPlainSecret = this._saslPlainSecret;
    }
    if (this._saslScram256Key !== undefined) {
      hasAnyValues = true;
      internalValueResult.saslScram256Key = this._saslScram256Key;
    }
    if (this._saslScram256Secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.saslScram256Secret = this._saslScram256Secret;
    }
    if (this._saslScram512Key !== undefined) {
      hasAnyValues = true;
      internalValueResult.saslScram512Key = this._saslScram512Key;
    }
    if (this._saslScram512Secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.saslScram512Secret = this._saslScram512Secret;
    }
    if (this._schemaRegistryCredentialsSource !== undefined) {
      hasAnyValues = true;
      internalValueResult.schemaRegistryCredentialsSource = this._schemaRegistryCredentialsSource;
    }
    if (this._schemaRegistryKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.schemaRegistryKey = this._schemaRegistryKey;
    }
    if (this._schemaRegistrySecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.schemaRegistrySecret = this._schemaRegistrySecret;
    }
    if (this._schemaRegistryUrls !== undefined) {
      hasAnyValues = true;
      internalValueResult.schemaRegistryUrls = this._schemaRegistryUrls;
    }
    if (this._scope !== undefined) {
      hasAnyValues = true;
      internalValueResult.scope = this._scope;
    }
    if (this._scopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes;
    }
    if (this._seats !== undefined) {
      hasAnyValues = true;
      internalValueResult.seats = this._seats;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._secretAccessKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey;
    }
    if (this._secretKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKey = this._secretKey;
    }
    if (this._secrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.secrets = this._secrets;
    }
    if (this._securityProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.securityProtocol = this._securityProtocol;
    }
    if (this._segments !== undefined) {
      hasAnyValues = true;
      internalValueResult.segments = this._segments;
    }
    if (this._selectedEventTypes !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectedEventTypes = this._selectedEventTypes;
    }
    if (this._selectedExports !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectedExports = this._selectedExports;
    }
    if (this._selectedRange !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectedRange = this._selectedRange;
    }
    if (this._senderId !== undefined) {
      hasAnyValues = true;
      internalValueResult.senderId = this._senderId;
    }
    if (this._senderPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.senderPassword = this._senderPassword;
    }
    if (this._server !== undefined) {
      hasAnyValues = true;
      internalValueResult.server = this._server;
    }
    if (this._serverAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.serverAddress = this._serverAddress;
    }
    if (this._serverRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.serverRegion = this._serverRegion;
    }
    if (this._serverUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.serverUrl = this._serverUrl;
    }
    if (this._serverVariable !== undefined) {
      hasAnyValues = true;
      internalValueResult.serverVariable = this._serverVariable;
    }
    if (this._servers !== undefined) {
      hasAnyValues = true;
      internalValueResult.servers = this._servers;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountEmail !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountEmail = this._serviceAccountEmail;
    }
    if (this._serviceAccountKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountKey = this._serviceAccountKey;
    }
    if (this._serviceAccountSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountSecret = this._serviceAccountSecret;
    }
    if (this._serviceAccountUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountUsername = this._serviceAccountUsername;
    }
    if (this._serviceAuthentication !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAuthentication = this._serviceAuthentication;
    }
    if (this._serviceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceName = this._serviceName;
    }
    if (this._sftpHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.sftpHost = this._sftpHost;
    }
    if (this._sftpIsKeyPair !== undefined) {
      hasAnyValues = true;
      internalValueResult.sftpIsKeyPair = this._sftpIsKeyPair;
    }
    if (this._sftpPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.sftpPassword = this._sftpPassword;
    }
    if (this._sftpPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.sftpPort = this._sftpPort;
    }
    if (this._sftpPublicKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.sftpPublicKey = this._sftpPublicKey;
    }
    if (this._sftpUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.sftpUser = this._sftpUser;
    }
    if (this._shareUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.shareUrl = this._shareUrl;
    }
    if (this._sheetId !== undefined) {
      hasAnyValues = true;
      internalValueResult.sheetId = this._sheetId;
    }
    if (this._shop !== undefined) {
      hasAnyValues = true;
      internalValueResult.shop = this._shop;
    }
    if (this._shopDomain !== undefined) {
      hasAnyValues = true;
      internalValueResult.shopDomain = this._shopDomain;
    }
    if (this._shortCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.shortCode = this._shortCode;
    }
    if (this._shouldSyncEventsWithDeletedProfiles !== undefined) {
      hasAnyValues = true;
      internalValueResult.shouldSyncEventsWithDeletedProfiles = this._shouldSyncEventsWithDeletedProfiles;
    }
    if (this._shouldSyncReimportTables !== undefined) {
      hasAnyValues = true;
      internalValueResult.shouldSyncReimportTables = this._shouldSyncReimportTables;
    }
    if (this._showRecordsWithNoMetrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.showRecordsWithNoMetrics = this._showRecordsWithNoMetrics;
    }
    if (this._sid !== undefined) {
      hasAnyValues = true;
      internalValueResult.sid = this._sid;
    }
    if (this._signatureEncoding !== undefined) {
      hasAnyValues = true;
      internalValueResult.signatureEncoding = this._signatureEncoding;
    }
    if (this._signerPublicKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.signerPublicKey = this._signerPublicKey;
    }
    if (this._siteAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.siteAddress = this._siteAddress;
    }
    if (this._siteId !== undefined) {
      hasAnyValues = true;
      internalValueResult.siteId = this._siteId;
    }
    if (this._siteName !== undefined) {
      hasAnyValues = true;
      internalValueResult.siteName = this._siteName;
    }
    if (this._siteUrls !== undefined) {
      hasAnyValues = true;
      internalValueResult.siteUrls = this._siteUrls;
    }
    if (this._skipAfter !== undefined) {
      hasAnyValues = true;
      internalValueResult.skipAfter = this._skipAfter;
    }
    if (this._skipBefore !== undefined) {
      hasAnyValues = true;
      internalValueResult.skipBefore = this._skipBefore;
    }
    if (this._skipEmptyReports !== undefined) {
      hasAnyValues = true;
      internalValueResult.skipEmptyReports = this._skipEmptyReports;
    }
    if (this._sncCertificate !== undefined) {
      hasAnyValues = true;
      internalValueResult.sncCertificate = this._sncCertificate;
    }
    if (this._sncCertificateSource !== undefined) {
      hasAnyValues = true;
      internalValueResult.sncCertificateSource = this._sncCertificateSource;
    }
    if (this._sncFivetranName !== undefined) {
      hasAnyValues = true;
      internalValueResult.sncFivetranName = this._sncFivetranName;
    }
    if (this._sncLibraryPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.sncLibraryPath = this._sncLibraryPath;
    }
    if (this._sncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.sncMode = this._sncMode;
    }
    if (this._sncMyName !== undefined) {
      hasAnyValues = true;
      internalValueResult.sncMyName = this._sncMyName;
    }
    if (this._sncName !== undefined) {
      hasAnyValues = true;
      internalValueResult.sncName = this._sncName;
    }
    if (this._sncPartnerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.sncPartnerName = this._sncPartnerName;
    }
    if (this._sncSourceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.sncSourceName = this._sncSourceName;
    }
    if (this._soapUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.soapUri = this._soapUri;
    }
    if (this._socialDataSyncTimeframe !== undefined) {
      hasAnyValues = true;
      internalValueResult.socialDataSyncTimeframe = this._socialDataSyncTimeframe;
    }
    if (this._source !== undefined) {
      hasAnyValues = true;
      internalValueResult.source = this._source;
    }
    if (this._sourceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceName = this._sourceName;
    }
    if (this._storeHash !== undefined) {
      hasAnyValues = true;
      internalValueResult.storeHash = this._storeHash;
    }
    if (this._storeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.storeId = this._storeId;
    }
    if (this._subCollections !== undefined) {
      hasAnyValues = true;
      internalValueResult.subCollections = this._subCollections;
    }
    if (this._subDomain !== undefined) {
      hasAnyValues = true;
      internalValueResult.subDomain = this._subDomain;
    }
    if (this._subdomain !== undefined) {
      hasAnyValues = true;
      internalValueResult.subdomain = this._subdomain;
    }
    if (this._subscription !== undefined) {
      hasAnyValues = true;
      internalValueResult.subscription = this._subscription;
    }
    if (this._subscriptionKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.subscriptionKey = this._subscriptionKey;
    }
    if (this._supportConnectedAccountsSync !== undefined) {
      hasAnyValues = true;
      internalValueResult.supportConnectedAccountsSync = this._supportConnectedAccountsSync;
    }
    if (this._supportNestedColumns !== undefined) {
      hasAnyValues = true;
      internalValueResult.supportNestedColumns = this._supportNestedColumns;
    }
    if (this._surveyIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.surveyIds = this._surveyIds;
    }
    if (this._swipeAttributionWindow !== undefined) {
      hasAnyValues = true;
      internalValueResult.swipeAttributionWindow = this._swipeAttributionWindow;
    }
    if (this._syncDataLocker !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncDataLocker = this._syncDataLocker;
    }
    if (this._syncFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncFormat = this._syncFormat;
    }
    if (this._syncFormulaFields !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncFormulaFields = this._syncFormulaFields;
    }
    if (this._syncMetadata !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncMetadata = this._syncMetadata;
    }
    if (this._syncMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncMethod = this._syncMethod;
    }
    if (this._syncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncMode = this._syncMode;
    }
    if (this._syncModeAdvertiser !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncModeAdvertiser = this._syncModeAdvertiser;
    }
    if (this._syncModeSeat !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncModeSeat = this._syncModeSeat;
    }
    if (this._syncMultipleAccounts !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncMultipleAccounts = this._syncMultipleAccounts;
    }
    if (this._syncPackMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncPackMode = this._syncPackMode;
    }
    if (this._syncPermissions !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncPermissions = this._syncPermissions;
    }
    if (this._syncPullApi !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncPullApi = this._syncPullApi;
    }
    if (this._syncType !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncType = this._syncType;
    }
    if (this._sysnr !== undefined) {
      hasAnyValues = true;
      internalValueResult.sysnr = this._sysnr;
    }
    if (this._systemId !== undefined) {
      hasAnyValues = true;
      internalValueResult.systemId = this._systemId;
    }
    if (this._tableId !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableId = this._tableId;
    }
    if (this._tableName !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableName = this._tableName;
    }
    if (this._tablesWithoutAccessUpdatedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.tablesWithoutAccessUpdatedAt = this._tablesWithoutAccessUpdatedAt;
    }
    if (this._targetEntityId !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetEntityId = this._targetEntityId;
    }
    if (this._targetHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetHost = this._targetHost;
    }
    if (this._tdeCertificate !== undefined) {
      hasAnyValues = true;
      internalValueResult.tdeCertificate = this._tdeCertificate;
    }
    if (this._tdeCertificateName !== undefined) {
      hasAnyValues = true;
      internalValueResult.tdeCertificateName = this._tdeCertificateName;
    }
    if (this._tdePassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.tdePassword = this._tdePassword;
    }
    if (this._tdePrivateKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.tdePrivateKey = this._tdePrivateKey;
    }
    if (this._tdeWalletPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.tdeWalletPassword = this._tdeWalletPassword;
    }
    if (this._teamId !== undefined) {
      hasAnyValues = true;
      internalValueResult.teamId = this._teamId;
    }
    if (this._technicalAccountId !== undefined) {
      hasAnyValues = true;
      internalValueResult.technicalAccountId = this._technicalAccountId;
    }
    if (this._templateLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.templateLabels = this._templateLabels;
    }
    if (this._tenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenant = this._tenant;
    }
    if (this._tenantAppUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenantAppUrl = this._tenantAppUrl;
    }
    if (this._tenantCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenantCode = this._tenantCode;
    }
    if (this._tenantId !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenantId = this._tenantId;
    }
    if (this._tenantName !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenantName = this._tenantName;
    }
    if (this._tenantUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenantUrl = this._tenantUrl;
    }
    if (this._testTableName !== undefined) {
      hasAnyValues = true;
      internalValueResult.testTableName = this._testTableName;
    }
    if (this._timeZone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeZone = this._timeZone;
    }
    if (this._timeframeMonths !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeframeMonths = this._timeframeMonths;
    }
    if (this._timezone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timezone = this._timezone;
    }
    if (this._timezoneMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.timezoneMode = this._timezoneMode;
    }
    if (this._tns !== undefined) {
      hasAnyValues = true;
      internalValueResult.tns = this._tns;
    }
    if (this._toastId !== undefined) {
      hasAnyValues = true;
      internalValueResult.toastId = this._toastId;
    }
    if (this._token !== undefined) {
      hasAnyValues = true;
      internalValueResult.token = this._token;
    }
    if (this._tokenAuthenticatedContainer !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenAuthenticatedContainer = this._tokenAuthenticatedContainer;
    }
    if (this._tokenAuthenticatedDatabase !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenAuthenticatedDatabase = this._tokenAuthenticatedDatabase;
    }
    if (this._tokenId !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenId = this._tokenId;
    }
    if (this._tokenKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenKey = this._tokenKey;
    }
    if (this._tokenSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenSecret = this._tokenSecret;
    }
    if (this._tokenSecretKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenSecretKey = this._tokenSecretKey;
    }
    if (this._tokenUrlRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenUrlRegion = this._tokenUrlRegion;
    }
    if (this._topics !== undefined) {
      hasAnyValues = true;
      internalValueResult.topics = this._topics;
    }
    if (this._trustStoreType !== undefined) {
      hasAnyValues = true;
      internalValueResult.trustStoreType = this._trustStoreType;
    }
    if (this._trustedCert !== undefined) {
      hasAnyValues = true;
      internalValueResult.trustedCert = this._trustedCert;
    }
    if (this._truststore !== undefined) {
      hasAnyValues = true;
      internalValueResult.truststore = this._truststore;
    }
    if (this._tunnelHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.tunnelHost = this._tunnelHost;
    }
    if (this._tunnelPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.tunnelPort = this._tunnelPort;
    }
    if (this._tunnelUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.tunnelUser = this._tunnelUser;
    }
    if (this._typeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.typeName = this._typeName;
    }
    if (this._uniqueId !== undefined) {
      hasAnyValues = true;
      internalValueResult.uniqueId = this._uniqueId;
    }
    if (this._updateConfigOnEachSync !== undefined) {
      hasAnyValues = true;
      internalValueResult.updateConfigOnEachSync = this._updateConfigOnEachSync;
    }
    if (this._updateMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.updateMethod = this._updateMethod;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    if (this._urlFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.urlFormat = this._urlFormat;
    }
    if (this._useApiKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.useApiKeys = this._useApiKeys;
    }
    if (this._useCloudStorage !== undefined) {
      hasAnyValues = true;
      internalValueResult.useCloudStorage = this._useCloudStorage;
    }
    if (this._useCustomerBucket !== undefined) {
      hasAnyValues = true;
      internalValueResult.useCustomerBucket = this._useCustomerBucket;
    }
    if (this._useOracleRac !== undefined) {
      hasAnyValues = true;
      internalValueResult.useOracleRac = this._useOracleRac;
    }
    if (this._usePgpEncryptionOptions !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePgpEncryptionOptions = this._usePgpEncryptionOptions;
    }
    if (this._useServiceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.useServiceAccount = this._useServiceAccount;
    }
    if (this._useTemplateLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTemplateLabels = this._useTemplateLabels;
    }
    if (this._useWebhooks !== undefined) {
      hasAnyValues = true;
      internalValueResult.useWebhooks = this._useWebhooks;
    }
    if (this._useWorkspace !== undefined) {
      hasAnyValues = true;
      internalValueResult.useWorkspace = this._useWorkspace;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    if (this._userId !== undefined) {
      hasAnyValues = true;
      internalValueResult.userId = this._userId;
    }
    if (this._userKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.userKey = this._userKey;
    }
    if (this._userName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userName = this._userName;
    }
    if (this._userProfiles !== undefined) {
      hasAnyValues = true;
      internalValueResult.userProfiles = this._userProfiles;
    }
    if (this._userToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.userToken = this._userToken;
    }
    if (this._username !== undefined) {
      hasAnyValues = true;
      internalValueResult.username = this._username;
    }
    if (this._vendorsId !== undefined) {
      hasAnyValues = true;
      internalValueResult.vendorsId = this._vendorsId;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    if (this._viewAttributionWindow !== undefined) {
      hasAnyValues = true;
      internalValueResult.viewAttributionWindow = this._viewAttributionWindow;
    }
    if (this._viewId !== undefined) {
      hasAnyValues = true;
      internalValueResult.viewId = this._viewId;
    }
    if (this._viewThroughAttributionWindowSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.viewThroughAttributionWindowSize = this._viewThroughAttributionWindowSize;
    }
    if (this._webServiceApiKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.webServiceApiKey = this._webServiceApiKey;
    }
    if (this._webhookEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.webhookEndpoint = this._webhookEndpoint;
    }
    if (this._webhookKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.webhookKey = this._webhookKey;
    }
    if (this._webhookName !== undefined) {
      hasAnyValues = true;
      internalValueResult.webhookName = this._webhookName;
    }
    if (this._webhookUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.webhookUrl = this._webhookUrl;
    }
    if (this._wordPressSiteIdOrWoocommerceDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.wordPressSiteIdOrWoocommerceDomainName = this._wordPressSiteIdOrWoocommerceDomainName;
    }
    if (this._workplaceId !== undefined) {
      hasAnyValues = true;
      internalValueResult.workplaceId = this._workplaceId;
    }
    if (this._workspace !== undefined) {
      hasAnyValues = true;
      internalValueResult.workspace = this._workspace;
    }
    if (this._workspaceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.workspaceName = this._workspaceName;
    }
    if (this._workspaceSameAsSource !== undefined) {
      hasAnyValues = true;
      internalValueResult.workspaceSameAsSource = this._workspaceSameAsSource;
    }
    if (this._workspaceSchema !== undefined) {
      hasAnyValues = true;
      internalValueResult.workspaceSchema = this._workspaceSchema;
    }
    if (this._workspaceToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.workspaceToken = this._workspaceToken;
    }
    if (this._wsCertificate !== undefined) {
      hasAnyValues = true;
      internalValueResult.wsCertificate = this._wsCertificate;
    }
    if (this._xApiKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.xApiKey = this._xApiKey;
    }
    if (this._xKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.xKey = this._xKey;
    }
    if (this._xMasterKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.xMasterKey = this._xMasterKey;
    }
    if (this._xUserEmail !== undefined) {
      hasAnyValues = true;
      internalValueResult.xUserEmail = this._xUserEmail;
    }
    if (this._xUserToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.xUserToken = this._xUserToken;
    }
    if (this._accountsRedditAds?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountsRedditAds = this._accountsRedditAds?.internalValue;
    }
    if (this._adobeAnalyticsConfigurations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.adobeAnalyticsConfigurations = this._adobeAnalyticsConfigurations?.internalValue;
    }
    if (this._appIdsAppsflyer?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.appIdsAppsflyer = this._appIdsAppsflyer?.internalValue;
    }
    if (this._customPayloads?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customPayloads = this._customPayloads?.internalValue;
    }
    if (this._customReports?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customReports = this._customReports?.internalValue;
    }
    if (this._customTables?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customTables = this._customTables?.internalValue;
    }
    if (this._dataModelPathAliasList?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataModelPathAliasList = this._dataModelPathAliasList?.internalValue;
    }
    if (this._files?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.files = this._files?.internalValue;
    }
    if (this._projectCredentials?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectCredentials = this._projectCredentials?.internalValue;
    }
    if (this._reportConfigs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportConfigs = this._reportConfigs?.internalValue;
    }
    if (this._reportList?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.reportList = this._reportList?.internalValue;
    }
    if (this._reports?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.reports = this._reports?.internalValue;
    }
    if (this._secretsList?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretsList = this._secretsList?.internalValue;
    }
    if (this._tenantConfigs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenantConfigs = this._tenantConfigs?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorConfigA | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._absConnectionMethod = undefined;
      this._absConnectionString = undefined;
      this._absContainerAddress = undefined;
      this._absContainerName = undefined;
      this._absHostIp = undefined;
      this._absHostUser = undefined;
      this._absPrefix = undefined;
      this._absPublicKey = undefined;
      this._academyId = undefined;
      this._accessConfirmation = undefined;
      this._accessId = undefined;
      this._accessKey = undefined;
      this._accessKeyId = undefined;
      this._accessKeySecret = undefined;
      this._accessToken = undefined;
      this._accessType = undefined;
      this._account = undefined;
      this._accountAccessToken = undefined;
      this._accountId = undefined;
      this._accountIds = undefined;
      this._accountKey = undefined;
      this._accountName = undefined;
      this._accountPlan = undefined;
      this._accountRegion = undefined;
      this._accountSid = undefined;
      this._accountSyncMode = undefined;
      this._accountToken = undefined;
      this._accountType = undefined;
      this._accounts = undefined;
      this._accountsSyncMode = undefined;
      this._actionBreakdowns = undefined;
      this._actionReportTime = undefined;
      this._adAnalytics = undefined;
      this._adUnitView = undefined;
      this._adminApiKey = undefined;
      this._adminUsername = undefined;
      this._advertisables = undefined;
      this._advertisers = undefined;
      this._advertisersId = undefined;
      this._advertisersSyncMode = undefined;
      this._advertisersWithSeat = undefined;
      this._agentConfigMethod = undefined;
      this._agentHost = undefined;
      this._agentId = undefined;
      this._agentOraHome = undefined;
      this._agentPassword = undefined;
      this._agentPort = undefined;
      this._agentPublicCert = undefined;
      this._agentUser = undefined;
      this._aggregation = undefined;
      this._agreementGrantToken = undefined;
      this._algorithm = undefined;
      this._alwaysEncrypted = undefined;
      this._api = undefined;
      this._apiAccessToken = undefined;
      this._apiEnvironment = undefined;
      this._apiId = undefined;
      this._apiKey = undefined;
      this._apiKeyApiSecret = undefined;
      this._apiKeys = undefined;
      this._apiPassword = undefined;
      this._apiQuota = undefined;
      this._apiReadAccessToken = undefined;
      this._apiRequestsPerMinute = undefined;
      this._apiRole = undefined;
      this._apiSecret = undefined;
      this._apiSecretKey = undefined;
      this._apiServer = undefined;
      this._apiToken = undefined;
      this._apiType = undefined;
      this._apiUrl = undefined;
      this._apiUrlRegion = undefined;
      this._apiUsage = undefined;
      this._apiUserIdentifier = undefined;
      this._apiUserSecret = undefined;
      this._apiUsername = undefined;
      this._apiUtilizationPercentage = undefined;
      this._apiVersion = undefined;
      this._appId = undefined;
      this._appIds = undefined;
      this._appKey = undefined;
      this._appReference = undefined;
      this._appSecret = undefined;
      this._appSecretToken = undefined;
      this._appSpecificPassword = undefined;
      this._appSyncMode = undefined;
      this._appendFileOption = undefined;
      this._applicationId = undefined;
      this._applicationKey = undefined;
      this._apps = undefined;
      this._archiveLogFormat = undefined;
      this._archiveLogPath = undefined;
      this._archivePattern = undefined;
      this._areSoapCredentialsProvided = undefined;
      this._asbIp = undefined;
      this._asmOption = undefined;
      this._asmOracleHome = undefined;
      this._asmPassword = undefined;
      this._asmTns = undefined;
      this._asmUser = undefined;
      this._attributionWindow = undefined;
      this._attributionWindowSize = undefined;
      this._audience = undefined;
      this._auth = undefined;
      this._authCode = undefined;
      this._authEnvironment = undefined;
      this._authHeaderKey = undefined;
      this._authMethod = undefined;
      this._authMode = undefined;
      this._authSecret = undefined;
      this._authToken = undefined;
      this._authType = undefined;
      this._authUrlRegion = undefined;
      this._authenticationMethod = undefined;
      this._authorizationUrl = undefined;
      this._awsRegionCode = undefined;
      this._backintConfigurationPath = undefined;
      this._backintExecutablePath = undefined;
      this._backupLogFormat = undefined;
      this._backupLogPath = undefined;
      this._backupStorageType = undefined;
      this._backwardSyncLimit = undefined;
      this._backwardSyncLimitDate = undefined;
      this._baseCurrency = undefined;
      this._baseDomain = undefined;
      this._baseId = undefined;
      this._baseUrl = undefined;
      this._bearerToken = undefined;
      this._binaryLogType = undefined;
      this._binaryRepresentation = undefined;
      this._blobSasUrl = undefined;
      this._blockchain = undefined;
      this._brandId = undefined;
      this._breakdowns = undefined;
      this._bucket = undefined;
      this._bucketName = undefined;
      this._bucketService = undefined;
      this._businessAccounts = undefined;
      this._businessId = undefined;
      this._businessUnit = undefined;
      this._businessUnitId = undefined;
      this._catalog = undefined;
      this._certificate = undefined;
      this._certificateId = undefined;
      this._clickAttributionWindow = undefined;
      this._client = undefined;
      this._clientCert = undefined;
      this._clientCertKey = undefined;
      this._clientHost = undefined;
      this._clientId = undefined;
      this._clientKey = undefined;
      this._clientName = undefined;
      this._clientNamespace = undefined;
      this._clientPrivateKey = undefined;
      this._clientPublicCertificate = undefined;
      this._clientSecret = undefined;
      this._cloudStorageType = undefined;
      this._collectionAddress = undefined;
      this._columns = undefined;
      this._communityApiKeyName = undefined;
      this._communityDomain = undefined;
      this._communityId = undefined;
      this._companies = undefined;
      this._company = undefined;
      this._companyId = undefined;
      this._companyIds = undefined;
      this._companyKey = undefined;
      this._companyName = undefined;
      this._companyRequestToken = undefined;
      this._companyUuid = undefined;
      this._compression = undefined;
      this._configMethod = undefined;
      this._configRepositoryUrl = undefined;
      this._configType = undefined;
      this._connectPassword = undefined;
      this._connectUsername = undefined;
      this._connectingUser = undefined;
      this._connectingUserEmail = undefined;
      this._connectionMethod = undefined;
      this._connectionName = undefined;
      this._connectionString = undefined;
      this._connectionType = undefined;
      this._consoleUrl = undefined;
      this._consumerGroup = undefined;
      this._consumerKey = undefined;
      this._consumerName = undefined;
      this._consumerSecret = undefined;
      this._containerAddress = undefined;
      this._containerName = undefined;
      this._contentOwnerId = undefined;
      this._contractVersion = undefined;
      this._conversationWebhookUrl = undefined;
      this._conversionDimensions = undefined;
      this._conversionReportTime = undefined;
      this._conversionWindowSize = undefined;
      this._convertDatsTypeToDate = undefined;
      this._csvDefinition = undefined;
      this._currency = undefined;
      this._customBaseUrl = undefined;
      this._customDimensionKeyIds = undefined;
      this._customEventSyncMode = undefined;
      this._customEvents = undefined;
      this._customFieldIds = undefined;
      this._customFloodlightVariables = undefined;
      this._customRateLimit = undefined;
      this._customUrl = undefined;
      this._customerApiKey = undefined;
      this._customerId = undefined;
      this._customerListId = undefined;
      this._dailyApiCallLimit = undefined;
      this._dataAccessMethod = undefined;
      this._dataCenter = undefined;
      this._dataCenterId = undefined;
      this._dataSetName = undefined;
      this._database = undefined;
      this._databaseName = undefined;
      this._datasetId = undefined;
      this._datasource = undefined;
      this._dateGranularity = undefined;
      this._db = undefined;
      this._defaultHost = undefined;
      this._delimiter = undefined;
      this._developerReference = undefined;
      this._dimensionAttributes = undefined;
      this._dimensions = undefined;
      this._directCaptureMethod = undefined;
      this._directories = undefined;
      this._directorySyncMode = undefined;
      this._distributedConnectorClusterSize = undefined;
      this._distributionIncrementalFetchWindowDays = undefined;
      this._domain = undefined;
      this._domainHostName = undefined;
      this._domainName = undefined;
      this._domainType = undefined;
      this._dsvServiceAuth = undefined;
      this._dsvSubscriptionKey = undefined;
      this._ecommerceStores = undefined;
      this._edition = undefined;
      this._elements = undefined;
      this._email = undefined;
      this._emailAddress = undefined;
      this._emailId = undefined;
      this._emptyHeader = undefined;
      this._enableAllDimensionCombinations = undefined;
      this._enableArchiveLogOnly = undefined;
      this._enableDataExtensionsSyncing = undefined;
      this._enableDistributedConnectorMode = undefined;
      this._enableEnrichments = undefined;
      this._enableExports = undefined;
      this._enableTde = undefined;
      this._enableTdeEncryption = undefined;
      this._encodedPublicKey = undefined;
      this._encryptionKey = undefined;
      this._endpoint = undefined;
      this._endpointUrl = undefined;
      this._engagementAttributionWindow = undefined;
      this._enrichedExport = undefined;
      this._entityId = undefined;
      this._entraAppId = undefined;
      this._entraTenantId = undefined;
      this._environment = undefined;
      this._environmentHost = undefined;
      this._environmentName = undefined;
      this._escapeChar = undefined;
      this._escapeCharOptions = undefined;
      this._euRegion = undefined;
      this._events = undefined;
      this._exportNativeTypesAsPdf = undefined;
      this._exportStorageType = undefined;
      this._externalId = undefined;
      this._facilityCodes = undefined;
      this._fields = undefined;
      this._fileHandling = undefined;
      this._fileType = undefined;
      this._filter = undefined;
      this._financeAccountSyncMode = undefined;
      this._financeAccounts = undefined;
      this._folder = undefined;
      this._folderId = undefined;
      this._folderPath = undefined;
      this._forecastId = undefined;
      this._ftpHost = undefined;
      this._ftpPassword = undefined;
      this._ftpPort = undefined;
      this._ftpUser = undefined;
      this._function = undefined;
      this._functionApp = undefined;
      this._functionKey = undefined;
      this._functionName = undefined;
      this._functionTrigger = undefined;
      this._gcsBucket = undefined;
      this._gcsExportBucket = undefined;
      this._gcsExportFolder = undefined;
      this._gcsFolder = undefined;
      this._generateFivetranPk = undefined;
      this._groupId = undefined;
      this._groupName = undefined;
      this._hanaBackupPassword = undefined;
      this._hanaMode = undefined;
      this._hasManagePermissions = undefined;
      this._historicSyncTimeFrame = undefined;
      this._historicalSyncLimit = undefined;
      this._historicalSyncLimitDate = undefined;
      this._historicalSyncLimitTimeFrame = undefined;
      this._historicalSyncTimeFrame = undefined;
      this._homeFolder = undefined;
      this._host = undefined;
      this._hostIp = undefined;
      this._hostName = undefined;
      this._hostUrl = undefined;
      this._hostUser = undefined;
      this._hostname = undefined;
      this._hosts = undefined;
      this._httpPath = undefined;
      this._identifier = undefined;
      this._identity = undefined;
      this._includeInheritedColumns = undefined;
      this._includeOcapiEndpoints = undefined;
      this._instance = undefined;
      this._instanceCode = undefined;
      this._instanceNumber = undefined;
      this._instanceUrl = undefined;
      this._integrationKey = undefined;
      this._ipAddress = undefined;
      this._isAccountLevelConnector = undefined;
      this._isAuth2Enabled = undefined;
      this._isCustomApiCredentials = undefined;
      this._isExternalActivitiesEndpointSelected = undefined;
      this._isFtps = undefined;
      this._isKeypair = undefined;
      this._isMultiEntityFeatureEnabled = undefined;
      this._isNewPackage = undefined;
      this._isPrivateKeyEncrypted = undefined;
      this._isPrivateLinkRequired = undefined;
      this._isPublic = undefined;
      this._isSailthruConnectEnabled = undefined;
      this._isSecure = undefined;
      this._isSftpCredsAvailable = undefined;
      this._isSingleTableMode = undefined;
      this._isTestAccount = undefined;
      this._isVendor = undefined;
      this._issuer = undefined;
      this._issuerId = undefined;
      this._jsonDeliveryMode = undefined;
      this._key = undefined;
      this._keyId = undefined;
      this._keyPassword = undefined;
      this._keyStoreType = undefined;
      this._keystore = undefined;
      this._keystorePassword = undefined;
      this._legalEntityId = undefined;
      this._limitForApiCallsToExternalActivitiesEndpoint = undefined;
      this._lineSeparator = undefined;
      this._listId = undefined;
      this._listOfCompanyIds = undefined;
      this._listStrategy = undefined;
      this._listSyncMode = undefined;
      this._logJournal = undefined;
      this._logJournalSchema = undefined;
      this._logOnGroup = undefined;
      this._login = undefined;
      this._loginPassword = undefined;
      this._lookBackWindowForGlBatchEndpoint = undefined;
      this._managerAccounts = undefined;
      this._maxApiRequestsPerDay = undefined;
      this._merchantId = undefined;
      this._messageType = undefined;
      this._metricId = undefined;
      this._metrics = undefined;
      this._namedRange = undefined;
      this._namespace = undefined;
      this._networkCode = undefined;
      this._nonStandardEscapeChar = undefined;
      this._nullSequence = undefined;
      this._oauthToken = undefined;
      this._oauthTokenSecret = undefined;
      this._ocapiClientId = undefined;
      this._ocapiClientSecret = undefined;
      this._ocapiCustomObjectTypes = undefined;
      this._ocapiHostname = undefined;
      this._odbcDriverManagerLibraryPath = undefined;
      this._odbcSysIniPath = undefined;
      this._onError = undefined;
      this._onPremise = undefined;
      this._organization = undefined;
      this._organizationDomain = undefined;
      this._organizationId = undefined;
      this._organizationName = undefined;
      this._organizations = undefined;
      this._packedModeTables = undefined;
      this._packingMode = undefined;
      this._pages = undefined;
      this._partnerCode = undefined;
      this._partnerUserId = undefined;
      this._partnerUserSecret = undefined;
      this._partners = undefined;
      this._passPhrase = undefined;
      this._passphrase = undefined;
      this._password = undefined;
      this._pat = undefined;
      this._patName = undefined;
      this._patSecret = undefined;
      this._path = undefined;
      this._pats = undefined;
      this._pattern = undefined;
      this._pdbName = undefined;
      this._pemCertificate = undefined;
      this._pemPrivateKey = undefined;
      this._perInteractionDimensions = undefined;
      this._personalAccessToken = undefined;
      this._personalApiToken = undefined;
      this._pgpPassPhrase = undefined;
      this._pgpSecretKey = undefined;
      this._phoneNumber = undefined;
      this._plan = undefined;
      this._planType = undefined;
      this._port = undefined;
      this._postClickAttributionWindowSize = undefined;
      this._prebuiltReport = undefined;
      this._prefix = undefined;
      this._primaryKey = undefined;
      this._primaryKeys = undefined;
      this._prioritiseBulkExportOverRest = undefined;
      this._privateAccessToken = undefined;
      this._privateKey = undefined;
      this._privateToken = undefined;
      this._product = undefined;
      this._profiles = undefined;
      this._profilesAmazonDsp = undefined;
      this._projectAccessToken = undefined;
      this._projectId = undefined;
      this._projectIds = undefined;
      this._projectKey = undefined;
      this._projects = undefined;
      this._properties = undefined;
      this._propertyId = undefined;
      this._publicKey = undefined;
      this._publicationName = undefined;
      this._publisherId = undefined;
      this._pullArchivedCampaigns = undefined;
      this._pythonVersion = undefined;
      this._queryId = undefined;
      this._queryParamValue = undefined;
      this._quotaProjectId = undefined;
      this._quoteChar = undefined;
      this._quoteCharacterEnabled = undefined;
      this._rateLimitPlan = undefined;
      this._refreshToken = undefined;
      this._refreshTokenExpiresAt = undefined;
      this._region = undefined;
      this._regionApiUrl = undefined;
      this._regionAuthUrl = undefined;
      this._regionTokenUrl = undefined;
      this._regionUrl = undefined;
      this._replicaId = undefined;
      this._replicationSlot = undefined;
      this._reportConfigurationIds = undefined;
      this._reportFormatType = undefined;
      this._reportGranularity = undefined;
      this._reportKeys = undefined;
      this._reportServiceApiKey = undefined;
      this._reportSuites = undefined;
      this._reportTimezone = undefined;
      this._reportType = undefined;
      this._reportUrl = undefined;
      this._reportsLinkedinAds = undefined;
      this._repositories = undefined;
      this._resourceToken = undefined;
      this._resourceUrl = undefined;
      this._restApiLimit = undefined;
      this._rfcLibraryPath = undefined;
      this._role = undefined;
      this._roleArn = undefined;
      this._rollbackWindow = undefined;
      this._rollbackWindowSize = undefined;
      this._rootResourceId = undefined;
      this._s3ExportBucket = undefined;
      this._s3ExportExternalId = undefined;
      this._s3ExportFolder = undefined;
      this._s3ExportRoleArn = undefined;
      this._s3Bucket = undefined;
      this._s3ExternalId = undefined;
      this._s3Folder = undefined;
      this._s3Path = undefined;
      this._s3RoleArn = undefined;
      this._salesAccountSyncMode = undefined;
      this._salesAccounts = undefined;
      this._salesforceSecurityToken = undefined;
      this._sandboxAccount = undefined;
      this._sapSchema = undefined;
      this._sapSourceSchema = undefined;
      this._sapUser = undefined;
      this._saslMechanism = undefined;
      this._saslPlainKey = undefined;
      this._saslPlainSecret = undefined;
      this._saslScram256Key = undefined;
      this._saslScram256Secret = undefined;
      this._saslScram512Key = undefined;
      this._saslScram512Secret = undefined;
      this._schemaRegistryCredentialsSource = undefined;
      this._schemaRegistryKey = undefined;
      this._schemaRegistrySecret = undefined;
      this._schemaRegistryUrls = undefined;
      this._scope = undefined;
      this._scopes = undefined;
      this._seats = undefined;
      this._secret = undefined;
      this._secretAccessKey = undefined;
      this._secretKey = undefined;
      this._secrets = undefined;
      this._securityProtocol = undefined;
      this._segments = undefined;
      this._selectedEventTypes = undefined;
      this._selectedExports = undefined;
      this._selectedRange = undefined;
      this._senderId = undefined;
      this._senderPassword = undefined;
      this._server = undefined;
      this._serverAddress = undefined;
      this._serverRegion = undefined;
      this._serverUrl = undefined;
      this._serverVariable = undefined;
      this._servers = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountEmail = undefined;
      this._serviceAccountKey = undefined;
      this._serviceAccountSecret = undefined;
      this._serviceAccountUsername = undefined;
      this._serviceAuthentication = undefined;
      this._serviceName = undefined;
      this._sftpHost = undefined;
      this._sftpIsKeyPair = undefined;
      this._sftpPassword = undefined;
      this._sftpPort = undefined;
      this._sftpPublicKey = undefined;
      this._sftpUser = undefined;
      this._shareUrl = undefined;
      this._sheetId = undefined;
      this._shop = undefined;
      this._shopDomain = undefined;
      this._shortCode = undefined;
      this._shouldSyncEventsWithDeletedProfiles = undefined;
      this._shouldSyncReimportTables = undefined;
      this._showRecordsWithNoMetrics = undefined;
      this._sid = undefined;
      this._signatureEncoding = undefined;
      this._signerPublicKey = undefined;
      this._siteAddress = undefined;
      this._siteId = undefined;
      this._siteName = undefined;
      this._siteUrls = undefined;
      this._skipAfter = undefined;
      this._skipBefore = undefined;
      this._skipEmptyReports = undefined;
      this._sncCertificate = undefined;
      this._sncCertificateSource = undefined;
      this._sncFivetranName = undefined;
      this._sncLibraryPath = undefined;
      this._sncMode = undefined;
      this._sncMyName = undefined;
      this._sncName = undefined;
      this._sncPartnerName = undefined;
      this._sncSourceName = undefined;
      this._soapUri = undefined;
      this._socialDataSyncTimeframe = undefined;
      this._source = undefined;
      this._sourceName = undefined;
      this._storeHash = undefined;
      this._storeId = undefined;
      this._subCollections = undefined;
      this._subDomain = undefined;
      this._subdomain = undefined;
      this._subscription = undefined;
      this._subscriptionKey = undefined;
      this._supportConnectedAccountsSync = undefined;
      this._supportNestedColumns = undefined;
      this._surveyIds = undefined;
      this._swipeAttributionWindow = undefined;
      this._syncDataLocker = undefined;
      this._syncFormat = undefined;
      this._syncFormulaFields = undefined;
      this._syncMetadata = undefined;
      this._syncMethod = undefined;
      this._syncMode = undefined;
      this._syncModeAdvertiser = undefined;
      this._syncModeSeat = undefined;
      this._syncMultipleAccounts = undefined;
      this._syncPackMode = undefined;
      this._syncPermissions = undefined;
      this._syncPullApi = undefined;
      this._syncType = undefined;
      this._sysnr = undefined;
      this._systemId = undefined;
      this._tableId = undefined;
      this._tableName = undefined;
      this._tablesWithoutAccessUpdatedAt = undefined;
      this._targetEntityId = undefined;
      this._targetHost = undefined;
      this._tdeCertificate = undefined;
      this._tdeCertificateName = undefined;
      this._tdePassword = undefined;
      this._tdePrivateKey = undefined;
      this._tdeWalletPassword = undefined;
      this._teamId = undefined;
      this._technicalAccountId = undefined;
      this._templateLabels = undefined;
      this._tenant = undefined;
      this._tenantAppUrl = undefined;
      this._tenantCode = undefined;
      this._tenantId = undefined;
      this._tenantName = undefined;
      this._tenantUrl = undefined;
      this._testTableName = undefined;
      this._timeZone = undefined;
      this._timeframeMonths = undefined;
      this._timezone = undefined;
      this._timezoneMode = undefined;
      this._tns = undefined;
      this._toastId = undefined;
      this._token = undefined;
      this._tokenAuthenticatedContainer = undefined;
      this._tokenAuthenticatedDatabase = undefined;
      this._tokenId = undefined;
      this._tokenKey = undefined;
      this._tokenSecret = undefined;
      this._tokenSecretKey = undefined;
      this._tokenUrlRegion = undefined;
      this._topics = undefined;
      this._trustStoreType = undefined;
      this._trustedCert = undefined;
      this._truststore = undefined;
      this._tunnelHost = undefined;
      this._tunnelPort = undefined;
      this._tunnelUser = undefined;
      this._typeName = undefined;
      this._uniqueId = undefined;
      this._updateConfigOnEachSync = undefined;
      this._updateMethod = undefined;
      this._uri = undefined;
      this._urlFormat = undefined;
      this._useApiKeys = undefined;
      this._useCloudStorage = undefined;
      this._useCustomerBucket = undefined;
      this._useOracleRac = undefined;
      this._usePgpEncryptionOptions = undefined;
      this._useServiceAccount = undefined;
      this._useTemplateLabels = undefined;
      this._useWebhooks = undefined;
      this._useWorkspace = undefined;
      this._user = undefined;
      this._userId = undefined;
      this._userKey = undefined;
      this._userName = undefined;
      this._userProfiles = undefined;
      this._userToken = undefined;
      this._username = undefined;
      this._vendorsId = undefined;
      this._version = undefined;
      this._viewAttributionWindow = undefined;
      this._viewId = undefined;
      this._viewThroughAttributionWindowSize = undefined;
      this._webServiceApiKey = undefined;
      this._webhookEndpoint = undefined;
      this._webhookKey = undefined;
      this._webhookName = undefined;
      this._webhookUrl = undefined;
      this._wordPressSiteIdOrWoocommerceDomainName = undefined;
      this._workplaceId = undefined;
      this._workspace = undefined;
      this._workspaceName = undefined;
      this._workspaceSameAsSource = undefined;
      this._workspaceSchema = undefined;
      this._workspaceToken = undefined;
      this._wsCertificate = undefined;
      this._xApiKey = undefined;
      this._xKey = undefined;
      this._xMasterKey = undefined;
      this._xUserEmail = undefined;
      this._xUserToken = undefined;
      this._accountsRedditAds.internalValue = undefined;
      this._adobeAnalyticsConfigurations.internalValue = undefined;
      this._appIdsAppsflyer.internalValue = undefined;
      this._customPayloads.internalValue = undefined;
      this._customReports.internalValue = undefined;
      this._customTables.internalValue = undefined;
      this._dataModelPathAliasList.internalValue = undefined;
      this._files.internalValue = undefined;
      this._projectCredentials.internalValue = undefined;
      this._reportConfigs.internalValue = undefined;
      this._reportList.internalValue = undefined;
      this._reports.internalValue = undefined;
      this._secretsList.internalValue = undefined;
      this._tenantConfigs.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._absConnectionMethod = value.absConnectionMethod;
      this._absConnectionString = value.absConnectionString;
      this._absContainerAddress = value.absContainerAddress;
      this._absContainerName = value.absContainerName;
      this._absHostIp = value.absHostIp;
      this._absHostUser = value.absHostUser;
      this._absPrefix = value.absPrefix;
      this._absPublicKey = value.absPublicKey;
      this._academyId = value.academyId;
      this._accessConfirmation = value.accessConfirmation;
      this._accessId = value.accessId;
      this._accessKey = value.accessKey;
      this._accessKeyId = value.accessKeyId;
      this._accessKeySecret = value.accessKeySecret;
      this._accessToken = value.accessToken;
      this._accessType = value.accessType;
      this._account = value.account;
      this._accountAccessToken = value.accountAccessToken;
      this._accountId = value.accountId;
      this._accountIds = value.accountIds;
      this._accountKey = value.accountKey;
      this._accountName = value.accountName;
      this._accountPlan = value.accountPlan;
      this._accountRegion = value.accountRegion;
      this._accountSid = value.accountSid;
      this._accountSyncMode = value.accountSyncMode;
      this._accountToken = value.accountToken;
      this._accountType = value.accountType;
      this._accounts = value.accounts;
      this._accountsSyncMode = value.accountsSyncMode;
      this._actionBreakdowns = value.actionBreakdowns;
      this._actionReportTime = value.actionReportTime;
      this._adAnalytics = value.adAnalytics;
      this._adUnitView = value.adUnitView;
      this._adminApiKey = value.adminApiKey;
      this._adminUsername = value.adminUsername;
      this._advertisables = value.advertisables;
      this._advertisers = value.advertisers;
      this._advertisersId = value.advertisersId;
      this._advertisersSyncMode = value.advertisersSyncMode;
      this._advertisersWithSeat = value.advertisersWithSeat;
      this._agentConfigMethod = value.agentConfigMethod;
      this._agentHost = value.agentHost;
      this._agentId = value.agentId;
      this._agentOraHome = value.agentOraHome;
      this._agentPassword = value.agentPassword;
      this._agentPort = value.agentPort;
      this._agentPublicCert = value.agentPublicCert;
      this._agentUser = value.agentUser;
      this._aggregation = value.aggregation;
      this._agreementGrantToken = value.agreementGrantToken;
      this._algorithm = value.algorithm;
      this._alwaysEncrypted = value.alwaysEncrypted;
      this._api = value.api;
      this._apiAccessToken = value.apiAccessToken;
      this._apiEnvironment = value.apiEnvironment;
      this._apiId = value.apiId;
      this._apiKey = value.apiKey;
      this._apiKeyApiSecret = value.apiKeyApiSecret;
      this._apiKeys = value.apiKeys;
      this._apiPassword = value.apiPassword;
      this._apiQuota = value.apiQuota;
      this._apiReadAccessToken = value.apiReadAccessToken;
      this._apiRequestsPerMinute = value.apiRequestsPerMinute;
      this._apiRole = value.apiRole;
      this._apiSecret = value.apiSecret;
      this._apiSecretKey = value.apiSecretKey;
      this._apiServer = value.apiServer;
      this._apiToken = value.apiToken;
      this._apiType = value.apiType;
      this._apiUrl = value.apiUrl;
      this._apiUrlRegion = value.apiUrlRegion;
      this._apiUsage = value.apiUsage;
      this._apiUserIdentifier = value.apiUserIdentifier;
      this._apiUserSecret = value.apiUserSecret;
      this._apiUsername = value.apiUsername;
      this._apiUtilizationPercentage = value.apiUtilizationPercentage;
      this._apiVersion = value.apiVersion;
      this._appId = value.appId;
      this._appIds = value.appIds;
      this._appKey = value.appKey;
      this._appReference = value.appReference;
      this._appSecret = value.appSecret;
      this._appSecretToken = value.appSecretToken;
      this._appSpecificPassword = value.appSpecificPassword;
      this._appSyncMode = value.appSyncMode;
      this._appendFileOption = value.appendFileOption;
      this._applicationId = value.applicationId;
      this._applicationKey = value.applicationKey;
      this._apps = value.apps;
      this._archiveLogFormat = value.archiveLogFormat;
      this._archiveLogPath = value.archiveLogPath;
      this._archivePattern = value.archivePattern;
      this._areSoapCredentialsProvided = value.areSoapCredentialsProvided;
      this._asbIp = value.asbIp;
      this._asmOption = value.asmOption;
      this._asmOracleHome = value.asmOracleHome;
      this._asmPassword = value.asmPassword;
      this._asmTns = value.asmTns;
      this._asmUser = value.asmUser;
      this._attributionWindow = value.attributionWindow;
      this._attributionWindowSize = value.attributionWindowSize;
      this._audience = value.audience;
      this._auth = value.auth;
      this._authCode = value.authCode;
      this._authEnvironment = value.authEnvironment;
      this._authHeaderKey = value.authHeaderKey;
      this._authMethod = value.authMethod;
      this._authMode = value.authMode;
      this._authSecret = value.authSecret;
      this._authToken = value.authToken;
      this._authType = value.authType;
      this._authUrlRegion = value.authUrlRegion;
      this._authenticationMethod = value.authenticationMethod;
      this._authorizationUrl = value.authorizationUrl;
      this._awsRegionCode = value.awsRegionCode;
      this._backintConfigurationPath = value.backintConfigurationPath;
      this._backintExecutablePath = value.backintExecutablePath;
      this._backupLogFormat = value.backupLogFormat;
      this._backupLogPath = value.backupLogPath;
      this._backupStorageType = value.backupStorageType;
      this._backwardSyncLimit = value.backwardSyncLimit;
      this._backwardSyncLimitDate = value.backwardSyncLimitDate;
      this._baseCurrency = value.baseCurrency;
      this._baseDomain = value.baseDomain;
      this._baseId = value.baseId;
      this._baseUrl = value.baseUrl;
      this._bearerToken = value.bearerToken;
      this._binaryLogType = value.binaryLogType;
      this._binaryRepresentation = value.binaryRepresentation;
      this._blobSasUrl = value.blobSasUrl;
      this._blockchain = value.blockchain;
      this._brandId = value.brandId;
      this._breakdowns = value.breakdowns;
      this._bucket = value.bucket;
      this._bucketName = value.bucketName;
      this._bucketService = value.bucketService;
      this._businessAccounts = value.businessAccounts;
      this._businessId = value.businessId;
      this._businessUnit = value.businessUnit;
      this._businessUnitId = value.businessUnitId;
      this._catalog = value.catalog;
      this._certificate = value.certificate;
      this._certificateId = value.certificateId;
      this._clickAttributionWindow = value.clickAttributionWindow;
      this._client = value.client;
      this._clientCert = value.clientCert;
      this._clientCertKey = value.clientCertKey;
      this._clientHost = value.clientHost;
      this._clientId = value.clientId;
      this._clientKey = value.clientKey;
      this._clientName = value.clientName;
      this._clientNamespace = value.clientNamespace;
      this._clientPrivateKey = value.clientPrivateKey;
      this._clientPublicCertificate = value.clientPublicCertificate;
      this._clientSecret = value.clientSecret;
      this._cloudStorageType = value.cloudStorageType;
      this._collectionAddress = value.collectionAddress;
      this._columns = value.columns;
      this._communityApiKeyName = value.communityApiKeyName;
      this._communityDomain = value.communityDomain;
      this._communityId = value.communityId;
      this._companies = value.companies;
      this._company = value.company;
      this._companyId = value.companyId;
      this._companyIds = value.companyIds;
      this._companyKey = value.companyKey;
      this._companyName = value.companyName;
      this._companyRequestToken = value.companyRequestToken;
      this._companyUuid = value.companyUuid;
      this._compression = value.compression;
      this._configMethod = value.configMethod;
      this._configRepositoryUrl = value.configRepositoryUrl;
      this._configType = value.configType;
      this._connectPassword = value.connectPassword;
      this._connectUsername = value.connectUsername;
      this._connectingUser = value.connectingUser;
      this._connectingUserEmail = value.connectingUserEmail;
      this._connectionMethod = value.connectionMethod;
      this._connectionName = value.connectionName;
      this._connectionString = value.connectionString;
      this._connectionType = value.connectionType;
      this._consoleUrl = value.consoleUrl;
      this._consumerGroup = value.consumerGroup;
      this._consumerKey = value.consumerKey;
      this._consumerName = value.consumerName;
      this._consumerSecret = value.consumerSecret;
      this._containerAddress = value.containerAddress;
      this._containerName = value.containerName;
      this._contentOwnerId = value.contentOwnerId;
      this._contractVersion = value.contractVersion;
      this._conversationWebhookUrl = value.conversationWebhookUrl;
      this._conversionDimensions = value.conversionDimensions;
      this._conversionReportTime = value.conversionReportTime;
      this._conversionWindowSize = value.conversionWindowSize;
      this._convertDatsTypeToDate = value.convertDatsTypeToDate;
      this._csvDefinition = value.csvDefinition;
      this._currency = value.currency;
      this._customBaseUrl = value.customBaseUrl;
      this._customDimensionKeyIds = value.customDimensionKeyIds;
      this._customEventSyncMode = value.customEventSyncMode;
      this._customEvents = value.customEvents;
      this._customFieldIds = value.customFieldIds;
      this._customFloodlightVariables = value.customFloodlightVariables;
      this._customRateLimit = value.customRateLimit;
      this._customUrl = value.customUrl;
      this._customerApiKey = value.customerApiKey;
      this._customerId = value.customerId;
      this._customerListId = value.customerListId;
      this._dailyApiCallLimit = value.dailyApiCallLimit;
      this._dataAccessMethod = value.dataAccessMethod;
      this._dataCenter = value.dataCenter;
      this._dataCenterId = value.dataCenterId;
      this._dataSetName = value.dataSetName;
      this._database = value.database;
      this._databaseName = value.databaseName;
      this._datasetId = value.datasetId;
      this._datasource = value.datasource;
      this._dateGranularity = value.dateGranularity;
      this._db = value.db;
      this._defaultHost = value.defaultHost;
      this._delimiter = value.delimiter;
      this._developerReference = value.developerReference;
      this._dimensionAttributes = value.dimensionAttributes;
      this._dimensions = value.dimensions;
      this._directCaptureMethod = value.directCaptureMethod;
      this._directories = value.directories;
      this._directorySyncMode = value.directorySyncMode;
      this._distributedConnectorClusterSize = value.distributedConnectorClusterSize;
      this._distributionIncrementalFetchWindowDays = value.distributionIncrementalFetchWindowDays;
      this._domain = value.domain;
      this._domainHostName = value.domainHostName;
      this._domainName = value.domainName;
      this._domainType = value.domainType;
      this._dsvServiceAuth = value.dsvServiceAuth;
      this._dsvSubscriptionKey = value.dsvSubscriptionKey;
      this._ecommerceStores = value.ecommerceStores;
      this._edition = value.edition;
      this._elements = value.elements;
      this._email = value.email;
      this._emailAddress = value.emailAddress;
      this._emailId = value.emailId;
      this._emptyHeader = value.emptyHeader;
      this._enableAllDimensionCombinations = value.enableAllDimensionCombinations;
      this._enableArchiveLogOnly = value.enableArchiveLogOnly;
      this._enableDataExtensionsSyncing = value.enableDataExtensionsSyncing;
      this._enableDistributedConnectorMode = value.enableDistributedConnectorMode;
      this._enableEnrichments = value.enableEnrichments;
      this._enableExports = value.enableExports;
      this._enableTde = value.enableTde;
      this._enableTdeEncryption = value.enableTdeEncryption;
      this._encodedPublicKey = value.encodedPublicKey;
      this._encryptionKey = value.encryptionKey;
      this._endpoint = value.endpoint;
      this._endpointUrl = value.endpointUrl;
      this._engagementAttributionWindow = value.engagementAttributionWindow;
      this._enrichedExport = value.enrichedExport;
      this._entityId = value.entityId;
      this._entraAppId = value.entraAppId;
      this._entraTenantId = value.entraTenantId;
      this._environment = value.environment;
      this._environmentHost = value.environmentHost;
      this._environmentName = value.environmentName;
      this._escapeChar = value.escapeChar;
      this._escapeCharOptions = value.escapeCharOptions;
      this._euRegion = value.euRegion;
      this._events = value.events;
      this._exportNativeTypesAsPdf = value.exportNativeTypesAsPdf;
      this._exportStorageType = value.exportStorageType;
      this._externalId = value.externalId;
      this._facilityCodes = value.facilityCodes;
      this._fields = value.fields;
      this._fileHandling = value.fileHandling;
      this._fileType = value.fileType;
      this._filter = value.filter;
      this._financeAccountSyncMode = value.financeAccountSyncMode;
      this._financeAccounts = value.financeAccounts;
      this._folder = value.folder;
      this._folderId = value.folderId;
      this._folderPath = value.folderPath;
      this._forecastId = value.forecastId;
      this._ftpHost = value.ftpHost;
      this._ftpPassword = value.ftpPassword;
      this._ftpPort = value.ftpPort;
      this._ftpUser = value.ftpUser;
      this._function = value.function;
      this._functionApp = value.functionApp;
      this._functionKey = value.functionKey;
      this._functionName = value.functionName;
      this._functionTrigger = value.functionTrigger;
      this._gcsBucket = value.gcsBucket;
      this._gcsExportBucket = value.gcsExportBucket;
      this._gcsExportFolder = value.gcsExportFolder;
      this._gcsFolder = value.gcsFolder;
      this._generateFivetranPk = value.generateFivetranPk;
      this._groupId = value.groupId;
      this._groupName = value.groupName;
      this._hanaBackupPassword = value.hanaBackupPassword;
      this._hanaMode = value.hanaMode;
      this._hasManagePermissions = value.hasManagePermissions;
      this._historicSyncTimeFrame = value.historicSyncTimeFrame;
      this._historicalSyncLimit = value.historicalSyncLimit;
      this._historicalSyncLimitDate = value.historicalSyncLimitDate;
      this._historicalSyncLimitTimeFrame = value.historicalSyncLimitTimeFrame;
      this._historicalSyncTimeFrame = value.historicalSyncTimeFrame;
      this._homeFolder = value.homeFolder;
      this._host = value.host;
      this._hostIp = value.hostIp;
      this._hostName = value.hostName;
      this._hostUrl = value.hostUrl;
      this._hostUser = value.hostUser;
      this._hostname = value.hostname;
      this._hosts = value.hosts;
      this._httpPath = value.httpPath;
      this._identifier = value.identifier;
      this._identity = value.identity;
      this._includeInheritedColumns = value.includeInheritedColumns;
      this._includeOcapiEndpoints = value.includeOcapiEndpoints;
      this._instance = value.instance;
      this._instanceCode = value.instanceCode;
      this._instanceNumber = value.instanceNumber;
      this._instanceUrl = value.instanceUrl;
      this._integrationKey = value.integrationKey;
      this._ipAddress = value.ipAddress;
      this._isAccountLevelConnector = value.isAccountLevelConnector;
      this._isAuth2Enabled = value.isAuth2Enabled;
      this._isCustomApiCredentials = value.isCustomApiCredentials;
      this._isExternalActivitiesEndpointSelected = value.isExternalActivitiesEndpointSelected;
      this._isFtps = value.isFtps;
      this._isKeypair = value.isKeypair;
      this._isMultiEntityFeatureEnabled = value.isMultiEntityFeatureEnabled;
      this._isNewPackage = value.isNewPackage;
      this._isPrivateKeyEncrypted = value.isPrivateKeyEncrypted;
      this._isPrivateLinkRequired = value.isPrivateLinkRequired;
      this._isPublic = value.isPublic;
      this._isSailthruConnectEnabled = value.isSailthruConnectEnabled;
      this._isSecure = value.isSecure;
      this._isSftpCredsAvailable = value.isSftpCredsAvailable;
      this._isSingleTableMode = value.isSingleTableMode;
      this._isTestAccount = value.isTestAccount;
      this._isVendor = value.isVendor;
      this._issuer = value.issuer;
      this._issuerId = value.issuerId;
      this._jsonDeliveryMode = value.jsonDeliveryMode;
      this._key = value.key;
      this._keyId = value.keyId;
      this._keyPassword = value.keyPassword;
      this._keyStoreType = value.keyStoreType;
      this._keystore = value.keystore;
      this._keystorePassword = value.keystorePassword;
      this._legalEntityId = value.legalEntityId;
      this._limitForApiCallsToExternalActivitiesEndpoint = value.limitForApiCallsToExternalActivitiesEndpoint;
      this._lineSeparator = value.lineSeparator;
      this._listId = value.listId;
      this._listOfCompanyIds = value.listOfCompanyIds;
      this._listStrategy = value.listStrategy;
      this._listSyncMode = value.listSyncMode;
      this._logJournal = value.logJournal;
      this._logJournalSchema = value.logJournalSchema;
      this._logOnGroup = value.logOnGroup;
      this._login = value.login;
      this._loginPassword = value.loginPassword;
      this._lookBackWindowForGlBatchEndpoint = value.lookBackWindowForGlBatchEndpoint;
      this._managerAccounts = value.managerAccounts;
      this._maxApiRequestsPerDay = value.maxApiRequestsPerDay;
      this._merchantId = value.merchantId;
      this._messageType = value.messageType;
      this._metricId = value.metricId;
      this._metrics = value.metrics;
      this._namedRange = value.namedRange;
      this._namespace = value.namespace;
      this._networkCode = value.networkCode;
      this._nonStandardEscapeChar = value.nonStandardEscapeChar;
      this._nullSequence = value.nullSequence;
      this._oauthToken = value.oauthToken;
      this._oauthTokenSecret = value.oauthTokenSecret;
      this._ocapiClientId = value.ocapiClientId;
      this._ocapiClientSecret = value.ocapiClientSecret;
      this._ocapiCustomObjectTypes = value.ocapiCustomObjectTypes;
      this._ocapiHostname = value.ocapiHostname;
      this._odbcDriverManagerLibraryPath = value.odbcDriverManagerLibraryPath;
      this._odbcSysIniPath = value.odbcSysIniPath;
      this._onError = value.onError;
      this._onPremise = value.onPremise;
      this._organization = value.organization;
      this._organizationDomain = value.organizationDomain;
      this._organizationId = value.organizationId;
      this._organizationName = value.organizationName;
      this._organizations = value.organizations;
      this._packedModeTables = value.packedModeTables;
      this._packingMode = value.packingMode;
      this._pages = value.pages;
      this._partnerCode = value.partnerCode;
      this._partnerUserId = value.partnerUserId;
      this._partnerUserSecret = value.partnerUserSecret;
      this._partners = value.partners;
      this._passPhrase = value.passPhrase;
      this._passphrase = value.passphrase;
      this._password = value.password;
      this._pat = value.pat;
      this._patName = value.patName;
      this._patSecret = value.patSecret;
      this._path = value.path;
      this._pats = value.pats;
      this._pattern = value.pattern;
      this._pdbName = value.pdbName;
      this._pemCertificate = value.pemCertificate;
      this._pemPrivateKey = value.pemPrivateKey;
      this._perInteractionDimensions = value.perInteractionDimensions;
      this._personalAccessToken = value.personalAccessToken;
      this._personalApiToken = value.personalApiToken;
      this._pgpPassPhrase = value.pgpPassPhrase;
      this._pgpSecretKey = value.pgpSecretKey;
      this._phoneNumber = value.phoneNumber;
      this._plan = value.plan;
      this._planType = value.planType;
      this._port = value.port;
      this._postClickAttributionWindowSize = value.postClickAttributionWindowSize;
      this._prebuiltReport = value.prebuiltReport;
      this._prefix = value.prefix;
      this._primaryKey = value.primaryKey;
      this._primaryKeys = value.primaryKeys;
      this._prioritiseBulkExportOverRest = value.prioritiseBulkExportOverRest;
      this._privateAccessToken = value.privateAccessToken;
      this._privateKey = value.privateKey;
      this._privateToken = value.privateToken;
      this._product = value.product;
      this._profiles = value.profiles;
      this._profilesAmazonDsp = value.profilesAmazonDsp;
      this._projectAccessToken = value.projectAccessToken;
      this._projectId = value.projectId;
      this._projectIds = value.projectIds;
      this._projectKey = value.projectKey;
      this._projects = value.projects;
      this._properties = value.properties;
      this._propertyId = value.propertyId;
      this._publicKey = value.publicKey;
      this._publicationName = value.publicationName;
      this._publisherId = value.publisherId;
      this._pullArchivedCampaigns = value.pullArchivedCampaigns;
      this._pythonVersion = value.pythonVersion;
      this._queryId = value.queryId;
      this._queryParamValue = value.queryParamValue;
      this._quotaProjectId = value.quotaProjectId;
      this._quoteChar = value.quoteChar;
      this._quoteCharacterEnabled = value.quoteCharacterEnabled;
      this._rateLimitPlan = value.rateLimitPlan;
      this._refreshToken = value.refreshToken;
      this._refreshTokenExpiresAt = value.refreshTokenExpiresAt;
      this._region = value.region;
      this._regionApiUrl = value.regionApiUrl;
      this._regionAuthUrl = value.regionAuthUrl;
      this._regionTokenUrl = value.regionTokenUrl;
      this._regionUrl = value.regionUrl;
      this._replicaId = value.replicaId;
      this._replicationSlot = value.replicationSlot;
      this._reportConfigurationIds = value.reportConfigurationIds;
      this._reportFormatType = value.reportFormatType;
      this._reportGranularity = value.reportGranularity;
      this._reportKeys = value.reportKeys;
      this._reportServiceApiKey = value.reportServiceApiKey;
      this._reportSuites = value.reportSuites;
      this._reportTimezone = value.reportTimezone;
      this._reportType = value.reportType;
      this._reportUrl = value.reportUrl;
      this._reportsLinkedinAds = value.reportsLinkedinAds;
      this._repositories = value.repositories;
      this._resourceToken = value.resourceToken;
      this._resourceUrl = value.resourceUrl;
      this._restApiLimit = value.restApiLimit;
      this._rfcLibraryPath = value.rfcLibraryPath;
      this._role = value.role;
      this._roleArn = value.roleArn;
      this._rollbackWindow = value.rollbackWindow;
      this._rollbackWindowSize = value.rollbackWindowSize;
      this._rootResourceId = value.rootResourceId;
      this._s3ExportBucket = value.s3ExportBucket;
      this._s3ExportExternalId = value.s3ExportExternalId;
      this._s3ExportFolder = value.s3ExportFolder;
      this._s3ExportRoleArn = value.s3ExportRoleArn;
      this._s3Bucket = value.s3Bucket;
      this._s3ExternalId = value.s3ExternalId;
      this._s3Folder = value.s3Folder;
      this._s3Path = value.s3Path;
      this._s3RoleArn = value.s3RoleArn;
      this._salesAccountSyncMode = value.salesAccountSyncMode;
      this._salesAccounts = value.salesAccounts;
      this._salesforceSecurityToken = value.salesforceSecurityToken;
      this._sandboxAccount = value.sandboxAccount;
      this._sapSchema = value.sapSchema;
      this._sapSourceSchema = value.sapSourceSchema;
      this._sapUser = value.sapUser;
      this._saslMechanism = value.saslMechanism;
      this._saslPlainKey = value.saslPlainKey;
      this._saslPlainSecret = value.saslPlainSecret;
      this._saslScram256Key = value.saslScram256Key;
      this._saslScram256Secret = value.saslScram256Secret;
      this._saslScram512Key = value.saslScram512Key;
      this._saslScram512Secret = value.saslScram512Secret;
      this._schemaRegistryCredentialsSource = value.schemaRegistryCredentialsSource;
      this._schemaRegistryKey = value.schemaRegistryKey;
      this._schemaRegistrySecret = value.schemaRegistrySecret;
      this._schemaRegistryUrls = value.schemaRegistryUrls;
      this._scope = value.scope;
      this._scopes = value.scopes;
      this._seats = value.seats;
      this._secret = value.secret;
      this._secretAccessKey = value.secretAccessKey;
      this._secretKey = value.secretKey;
      this._secrets = value.secrets;
      this._securityProtocol = value.securityProtocol;
      this._segments = value.segments;
      this._selectedEventTypes = value.selectedEventTypes;
      this._selectedExports = value.selectedExports;
      this._selectedRange = value.selectedRange;
      this._senderId = value.senderId;
      this._senderPassword = value.senderPassword;
      this._server = value.server;
      this._serverAddress = value.serverAddress;
      this._serverRegion = value.serverRegion;
      this._serverUrl = value.serverUrl;
      this._serverVariable = value.serverVariable;
      this._servers = value.servers;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountEmail = value.serviceAccountEmail;
      this._serviceAccountKey = value.serviceAccountKey;
      this._serviceAccountSecret = value.serviceAccountSecret;
      this._serviceAccountUsername = value.serviceAccountUsername;
      this._serviceAuthentication = value.serviceAuthentication;
      this._serviceName = value.serviceName;
      this._sftpHost = value.sftpHost;
      this._sftpIsKeyPair = value.sftpIsKeyPair;
      this._sftpPassword = value.sftpPassword;
      this._sftpPort = value.sftpPort;
      this._sftpPublicKey = value.sftpPublicKey;
      this._sftpUser = value.sftpUser;
      this._shareUrl = value.shareUrl;
      this._sheetId = value.sheetId;
      this._shop = value.shop;
      this._shopDomain = value.shopDomain;
      this._shortCode = value.shortCode;
      this._shouldSyncEventsWithDeletedProfiles = value.shouldSyncEventsWithDeletedProfiles;
      this._shouldSyncReimportTables = value.shouldSyncReimportTables;
      this._showRecordsWithNoMetrics = value.showRecordsWithNoMetrics;
      this._sid = value.sid;
      this._signatureEncoding = value.signatureEncoding;
      this._signerPublicKey = value.signerPublicKey;
      this._siteAddress = value.siteAddress;
      this._siteId = value.siteId;
      this._siteName = value.siteName;
      this._siteUrls = value.siteUrls;
      this._skipAfter = value.skipAfter;
      this._skipBefore = value.skipBefore;
      this._skipEmptyReports = value.skipEmptyReports;
      this._sncCertificate = value.sncCertificate;
      this._sncCertificateSource = value.sncCertificateSource;
      this._sncFivetranName = value.sncFivetranName;
      this._sncLibraryPath = value.sncLibraryPath;
      this._sncMode = value.sncMode;
      this._sncMyName = value.sncMyName;
      this._sncName = value.sncName;
      this._sncPartnerName = value.sncPartnerName;
      this._sncSourceName = value.sncSourceName;
      this._soapUri = value.soapUri;
      this._socialDataSyncTimeframe = value.socialDataSyncTimeframe;
      this._source = value.source;
      this._sourceName = value.sourceName;
      this._storeHash = value.storeHash;
      this._storeId = value.storeId;
      this._subCollections = value.subCollections;
      this._subDomain = value.subDomain;
      this._subdomain = value.subdomain;
      this._subscription = value.subscription;
      this._subscriptionKey = value.subscriptionKey;
      this._supportConnectedAccountsSync = value.supportConnectedAccountsSync;
      this._supportNestedColumns = value.supportNestedColumns;
      this._surveyIds = value.surveyIds;
      this._swipeAttributionWindow = value.swipeAttributionWindow;
      this._syncDataLocker = value.syncDataLocker;
      this._syncFormat = value.syncFormat;
      this._syncFormulaFields = value.syncFormulaFields;
      this._syncMetadata = value.syncMetadata;
      this._syncMethod = value.syncMethod;
      this._syncMode = value.syncMode;
      this._syncModeAdvertiser = value.syncModeAdvertiser;
      this._syncModeSeat = value.syncModeSeat;
      this._syncMultipleAccounts = value.syncMultipleAccounts;
      this._syncPackMode = value.syncPackMode;
      this._syncPermissions = value.syncPermissions;
      this._syncPullApi = value.syncPullApi;
      this._syncType = value.syncType;
      this._sysnr = value.sysnr;
      this._systemId = value.systemId;
      this._tableId = value.tableId;
      this._tableName = value.tableName;
      this._tablesWithoutAccessUpdatedAt = value.tablesWithoutAccessUpdatedAt;
      this._targetEntityId = value.targetEntityId;
      this._targetHost = value.targetHost;
      this._tdeCertificate = value.tdeCertificate;
      this._tdeCertificateName = value.tdeCertificateName;
      this._tdePassword = value.tdePassword;
      this._tdePrivateKey = value.tdePrivateKey;
      this._tdeWalletPassword = value.tdeWalletPassword;
      this._teamId = value.teamId;
      this._technicalAccountId = value.technicalAccountId;
      this._templateLabels = value.templateLabels;
      this._tenant = value.tenant;
      this._tenantAppUrl = value.tenantAppUrl;
      this._tenantCode = value.tenantCode;
      this._tenantId = value.tenantId;
      this._tenantName = value.tenantName;
      this._tenantUrl = value.tenantUrl;
      this._testTableName = value.testTableName;
      this._timeZone = value.timeZone;
      this._timeframeMonths = value.timeframeMonths;
      this._timezone = value.timezone;
      this._timezoneMode = value.timezoneMode;
      this._tns = value.tns;
      this._toastId = value.toastId;
      this._token = value.token;
      this._tokenAuthenticatedContainer = value.tokenAuthenticatedContainer;
      this._tokenAuthenticatedDatabase = value.tokenAuthenticatedDatabase;
      this._tokenId = value.tokenId;
      this._tokenKey = value.tokenKey;
      this._tokenSecret = value.tokenSecret;
      this._tokenSecretKey = value.tokenSecretKey;
      this._tokenUrlRegion = value.tokenUrlRegion;
      this._topics = value.topics;
      this._trustStoreType = value.trustStoreType;
      this._trustedCert = value.trustedCert;
      this._truststore = value.truststore;
      this._tunnelHost = value.tunnelHost;
      this._tunnelPort = value.tunnelPort;
      this._tunnelUser = value.tunnelUser;
      this._typeName = value.typeName;
      this._uniqueId = value.uniqueId;
      this._updateConfigOnEachSync = value.updateConfigOnEachSync;
      this._updateMethod = value.updateMethod;
      this._uri = value.uri;
      this._urlFormat = value.urlFormat;
      this._useApiKeys = value.useApiKeys;
      this._useCloudStorage = value.useCloudStorage;
      this._useCustomerBucket = value.useCustomerBucket;
      this._useOracleRac = value.useOracleRac;
      this._usePgpEncryptionOptions = value.usePgpEncryptionOptions;
      this._useServiceAccount = value.useServiceAccount;
      this._useTemplateLabels = value.useTemplateLabels;
      this._useWebhooks = value.useWebhooks;
      this._useWorkspace = value.useWorkspace;
      this._user = value.user;
      this._userId = value.userId;
      this._userKey = value.userKey;
      this._userName = value.userName;
      this._userProfiles = value.userProfiles;
      this._userToken = value.userToken;
      this._username = value.username;
      this._vendorsId = value.vendorsId;
      this._version = value.version;
      this._viewAttributionWindow = value.viewAttributionWindow;
      this._viewId = value.viewId;
      this._viewThroughAttributionWindowSize = value.viewThroughAttributionWindowSize;
      this._webServiceApiKey = value.webServiceApiKey;
      this._webhookEndpoint = value.webhookEndpoint;
      this._webhookKey = value.webhookKey;
      this._webhookName = value.webhookName;
      this._webhookUrl = value.webhookUrl;
      this._wordPressSiteIdOrWoocommerceDomainName = value.wordPressSiteIdOrWoocommerceDomainName;
      this._workplaceId = value.workplaceId;
      this._workspace = value.workspace;
      this._workspaceName = value.workspaceName;
      this._workspaceSameAsSource = value.workspaceSameAsSource;
      this._workspaceSchema = value.workspaceSchema;
      this._workspaceToken = value.workspaceToken;
      this._wsCertificate = value.wsCertificate;
      this._xApiKey = value.xApiKey;
      this._xKey = value.xKey;
      this._xMasterKey = value.xMasterKey;
      this._xUserEmail = value.xUserEmail;
      this._xUserToken = value.xUserToken;
      this._accountsRedditAds.internalValue = value.accountsRedditAds;
      this._adobeAnalyticsConfigurations.internalValue = value.adobeAnalyticsConfigurations;
      this._appIdsAppsflyer.internalValue = value.appIdsAppsflyer;
      this._customPayloads.internalValue = value.customPayloads;
      this._customReports.internalValue = value.customReports;
      this._customTables.internalValue = value.customTables;
      this._dataModelPathAliasList.internalValue = value.dataModelPathAliasList;
      this._files.internalValue = value.files;
      this._projectCredentials.internalValue = value.projectCredentials;
      this._reportConfigs.internalValue = value.reportConfigs;
      this._reportList.internalValue = value.reportList;
      this._reports.internalValue = value.reports;
      this._secretsList.internalValue = value.secretsList;
      this._tenantConfigs.internalValue = value.tenantConfigs;
    }
  }

  // abs_connection_method - computed: false, optional: true, required: false
  private _absConnectionMethod?: string; 
  public get absConnectionMethod() {
    return this.getStringAttribute('abs_connection_method');
  }
  public set absConnectionMethod(value: string) {
    this._absConnectionMethod = value;
  }
  public resetAbsConnectionMethod() {
    this._absConnectionMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get absConnectionMethodInput() {
    return this._absConnectionMethod;
  }

  // abs_connection_string - computed: true, optional: true, required: false
  private _absConnectionString?: string; 
  public get absConnectionString() {
    return this.getStringAttribute('abs_connection_string');
  }
  public set absConnectionString(value: string) {
    this._absConnectionString = value;
  }
  public resetAbsConnectionString() {
    this._absConnectionString = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get absConnectionStringInput() {
    return this._absConnectionString;
  }

  // abs_container_address - computed: false, optional: true, required: false
  private _absContainerAddress?: string; 
  public get absContainerAddress() {
    return this.getStringAttribute('abs_container_address');
  }
  public set absContainerAddress(value: string) {
    this._absContainerAddress = value;
  }
  public resetAbsContainerAddress() {
    this._absContainerAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get absContainerAddressInput() {
    return this._absContainerAddress;
  }

  // abs_container_name - computed: true, optional: true, required: false
  private _absContainerName?: string; 
  public get absContainerName() {
    return this.getStringAttribute('abs_container_name');
  }
  public set absContainerName(value: string) {
    this._absContainerName = value;
  }
  public resetAbsContainerName() {
    this._absContainerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get absContainerNameInput() {
    return this._absContainerName;
  }

  // abs_host_ip - computed: false, optional: true, required: false
  private _absHostIp?: string; 
  public get absHostIp() {
    return this.getStringAttribute('abs_host_ip');
  }
  public set absHostIp(value: string) {
    this._absHostIp = value;
  }
  public resetAbsHostIp() {
    this._absHostIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get absHostIpInput() {
    return this._absHostIp;
  }

  // abs_host_user - computed: false, optional: true, required: false
  private _absHostUser?: string; 
  public get absHostUser() {
    return this.getStringAttribute('abs_host_user');
  }
  public set absHostUser(value: string) {
    this._absHostUser = value;
  }
  public resetAbsHostUser() {
    this._absHostUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get absHostUserInput() {
    return this._absHostUser;
  }

  // abs_prefix - computed: false, optional: true, required: false
  private _absPrefix?: string; 
  public get absPrefix() {
    return this.getStringAttribute('abs_prefix');
  }
  public set absPrefix(value: string) {
    this._absPrefix = value;
  }
  public resetAbsPrefix() {
    this._absPrefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get absPrefixInput() {
    return this._absPrefix;
  }

  // abs_public_key - computed: false, optional: true, required: false
  private _absPublicKey?: string; 
  public get absPublicKey() {
    return this.getStringAttribute('abs_public_key');
  }
  public set absPublicKey(value: string) {
    this._absPublicKey = value;
  }
  public resetAbsPublicKey() {
    this._absPublicKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get absPublicKeyInput() {
    return this._absPublicKey;
  }

  // academy_id - computed: false, optional: true, required: false
  private _academyId?: string; 
  public get academyId() {
    return this.getStringAttribute('academy_id');
  }
  public set academyId(value: string) {
    this._academyId = value;
  }
  public resetAcademyId() {
    this._academyId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get academyIdInput() {
    return this._academyId;
  }

  // access_confirmation - computed: false, optional: true, required: false
  private _accessConfirmation?: string; 
  public get accessConfirmation() {
    return this.getStringAttribute('access_confirmation');
  }
  public set accessConfirmation(value: string) {
    this._accessConfirmation = value;
  }
  public resetAccessConfirmation() {
    this._accessConfirmation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessConfirmationInput() {
    return this._accessConfirmation;
  }

  // access_id - computed: false, optional: true, required: false
  private _accessId?: string; 
  public get accessId() {
    return this.getStringAttribute('access_id');
  }
  public set accessId(value: string) {
    this._accessId = value;
  }
  public resetAccessId() {
    this._accessId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessIdInput() {
    return this._accessId;
  }

  // access_key - computed: true, optional: true, required: false
  private _accessKey?: string; 
  public get accessKey() {
    return this.getStringAttribute('access_key');
  }
  public set accessKey(value: string) {
    this._accessKey = value;
  }
  public resetAccessKey() {
    this._accessKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyInput() {
    return this._accessKey;
  }

  // access_key_id - computed: true, optional: true, required: false
  private _accessKeyId?: string; 
  public get accessKeyId() {
    return this.getStringAttribute('access_key_id');
  }
  public set accessKeyId(value: string) {
    this._accessKeyId = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId;
  }

  // access_key_secret - computed: false, optional: true, required: false
  private _accessKeySecret?: string; 
  public get accessKeySecret() {
    return this.getStringAttribute('access_key_secret');
  }
  public set accessKeySecret(value: string) {
    this._accessKeySecret = value;
  }
  public resetAccessKeySecret() {
    this._accessKeySecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeySecretInput() {
    return this._accessKeySecret;
  }

  // access_token - computed: true, optional: true, required: false
  private _accessToken?: string; 
  public get accessToken() {
    return this.getStringAttribute('access_token');
  }
  public set accessToken(value: string) {
    this._accessToken = value;
  }
  public resetAccessToken() {
    this._accessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessTokenInput() {
    return this._accessToken;
  }

  // access_type - computed: false, optional: true, required: false
  private _accessType?: string; 
  public get accessType() {
    return this.getStringAttribute('access_type');
  }
  public set accessType(value: string) {
    this._accessType = value;
  }
  public resetAccessType() {
    this._accessType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessTypeInput() {
    return this._accessType;
  }

  // account - computed: true, optional: true, required: false
  private _account?: string; 
  public get account() {
    return this.getStringAttribute('account');
  }
  public set account(value: string) {
    this._account = value;
  }
  public resetAccount() {
    this._account = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountInput() {
    return this._account;
  }

  // account_access_token - computed: false, optional: true, required: false
  private _accountAccessToken?: string; 
  public get accountAccessToken() {
    return this.getStringAttribute('account_access_token');
  }
  public set accountAccessToken(value: string) {
    this._accountAccessToken = value;
  }
  public resetAccountAccessToken() {
    this._accountAccessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountAccessTokenInput() {
    return this._accountAccessToken;
  }

  // account_id - computed: true, optional: true, required: false
  private _accountId?: string; 
  public get accountId() {
    return this.getStringAttribute('account_id');
  }
  public set accountId(value: string) {
    this._accountId = value;
  }
  public resetAccountId() {
    this._accountId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountIdInput() {
    return this._accountId;
  }

  // account_ids - computed: false, optional: true, required: false
  private _accountIds?: string[]; 
  public get accountIds() {
    return cdktf.Fn.tolist(this.getListAttribute('account_ids'));
  }
  public set accountIds(value: string[]) {
    this._accountIds = value;
  }
  public resetAccountIds() {
    this._accountIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountIdsInput() {
    return this._accountIds;
  }

  // account_key - computed: true, optional: true, required: false
  private _accountKey?: string; 
  public get accountKey() {
    return this.getStringAttribute('account_key');
  }
  public set accountKey(value: string) {
    this._accountKey = value;
  }
  public resetAccountKey() {
    this._accountKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountKeyInput() {
    return this._accountKey;
  }

  // account_name - computed: false, optional: true, required: false
  private _accountName?: string; 
  public get accountName() {
    return this.getStringAttribute('account_name');
  }
  public set accountName(value: string) {
    this._accountName = value;
  }
  public resetAccountName() {
    this._accountName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountNameInput() {
    return this._accountName;
  }

  // account_plan - computed: false, optional: true, required: false
  private _accountPlan?: string; 
  public get accountPlan() {
    return this.getStringAttribute('account_plan');
  }
  public set accountPlan(value: string) {
    this._accountPlan = value;
  }
  public resetAccountPlan() {
    this._accountPlan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountPlanInput() {
    return this._accountPlan;
  }

  // account_region - computed: true, optional: true, required: false
  private _accountRegion?: string; 
  public get accountRegion() {
    return this.getStringAttribute('account_region');
  }
  public set accountRegion(value: string) {
    this._accountRegion = value;
  }
  public resetAccountRegion() {
    this._accountRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountRegionInput() {
    return this._accountRegion;
  }

  // account_sid - computed: false, optional: true, required: false
  private _accountSid?: string; 
  public get accountSid() {
    return this.getStringAttribute('account_sid');
  }
  public set accountSid(value: string) {
    this._accountSid = value;
  }
  public resetAccountSid() {
    this._accountSid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountSidInput() {
    return this._accountSid;
  }

  // account_sync_mode - computed: false, optional: true, required: false
  private _accountSyncMode?: string; 
  public get accountSyncMode() {
    return this.getStringAttribute('account_sync_mode');
  }
  public set accountSyncMode(value: string) {
    this._accountSyncMode = value;
  }
  public resetAccountSyncMode() {
    this._accountSyncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountSyncModeInput() {
    return this._accountSyncMode;
  }

  // account_token - computed: false, optional: true, required: false
  private _accountToken?: string; 
  public get accountToken() {
    return this.getStringAttribute('account_token');
  }
  public set accountToken(value: string) {
    this._accountToken = value;
  }
  public resetAccountToken() {
    this._accountToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountTokenInput() {
    return this._accountToken;
  }

  // account_type - computed: true, optional: true, required: false
  private _accountType?: string; 
  public get accountType() {
    return this.getStringAttribute('account_type');
  }
  public set accountType(value: string) {
    this._accountType = value;
  }
  public resetAccountType() {
    this._accountType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountTypeInput() {
    return this._accountType;
  }

  // accounts - computed: false, optional: true, required: false
  private _accounts?: string[]; 
  public get accounts() {
    return cdktf.Fn.tolist(this.getListAttribute('accounts'));
  }
  public set accounts(value: string[]) {
    this._accounts = value;
  }
  public resetAccounts() {
    this._accounts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountsInput() {
    return this._accounts;
  }

  // accounts_sync_mode - computed: false, optional: true, required: false
  private _accountsSyncMode?: string; 
  public get accountsSyncMode() {
    return this.getStringAttribute('accounts_sync_mode');
  }
  public set accountsSyncMode(value: string) {
    this._accountsSyncMode = value;
  }
  public resetAccountsSyncMode() {
    this._accountsSyncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountsSyncModeInput() {
    return this._accountsSyncMode;
  }

  // action_breakdowns - computed: false, optional: true, required: false
  private _actionBreakdowns?: string[]; 
  public get actionBreakdowns() {
    return cdktf.Fn.tolist(this.getListAttribute('action_breakdowns'));
  }
  public set actionBreakdowns(value: string[]) {
    this._actionBreakdowns = value;
  }
  public resetActionBreakdowns() {
    this._actionBreakdowns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionBreakdownsInput() {
    return this._actionBreakdowns;
  }

  // action_report_time - computed: true, optional: true, required: false
  private _actionReportTime?: string; 
  public get actionReportTime() {
    return this.getStringAttribute('action_report_time');
  }
  public set actionReportTime(value: string) {
    this._actionReportTime = value;
  }
  public resetActionReportTime() {
    this._actionReportTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionReportTimeInput() {
    return this._actionReportTime;
  }

  // ad_analytics - computed: false, optional: true, required: false
  private _adAnalytics?: string; 
  public get adAnalytics() {
    return this.getStringAttribute('ad_analytics');
  }
  public set adAnalytics(value: string) {
    this._adAnalytics = value;
  }
  public resetAdAnalytics() {
    this._adAnalytics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adAnalyticsInput() {
    return this._adAnalytics;
  }

  // ad_unit_view - computed: false, optional: true, required: false
  private _adUnitView?: string; 
  public get adUnitView() {
    return this.getStringAttribute('ad_unit_view');
  }
  public set adUnitView(value: string) {
    this._adUnitView = value;
  }
  public resetAdUnitView() {
    this._adUnitView = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adUnitViewInput() {
    return this._adUnitView;
  }

  // admin_api_key - computed: false, optional: true, required: false
  private _adminApiKey?: string; 
  public get adminApiKey() {
    return this.getStringAttribute('admin_api_key');
  }
  public set adminApiKey(value: string) {
    this._adminApiKey = value;
  }
  public resetAdminApiKey() {
    this._adminApiKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminApiKeyInput() {
    return this._adminApiKey;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // advertisables - computed: false, optional: true, required: false
  private _advertisables?: string[]; 
  public get advertisables() {
    return cdktf.Fn.tolist(this.getListAttribute('advertisables'));
  }
  public set advertisables(value: string[]) {
    this._advertisables = value;
  }
  public resetAdvertisables() {
    this._advertisables = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertisablesInput() {
    return this._advertisables;
  }

  // advertisers - computed: false, optional: true, required: false
  private _advertisers?: string[]; 
  public get advertisers() {
    return cdktf.Fn.tolist(this.getListAttribute('advertisers'));
  }
  public set advertisers(value: string[]) {
    this._advertisers = value;
  }
  public resetAdvertisers() {
    this._advertisers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertisersInput() {
    return this._advertisers;
  }

  // advertisers_id - computed: false, optional: true, required: false
  private _advertisersId?: string[]; 
  public get advertisersId() {
    return cdktf.Fn.tolist(this.getListAttribute('advertisers_id'));
  }
  public set advertisersId(value: string[]) {
    this._advertisersId = value;
  }
  public resetAdvertisersId() {
    this._advertisersId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertisersIdInput() {
    return this._advertisersId;
  }

  // advertisers_sync_mode - computed: false, optional: true, required: false
  private _advertisersSyncMode?: string; 
  public get advertisersSyncMode() {
    return this.getStringAttribute('advertisers_sync_mode');
  }
  public set advertisersSyncMode(value: string) {
    this._advertisersSyncMode = value;
  }
  public resetAdvertisersSyncMode() {
    this._advertisersSyncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertisersSyncModeInput() {
    return this._advertisersSyncMode;
  }

  // advertisers_with_seat - computed: false, optional: true, required: false
  private _advertisersWithSeat?: string[]; 
  public get advertisersWithSeat() {
    return cdktf.Fn.tolist(this.getListAttribute('advertisers_with_seat'));
  }
  public set advertisersWithSeat(value: string[]) {
    this._advertisersWithSeat = value;
  }
  public resetAdvertisersWithSeat() {
    this._advertisersWithSeat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advertisersWithSeatInput() {
    return this._advertisersWithSeat;
  }

  // agent_config_method - computed: true, optional: true, required: false
  private _agentConfigMethod?: string; 
  public get agentConfigMethod() {
    return this.getStringAttribute('agent_config_method');
  }
  public set agentConfigMethod(value: string) {
    this._agentConfigMethod = value;
  }
  public resetAgentConfigMethod() {
    this._agentConfigMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentConfigMethodInput() {
    return this._agentConfigMethod;
  }

  // agent_host - computed: true, optional: true, required: false
  private _agentHost?: string; 
  public get agentHost() {
    return this.getStringAttribute('agent_host');
  }
  public set agentHost(value: string) {
    this._agentHost = value;
  }
  public resetAgentHost() {
    this._agentHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentHostInput() {
    return this._agentHost;
  }

  // agent_id - computed: false, optional: true, required: false
  private _agentId?: string; 
  public get agentId() {
    return this.getStringAttribute('agent_id');
  }
  public set agentId(value: string) {
    this._agentId = value;
  }
  public resetAgentId() {
    this._agentId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentIdInput() {
    return this._agentId;
  }

  // agent_ora_home - computed: true, optional: true, required: false
  private _agentOraHome?: string; 
  public get agentOraHome() {
    return this.getStringAttribute('agent_ora_home');
  }
  public set agentOraHome(value: string) {
    this._agentOraHome = value;
  }
  public resetAgentOraHome() {
    this._agentOraHome = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentOraHomeInput() {
    return this._agentOraHome;
  }

  // agent_password - computed: true, optional: true, required: false
  private _agentPassword?: string; 
  public get agentPassword() {
    return this.getStringAttribute('agent_password');
  }
  public set agentPassword(value: string) {
    this._agentPassword = value;
  }
  public resetAgentPassword() {
    this._agentPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentPasswordInput() {
    return this._agentPassword;
  }

  // agent_port - computed: true, optional: true, required: false
  private _agentPort?: number; 
  public get agentPort() {
    return this.getNumberAttribute('agent_port');
  }
  public set agentPort(value: number) {
    this._agentPort = value;
  }
  public resetAgentPort() {
    this._agentPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentPortInput() {
    return this._agentPort;
  }

  // agent_public_cert - computed: true, optional: true, required: false
  private _agentPublicCert?: string; 
  public get agentPublicCert() {
    return this.getStringAttribute('agent_public_cert');
  }
  public set agentPublicCert(value: string) {
    this._agentPublicCert = value;
  }
  public resetAgentPublicCert() {
    this._agentPublicCert = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentPublicCertInput() {
    return this._agentPublicCert;
  }

  // agent_user - computed: true, optional: true, required: false
  private _agentUser?: string; 
  public get agentUser() {
    return this.getStringAttribute('agent_user');
  }
  public set agentUser(value: string) {
    this._agentUser = value;
  }
  public resetAgentUser() {
    this._agentUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentUserInput() {
    return this._agentUser;
  }

  // aggregation - computed: true, optional: true, required: false
  private _aggregation?: string; 
  public get aggregation() {
    return this.getStringAttribute('aggregation');
  }
  public set aggregation(value: string) {
    this._aggregation = value;
  }
  public resetAggregation() {
    this._aggregation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregationInput() {
    return this._aggregation;
  }

  // agreement_grant_token - computed: false, optional: true, required: false
  private _agreementGrantToken?: string; 
  public get agreementGrantToken() {
    return this.getStringAttribute('agreement_grant_token');
  }
  public set agreementGrantToken(value: string) {
    this._agreementGrantToken = value;
  }
  public resetAgreementGrantToken() {
    this._agreementGrantToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agreementGrantTokenInput() {
    return this._agreementGrantToken;
  }

  // algorithm - computed: true, optional: true, required: false
  private _algorithm?: string; 
  public get algorithm() {
    return this.getStringAttribute('algorithm');
  }
  public set algorithm(value: string) {
    this._algorithm = value;
  }
  public resetAlgorithm() {
    this._algorithm = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get algorithmInput() {
    return this._algorithm;
  }

  // always_encrypted - computed: true, optional: true, required: false
  private _alwaysEncrypted?: boolean | cdktf.IResolvable; 
  public get alwaysEncrypted() {
    return this.getBooleanAttribute('always_encrypted');
  }
  public set alwaysEncrypted(value: boolean | cdktf.IResolvable) {
    this._alwaysEncrypted = value;
  }
  public resetAlwaysEncrypted() {
    this._alwaysEncrypted = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get alwaysEncryptedInput() {
    return this._alwaysEncrypted;
  }

  // api - computed: false, optional: true, required: false
  private _api?: string; 
  public get api() {
    return this.getStringAttribute('api');
  }
  public set api(value: string) {
    this._api = value;
  }
  public resetApi() {
    this._api = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiInput() {
    return this._api;
  }

  // api_access_token - computed: true, optional: true, required: false
  private _apiAccessToken?: string; 
  public get apiAccessToken() {
    return this.getStringAttribute('api_access_token');
  }
  public set apiAccessToken(value: string) {
    this._apiAccessToken = value;
  }
  public resetApiAccessToken() {
    this._apiAccessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiAccessTokenInput() {
    return this._apiAccessToken;
  }

  // api_environment - computed: true, optional: true, required: false
  private _apiEnvironment?: string; 
  public get apiEnvironment() {
    return this.getStringAttribute('api_environment');
  }
  public set apiEnvironment(value: string) {
    this._apiEnvironment = value;
  }
  public resetApiEnvironment() {
    this._apiEnvironment = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiEnvironmentInput() {
    return this._apiEnvironment;
  }

  // api_id - computed: false, optional: true, required: false
  private _apiId?: string; 
  public get apiId() {
    return this.getStringAttribute('api_id');
  }
  public set apiId(value: string) {
    this._apiId = value;
  }
  public resetApiId() {
    this._apiId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiIdInput() {
    return this._apiId;
  }

  // api_key - computed: true, optional: true, required: false
  private _apiKey?: string; 
  public get apiKey() {
    return this.getStringAttribute('api_key');
  }
  public set apiKey(value: string) {
    this._apiKey = value;
  }
  public resetApiKey() {
    this._apiKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiKeyInput() {
    return this._apiKey;
  }

  // api_key_api_secret - computed: false, optional: true, required: false
  private _apiKeyApiSecret?: string; 
  public get apiKeyApiSecret() {
    return this.getStringAttribute('api_key_api_secret');
  }
  public set apiKeyApiSecret(value: string) {
    this._apiKeyApiSecret = value;
  }
  public resetApiKeyApiSecret() {
    this._apiKeyApiSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiKeyApiSecretInput() {
    return this._apiKeyApiSecret;
  }

  // api_keys - computed: false, optional: true, required: false
  private _apiKeys?: string[]; 
  public get apiKeys() {
    return cdktf.Fn.tolist(this.getListAttribute('api_keys'));
  }
  public set apiKeys(value: string[]) {
    this._apiKeys = value;
  }
  public resetApiKeys() {
    this._apiKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiKeysInput() {
    return this._apiKeys;
  }

  // api_password - computed: false, optional: true, required: false
  private _apiPassword?: string; 
  public get apiPassword() {
    return this.getStringAttribute('api_password');
  }
  public set apiPassword(value: string) {
    this._apiPassword = value;
  }
  public resetApiPassword() {
    this._apiPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiPasswordInput() {
    return this._apiPassword;
  }

  // api_quota - computed: true, optional: true, required: false
  private _apiQuota?: number; 
  public get apiQuota() {
    return this.getNumberAttribute('api_quota');
  }
  public set apiQuota(value: number) {
    this._apiQuota = value;
  }
  public resetApiQuota() {
    this._apiQuota = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiQuotaInput() {
    return this._apiQuota;
  }

  // api_read_access_token - computed: false, optional: true, required: false
  private _apiReadAccessToken?: string; 
  public get apiReadAccessToken() {
    return this.getStringAttribute('api_read_access_token');
  }
  public set apiReadAccessToken(value: string) {
    this._apiReadAccessToken = value;
  }
  public resetApiReadAccessToken() {
    this._apiReadAccessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiReadAccessTokenInput() {
    return this._apiReadAccessToken;
  }

  // api_requests_per_minute - computed: true, optional: true, required: false
  private _apiRequestsPerMinute?: number; 
  public get apiRequestsPerMinute() {
    return this.getNumberAttribute('api_requests_per_minute');
  }
  public set apiRequestsPerMinute(value: number) {
    this._apiRequestsPerMinute = value;
  }
  public resetApiRequestsPerMinute() {
    this._apiRequestsPerMinute = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiRequestsPerMinuteInput() {
    return this._apiRequestsPerMinute;
  }

  // api_role - computed: false, optional: true, required: false
  private _apiRole?: string; 
  public get apiRole() {
    return this.getStringAttribute('api_role');
  }
  public set apiRole(value: string) {
    this._apiRole = value;
  }
  public resetApiRole() {
    this._apiRole = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiRoleInput() {
    return this._apiRole;
  }

  // api_secret - computed: true, optional: true, required: false
  private _apiSecret?: string; 
  public get apiSecret() {
    return this.getStringAttribute('api_secret');
  }
  public set apiSecret(value: string) {
    this._apiSecret = value;
  }
  public resetApiSecret() {
    this._apiSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiSecretInput() {
    return this._apiSecret;
  }

  // api_secret_key - computed: false, optional: true, required: false
  private _apiSecretKey?: string; 
  public get apiSecretKey() {
    return this.getStringAttribute('api_secret_key');
  }
  public set apiSecretKey(value: string) {
    this._apiSecretKey = value;
  }
  public resetApiSecretKey() {
    this._apiSecretKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiSecretKeyInput() {
    return this._apiSecretKey;
  }

  // api_server - computed: true, optional: true, required: false
  private _apiServer?: string; 
  public get apiServer() {
    return this.getStringAttribute('api_server');
  }
  public set apiServer(value: string) {
    this._apiServer = value;
  }
  public resetApiServer() {
    this._apiServer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiServerInput() {
    return this._apiServer;
  }

  // api_token - computed: true, optional: true, required: false
  private _apiToken?: string; 
  public get apiToken() {
    return this.getStringAttribute('api_token');
  }
  public set apiToken(value: string) {
    this._apiToken = value;
  }
  public resetApiToken() {
    this._apiToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiTokenInput() {
    return this._apiToken;
  }

  // api_type - computed: true, optional: true, required: false
  private _apiType?: string; 
  public get apiType() {
    return this.getStringAttribute('api_type');
  }
  public set apiType(value: string) {
    this._apiType = value;
  }
  public resetApiType() {
    this._apiType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiTypeInput() {
    return this._apiType;
  }

  // api_url - computed: true, optional: true, required: false
  private _apiUrl?: string; 
  public get apiUrl() {
    return this.getStringAttribute('api_url');
  }
  public set apiUrl(value: string) {
    this._apiUrl = value;
  }
  public resetApiUrl() {
    this._apiUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiUrlInput() {
    return this._apiUrl;
  }

  // api_url_region - computed: true, optional: true, required: false
  private _apiUrlRegion?: string; 
  public get apiUrlRegion() {
    return this.getStringAttribute('api_url_region');
  }
  public set apiUrlRegion(value: string) {
    this._apiUrlRegion = value;
  }
  public resetApiUrlRegion() {
    this._apiUrlRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiUrlRegionInput() {
    return this._apiUrlRegion;
  }

  // api_usage - computed: true, optional: true, required: false
  private _apiUsage?: string; 
  public get apiUsage() {
    return this.getStringAttribute('api_usage');
  }
  public set apiUsage(value: string) {
    this._apiUsage = value;
  }
  public resetApiUsage() {
    this._apiUsage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiUsageInput() {
    return this._apiUsage;
  }

  // api_user_identifier - computed: false, optional: true, required: false
  private _apiUserIdentifier?: string; 
  public get apiUserIdentifier() {
    return this.getStringAttribute('api_user_identifier');
  }
  public set apiUserIdentifier(value: string) {
    this._apiUserIdentifier = value;
  }
  public resetApiUserIdentifier() {
    this._apiUserIdentifier = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiUserIdentifierInput() {
    return this._apiUserIdentifier;
  }

  // api_user_secret - computed: false, optional: true, required: false
  private _apiUserSecret?: string; 
  public get apiUserSecret() {
    return this.getStringAttribute('api_user_secret');
  }
  public set apiUserSecret(value: string) {
    this._apiUserSecret = value;
  }
  public resetApiUserSecret() {
    this._apiUserSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiUserSecretInput() {
    return this._apiUserSecret;
  }

  // api_username - computed: false, optional: true, required: false
  private _apiUsername?: string; 
  public get apiUsername() {
    return this.getStringAttribute('api_username');
  }
  public set apiUsername(value: string) {
    this._apiUsername = value;
  }
  public resetApiUsername() {
    this._apiUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiUsernameInput() {
    return this._apiUsername;
  }

  // api_utilization_percentage - computed: true, optional: true, required: false
  private _apiUtilizationPercentage?: string; 
  public get apiUtilizationPercentage() {
    return this.getStringAttribute('api_utilization_percentage');
  }
  public set apiUtilizationPercentage(value: string) {
    this._apiUtilizationPercentage = value;
  }
  public resetApiUtilizationPercentage() {
    this._apiUtilizationPercentage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiUtilizationPercentageInput() {
    return this._apiUtilizationPercentage;
  }

  // api_version - computed: true, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // app_id - computed: false, optional: true, required: false
  private _appId?: string; 
  public get appId() {
    return this.getStringAttribute('app_id');
  }
  public set appId(value: string) {
    this._appId = value;
  }
  public resetAppId() {
    this._appId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appIdInput() {
    return this._appId;
  }

  // app_ids - computed: false, optional: true, required: false
  private _appIds?: string[]; 
  public get appIds() {
    return cdktf.Fn.tolist(this.getListAttribute('app_ids'));
  }
  public set appIds(value: string[]) {
    this._appIds = value;
  }
  public resetAppIds() {
    this._appIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appIdsInput() {
    return this._appIds;
  }

  // app_key - computed: false, optional: true, required: false
  private _appKey?: string; 
  public get appKey() {
    return this.getStringAttribute('app_key');
  }
  public set appKey(value: string) {
    this._appKey = value;
  }
  public resetAppKey() {
    this._appKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appKeyInput() {
    return this._appKey;
  }

  // app_reference - computed: false, optional: true, required: false
  private _appReference?: string; 
  public get appReference() {
    return this.getStringAttribute('app_reference');
  }
  public set appReference(value: string) {
    this._appReference = value;
  }
  public resetAppReference() {
    this._appReference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appReferenceInput() {
    return this._appReference;
  }

  // app_secret - computed: false, optional: true, required: false
  private _appSecret?: string; 
  public get appSecret() {
    return this.getStringAttribute('app_secret');
  }
  public set appSecret(value: string) {
    this._appSecret = value;
  }
  public resetAppSecret() {
    this._appSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appSecretInput() {
    return this._appSecret;
  }

  // app_secret_token - computed: false, optional: true, required: false
  private _appSecretToken?: string; 
  public get appSecretToken() {
    return this.getStringAttribute('app_secret_token');
  }
  public set appSecretToken(value: string) {
    this._appSecretToken = value;
  }
  public resetAppSecretToken() {
    this._appSecretToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appSecretTokenInput() {
    return this._appSecretToken;
  }

  // app_specific_password - computed: false, optional: true, required: false
  private _appSpecificPassword?: string; 
  public get appSpecificPassword() {
    return this.getStringAttribute('app_specific_password');
  }
  public set appSpecificPassword(value: string) {
    this._appSpecificPassword = value;
  }
  public resetAppSpecificPassword() {
    this._appSpecificPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appSpecificPasswordInput() {
    return this._appSpecificPassword;
  }

  // app_sync_mode - computed: true, optional: true, required: false
  private _appSyncMode?: string; 
  public get appSyncMode() {
    return this.getStringAttribute('app_sync_mode');
  }
  public set appSyncMode(value: string) {
    this._appSyncMode = value;
  }
  public resetAppSyncMode() {
    this._appSyncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appSyncModeInput() {
    return this._appSyncMode;
  }

  // append_file_option - computed: true, optional: true, required: false
  private _appendFileOption?: string; 
  public get appendFileOption() {
    return this.getStringAttribute('append_file_option');
  }
  public set appendFileOption(value: string) {
    this._appendFileOption = value;
  }
  public resetAppendFileOption() {
    this._appendFileOption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendFileOptionInput() {
    return this._appendFileOption;
  }

  // application_id - computed: false, optional: true, required: false
  private _applicationId?: string; 
  public get applicationId() {
    return this.getStringAttribute('application_id');
  }
  public set applicationId(value: string) {
    this._applicationId = value;
  }
  public resetApplicationId() {
    this._applicationId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationIdInput() {
    return this._applicationId;
  }

  // application_key - computed: false, optional: true, required: false
  private _applicationKey?: string; 
  public get applicationKey() {
    return this.getStringAttribute('application_key');
  }
  public set applicationKey(value: string) {
    this._applicationKey = value;
  }
  public resetApplicationKey() {
    this._applicationKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationKeyInput() {
    return this._applicationKey;
  }

  // apps - computed: false, optional: true, required: false
  private _apps?: string[]; 
  public get apps() {
    return cdktf.Fn.tolist(this.getListAttribute('apps'));
  }
  public set apps(value: string[]) {
    this._apps = value;
  }
  public resetApps() {
    this._apps = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appsInput() {
    return this._apps;
  }

  // archive_log_format - computed: false, optional: true, required: false
  private _archiveLogFormat?: string; 
  public get archiveLogFormat() {
    return this.getStringAttribute('archive_log_format');
  }
  public set archiveLogFormat(value: string) {
    this._archiveLogFormat = value;
  }
  public resetArchiveLogFormat() {
    this._archiveLogFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archiveLogFormatInput() {
    return this._archiveLogFormat;
  }

  // archive_log_path - computed: false, optional: true, required: false
  private _archiveLogPath?: string; 
  public get archiveLogPath() {
    return this.getStringAttribute('archive_log_path');
  }
  public set archiveLogPath(value: string) {
    this._archiveLogPath = value;
  }
  public resetArchiveLogPath() {
    this._archiveLogPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archiveLogPathInput() {
    return this._archiveLogPath;
  }

  // archive_pattern - computed: true, optional: true, required: false
  private _archivePattern?: string; 
  public get archivePattern() {
    return this.getStringAttribute('archive_pattern');
  }
  public set archivePattern(value: string) {
    this._archivePattern = value;
  }
  public resetArchivePattern() {
    this._archivePattern = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archivePatternInput() {
    return this._archivePattern;
  }

  // are_soap_credentials_provided - computed: true, optional: true, required: false
  private _areSoapCredentialsProvided?: boolean | cdktf.IResolvable; 
  public get areSoapCredentialsProvided() {
    return this.getBooleanAttribute('are_soap_credentials_provided');
  }
  public set areSoapCredentialsProvided(value: boolean | cdktf.IResolvable) {
    this._areSoapCredentialsProvided = value;
  }
  public resetAreSoapCredentialsProvided() {
    this._areSoapCredentialsProvided = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get areSoapCredentialsProvidedInput() {
    return this._areSoapCredentialsProvided;
  }

  // asb_ip - computed: false, optional: true, required: false
  private _asbIp?: string; 
  public get asbIp() {
    return this.getStringAttribute('asb_ip');
  }
  public set asbIp(value: string) {
    this._asbIp = value;
  }
  public resetAsbIp() {
    this._asbIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asbIpInput() {
    return this._asbIp;
  }

  // asm_option - computed: true, optional: true, required: false
  private _asmOption?: boolean | cdktf.IResolvable; 
  public get asmOption() {
    return this.getBooleanAttribute('asm_option');
  }
  public set asmOption(value: boolean | cdktf.IResolvable) {
    this._asmOption = value;
  }
  public resetAsmOption() {
    this._asmOption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asmOptionInput() {
    return this._asmOption;
  }

  // asm_oracle_home - computed: true, optional: true, required: false
  private _asmOracleHome?: string; 
  public get asmOracleHome() {
    return this.getStringAttribute('asm_oracle_home');
  }
  public set asmOracleHome(value: string) {
    this._asmOracleHome = value;
  }
  public resetAsmOracleHome() {
    this._asmOracleHome = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asmOracleHomeInput() {
    return this._asmOracleHome;
  }

  // asm_password - computed: true, optional: true, required: false
  private _asmPassword?: string; 
  public get asmPassword() {
    return this.getStringAttribute('asm_password');
  }
  public set asmPassword(value: string) {
    this._asmPassword = value;
  }
  public resetAsmPassword() {
    this._asmPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asmPasswordInput() {
    return this._asmPassword;
  }

  // asm_tns - computed: true, optional: true, required: false
  private _asmTns?: string; 
  public get asmTns() {
    return this.getStringAttribute('asm_tns');
  }
  public set asmTns(value: string) {
    this._asmTns = value;
  }
  public resetAsmTns() {
    this._asmTns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asmTnsInput() {
    return this._asmTns;
  }

  // asm_user - computed: true, optional: true, required: false
  private _asmUser?: string; 
  public get asmUser() {
    return this.getStringAttribute('asm_user');
  }
  public set asmUser(value: string) {
    this._asmUser = value;
  }
  public resetAsmUser() {
    this._asmUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asmUserInput() {
    return this._asmUser;
  }

  // attribution_window - computed: false, optional: true, required: false
  private _attributionWindow?: string; 
  public get attributionWindow() {
    return this.getStringAttribute('attribution_window');
  }
  public set attributionWindow(value: string) {
    this._attributionWindow = value;
  }
  public resetAttributionWindow() {
    this._attributionWindow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributionWindowInput() {
    return this._attributionWindow;
  }

  // attribution_window_size - computed: false, optional: true, required: false
  private _attributionWindowSize?: string; 
  public get attributionWindowSize() {
    return this.getStringAttribute('attribution_window_size');
  }
  public set attributionWindowSize(value: string) {
    this._attributionWindowSize = value;
  }
  public resetAttributionWindowSize() {
    this._attributionWindowSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributionWindowSizeInput() {
    return this._attributionWindowSize;
  }

  // audience - computed: false, optional: true, required: false
  private _audience?: string; 
  public get audience() {
    return this.getStringAttribute('audience');
  }
  public set audience(value: string) {
    this._audience = value;
  }
  public resetAudience() {
    this._audience = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get audienceInput() {
    return this._audience;
  }

  // auth - computed: true, optional: true, required: false
  private _auth?: string; 
  public get auth() {
    return this.getStringAttribute('auth');
  }
  public set auth(value: string) {
    this._auth = value;
  }
  public resetAuth() {
    this._auth = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authInput() {
    return this._auth;
  }

  // auth_code - computed: false, optional: true, required: false
  private _authCode?: string; 
  public get authCode() {
    return this.getStringAttribute('auth_code');
  }
  public set authCode(value: string) {
    this._authCode = value;
  }
  public resetAuthCode() {
    this._authCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authCodeInput() {
    return this._authCode;
  }

  // auth_environment - computed: true, optional: true, required: false
  private _authEnvironment?: string; 
  public get authEnvironment() {
    return this.getStringAttribute('auth_environment');
  }
  public set authEnvironment(value: string) {
    this._authEnvironment = value;
  }
  public resetAuthEnvironment() {
    this._authEnvironment = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authEnvironmentInput() {
    return this._authEnvironment;
  }

  // auth_header_key - computed: false, optional: true, required: false
  private _authHeaderKey?: string; 
  public get authHeaderKey() {
    return this.getStringAttribute('auth_header_key');
  }
  public set authHeaderKey(value: string) {
    this._authHeaderKey = value;
  }
  public resetAuthHeaderKey() {
    this._authHeaderKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authHeaderKeyInput() {
    return this._authHeaderKey;
  }

  // auth_method - computed: false, optional: true, required: false
  private _authMethod?: string; 
  public get authMethod() {
    return this.getStringAttribute('auth_method');
  }
  public set authMethod(value: string) {
    this._authMethod = value;
  }
  public resetAuthMethod() {
    this._authMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authMethodInput() {
    return this._authMethod;
  }

  // auth_mode - computed: true, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // auth_secret - computed: false, optional: true, required: false
  private _authSecret?: string; 
  public get authSecret() {
    return this.getStringAttribute('auth_secret');
  }
  public set authSecret(value: string) {
    this._authSecret = value;
  }
  public resetAuthSecret() {
    this._authSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authSecretInput() {
    return this._authSecret;
  }

  // auth_token - computed: false, optional: true, required: false
  private _authToken?: string; 
  public get authToken() {
    return this.getStringAttribute('auth_token');
  }
  public set authToken(value: string) {
    this._authToken = value;
  }
  public resetAuthToken() {
    this._authToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authTokenInput() {
    return this._authToken;
  }

  // auth_type - computed: true, optional: true, required: false
  private _authType?: string; 
  public get authType() {
    return this.getStringAttribute('auth_type');
  }
  public set authType(value: string) {
    this._authType = value;
  }
  public resetAuthType() {
    this._authType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authTypeInput() {
    return this._authType;
  }

  // auth_url_region - computed: true, optional: true, required: false
  private _authUrlRegion?: string; 
  public get authUrlRegion() {
    return this.getStringAttribute('auth_url_region');
  }
  public set authUrlRegion(value: string) {
    this._authUrlRegion = value;
  }
  public resetAuthUrlRegion() {
    this._authUrlRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authUrlRegionInput() {
    return this._authUrlRegion;
  }

  // authentication_method - computed: true, optional: true, required: false
  private _authenticationMethod?: string; 
  public get authenticationMethod() {
    return this.getStringAttribute('authentication_method');
  }
  public set authenticationMethod(value: string) {
    this._authenticationMethod = value;
  }
  public resetAuthenticationMethod() {
    this._authenticationMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticationMethodInput() {
    return this._authenticationMethod;
  }

  // authorization_method - computed: true, optional: false, required: false
  public get authorizationMethod() {
    return this.getStringAttribute('authorization_method');
  }

  // authorization_url - computed: false, optional: true, required: false
  private _authorizationUrl?: string; 
  public get authorizationUrl() {
    return this.getStringAttribute('authorization_url');
  }
  public set authorizationUrl(value: string) {
    this._authorizationUrl = value;
  }
  public resetAuthorizationUrl() {
    this._authorizationUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationUrlInput() {
    return this._authorizationUrl;
  }

  // aws_region_code - computed: true, optional: true, required: false
  private _awsRegionCode?: string; 
  public get awsRegionCode() {
    return this.getStringAttribute('aws_region_code');
  }
  public set awsRegionCode(value: string) {
    this._awsRegionCode = value;
  }
  public resetAwsRegionCode() {
    this._awsRegionCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get awsRegionCodeInput() {
    return this._awsRegionCode;
  }

  // backint_configuration_path - computed: false, optional: true, required: false
  private _backintConfigurationPath?: string; 
  public get backintConfigurationPath() {
    return this.getStringAttribute('backint_configuration_path');
  }
  public set backintConfigurationPath(value: string) {
    this._backintConfigurationPath = value;
  }
  public resetBackintConfigurationPath() {
    this._backintConfigurationPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get backintConfigurationPathInput() {
    return this._backintConfigurationPath;
  }

  // backint_executable_path - computed: false, optional: true, required: false
  private _backintExecutablePath?: string; 
  public get backintExecutablePath() {
    return this.getStringAttribute('backint_executable_path');
  }
  public set backintExecutablePath(value: string) {
    this._backintExecutablePath = value;
  }
  public resetBackintExecutablePath() {
    this._backintExecutablePath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get backintExecutablePathInput() {
    return this._backintExecutablePath;
  }

  // backup_log_format - computed: false, optional: true, required: false
  private _backupLogFormat?: string; 
  public get backupLogFormat() {
    return this.getStringAttribute('backup_log_format');
  }
  public set backupLogFormat(value: string) {
    this._backupLogFormat = value;
  }
  public resetBackupLogFormat() {
    this._backupLogFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get backupLogFormatInput() {
    return this._backupLogFormat;
  }

  // backup_log_path - computed: false, optional: true, required: false
  private _backupLogPath?: string; 
  public get backupLogPath() {
    return this.getStringAttribute('backup_log_path');
  }
  public set backupLogPath(value: string) {
    this._backupLogPath = value;
  }
  public resetBackupLogPath() {
    this._backupLogPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get backupLogPathInput() {
    return this._backupLogPath;
  }

  // backup_storage_type - computed: true, optional: true, required: false
  private _backupStorageType?: string; 
  public get backupStorageType() {
    return this.getStringAttribute('backup_storage_type');
  }
  public set backupStorageType(value: string) {
    this._backupStorageType = value;
  }
  public resetBackupStorageType() {
    this._backupStorageType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get backupStorageTypeInput() {
    return this._backupStorageType;
  }

  // backward_sync_limit - computed: false, optional: true, required: false
  private _backwardSyncLimit?: string; 
  public get backwardSyncLimit() {
    return this.getStringAttribute('backward_sync_limit');
  }
  public set backwardSyncLimit(value: string) {
    this._backwardSyncLimit = value;
  }
  public resetBackwardSyncLimit() {
    this._backwardSyncLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get backwardSyncLimitInput() {
    return this._backwardSyncLimit;
  }

  // backward_sync_limit_date - computed: false, optional: true, required: false
  private _backwardSyncLimitDate?: string; 
  public get backwardSyncLimitDate() {
    return this.getStringAttribute('backward_sync_limit_date');
  }
  public set backwardSyncLimitDate(value: string) {
    this._backwardSyncLimitDate = value;
  }
  public resetBackwardSyncLimitDate() {
    this._backwardSyncLimitDate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get backwardSyncLimitDateInput() {
    return this._backwardSyncLimitDate;
  }

  // base_currency - computed: false, optional: true, required: false
  private _baseCurrency?: string; 
  public get baseCurrency() {
    return this.getStringAttribute('base_currency');
  }
  public set baseCurrency(value: string) {
    this._baseCurrency = value;
  }
  public resetBaseCurrency() {
    this._baseCurrency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get baseCurrencyInput() {
    return this._baseCurrency;
  }

  // base_domain - computed: false, optional: true, required: false
  private _baseDomain?: string; 
  public get baseDomain() {
    return this.getStringAttribute('base_domain');
  }
  public set baseDomain(value: string) {
    this._baseDomain = value;
  }
  public resetBaseDomain() {
    this._baseDomain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get baseDomainInput() {
    return this._baseDomain;
  }

  // base_id - computed: false, optional: true, required: false
  private _baseId?: string; 
  public get baseId() {
    return this.getStringAttribute('base_id');
  }
  public set baseId(value: string) {
    this._baseId = value;
  }
  public resetBaseId() {
    this._baseId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get baseIdInput() {
    return this._baseId;
  }

  // base_url - computed: true, optional: true, required: false
  private _baseUrl?: string; 
  public get baseUrl() {
    return this.getStringAttribute('base_url');
  }
  public set baseUrl(value: string) {
    this._baseUrl = value;
  }
  public resetBaseUrl() {
    this._baseUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get baseUrlInput() {
    return this._baseUrl;
  }

  // bearer_token - computed: false, optional: true, required: false
  private _bearerToken?: string; 
  public get bearerToken() {
    return this.getStringAttribute('bearer_token');
  }
  public set bearerToken(value: string) {
    this._bearerToken = value;
  }
  public resetBearerToken() {
    this._bearerToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bearerTokenInput() {
    return this._bearerToken;
  }

  // binary_log_type - computed: true, optional: true, required: false
  private _binaryLogType?: string; 
  public get binaryLogType() {
    return this.getStringAttribute('binary_log_type');
  }
  public set binaryLogType(value: string) {
    this._binaryLogType = value;
  }
  public resetBinaryLogType() {
    this._binaryLogType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get binaryLogTypeInput() {
    return this._binaryLogType;
  }

  // binary_representation - computed: true, optional: true, required: false
  private _binaryRepresentation?: string; 
  public get binaryRepresentation() {
    return this.getStringAttribute('binary_representation');
  }
  public set binaryRepresentation(value: string) {
    this._binaryRepresentation = value;
  }
  public resetBinaryRepresentation() {
    this._binaryRepresentation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get binaryRepresentationInput() {
    return this._binaryRepresentation;
  }

  // blob_sas_url - computed: false, optional: true, required: false
  private _blobSasUrl?: string; 
  public get blobSasUrl() {
    return this.getStringAttribute('blob_sas_url');
  }
  public set blobSasUrl(value: string) {
    this._blobSasUrl = value;
  }
  public resetBlobSasUrl() {
    this._blobSasUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blobSasUrlInput() {
    return this._blobSasUrl;
  }

  // blockchain - computed: true, optional: true, required: false
  private _blockchain?: string; 
  public get blockchain() {
    return this.getStringAttribute('blockchain');
  }
  public set blockchain(value: string) {
    this._blockchain = value;
  }
  public resetBlockchain() {
    this._blockchain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blockchainInput() {
    return this._blockchain;
  }

  // brand_id - computed: false, optional: true, required: false
  private _brandId?: string; 
  public get brandId() {
    return this.getStringAttribute('brand_id');
  }
  public set brandId(value: string) {
    this._brandId = value;
  }
  public resetBrandId() {
    this._brandId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get brandIdInput() {
    return this._brandId;
  }

  // breakdowns - computed: false, optional: true, required: false
  private _breakdowns?: string[]; 
  public get breakdowns() {
    return cdktf.Fn.tolist(this.getListAttribute('breakdowns'));
  }
  public set breakdowns(value: string[]) {
    this._breakdowns = value;
  }
  public resetBreakdowns() {
    this._breakdowns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get breakdownsInput() {
    return this._breakdowns;
  }

  // bucket - computed: true, optional: true, required: false
  private _bucket?: string; 
  public get bucket() {
    return this.getStringAttribute('bucket');
  }
  public set bucket(value: string) {
    this._bucket = value;
  }
  public resetBucket() {
    this._bucket = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bucketInput() {
    return this._bucket;
  }

  // bucket_name - computed: true, optional: true, required: false
  private _bucketName?: string; 
  public get bucketName() {
    return this.getStringAttribute('bucket_name');
  }
  public set bucketName(value: string) {
    this._bucketName = value;
  }
  public resetBucketName() {
    this._bucketName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bucketNameInput() {
    return this._bucketName;
  }

  // bucket_service - computed: true, optional: true, required: false
  private _bucketService?: string; 
  public get bucketService() {
    return this.getStringAttribute('bucket_service');
  }
  public set bucketService(value: string) {
    this._bucketService = value;
  }
  public resetBucketService() {
    this._bucketService = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bucketServiceInput() {
    return this._bucketService;
  }

  // business_accounts - computed: false, optional: true, required: false
  private _businessAccounts?: string[]; 
  public get businessAccounts() {
    return cdktf.Fn.tolist(this.getListAttribute('business_accounts'));
  }
  public set businessAccounts(value: string[]) {
    this._businessAccounts = value;
  }
  public resetBusinessAccounts() {
    this._businessAccounts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get businessAccountsInput() {
    return this._businessAccounts;
  }

  // business_id - computed: false, optional: true, required: false
  private _businessId?: string; 
  public get businessId() {
    return this.getStringAttribute('business_id');
  }
  public set businessId(value: string) {
    this._businessId = value;
  }
  public resetBusinessId() {
    this._businessId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get businessIdInput() {
    return this._businessId;
  }

  // business_unit - computed: false, optional: true, required: false
  private _businessUnit?: string; 
  public get businessUnit() {
    return this.getStringAttribute('business_unit');
  }
  public set businessUnit(value: string) {
    this._businessUnit = value;
  }
  public resetBusinessUnit() {
    this._businessUnit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get businessUnitInput() {
    return this._businessUnit;
  }

  // business_unit_id - computed: false, optional: true, required: false
  private _businessUnitId?: string; 
  public get businessUnitId() {
    return this.getStringAttribute('business_unit_id');
  }
  public set businessUnitId(value: string) {
    this._businessUnitId = value;
  }
  public resetBusinessUnitId() {
    this._businessUnitId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get businessUnitIdInput() {
    return this._businessUnitId;
  }

  // catalog - computed: false, optional: true, required: false
  private _catalog?: string; 
  public get catalog() {
    return this.getStringAttribute('catalog');
  }
  public set catalog(value: string) {
    this._catalog = value;
  }
  public resetCatalog() {
    this._catalog = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get catalogInput() {
    return this._catalog;
  }

  // certificate - computed: true, optional: true, required: false
  private _certificate?: string; 
  public get certificate() {
    return this.getStringAttribute('certificate');
  }
  public set certificate(value: string) {
    this._certificate = value;
  }
  public resetCertificate() {
    this._certificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get certificateInput() {
    return this._certificate;
  }

  // certificate_id - computed: false, optional: true, required: false
  private _certificateId?: string; 
  public get certificateId() {
    return this.getStringAttribute('certificate_id');
  }
  public set certificateId(value: string) {
    this._certificateId = value;
  }
  public resetCertificateId() {
    this._certificateId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get certificateIdInput() {
    return this._certificateId;
  }

  // click_attribution_window - computed: true, optional: true, required: false
  private _clickAttributionWindow?: string; 
  public get clickAttributionWindow() {
    return this.getStringAttribute('click_attribution_window');
  }
  public set clickAttributionWindow(value: string) {
    this._clickAttributionWindow = value;
  }
  public resetClickAttributionWindow() {
    this._clickAttributionWindow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clickAttributionWindowInput() {
    return this._clickAttributionWindow;
  }

  // client - computed: false, optional: true, required: false
  private _client?: string; 
  public get client() {
    return this.getStringAttribute('client');
  }
  public set client(value: string) {
    this._client = value;
  }
  public resetClient() {
    this._client = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientInput() {
    return this._client;
  }

  // client_cert - computed: false, optional: true, required: false
  private _clientCert?: string; 
  public get clientCert() {
    return this.getStringAttribute('client_cert');
  }
  public set clientCert(value: string) {
    this._clientCert = value;
  }
  public resetClientCert() {
    this._clientCert = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientCertInput() {
    return this._clientCert;
  }

  // client_cert_key - computed: false, optional: true, required: false
  private _clientCertKey?: string; 
  public get clientCertKey() {
    return this.getStringAttribute('client_cert_key');
  }
  public set clientCertKey(value: string) {
    this._clientCertKey = value;
  }
  public resetClientCertKey() {
    this._clientCertKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientCertKeyInput() {
    return this._clientCertKey;
  }

  // client_host - computed: false, optional: true, required: false
  private _clientHost?: string; 
  public get clientHost() {
    return this.getStringAttribute('client_host');
  }
  public set clientHost(value: string) {
    this._clientHost = value;
  }
  public resetClientHost() {
    this._clientHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientHostInput() {
    return this._clientHost;
  }

  // client_id - computed: true, optional: true, required: false
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  public resetClientId() {
    this._clientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // client_key - computed: false, optional: true, required: false
  private _clientKey?: string; 
  public get clientKey() {
    return this.getStringAttribute('client_key');
  }
  public set clientKey(value: string) {
    this._clientKey = value;
  }
  public resetClientKey() {
    this._clientKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientKeyInput() {
    return this._clientKey;
  }

  // client_name - computed: true, optional: true, required: false
  private _clientName?: string; 
  public get clientName() {
    return this.getStringAttribute('client_name');
  }
  public set clientName(value: string) {
    this._clientName = value;
  }
  public resetClientName() {
    this._clientName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientNameInput() {
    return this._clientName;
  }

  // client_namespace - computed: false, optional: true, required: false
  private _clientNamespace?: string; 
  public get clientNamespace() {
    return this.getStringAttribute('client_namespace');
  }
  public set clientNamespace(value: string) {
    this._clientNamespace = value;
  }
  public resetClientNamespace() {
    this._clientNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientNamespaceInput() {
    return this._clientNamespace;
  }

  // client_private_key - computed: false, optional: true, required: false
  private _clientPrivateKey?: string; 
  public get clientPrivateKey() {
    return this.getStringAttribute('client_private_key');
  }
  public set clientPrivateKey(value: string) {
    this._clientPrivateKey = value;
  }
  public resetClientPrivateKey() {
    this._clientPrivateKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientPrivateKeyInput() {
    return this._clientPrivateKey;
  }

  // client_public_certificate - computed: false, optional: true, required: false
  private _clientPublicCertificate?: string; 
  public get clientPublicCertificate() {
    return this.getStringAttribute('client_public_certificate');
  }
  public set clientPublicCertificate(value: string) {
    this._clientPublicCertificate = value;
  }
  public resetClientPublicCertificate() {
    this._clientPublicCertificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientPublicCertificateInput() {
    return this._clientPublicCertificate;
  }

  // client_secret - computed: true, optional: true, required: false
  private _clientSecret?: string; 
  public get clientSecret() {
    return this.getStringAttribute('client_secret');
  }
  public set clientSecret(value: string) {
    this._clientSecret = value;
  }
  public resetClientSecret() {
    this._clientSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientSecretInput() {
    return this._clientSecret;
  }

  // cloud_storage_type - computed: true, optional: true, required: false
  private _cloudStorageType?: string; 
  public get cloudStorageType() {
    return this.getStringAttribute('cloud_storage_type');
  }
  public set cloudStorageType(value: string) {
    this._cloudStorageType = value;
  }
  public resetCloudStorageType() {
    this._cloudStorageType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cloudStorageTypeInput() {
    return this._cloudStorageType;
  }

  // collection_address - computed: false, optional: true, required: false
  private _collectionAddress?: string; 
  public get collectionAddress() {
    return this.getStringAttribute('collection_address');
  }
  public set collectionAddress(value: string) {
    this._collectionAddress = value;
  }
  public resetCollectionAddress() {
    this._collectionAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectionAddressInput() {
    return this._collectionAddress;
  }

  // columns - computed: false, optional: true, required: false
  private _columns?: string[]; 
  public get columns() {
    return cdktf.Fn.tolist(this.getListAttribute('columns'));
  }
  public set columns(value: string[]) {
    this._columns = value;
  }
  public resetColumns() {
    this._columns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get columnsInput() {
    return this._columns;
  }

  // community_api_key_name - computed: false, optional: true, required: false
  private _communityApiKeyName?: string; 
  public get communityApiKeyName() {
    return this.getStringAttribute('community_api_key_name');
  }
  public set communityApiKeyName(value: string) {
    this._communityApiKeyName = value;
  }
  public resetCommunityApiKeyName() {
    this._communityApiKeyName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityApiKeyNameInput() {
    return this._communityApiKeyName;
  }

  // community_domain - computed: false, optional: true, required: false
  private _communityDomain?: string; 
  public get communityDomain() {
    return this.getStringAttribute('community_domain');
  }
  public set communityDomain(value: string) {
    this._communityDomain = value;
  }
  public resetCommunityDomain() {
    this._communityDomain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityDomainInput() {
    return this._communityDomain;
  }

  // community_id - computed: false, optional: true, required: false
  private _communityId?: string; 
  public get communityId() {
    return this.getStringAttribute('community_id');
  }
  public set communityId(value: string) {
    this._communityId = value;
  }
  public resetCommunityId() {
    this._communityId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get communityIdInput() {
    return this._communityId;
  }

  // companies - computed: false, optional: true, required: false
  private _companies?: string[]; 
  public get companies() {
    return cdktf.Fn.tolist(this.getListAttribute('companies'));
  }
  public set companies(value: string[]) {
    this._companies = value;
  }
  public resetCompanies() {
    this._companies = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get companiesInput() {
    return this._companies;
  }

  // company - computed: false, optional: true, required: false
  private _company?: string; 
  public get company() {
    return this.getStringAttribute('company');
  }
  public set company(value: string) {
    this._company = value;
  }
  public resetCompany() {
    this._company = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get companyInput() {
    return this._company;
  }

  // company_id - computed: true, optional: true, required: false
  private _companyId?: string; 
  public get companyId() {
    return this.getStringAttribute('company_id');
  }
  public set companyId(value: string) {
    this._companyId = value;
  }
  public resetCompanyId() {
    this._companyId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get companyIdInput() {
    return this._companyId;
  }

  // company_ids - computed: false, optional: true, required: false
  private _companyIds?: string; 
  public get companyIds() {
    return this.getStringAttribute('company_ids');
  }
  public set companyIds(value: string) {
    this._companyIds = value;
  }
  public resetCompanyIds() {
    this._companyIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get companyIdsInput() {
    return this._companyIds;
  }

  // company_key - computed: false, optional: true, required: false
  private _companyKey?: string; 
  public get companyKey() {
    return this.getStringAttribute('company_key');
  }
  public set companyKey(value: string) {
    this._companyKey = value;
  }
  public resetCompanyKey() {
    this._companyKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get companyKeyInput() {
    return this._companyKey;
  }

  // company_name - computed: false, optional: true, required: false
  private _companyName?: string; 
  public get companyName() {
    return this.getStringAttribute('company_name');
  }
  public set companyName(value: string) {
    this._companyName = value;
  }
  public resetCompanyName() {
    this._companyName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get companyNameInput() {
    return this._companyName;
  }

  // company_request_token - computed: false, optional: true, required: false
  private _companyRequestToken?: string; 
  public get companyRequestToken() {
    return this.getStringAttribute('company_request_token');
  }
  public set companyRequestToken(value: string) {
    this._companyRequestToken = value;
  }
  public resetCompanyRequestToken() {
    this._companyRequestToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get companyRequestTokenInput() {
    return this._companyRequestToken;
  }

  // company_uuid - computed: false, optional: true, required: false
  private _companyUuid?: string; 
  public get companyUuid() {
    return this.getStringAttribute('company_uuid');
  }
  public set companyUuid(value: string) {
    this._companyUuid = value;
  }
  public resetCompanyUuid() {
    this._companyUuid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get companyUuidInput() {
    return this._companyUuid;
  }

  // compression - computed: true, optional: true, required: false
  private _compression?: string; 
  public get compression() {
    return this.getStringAttribute('compression');
  }
  public set compression(value: string) {
    this._compression = value;
  }
  public resetCompression() {
    this._compression = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionInput() {
    return this._compression;
  }

  // config_method - computed: true, optional: true, required: false
  private _configMethod?: string; 
  public get configMethod() {
    return this.getStringAttribute('config_method');
  }
  public set configMethod(value: string) {
    this._configMethod = value;
  }
  public resetConfigMethod() {
    this._configMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMethodInput() {
    return this._configMethod;
  }

  // config_repository_url - computed: false, optional: true, required: false
  private _configRepositoryUrl?: string; 
  public get configRepositoryUrl() {
    return this.getStringAttribute('config_repository_url');
  }
  public set configRepositoryUrl(value: string) {
    this._configRepositoryUrl = value;
  }
  public resetConfigRepositoryUrl() {
    this._configRepositoryUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configRepositoryUrlInput() {
    return this._configRepositoryUrl;
  }

  // config_type - computed: true, optional: true, required: false
  private _configType?: string; 
  public get configType() {
    return this.getStringAttribute('config_type');
  }
  public set configType(value: string) {
    this._configType = value;
  }
  public resetConfigType() {
    this._configType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configTypeInput() {
    return this._configType;
  }

  // connect_password - computed: false, optional: true, required: false
  private _connectPassword?: string; 
  public get connectPassword() {
    return this.getStringAttribute('connect_password');
  }
  public set connectPassword(value: string) {
    this._connectPassword = value;
  }
  public resetConnectPassword() {
    this._connectPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectPasswordInput() {
    return this._connectPassword;
  }

  // connect_username - computed: false, optional: true, required: false
  private _connectUsername?: string; 
  public get connectUsername() {
    return this.getStringAttribute('connect_username');
  }
  public set connectUsername(value: string) {
    this._connectUsername = value;
  }
  public resetConnectUsername() {
    this._connectUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectUsernameInput() {
    return this._connectUsername;
  }

  // connecting_user - computed: false, optional: true, required: false
  private _connectingUser?: string; 
  public get connectingUser() {
    return this.getStringAttribute('connecting_user');
  }
  public set connectingUser(value: string) {
    this._connectingUser = value;
  }
  public resetConnectingUser() {
    this._connectingUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectingUserInput() {
    return this._connectingUser;
  }

  // connecting_user_email - computed: false, optional: true, required: false
  private _connectingUserEmail?: string; 
  public get connectingUserEmail() {
    return this.getStringAttribute('connecting_user_email');
  }
  public set connectingUserEmail(value: string) {
    this._connectingUserEmail = value;
  }
  public resetConnectingUserEmail() {
    this._connectingUserEmail = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectingUserEmailInput() {
    return this._connectingUserEmail;
  }

  // connection_method - computed: true, optional: true, required: false
  private _connectionMethod?: string; 
  public get connectionMethod() {
    return this.getStringAttribute('connection_method');
  }
  public set connectionMethod(value: string) {
    this._connectionMethod = value;
  }
  public resetConnectionMethod() {
    this._connectionMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionMethodInput() {
    return this._connectionMethod;
  }

  // connection_name - computed: false, optional: true, required: false
  private _connectionName?: string; 
  public get connectionName() {
    return this.getStringAttribute('connection_name');
  }
  public set connectionName(value: string) {
    this._connectionName = value;
  }
  public resetConnectionName() {
    this._connectionName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionNameInput() {
    return this._connectionName;
  }

  // connection_string - computed: true, optional: true, required: false
  private _connectionString?: string; 
  public get connectionString() {
    return this.getStringAttribute('connection_string');
  }
  public set connectionString(value: string) {
    this._connectionString = value;
  }
  public resetConnectionString() {
    this._connectionString = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionStringInput() {
    return this._connectionString;
  }

  // connection_type - computed: true, optional: true, required: false
  private _connectionType?: string; 
  public get connectionType() {
    return this.getStringAttribute('connection_type');
  }
  public set connectionType(value: string) {
    this._connectionType = value;
  }
  public resetConnectionType() {
    this._connectionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTypeInput() {
    return this._connectionType;
  }

  // console_url - computed: false, optional: true, required: false
  private _consoleUrl?: string; 
  public get consoleUrl() {
    return this.getStringAttribute('console_url');
  }
  public set consoleUrl(value: string) {
    this._consoleUrl = value;
  }
  public resetConsoleUrl() {
    this._consoleUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consoleUrlInput() {
    return this._consoleUrl;
  }

  // consumer_group - computed: true, optional: true, required: false
  private _consumerGroup?: string; 
  public get consumerGroup() {
    return this.getStringAttribute('consumer_group');
  }
  public set consumerGroup(value: string) {
    this._consumerGroup = value;
  }
  public resetConsumerGroup() {
    this._consumerGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consumerGroupInput() {
    return this._consumerGroup;
  }

  // consumer_key - computed: true, optional: true, required: false
  private _consumerKey?: string; 
  public get consumerKey() {
    return this.getStringAttribute('consumer_key');
  }
  public set consumerKey(value: string) {
    this._consumerKey = value;
  }
  public resetConsumerKey() {
    this._consumerKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consumerKeyInput() {
    return this._consumerKey;
  }

  // consumer_name - computed: false, optional: true, required: false
  private _consumerName?: string; 
  public get consumerName() {
    return this.getStringAttribute('consumer_name');
  }
  public set consumerName(value: string) {
    this._consumerName = value;
  }
  public resetConsumerName() {
    this._consumerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consumerNameInput() {
    return this._consumerName;
  }

  // consumer_secret - computed: true, optional: true, required: false
  private _consumerSecret?: string; 
  public get consumerSecret() {
    return this.getStringAttribute('consumer_secret');
  }
  public set consumerSecret(value: string) {
    this._consumerSecret = value;
  }
  public resetConsumerSecret() {
    this._consumerSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consumerSecretInput() {
    return this._consumerSecret;
  }

  // container_address - computed: false, optional: true, required: false
  private _containerAddress?: string; 
  public get containerAddress() {
    return this.getStringAttribute('container_address');
  }
  public set containerAddress(value: string) {
    this._containerAddress = value;
  }
  public resetContainerAddress() {
    this._containerAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerAddressInput() {
    return this._containerAddress;
  }

  // container_name - computed: true, optional: true, required: false
  private _containerName?: string; 
  public get containerName() {
    return this.getStringAttribute('container_name');
  }
  public set containerName(value: string) {
    this._containerName = value;
  }
  public resetContainerName() {
    this._containerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNameInput() {
    return this._containerName;
  }

  // content_owner_id - computed: false, optional: true, required: false
  private _contentOwnerId?: string; 
  public get contentOwnerId() {
    return this.getStringAttribute('content_owner_id');
  }
  public set contentOwnerId(value: string) {
    this._contentOwnerId = value;
  }
  public resetContentOwnerId() {
    this._contentOwnerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contentOwnerIdInput() {
    return this._contentOwnerId;
  }

  // contract_version - computed: false, optional: true, required: false
  private _contractVersion?: string; 
  public get contractVersion() {
    return this.getStringAttribute('contract_version');
  }
  public set contractVersion(value: string) {
    this._contractVersion = value;
  }
  public resetContractVersion() {
    this._contractVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contractVersionInput() {
    return this._contractVersion;
  }

  // conversation_webhook_url - computed: false, optional: true, required: false
  private _conversationWebhookUrl?: string; 
  public get conversationWebhookUrl() {
    return this.getStringAttribute('conversation_webhook_url');
  }
  public set conversationWebhookUrl(value: string) {
    this._conversationWebhookUrl = value;
  }
  public resetConversationWebhookUrl() {
    this._conversationWebhookUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get conversationWebhookUrlInput() {
    return this._conversationWebhookUrl;
  }

  // conversion_dimensions - computed: false, optional: true, required: false
  private _conversionDimensions?: string[]; 
  public get conversionDimensions() {
    return cdktf.Fn.tolist(this.getListAttribute('conversion_dimensions'));
  }
  public set conversionDimensions(value: string[]) {
    this._conversionDimensions = value;
  }
  public resetConversionDimensions() {
    this._conversionDimensions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get conversionDimensionsInput() {
    return this._conversionDimensions;
  }

  // conversion_report_time - computed: true, optional: true, required: false
  private _conversionReportTime?: string; 
  public get conversionReportTime() {
    return this.getStringAttribute('conversion_report_time');
  }
  public set conversionReportTime(value: string) {
    this._conversionReportTime = value;
  }
  public resetConversionReportTime() {
    this._conversionReportTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get conversionReportTimeInput() {
    return this._conversionReportTime;
  }

  // conversion_window_size - computed: true, optional: true, required: false
  private _conversionWindowSize?: number; 
  public get conversionWindowSize() {
    return this.getNumberAttribute('conversion_window_size');
  }
  public set conversionWindowSize(value: number) {
    this._conversionWindowSize = value;
  }
  public resetConversionWindowSize() {
    this._conversionWindowSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get conversionWindowSizeInput() {
    return this._conversionWindowSize;
  }

  // convert_dats_type_to_date - computed: true, optional: true, required: false
  private _convertDatsTypeToDate?: boolean | cdktf.IResolvable; 
  public get convertDatsTypeToDate() {
    return this.getBooleanAttribute('convert_dats_type_to_date');
  }
  public set convertDatsTypeToDate(value: boolean | cdktf.IResolvable) {
    this._convertDatsTypeToDate = value;
  }
  public resetConvertDatsTypeToDate() {
    this._convertDatsTypeToDate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get convertDatsTypeToDateInput() {
    return this._convertDatsTypeToDate;
  }

  // csv_definition - computed: true, optional: true, required: false
  private _csvDefinition?: string; 
  public get csvDefinition() {
    return this.getStringAttribute('csv_definition');
  }
  public set csvDefinition(value: string) {
    this._csvDefinition = value;
  }
  public resetCsvDefinition() {
    this._csvDefinition = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get csvDefinitionInput() {
    return this._csvDefinition;
  }

  // currency - computed: false, optional: true, required: false
  private _currency?: string; 
  public get currency() {
    return this.getStringAttribute('currency');
  }
  public set currency(value: string) {
    this._currency = value;
  }
  public resetCurrency() {
    this._currency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get currencyInput() {
    return this._currency;
  }

  // custom_base_url - computed: false, optional: true, required: false
  private _customBaseUrl?: string; 
  public get customBaseUrl() {
    return this.getStringAttribute('custom_base_url');
  }
  public set customBaseUrl(value: string) {
    this._customBaseUrl = value;
  }
  public resetCustomBaseUrl() {
    this._customBaseUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customBaseUrlInput() {
    return this._customBaseUrl;
  }

  // custom_dimension_key_ids - computed: false, optional: true, required: false
  private _customDimensionKeyIds?: string[]; 
  public get customDimensionKeyIds() {
    return cdktf.Fn.tolist(this.getListAttribute('custom_dimension_key_ids'));
  }
  public set customDimensionKeyIds(value: string[]) {
    this._customDimensionKeyIds = value;
  }
  public resetCustomDimensionKeyIds() {
    this._customDimensionKeyIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customDimensionKeyIdsInput() {
    return this._customDimensionKeyIds;
  }

  // custom_event_sync_mode - computed: false, optional: true, required: false
  private _customEventSyncMode?: string; 
  public get customEventSyncMode() {
    return this.getStringAttribute('custom_event_sync_mode');
  }
  public set customEventSyncMode(value: string) {
    this._customEventSyncMode = value;
  }
  public resetCustomEventSyncMode() {
    this._customEventSyncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customEventSyncModeInput() {
    return this._customEventSyncMode;
  }

  // custom_events - computed: false, optional: true, required: false
  private _customEvents?: string[]; 
  public get customEvents() {
    return cdktf.Fn.tolist(this.getListAttribute('custom_events'));
  }
  public set customEvents(value: string[]) {
    this._customEvents = value;
  }
  public resetCustomEvents() {
    this._customEvents = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customEventsInput() {
    return this._customEvents;
  }

  // custom_field_ids - computed: false, optional: true, required: false
  private _customFieldIds?: string[]; 
  public get customFieldIds() {
    return cdktf.Fn.tolist(this.getListAttribute('custom_field_ids'));
  }
  public set customFieldIds(value: string[]) {
    this._customFieldIds = value;
  }
  public resetCustomFieldIds() {
    this._customFieldIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customFieldIdsInput() {
    return this._customFieldIds;
  }

  // custom_floodlight_variables - computed: false, optional: true, required: false
  private _customFloodlightVariables?: string[]; 
  public get customFloodlightVariables() {
    return cdktf.Fn.tolist(this.getListAttribute('custom_floodlight_variables'));
  }
  public set customFloodlightVariables(value: string[]) {
    this._customFloodlightVariables = value;
  }
  public resetCustomFloodlightVariables() {
    this._customFloodlightVariables = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customFloodlightVariablesInput() {
    return this._customFloodlightVariables;
  }

  // custom_rate_limit - computed: false, optional: true, required: false
  private _customRateLimit?: string; 
  public get customRateLimit() {
    return this.getStringAttribute('custom_rate_limit');
  }
  public set customRateLimit(value: string) {
    this._customRateLimit = value;
  }
  public resetCustomRateLimit() {
    this._customRateLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customRateLimitInput() {
    return this._customRateLimit;
  }

  // custom_url - computed: false, optional: true, required: false
  private _customUrl?: string; 
  public get customUrl() {
    return this.getStringAttribute('custom_url');
  }
  public set customUrl(value: string) {
    this._customUrl = value;
  }
  public resetCustomUrl() {
    this._customUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customUrlInput() {
    return this._customUrl;
  }

  // customer_api_key - computed: false, optional: true, required: false
  private _customerApiKey?: string; 
  public get customerApiKey() {
    return this.getStringAttribute('customer_api_key');
  }
  public set customerApiKey(value: string) {
    this._customerApiKey = value;
  }
  public resetCustomerApiKey() {
    this._customerApiKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customerApiKeyInput() {
    return this._customerApiKey;
  }

  // customer_id - computed: true, optional: true, required: false
  private _customerId?: string; 
  public get customerId() {
    return this.getStringAttribute('customer_id');
  }
  public set customerId(value: string) {
    this._customerId = value;
  }
  public resetCustomerId() {
    this._customerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customerIdInput() {
    return this._customerId;
  }

  // customer_list_id - computed: true, optional: true, required: false
  private _customerListId?: string; 
  public get customerListId() {
    return this.getStringAttribute('customer_list_id');
  }
  public set customerListId(value: string) {
    this._customerListId = value;
  }
  public resetCustomerListId() {
    this._customerListId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customerListIdInput() {
    return this._customerListId;
  }

  // daily_api_call_limit - computed: true, optional: true, required: false
  private _dailyApiCallLimit?: number; 
  public get dailyApiCallLimit() {
    return this.getNumberAttribute('daily_api_call_limit');
  }
  public set dailyApiCallLimit(value: number) {
    this._dailyApiCallLimit = value;
  }
  public resetDailyApiCallLimit() {
    this._dailyApiCallLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dailyApiCallLimitInput() {
    return this._dailyApiCallLimit;
  }

  // data_access_method - computed: true, optional: true, required: false
  private _dataAccessMethod?: string; 
  public get dataAccessMethod() {
    return this.getStringAttribute('data_access_method');
  }
  public set dataAccessMethod(value: string) {
    this._dataAccessMethod = value;
  }
  public resetDataAccessMethod() {
    this._dataAccessMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataAccessMethodInput() {
    return this._dataAccessMethod;
  }

  // data_center - computed: true, optional: true, required: false
  private _dataCenter?: string; 
  public get dataCenter() {
    return this.getStringAttribute('data_center');
  }
  public set dataCenter(value: string) {
    this._dataCenter = value;
  }
  public resetDataCenter() {
    this._dataCenter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataCenterInput() {
    return this._dataCenter;
  }

  // data_center_id - computed: true, optional: true, required: false
  private _dataCenterId?: string; 
  public get dataCenterId() {
    return this.getStringAttribute('data_center_id');
  }
  public set dataCenterId(value: string) {
    this._dataCenterId = value;
  }
  public resetDataCenterId() {
    this._dataCenterId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataCenterIdInput() {
    return this._dataCenterId;
  }

  // data_set_name - computed: false, optional: true, required: false
  private _dataSetName?: string; 
  public get dataSetName() {
    return this.getStringAttribute('data_set_name');
  }
  public set dataSetName(value: string) {
    this._dataSetName = value;
  }
  public resetDataSetName() {
    this._dataSetName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSetNameInput() {
    return this._dataSetName;
  }

  // database - computed: true, optional: true, required: false
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  public resetDatabase() {
    this._database = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // database_name - computed: false, optional: true, required: false
  private _databaseName?: string; 
  public get databaseName() {
    return this.getStringAttribute('database_name');
  }
  public set databaseName(value: string) {
    this._databaseName = value;
  }
  public resetDatabaseName() {
    this._databaseName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseNameInput() {
    return this._databaseName;
  }

  // dataset_id - computed: true, optional: true, required: false
  private _datasetId?: string; 
  public get datasetId() {
    return this.getStringAttribute('dataset_id');
  }
  public set datasetId(value: string) {
    this._datasetId = value;
  }
  public resetDatasetId() {
    this._datasetId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get datasetIdInput() {
    return this._datasetId;
  }

  // datasource - computed: true, optional: true, required: false
  private _datasource?: string; 
  public get datasource() {
    return this.getStringAttribute('datasource');
  }
  public set datasource(value: string) {
    this._datasource = value;
  }
  public resetDatasource() {
    this._datasource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get datasourceInput() {
    return this._datasource;
  }

  // date_granularity - computed: true, optional: true, required: false
  private _dateGranularity?: string; 
  public get dateGranularity() {
    return this.getStringAttribute('date_granularity');
  }
  public set dateGranularity(value: string) {
    this._dateGranularity = value;
  }
  public resetDateGranularity() {
    this._dateGranularity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dateGranularityInput() {
    return this._dateGranularity;
  }

  // db - computed: false, optional: true, required: false
  private _db?: string; 
  public get db() {
    return this.getStringAttribute('db');
  }
  public set db(value: string) {
    this._db = value;
  }
  public resetDb() {
    this._db = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dbInput() {
    return this._db;
  }

  // default_host - computed: false, optional: true, required: false
  private _defaultHost?: string; 
  public get defaultHost() {
    return this.getStringAttribute('default_host');
  }
  public set defaultHost(value: string) {
    this._defaultHost = value;
  }
  public resetDefaultHost() {
    this._defaultHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultHostInput() {
    return this._defaultHost;
  }

  // delimiter - computed: true, optional: true, required: false
  private _delimiter?: string; 
  public get delimiter() {
    return this.getStringAttribute('delimiter');
  }
  public set delimiter(value: string) {
    this._delimiter = value;
  }
  public resetDelimiter() {
    this._delimiter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get delimiterInput() {
    return this._delimiter;
  }

  // developer_reference - computed: false, optional: true, required: false
  private _developerReference?: string; 
  public get developerReference() {
    return this.getStringAttribute('developer_reference');
  }
  public set developerReference(value: string) {
    this._developerReference = value;
  }
  public resetDeveloperReference() {
    this._developerReference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get developerReferenceInput() {
    return this._developerReference;
  }

  // dimension_attributes - computed: false, optional: true, required: false
  private _dimensionAttributes?: string[]; 
  public get dimensionAttributes() {
    return cdktf.Fn.tolist(this.getListAttribute('dimension_attributes'));
  }
  public set dimensionAttributes(value: string[]) {
    this._dimensionAttributes = value;
  }
  public resetDimensionAttributes() {
    this._dimensionAttributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dimensionAttributesInput() {
    return this._dimensionAttributes;
  }

  // dimensions - computed: false, optional: true, required: false
  private _dimensions?: string[]; 
  public get dimensions() {
    return cdktf.Fn.tolist(this.getListAttribute('dimensions'));
  }
  public set dimensions(value: string[]) {
    this._dimensions = value;
  }
  public resetDimensions() {
    this._dimensions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dimensionsInput() {
    return this._dimensions;
  }

  // direct_capture_method - computed: true, optional: true, required: false
  private _directCaptureMethod?: string; 
  public get directCaptureMethod() {
    return this.getStringAttribute('direct_capture_method');
  }
  public set directCaptureMethod(value: string) {
    this._directCaptureMethod = value;
  }
  public resetDirectCaptureMethod() {
    this._directCaptureMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directCaptureMethodInput() {
    return this._directCaptureMethod;
  }

  // directories - computed: false, optional: true, required: false
  private _directories?: string[]; 
  public get directories() {
    return cdktf.Fn.tolist(this.getListAttribute('directories'));
  }
  public set directories(value: string[]) {
    this._directories = value;
  }
  public resetDirectories() {
    this._directories = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directoriesInput() {
    return this._directories;
  }

  // directory_sync_mode - computed: true, optional: true, required: false
  private _directorySyncMode?: string; 
  public get directorySyncMode() {
    return this.getStringAttribute('directory_sync_mode');
  }
  public set directorySyncMode(value: string) {
    this._directorySyncMode = value;
  }
  public resetDirectorySyncMode() {
    this._directorySyncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directorySyncModeInput() {
    return this._directorySyncMode;
  }

  // distributed_connector_cluster_size - computed: true, optional: true, required: false
  private _distributedConnectorClusterSize?: number; 
  public get distributedConnectorClusterSize() {
    return this.getNumberAttribute('distributed_connector_cluster_size');
  }
  public set distributedConnectorClusterSize(value: number) {
    this._distributedConnectorClusterSize = value;
  }
  public resetDistributedConnectorClusterSize() {
    this._distributedConnectorClusterSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributedConnectorClusterSizeInput() {
    return this._distributedConnectorClusterSize;
  }

  // distribution_incremental_fetch_window_days - computed: true, optional: true, required: false
  private _distributionIncrementalFetchWindowDays?: number; 
  public get distributionIncrementalFetchWindowDays() {
    return this.getNumberAttribute('distribution_incremental_fetch_window_days');
  }
  public set distributionIncrementalFetchWindowDays(value: number) {
    this._distributionIncrementalFetchWindowDays = value;
  }
  public resetDistributionIncrementalFetchWindowDays() {
    this._distributionIncrementalFetchWindowDays = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionIncrementalFetchWindowDaysInput() {
    return this._distributionIncrementalFetchWindowDays;
  }

  // domain - computed: true, optional: true, required: false
  private _domain?: string; 
  public get domain() {
    return this.getStringAttribute('domain');
  }
  public set domain(value: string) {
    this._domain = value;
  }
  public resetDomain() {
    this._domain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get domainInput() {
    return this._domain;
  }

  // domain_host_name - computed: true, optional: true, required: false
  private _domainHostName?: string; 
  public get domainHostName() {
    return this.getStringAttribute('domain_host_name');
  }
  public set domainHostName(value: string) {
    this._domainHostName = value;
  }
  public resetDomainHostName() {
    this._domainHostName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get domainHostNameInput() {
    return this._domainHostName;
  }

  // domain_name - computed: true, optional: true, required: false
  private _domainName?: string; 
  public get domainName() {
    return this.getStringAttribute('domain_name');
  }
  public set domainName(value: string) {
    this._domainName = value;
  }
  public resetDomainName() {
    this._domainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get domainNameInput() {
    return this._domainName;
  }

  // domain_type - computed: true, optional: true, required: false
  private _domainType?: string; 
  public get domainType() {
    return this.getStringAttribute('domain_type');
  }
  public set domainType(value: string) {
    this._domainType = value;
  }
  public resetDomainType() {
    this._domainType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get domainTypeInput() {
    return this._domainType;
  }

  // dsv_service_auth - computed: false, optional: true, required: false
  private _dsvServiceAuth?: string; 
  public get dsvServiceAuth() {
    return this.getStringAttribute('dsv_service_auth');
  }
  public set dsvServiceAuth(value: string) {
    this._dsvServiceAuth = value;
  }
  public resetDsvServiceAuth() {
    this._dsvServiceAuth = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dsvServiceAuthInput() {
    return this._dsvServiceAuth;
  }

  // dsv_subscription_key - computed: false, optional: true, required: false
  private _dsvSubscriptionKey?: string; 
  public get dsvSubscriptionKey() {
    return this.getStringAttribute('dsv_subscription_key');
  }
  public set dsvSubscriptionKey(value: string) {
    this._dsvSubscriptionKey = value;
  }
  public resetDsvSubscriptionKey() {
    this._dsvSubscriptionKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dsvSubscriptionKeyInput() {
    return this._dsvSubscriptionKey;
  }

  // ecommerce_stores - computed: false, optional: true, required: false
  private _ecommerceStores?: string[]; 
  public get ecommerceStores() {
    return cdktf.Fn.tolist(this.getListAttribute('ecommerce_stores'));
  }
  public set ecommerceStores(value: string[]) {
    this._ecommerceStores = value;
  }
  public resetEcommerceStores() {
    this._ecommerceStores = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ecommerceStoresInput() {
    return this._ecommerceStores;
  }

  // edition - computed: true, optional: true, required: false
  private _edition?: string; 
  public get edition() {
    return this.getStringAttribute('edition');
  }
  public set edition(value: string) {
    this._edition = value;
  }
  public resetEdition() {
    this._edition = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get editionInput() {
    return this._edition;
  }

  // elements - computed: false, optional: true, required: false
  private _elements?: string[]; 
  public get elements() {
    return cdktf.Fn.tolist(this.getListAttribute('elements'));
  }
  public set elements(value: string[]) {
    this._elements = value;
  }
  public resetElements() {
    this._elements = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get elementsInput() {
    return this._elements;
  }

  // email - computed: true, optional: true, required: false
  private _email?: string; 
  public get email() {
    return this.getStringAttribute('email');
  }
  public set email(value: string) {
    this._email = value;
  }
  public resetEmail() {
    this._email = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emailInput() {
    return this._email;
  }

  // email_address - computed: false, optional: true, required: false
  private _emailAddress?: string; 
  public get emailAddress() {
    return this.getStringAttribute('email_address');
  }
  public set emailAddress(value: string) {
    this._emailAddress = value;
  }
  public resetEmailAddress() {
    this._emailAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emailAddressInput() {
    return this._emailAddress;
  }

  // email_id - computed: false, optional: true, required: false
  private _emailId?: string; 
  public get emailId() {
    return this.getStringAttribute('email_id');
  }
  public set emailId(value: string) {
    this._emailId = value;
  }
  public resetEmailId() {
    this._emailId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emailIdInput() {
    return this._emailId;
  }

  // empty_header - computed: true, optional: true, required: false
  private _emptyHeader?: boolean | cdktf.IResolvable; 
  public get emptyHeader() {
    return this.getBooleanAttribute('empty_header');
  }
  public set emptyHeader(value: boolean | cdktf.IResolvable) {
    this._emptyHeader = value;
  }
  public resetEmptyHeader() {
    this._emptyHeader = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emptyHeaderInput() {
    return this._emptyHeader;
  }

  // enable_all_dimension_combinations - computed: true, optional: true, required: false
  private _enableAllDimensionCombinations?: boolean | cdktf.IResolvable; 
  public get enableAllDimensionCombinations() {
    return this.getBooleanAttribute('enable_all_dimension_combinations');
  }
  public set enableAllDimensionCombinations(value: boolean | cdktf.IResolvable) {
    this._enableAllDimensionCombinations = value;
  }
  public resetEnableAllDimensionCombinations() {
    this._enableAllDimensionCombinations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableAllDimensionCombinationsInput() {
    return this._enableAllDimensionCombinations;
  }

  // enable_archive_log_only - computed: true, optional: true, required: false
  private _enableArchiveLogOnly?: boolean | cdktf.IResolvable; 
  public get enableArchiveLogOnly() {
    return this.getBooleanAttribute('enable_archive_log_only');
  }
  public set enableArchiveLogOnly(value: boolean | cdktf.IResolvable) {
    this._enableArchiveLogOnly = value;
  }
  public resetEnableArchiveLogOnly() {
    this._enableArchiveLogOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableArchiveLogOnlyInput() {
    return this._enableArchiveLogOnly;
  }

  // enable_data_extensions_syncing - computed: true, optional: true, required: false
  private _enableDataExtensionsSyncing?: boolean | cdktf.IResolvable; 
  public get enableDataExtensionsSyncing() {
    return this.getBooleanAttribute('enable_data_extensions_syncing');
  }
  public set enableDataExtensionsSyncing(value: boolean | cdktf.IResolvable) {
    this._enableDataExtensionsSyncing = value;
  }
  public resetEnableDataExtensionsSyncing() {
    this._enableDataExtensionsSyncing = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableDataExtensionsSyncingInput() {
    return this._enableDataExtensionsSyncing;
  }

  // enable_distributed_connector_mode - computed: true, optional: true, required: false
  private _enableDistributedConnectorMode?: boolean | cdktf.IResolvable; 
  public get enableDistributedConnectorMode() {
    return this.getBooleanAttribute('enable_distributed_connector_mode');
  }
  public set enableDistributedConnectorMode(value: boolean | cdktf.IResolvable) {
    this._enableDistributedConnectorMode = value;
  }
  public resetEnableDistributedConnectorMode() {
    this._enableDistributedConnectorMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableDistributedConnectorModeInput() {
    return this._enableDistributedConnectorMode;
  }

  // enable_enrichments - computed: true, optional: true, required: false
  private _enableEnrichments?: boolean | cdktf.IResolvable; 
  public get enableEnrichments() {
    return this.getBooleanAttribute('enable_enrichments');
  }
  public set enableEnrichments(value: boolean | cdktf.IResolvable) {
    this._enableEnrichments = value;
  }
  public resetEnableEnrichments() {
    this._enableEnrichments = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableEnrichmentsInput() {
    return this._enableEnrichments;
  }

  // enable_exports - computed: true, optional: true, required: false
  private _enableExports?: boolean | cdktf.IResolvable; 
  public get enableExports() {
    return this.getBooleanAttribute('enable_exports');
  }
  public set enableExports(value: boolean | cdktf.IResolvable) {
    this._enableExports = value;
  }
  public resetEnableExports() {
    this._enableExports = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableExportsInput() {
    return this._enableExports;
  }

  // enable_tde - computed: true, optional: true, required: false
  private _enableTde?: boolean | cdktf.IResolvable; 
  public get enableTde() {
    return this.getBooleanAttribute('enable_tde');
  }
  public set enableTde(value: boolean | cdktf.IResolvable) {
    this._enableTde = value;
  }
  public resetEnableTde() {
    this._enableTde = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableTdeInput() {
    return this._enableTde;
  }

  // enable_tde_encryption - computed: true, optional: true, required: false
  private _enableTdeEncryption?: boolean | cdktf.IResolvable; 
  public get enableTdeEncryption() {
    return this.getBooleanAttribute('enable_tde_encryption');
  }
  public set enableTdeEncryption(value: boolean | cdktf.IResolvable) {
    this._enableTdeEncryption = value;
  }
  public resetEnableTdeEncryption() {
    this._enableTdeEncryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableTdeEncryptionInput() {
    return this._enableTdeEncryption;
  }

  // encoded_public_key - computed: false, optional: true, required: false
  private _encodedPublicKey?: string; 
  public get encodedPublicKey() {
    return this.getStringAttribute('encoded_public_key');
  }
  public set encodedPublicKey(value: string) {
    this._encodedPublicKey = value;
  }
  public resetEncodedPublicKey() {
    this._encodedPublicKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get encodedPublicKeyInput() {
    return this._encodedPublicKey;
  }

  // encryption_key - computed: true, optional: true, required: false
  private _encryptionKey?: string; 
  public get encryptionKey() {
    return this.getStringAttribute('encryption_key');
  }
  public set encryptionKey(value: string) {
    this._encryptionKey = value;
  }
  public resetEncryptionKey() {
    this._encryptionKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get encryptionKeyInput() {
    return this._encryptionKey;
  }

  // endpoint - computed: true, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // endpoint_url - computed: false, optional: true, required: false
  private _endpointUrl?: string; 
  public get endpointUrl() {
    return this.getStringAttribute('endpoint_url');
  }
  public set endpointUrl(value: string) {
    this._endpointUrl = value;
  }
  public resetEndpointUrl() {
    this._endpointUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointUrlInput() {
    return this._endpointUrl;
  }

  // engagement_attribution_window - computed: true, optional: true, required: false
  private _engagementAttributionWindow?: string; 
  public get engagementAttributionWindow() {
    return this.getStringAttribute('engagement_attribution_window');
  }
  public set engagementAttributionWindow(value: string) {
    this._engagementAttributionWindow = value;
  }
  public resetEngagementAttributionWindow() {
    this._engagementAttributionWindow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get engagementAttributionWindowInput() {
    return this._engagementAttributionWindow;
  }

  // enriched_export - computed: false, optional: true, required: false
  private _enrichedExport?: string; 
  public get enrichedExport() {
    return this.getStringAttribute('enriched_export');
  }
  public set enrichedExport(value: string) {
    this._enrichedExport = value;
  }
  public resetEnrichedExport() {
    this._enrichedExport = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enrichedExportInput() {
    return this._enrichedExport;
  }

  // entity_id - computed: true, optional: true, required: false
  private _entityId?: string; 
  public get entityId() {
    return this.getStringAttribute('entity_id');
  }
  public set entityId(value: string) {
    this._entityId = value;
  }
  public resetEntityId() {
    this._entityId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get entityIdInput() {
    return this._entityId;
  }

  // entra_app_id - computed: false, optional: true, required: false
  private _entraAppId?: string; 
  public get entraAppId() {
    return this.getStringAttribute('entra_app_id');
  }
  public set entraAppId(value: string) {
    this._entraAppId = value;
  }
  public resetEntraAppId() {
    this._entraAppId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get entraAppIdInput() {
    return this._entraAppId;
  }

  // entra_tenant_id - computed: false, optional: true, required: false
  private _entraTenantId?: string; 
  public get entraTenantId() {
    return this.getStringAttribute('entra_tenant_id');
  }
  public set entraTenantId(value: string) {
    this._entraTenantId = value;
  }
  public resetEntraTenantId() {
    this._entraTenantId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get entraTenantIdInput() {
    return this._entraTenantId;
  }

  // environment - computed: true, optional: true, required: false
  private _environment?: string; 
  public get environment() {
    return this.getStringAttribute('environment');
  }
  public set environment(value: string) {
    this._environment = value;
  }
  public resetEnvironment() {
    this._environment = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get environmentInput() {
    return this._environment;
  }

  // environment_host - computed: false, optional: true, required: false
  private _environmentHost?: string; 
  public get environmentHost() {
    return this.getStringAttribute('environment_host');
  }
  public set environmentHost(value: string) {
    this._environmentHost = value;
  }
  public resetEnvironmentHost() {
    this._environmentHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get environmentHostInput() {
    return this._environmentHost;
  }

  // environment_name - computed: false, optional: true, required: false
  private _environmentName?: string; 
  public get environmentName() {
    return this.getStringAttribute('environment_name');
  }
  public set environmentName(value: string) {
    this._environmentName = value;
  }
  public resetEnvironmentName() {
    this._environmentName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get environmentNameInput() {
    return this._environmentName;
  }

  // escape_char - computed: true, optional: true, required: false
  private _escapeChar?: string; 
  public get escapeChar() {
    return this.getStringAttribute('escape_char');
  }
  public set escapeChar(value: string) {
    this._escapeChar = value;
  }
  public resetEscapeChar() {
    this._escapeChar = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get escapeCharInput() {
    return this._escapeChar;
  }

  // escape_char_options - computed: true, optional: true, required: false
  private _escapeCharOptions?: string; 
  public get escapeCharOptions() {
    return this.getStringAttribute('escape_char_options');
  }
  public set escapeCharOptions(value: string) {
    this._escapeCharOptions = value;
  }
  public resetEscapeCharOptions() {
    this._escapeCharOptions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get escapeCharOptionsInput() {
    return this._escapeCharOptions;
  }

  // eu_region - computed: true, optional: true, required: false
  private _euRegion?: boolean | cdktf.IResolvable; 
  public get euRegion() {
    return this.getBooleanAttribute('eu_region');
  }
  public set euRegion(value: boolean | cdktf.IResolvable) {
    this._euRegion = value;
  }
  public resetEuRegion() {
    this._euRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get euRegionInput() {
    return this._euRegion;
  }

  // events - computed: false, optional: true, required: false
  private _events?: string[]; 
  public get events() {
    return cdktf.Fn.tolist(this.getListAttribute('events'));
  }
  public set events(value: string[]) {
    this._events = value;
  }
  public resetEvents() {
    this._events = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get eventsInput() {
    return this._events;
  }

  // export_native_types_as_pdf - computed: true, optional: true, required: false
  private _exportNativeTypesAsPdf?: boolean | cdktf.IResolvable; 
  public get exportNativeTypesAsPdf() {
    return this.getBooleanAttribute('export_native_types_as_pdf');
  }
  public set exportNativeTypesAsPdf(value: boolean | cdktf.IResolvable) {
    this._exportNativeTypesAsPdf = value;
  }
  public resetExportNativeTypesAsPdf() {
    this._exportNativeTypesAsPdf = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exportNativeTypesAsPdfInput() {
    return this._exportNativeTypesAsPdf;
  }

  // export_storage_type - computed: true, optional: true, required: false
  private _exportStorageType?: string; 
  public get exportStorageType() {
    return this.getStringAttribute('export_storage_type');
  }
  public set exportStorageType(value: string) {
    this._exportStorageType = value;
  }
  public resetExportStorageType() {
    this._exportStorageType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exportStorageTypeInput() {
    return this._exportStorageType;
  }

  // external_id - computed: true, optional: true, required: false
  private _externalId?: string; 
  public get externalId() {
    return this.getStringAttribute('external_id');
  }
  public set externalId(value: string) {
    this._externalId = value;
  }
  public resetExternalId() {
    this._externalId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalIdInput() {
    return this._externalId;
  }

  // facility_codes - computed: false, optional: true, required: false
  private _facilityCodes?: string; 
  public get facilityCodes() {
    return this.getStringAttribute('facility_codes');
  }
  public set facilityCodes(value: string) {
    this._facilityCodes = value;
  }
  public resetFacilityCodes() {
    this._facilityCodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get facilityCodesInput() {
    return this._facilityCodes;
  }

  // fields - computed: false, optional: true, required: false
  private _fields?: string[]; 
  public get fields() {
    return cdktf.Fn.tolist(this.getListAttribute('fields'));
  }
  public set fields(value: string[]) {
    this._fields = value;
  }
  public resetFields() {
    this._fields = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldsInput() {
    return this._fields;
  }

  // file_handling - computed: true, optional: true, required: false
  private _fileHandling?: string; 
  public get fileHandling() {
    return this.getStringAttribute('file_handling');
  }
  public set fileHandling(value: string) {
    this._fileHandling = value;
  }
  public resetFileHandling() {
    this._fileHandling = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileHandlingInput() {
    return this._fileHandling;
  }

  // file_type - computed: true, optional: true, required: false
  private _fileType?: string; 
  public get fileType() {
    return this.getStringAttribute('file_type');
  }
  public set fileType(value: string) {
    this._fileType = value;
  }
  public resetFileType() {
    this._fileType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileTypeInput() {
    return this._fileType;
  }

  // filter - computed: false, optional: true, required: false
  private _filter?: string; 
  public get filter() {
    return this.getStringAttribute('filter');
  }
  public set filter(value: string) {
    this._filter = value;
  }
  public resetFilter() {
    this._filter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterInput() {
    return this._filter;
  }

  // finance_account_sync_mode - computed: true, optional: true, required: false
  private _financeAccountSyncMode?: string; 
  public get financeAccountSyncMode() {
    return this.getStringAttribute('finance_account_sync_mode');
  }
  public set financeAccountSyncMode(value: string) {
    this._financeAccountSyncMode = value;
  }
  public resetFinanceAccountSyncMode() {
    this._financeAccountSyncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get financeAccountSyncModeInput() {
    return this._financeAccountSyncMode;
  }

  // finance_accounts - computed: false, optional: true, required: false
  private _financeAccounts?: string[]; 
  public get financeAccounts() {
    return cdktf.Fn.tolist(this.getListAttribute('finance_accounts'));
  }
  public set financeAccounts(value: string[]) {
    this._financeAccounts = value;
  }
  public resetFinanceAccounts() {
    this._financeAccounts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get financeAccountsInput() {
    return this._financeAccounts;
  }

  // folder - computed: false, optional: true, required: false
  private _folder?: string; 
  public get folder() {
    return this.getStringAttribute('folder');
  }
  public set folder(value: string) {
    this._folder = value;
  }
  public resetFolder() {
    this._folder = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get folderInput() {
    return this._folder;
  }

  // folder_id - computed: true, optional: true, required: false
  private _folderId?: string; 
  public get folderId() {
    return this.getStringAttribute('folder_id');
  }
  public set folderId(value: string) {
    this._folderId = value;
  }
  public resetFolderId() {
    this._folderId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get folderIdInput() {
    return this._folderId;
  }

  // folder_path - computed: false, optional: true, required: false
  private _folderPath?: string; 
  public get folderPath() {
    return this.getStringAttribute('folder_path');
  }
  public set folderPath(value: string) {
    this._folderPath = value;
  }
  public resetFolderPath() {
    this._folderPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get folderPathInput() {
    return this._folderPath;
  }

  // forecast_id - computed: false, optional: true, required: false
  private _forecastId?: string; 
  public get forecastId() {
    return this.getStringAttribute('forecast_id');
  }
  public set forecastId(value: string) {
    this._forecastId = value;
  }
  public resetForecastId() {
    this._forecastId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get forecastIdInput() {
    return this._forecastId;
  }

  // ftp_host - computed: true, optional: true, required: false
  private _ftpHost?: string; 
  public get ftpHost() {
    return this.getStringAttribute('ftp_host');
  }
  public set ftpHost(value: string) {
    this._ftpHost = value;
  }
  public resetFtpHost() {
    this._ftpHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ftpHostInput() {
    return this._ftpHost;
  }

  // ftp_password - computed: true, optional: true, required: false
  private _ftpPassword?: string; 
  public get ftpPassword() {
    return this.getStringAttribute('ftp_password');
  }
  public set ftpPassword(value: string) {
    this._ftpPassword = value;
  }
  public resetFtpPassword() {
    this._ftpPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ftpPasswordInput() {
    return this._ftpPassword;
  }

  // ftp_port - computed: true, optional: true, required: false
  private _ftpPort?: number; 
  public get ftpPort() {
    return this.getNumberAttribute('ftp_port');
  }
  public set ftpPort(value: number) {
    this._ftpPort = value;
  }
  public resetFtpPort() {
    this._ftpPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ftpPortInput() {
    return this._ftpPort;
  }

  // ftp_user - computed: true, optional: true, required: false
  private _ftpUser?: string; 
  public get ftpUser() {
    return this.getStringAttribute('ftp_user');
  }
  public set ftpUser(value: string) {
    this._ftpUser = value;
  }
  public resetFtpUser() {
    this._ftpUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ftpUserInput() {
    return this._ftpUser;
  }

  // function - computed: true, optional: true, required: false
  private _function?: string; 
  public get function() {
    return this.getStringAttribute('function');
  }
  public set function(value: string) {
    this._function = value;
  }
  public resetFunction() {
    this._function = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get functionInput() {
    return this._function;
  }

  // function_app - computed: true, optional: true, required: false
  private _functionApp?: string; 
  public get functionApp() {
    return this.getStringAttribute('function_app');
  }
  public set functionApp(value: string) {
    this._functionApp = value;
  }
  public resetFunctionApp() {
    this._functionApp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get functionAppInput() {
    return this._functionApp;
  }

  // function_key - computed: true, optional: true, required: false
  private _functionKey?: string; 
  public get functionKey() {
    return this.getStringAttribute('function_key');
  }
  public set functionKey(value: string) {
    this._functionKey = value;
  }
  public resetFunctionKey() {
    this._functionKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get functionKeyInput() {
    return this._functionKey;
  }

  // function_name - computed: true, optional: true, required: false
  private _functionName?: string; 
  public get functionName() {
    return this.getStringAttribute('function_name');
  }
  public set functionName(value: string) {
    this._functionName = value;
  }
  public resetFunctionName() {
    this._functionName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get functionNameInput() {
    return this._functionName;
  }

  // function_trigger - computed: true, optional: true, required: false
  private _functionTrigger?: string; 
  public get functionTrigger() {
    return this.getStringAttribute('function_trigger');
  }
  public set functionTrigger(value: string) {
    this._functionTrigger = value;
  }
  public resetFunctionTrigger() {
    this._functionTrigger = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get functionTriggerInput() {
    return this._functionTrigger;
  }

  // gcs_bucket - computed: true, optional: true, required: false
  private _gcsBucket?: string; 
  public get gcsBucket() {
    return this.getStringAttribute('gcs_bucket');
  }
  public set gcsBucket(value: string) {
    this._gcsBucket = value;
  }
  public resetGcsBucket() {
    this._gcsBucket = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gcsBucketInput() {
    return this._gcsBucket;
  }

  // gcs_export_bucket - computed: false, optional: true, required: false
  private _gcsExportBucket?: string; 
  public get gcsExportBucket() {
    return this.getStringAttribute('gcs_export_bucket');
  }
  public set gcsExportBucket(value: string) {
    this._gcsExportBucket = value;
  }
  public resetGcsExportBucket() {
    this._gcsExportBucket = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gcsExportBucketInput() {
    return this._gcsExportBucket;
  }

  // gcs_export_folder - computed: false, optional: true, required: false
  private _gcsExportFolder?: string; 
  public get gcsExportFolder() {
    return this.getStringAttribute('gcs_export_folder');
  }
  public set gcsExportFolder(value: string) {
    this._gcsExportFolder = value;
  }
  public resetGcsExportFolder() {
    this._gcsExportFolder = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gcsExportFolderInput() {
    return this._gcsExportFolder;
  }

  // gcs_folder - computed: true, optional: true, required: false
  private _gcsFolder?: string; 
  public get gcsFolder() {
    return this.getStringAttribute('gcs_folder');
  }
  public set gcsFolder(value: string) {
    this._gcsFolder = value;
  }
  public resetGcsFolder() {
    this._gcsFolder = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gcsFolderInput() {
    return this._gcsFolder;
  }

  // generate_fivetran_pk - computed: true, optional: true, required: false
  private _generateFivetranPk?: boolean | cdktf.IResolvable; 
  public get generateFivetranPk() {
    return this.getBooleanAttribute('generate_fivetran_pk');
  }
  public set generateFivetranPk(value: boolean | cdktf.IResolvable) {
    this._generateFivetranPk = value;
  }
  public resetGenerateFivetranPk() {
    this._generateFivetranPk = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get generateFivetranPkInput() {
    return this._generateFivetranPk;
  }

  // group_id - computed: false, optional: true, required: false
  private _groupId?: string; 
  public get groupId() {
    return this.getStringAttribute('group_id');
  }
  public set groupId(value: string) {
    this._groupId = value;
  }
  public resetGroupId() {
    this._groupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupIdInput() {
    return this._groupId;
  }

  // group_name - computed: true, optional: true, required: false
  private _groupName?: string; 
  public get groupName() {
    return this.getStringAttribute('group_name');
  }
  public set groupName(value: string) {
    this._groupName = value;
  }
  public resetGroupName() {
    this._groupName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupNameInput() {
    return this._groupName;
  }

  // hana_backup_password - computed: false, optional: true, required: false
  private _hanaBackupPassword?: string; 
  public get hanaBackupPassword() {
    return this.getStringAttribute('hana_backup_password');
  }
  public set hanaBackupPassword(value: string) {
    this._hanaBackupPassword = value;
  }
  public resetHanaBackupPassword() {
    this._hanaBackupPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hanaBackupPasswordInput() {
    return this._hanaBackupPassword;
  }

  // hana_mode - computed: true, optional: true, required: false
  private _hanaMode?: string; 
  public get hanaMode() {
    return this.getStringAttribute('hana_mode');
  }
  public set hanaMode(value: string) {
    this._hanaMode = value;
  }
  public resetHanaMode() {
    this._hanaMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hanaModeInput() {
    return this._hanaMode;
  }

  // has_manage_permissions - computed: true, optional: true, required: false
  private _hasManagePermissions?: boolean | cdktf.IResolvable; 
  public get hasManagePermissions() {
    return this.getBooleanAttribute('has_manage_permissions');
  }
  public set hasManagePermissions(value: boolean | cdktf.IResolvable) {
    this._hasManagePermissions = value;
  }
  public resetHasManagePermissions() {
    this._hasManagePermissions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hasManagePermissionsInput() {
    return this._hasManagePermissions;
  }

  // historic_sync_time_frame - computed: true, optional: true, required: false
  private _historicSyncTimeFrame?: string; 
  public get historicSyncTimeFrame() {
    return this.getStringAttribute('historic_sync_time_frame');
  }
  public set historicSyncTimeFrame(value: string) {
    this._historicSyncTimeFrame = value;
  }
  public resetHistoricSyncTimeFrame() {
    this._historicSyncTimeFrame = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get historicSyncTimeFrameInput() {
    return this._historicSyncTimeFrame;
  }

  // historical_sync_limit - computed: true, optional: true, required: false
  private _historicalSyncLimit?: string; 
  public get historicalSyncLimit() {
    return this.getStringAttribute('historical_sync_limit');
  }
  public set historicalSyncLimit(value: string) {
    this._historicalSyncLimit = value;
  }
  public resetHistoricalSyncLimit() {
    this._historicalSyncLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get historicalSyncLimitInput() {
    return this._historicalSyncLimit;
  }

  // historical_sync_limit_date - computed: false, optional: true, required: false
  private _historicalSyncLimitDate?: string; 
  public get historicalSyncLimitDate() {
    return this.getStringAttribute('historical_sync_limit_date');
  }
  public set historicalSyncLimitDate(value: string) {
    this._historicalSyncLimitDate = value;
  }
  public resetHistoricalSyncLimitDate() {
    this._historicalSyncLimitDate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get historicalSyncLimitDateInput() {
    return this._historicalSyncLimitDate;
  }

  // historical_sync_limit_time_frame - computed: true, optional: true, required: false
  private _historicalSyncLimitTimeFrame?: string; 
  public get historicalSyncLimitTimeFrame() {
    return this.getStringAttribute('historical_sync_limit_time_frame');
  }
  public set historicalSyncLimitTimeFrame(value: string) {
    this._historicalSyncLimitTimeFrame = value;
  }
  public resetHistoricalSyncLimitTimeFrame() {
    this._historicalSyncLimitTimeFrame = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get historicalSyncLimitTimeFrameInput() {
    return this._historicalSyncLimitTimeFrame;
  }

  // historical_sync_time_frame - computed: true, optional: true, required: false
  private _historicalSyncTimeFrame?: string; 
  public get historicalSyncTimeFrame() {
    return this.getStringAttribute('historical_sync_time_frame');
  }
  public set historicalSyncTimeFrame(value: string) {
    this._historicalSyncTimeFrame = value;
  }
  public resetHistoricalSyncTimeFrame() {
    this._historicalSyncTimeFrame = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get historicalSyncTimeFrameInput() {
    return this._historicalSyncTimeFrame;
  }

  // home_folder - computed: true, optional: true, required: false
  private _homeFolder?: string; 
  public get homeFolder() {
    return this.getStringAttribute('home_folder');
  }
  public set homeFolder(value: string) {
    this._homeFolder = value;
  }
  public resetHomeFolder() {
    this._homeFolder = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get homeFolderInput() {
    return this._homeFolder;
  }

  // host - computed: true, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // host_ip - computed: false, optional: true, required: false
  private _hostIp?: string; 
  public get hostIp() {
    return this.getStringAttribute('host_ip');
  }
  public set hostIp(value: string) {
    this._hostIp = value;
  }
  public resetHostIp() {
    this._hostIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostIpInput() {
    return this._hostIp;
  }

  // host_name - computed: false, optional: true, required: false
  private _hostName?: string; 
  public get hostName() {
    return this.getStringAttribute('host_name');
  }
  public set hostName(value: string) {
    this._hostName = value;
  }
  public resetHostName() {
    this._hostName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostNameInput() {
    return this._hostName;
  }

  // host_url - computed: false, optional: true, required: false
  private _hostUrl?: string; 
  public get hostUrl() {
    return this.getStringAttribute('host_url');
  }
  public set hostUrl(value: string) {
    this._hostUrl = value;
  }
  public resetHostUrl() {
    this._hostUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostUrlInput() {
    return this._hostUrl;
  }

  // host_user - computed: false, optional: true, required: false
  private _hostUser?: string; 
  public get hostUser() {
    return this.getStringAttribute('host_user');
  }
  public set hostUser(value: string) {
    this._hostUser = value;
  }
  public resetHostUser() {
    this._hostUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostUserInput() {
    return this._hostUser;
  }

  // hostname - computed: false, optional: true, required: false
  private _hostname?: string; 
  public get hostname() {
    return this.getStringAttribute('hostname');
  }
  public set hostname(value: string) {
    this._hostname = value;
  }
  public resetHostname() {
    this._hostname = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnameInput() {
    return this._hostname;
  }

  // hosts - computed: false, optional: true, required: false
  private _hosts?: string[]; 
  public get hosts() {
    return cdktf.Fn.tolist(this.getListAttribute('hosts'));
  }
  public set hosts(value: string[]) {
    this._hosts = value;
  }
  public resetHosts() {
    this._hosts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostsInput() {
    return this._hosts;
  }

  // http_path - computed: false, optional: true, required: false
  private _httpPath?: string; 
  public get httpPath() {
    return this.getStringAttribute('http_path');
  }
  public set httpPath(value: string) {
    this._httpPath = value;
  }
  public resetHttpPath() {
    this._httpPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpPathInput() {
    return this._httpPath;
  }

  // identifier - computed: false, optional: true, required: false
  private _identifier?: string; 
  public get identifier() {
    return this.getStringAttribute('identifier');
  }
  public set identifier(value: string) {
    this._identifier = value;
  }
  public resetIdentifier() {
    this._identifier = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get identifierInput() {
    return this._identifier;
  }

  // identity - computed: true, optional: true, required: false
  private _identity?: string; 
  public get identity() {
    return this.getStringAttribute('identity');
  }
  public set identity(value: string) {
    this._identity = value;
  }
  public resetIdentity() {
    this._identity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get identityInput() {
    return this._identity;
  }

  // include_inherited_columns - computed: true, optional: true, required: false
  private _includeInheritedColumns?: boolean | cdktf.IResolvable; 
  public get includeInheritedColumns() {
    return this.getBooleanAttribute('include_inherited_columns');
  }
  public set includeInheritedColumns(value: boolean | cdktf.IResolvable) {
    this._includeInheritedColumns = value;
  }
  public resetIncludeInheritedColumns() {
    this._includeInheritedColumns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeInheritedColumnsInput() {
    return this._includeInheritedColumns;
  }

  // include_ocapi_endpoints - computed: true, optional: true, required: false
  private _includeOcapiEndpoints?: boolean | cdktf.IResolvable; 
  public get includeOcapiEndpoints() {
    return this.getBooleanAttribute('include_ocapi_endpoints');
  }
  public set includeOcapiEndpoints(value: boolean | cdktf.IResolvable) {
    this._includeOcapiEndpoints = value;
  }
  public resetIncludeOcapiEndpoints() {
    this._includeOcapiEndpoints = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeOcapiEndpointsInput() {
    return this._includeOcapiEndpoints;
  }

  // instance - computed: true, optional: true, required: false
  private _instance?: string; 
  public get instance() {
    return this.getStringAttribute('instance');
  }
  public set instance(value: string) {
    this._instance = value;
  }
  public resetInstance() {
    this._instance = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get instanceInput() {
    return this._instance;
  }

  // instance_code - computed: false, optional: true, required: false
  private _instanceCode?: string; 
  public get instanceCode() {
    return this.getStringAttribute('instance_code');
  }
  public set instanceCode(value: string) {
    this._instanceCode = value;
  }
  public resetInstanceCode() {
    this._instanceCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get instanceCodeInput() {
    return this._instanceCode;
  }

  // instance_number - computed: false, optional: true, required: false
  private _instanceNumber?: string; 
  public get instanceNumber() {
    return this.getStringAttribute('instance_number');
  }
  public set instanceNumber(value: string) {
    this._instanceNumber = value;
  }
  public resetInstanceNumber() {
    this._instanceNumber = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get instanceNumberInput() {
    return this._instanceNumber;
  }

  // instance_url - computed: false, optional: true, required: false
  private _instanceUrl?: string; 
  public get instanceUrl() {
    return this.getStringAttribute('instance_url');
  }
  public set instanceUrl(value: string) {
    this._instanceUrl = value;
  }
  public resetInstanceUrl() {
    this._instanceUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get instanceUrlInput() {
    return this._instanceUrl;
  }

  // integration_key - computed: true, optional: true, required: false
  private _integrationKey?: string; 
  public get integrationKey() {
    return this.getStringAttribute('integration_key');
  }
  public set integrationKey(value: string) {
    this._integrationKey = value;
  }
  public resetIntegrationKey() {
    this._integrationKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get integrationKeyInput() {
    return this._integrationKey;
  }

  // ip_address - computed: false, optional: true, required: false
  private _ipAddress?: string; 
  public get ipAddress() {
    return this.getStringAttribute('ip_address');
  }
  public set ipAddress(value: string) {
    this._ipAddress = value;
  }
  public resetIpAddress() {
    this._ipAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipAddressInput() {
    return this._ipAddress;
  }

  // is_account_level_connector - computed: true, optional: true, required: false
  private _isAccountLevelConnector?: boolean | cdktf.IResolvable; 
  public get isAccountLevelConnector() {
    return this.getBooleanAttribute('is_account_level_connector');
  }
  public set isAccountLevelConnector(value: boolean | cdktf.IResolvable) {
    this._isAccountLevelConnector = value;
  }
  public resetIsAccountLevelConnector() {
    this._isAccountLevelConnector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isAccountLevelConnectorInput() {
    return this._isAccountLevelConnector;
  }

  // is_auth2_enabled - computed: true, optional: true, required: false
  private _isAuth2Enabled?: boolean | cdktf.IResolvable; 
  public get isAuth2Enabled() {
    return this.getBooleanAttribute('is_auth2_enabled');
  }
  public set isAuth2Enabled(value: boolean | cdktf.IResolvable) {
    this._isAuth2Enabled = value;
  }
  public resetIsAuth2Enabled() {
    this._isAuth2Enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isAuth2EnabledInput() {
    return this._isAuth2Enabled;
  }

  // is_custom_api_credentials - computed: true, optional: true, required: false
  private _isCustomApiCredentials?: boolean | cdktf.IResolvable; 
  public get isCustomApiCredentials() {
    return this.getBooleanAttribute('is_custom_api_credentials');
  }
  public set isCustomApiCredentials(value: boolean | cdktf.IResolvable) {
    this._isCustomApiCredentials = value;
  }
  public resetIsCustomApiCredentials() {
    this._isCustomApiCredentials = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isCustomApiCredentialsInput() {
    return this._isCustomApiCredentials;
  }

  // is_external_activities_endpoint_selected - computed: true, optional: true, required: false
  private _isExternalActivitiesEndpointSelected?: boolean | cdktf.IResolvable; 
  public get isExternalActivitiesEndpointSelected() {
    return this.getBooleanAttribute('is_external_activities_endpoint_selected');
  }
  public set isExternalActivitiesEndpointSelected(value: boolean | cdktf.IResolvable) {
    this._isExternalActivitiesEndpointSelected = value;
  }
  public resetIsExternalActivitiesEndpointSelected() {
    this._isExternalActivitiesEndpointSelected = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isExternalActivitiesEndpointSelectedInput() {
    return this._isExternalActivitiesEndpointSelected;
  }

  // is_ftps - computed: true, optional: true, required: false
  private _isFtps?: boolean | cdktf.IResolvable; 
  public get isFtps() {
    return this.getBooleanAttribute('is_ftps');
  }
  public set isFtps(value: boolean | cdktf.IResolvable) {
    this._isFtps = value;
  }
  public resetIsFtps() {
    this._isFtps = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isFtpsInput() {
    return this._isFtps;
  }

  // is_keypair - computed: true, optional: true, required: false
  private _isKeypair?: boolean | cdktf.IResolvable; 
  public get isKeypair() {
    return this.getBooleanAttribute('is_keypair');
  }
  public set isKeypair(value: boolean | cdktf.IResolvable) {
    this._isKeypair = value;
  }
  public resetIsKeypair() {
    this._isKeypair = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isKeypairInput() {
    return this._isKeypair;
  }

  // is_multi_entity_feature_enabled - computed: true, optional: true, required: false
  private _isMultiEntityFeatureEnabled?: boolean | cdktf.IResolvable; 
  public get isMultiEntityFeatureEnabled() {
    return this.getBooleanAttribute('is_multi_entity_feature_enabled');
  }
  public set isMultiEntityFeatureEnabled(value: boolean | cdktf.IResolvable) {
    this._isMultiEntityFeatureEnabled = value;
  }
  public resetIsMultiEntityFeatureEnabled() {
    this._isMultiEntityFeatureEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isMultiEntityFeatureEnabledInput() {
    return this._isMultiEntityFeatureEnabled;
  }

  // is_new_package - computed: true, optional: true, required: false
  private _isNewPackage?: boolean | cdktf.IResolvable; 
  public get isNewPackage() {
    return this.getBooleanAttribute('is_new_package');
  }
  public set isNewPackage(value: boolean | cdktf.IResolvable) {
    this._isNewPackage = value;
  }
  public resetIsNewPackage() {
    this._isNewPackage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isNewPackageInput() {
    return this._isNewPackage;
  }

  // is_private_key_encrypted - computed: true, optional: true, required: false
  private _isPrivateKeyEncrypted?: boolean | cdktf.IResolvable; 
  public get isPrivateKeyEncrypted() {
    return this.getBooleanAttribute('is_private_key_encrypted');
  }
  public set isPrivateKeyEncrypted(value: boolean | cdktf.IResolvable) {
    this._isPrivateKeyEncrypted = value;
  }
  public resetIsPrivateKeyEncrypted() {
    this._isPrivateKeyEncrypted = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isPrivateKeyEncryptedInput() {
    return this._isPrivateKeyEncrypted;
  }

  // is_private_link_required - computed: true, optional: true, required: false
  private _isPrivateLinkRequired?: boolean | cdktf.IResolvable; 
  public get isPrivateLinkRequired() {
    return this.getBooleanAttribute('is_private_link_required');
  }
  public set isPrivateLinkRequired(value: boolean | cdktf.IResolvable) {
    this._isPrivateLinkRequired = value;
  }
  public resetIsPrivateLinkRequired() {
    this._isPrivateLinkRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isPrivateLinkRequiredInput() {
    return this._isPrivateLinkRequired;
  }

  // is_public - computed: true, optional: true, required: false
  private _isPublic?: boolean | cdktf.IResolvable; 
  public get isPublic() {
    return this.getBooleanAttribute('is_public');
  }
  public set isPublic(value: boolean | cdktf.IResolvable) {
    this._isPublic = value;
  }
  public resetIsPublic() {
    this._isPublic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isPublicInput() {
    return this._isPublic;
  }

  // is_sailthru_connect_enabled - computed: true, optional: true, required: false
  private _isSailthruConnectEnabled?: boolean | cdktf.IResolvable; 
  public get isSailthruConnectEnabled() {
    return this.getBooleanAttribute('is_sailthru_connect_enabled');
  }
  public set isSailthruConnectEnabled(value: boolean | cdktf.IResolvable) {
    this._isSailthruConnectEnabled = value;
  }
  public resetIsSailthruConnectEnabled() {
    this._isSailthruConnectEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isSailthruConnectEnabledInput() {
    return this._isSailthruConnectEnabled;
  }

  // is_secure - computed: true, optional: true, required: false
  private _isSecure?: boolean | cdktf.IResolvable; 
  public get isSecure() {
    return this.getBooleanAttribute('is_secure');
  }
  public set isSecure(value: boolean | cdktf.IResolvable) {
    this._isSecure = value;
  }
  public resetIsSecure() {
    this._isSecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isSecureInput() {
    return this._isSecure;
  }

  // is_sftp_creds_available - computed: true, optional: true, required: false
  private _isSftpCredsAvailable?: boolean | cdktf.IResolvable; 
  public get isSftpCredsAvailable() {
    return this.getBooleanAttribute('is_sftp_creds_available');
  }
  public set isSftpCredsAvailable(value: boolean | cdktf.IResolvable) {
    this._isSftpCredsAvailable = value;
  }
  public resetIsSftpCredsAvailable() {
    this._isSftpCredsAvailable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isSftpCredsAvailableInput() {
    return this._isSftpCredsAvailable;
  }

  // is_single_table_mode - computed: true, optional: true, required: false
  private _isSingleTableMode?: boolean | cdktf.IResolvable; 
  public get isSingleTableMode() {
    return this.getBooleanAttribute('is_single_table_mode');
  }
  public set isSingleTableMode(value: boolean | cdktf.IResolvable) {
    this._isSingleTableMode = value;
  }
  public resetIsSingleTableMode() {
    this._isSingleTableMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isSingleTableModeInput() {
    return this._isSingleTableMode;
  }

  // is_test_account - computed: true, optional: true, required: false
  private _isTestAccount?: boolean | cdktf.IResolvable; 
  public get isTestAccount() {
    return this.getBooleanAttribute('is_test_account');
  }
  public set isTestAccount(value: boolean | cdktf.IResolvable) {
    this._isTestAccount = value;
  }
  public resetIsTestAccount() {
    this._isTestAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isTestAccountInput() {
    return this._isTestAccount;
  }

  // is_vendor - computed: true, optional: true, required: false
  private _isVendor?: boolean | cdktf.IResolvable; 
  public get isVendor() {
    return this.getBooleanAttribute('is_vendor');
  }
  public set isVendor(value: boolean | cdktf.IResolvable) {
    this._isVendor = value;
  }
  public resetIsVendor() {
    this._isVendor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isVendorInput() {
    return this._isVendor;
  }

  // issuer - computed: false, optional: true, required: false
  private _issuer?: string; 
  public get issuer() {
    return this.getStringAttribute('issuer');
  }
  public set issuer(value: string) {
    this._issuer = value;
  }
  public resetIssuer() {
    this._issuer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get issuerInput() {
    return this._issuer;
  }

  // issuer_id - computed: false, optional: true, required: false
  private _issuerId?: string; 
  public get issuerId() {
    return this.getStringAttribute('issuer_id');
  }
  public set issuerId(value: string) {
    this._issuerId = value;
  }
  public resetIssuerId() {
    this._issuerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get issuerIdInput() {
    return this._issuerId;
  }

  // json_delivery_mode - computed: false, optional: true, required: false
  private _jsonDeliveryMode?: string; 
  public get jsonDeliveryMode() {
    return this.getStringAttribute('json_delivery_mode');
  }
  public set jsonDeliveryMode(value: string) {
    this._jsonDeliveryMode = value;
  }
  public resetJsonDeliveryMode() {
    this._jsonDeliveryMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonDeliveryModeInput() {
    return this._jsonDeliveryMode;
  }

  // key - computed: true, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // key_id - computed: false, optional: true, required: false
  private _keyId?: string; 
  public get keyId() {
    return this.getStringAttribute('key_id');
  }
  public set keyId(value: string) {
    this._keyId = value;
  }
  public resetKeyId() {
    this._keyId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyIdInput() {
    return this._keyId;
  }

  // key_password - computed: false, optional: true, required: false
  private _keyPassword?: string; 
  public get keyPassword() {
    return this.getStringAttribute('key_password');
  }
  public set keyPassword(value: string) {
    this._keyPassword = value;
  }
  public resetKeyPassword() {
    this._keyPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyPasswordInput() {
    return this._keyPassword;
  }

  // key_store_type - computed: false, optional: true, required: false
  private _keyStoreType?: string; 
  public get keyStoreType() {
    return this.getStringAttribute('key_store_type');
  }
  public set keyStoreType(value: string) {
    this._keyStoreType = value;
  }
  public resetKeyStoreType() {
    this._keyStoreType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyStoreTypeInput() {
    return this._keyStoreType;
  }

  // keystore - computed: false, optional: true, required: false
  private _keystore?: string; 
  public get keystore() {
    return this.getStringAttribute('keystore');
  }
  public set keystore(value: string) {
    this._keystore = value;
  }
  public resetKeystore() {
    this._keystore = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoreInput() {
    return this._keystore;
  }

  // keystore_password - computed: false, optional: true, required: false
  private _keystorePassword?: string; 
  public get keystorePassword() {
    return this.getStringAttribute('keystore_password');
  }
  public set keystorePassword(value: string) {
    this._keystorePassword = value;
  }
  public resetKeystorePassword() {
    this._keystorePassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystorePasswordInput() {
    return this._keystorePassword;
  }

  // last_synced_changes__utc_ - computed: true, optional: false, required: false
  public get lastSyncedChangesUtc() {
    return this.getStringAttribute('last_synced_changes__utc_');
  }

  // latest_version - computed: true, optional: false, required: false
  public get latestVersion() {
    return this.getStringAttribute('latest_version');
  }

  // legal_entity_id - computed: false, optional: true, required: false
  private _legalEntityId?: string; 
  public get legalEntityId() {
    return this.getStringAttribute('legal_entity_id');
  }
  public set legalEntityId(value: string) {
    this._legalEntityId = value;
  }
  public resetLegalEntityId() {
    this._legalEntityId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get legalEntityIdInput() {
    return this._legalEntityId;
  }

  // limit_for_api_calls_to_external_activities_endpoint - computed: true, optional: true, required: false
  private _limitForApiCallsToExternalActivitiesEndpoint?: number; 
  public get limitForApiCallsToExternalActivitiesEndpoint() {
    return this.getNumberAttribute('limit_for_api_calls_to_external_activities_endpoint');
  }
  public set limitForApiCallsToExternalActivitiesEndpoint(value: number) {
    this._limitForApiCallsToExternalActivitiesEndpoint = value;
  }
  public resetLimitForApiCallsToExternalActivitiesEndpoint() {
    this._limitForApiCallsToExternalActivitiesEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitForApiCallsToExternalActivitiesEndpointInput() {
    return this._limitForApiCallsToExternalActivitiesEndpoint;
  }

  // line_separator - computed: false, optional: true, required: false
  private _lineSeparator?: string; 
  public get lineSeparator() {
    return this.getStringAttribute('line_separator');
  }
  public set lineSeparator(value: string) {
    this._lineSeparator = value;
  }
  public resetLineSeparator() {
    this._lineSeparator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lineSeparatorInput() {
    return this._lineSeparator;
  }

  // list_id - computed: false, optional: true, required: false
  private _listId?: string; 
  public get listId() {
    return this.getStringAttribute('list_id');
  }
  public set listId(value: string) {
    this._listId = value;
  }
  public resetListId() {
    this._listId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get listIdInput() {
    return this._listId;
  }

  // list_of_company_ids - computed: false, optional: true, required: false
  private _listOfCompanyIds?: string; 
  public get listOfCompanyIds() {
    return this.getStringAttribute('list_of_company_ids');
  }
  public set listOfCompanyIds(value: string) {
    this._listOfCompanyIds = value;
  }
  public resetListOfCompanyIds() {
    this._listOfCompanyIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get listOfCompanyIdsInput() {
    return this._listOfCompanyIds;
  }

  // list_strategy - computed: true, optional: true, required: false
  private _listStrategy?: string; 
  public get listStrategy() {
    return this.getStringAttribute('list_strategy');
  }
  public set listStrategy(value: string) {
    this._listStrategy = value;
  }
  public resetListStrategy() {
    this._listStrategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get listStrategyInput() {
    return this._listStrategy;
  }

  // list_sync_mode - computed: false, optional: true, required: false
  private _listSyncMode?: string; 
  public get listSyncMode() {
    return this.getStringAttribute('list_sync_mode');
  }
  public set listSyncMode(value: string) {
    this._listSyncMode = value;
  }
  public resetListSyncMode() {
    this._listSyncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get listSyncModeInput() {
    return this._listSyncMode;
  }

  // log_journal - computed: false, optional: true, required: false
  private _logJournal?: string; 
  public get logJournal() {
    return this.getStringAttribute('log_journal');
  }
  public set logJournal(value: string) {
    this._logJournal = value;
  }
  public resetLogJournal() {
    this._logJournal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logJournalInput() {
    return this._logJournal;
  }

  // log_journal_schema - computed: false, optional: true, required: false
  private _logJournalSchema?: string; 
  public get logJournalSchema() {
    return this.getStringAttribute('log_journal_schema');
  }
  public set logJournalSchema(value: string) {
    this._logJournalSchema = value;
  }
  public resetLogJournalSchema() {
    this._logJournalSchema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logJournalSchemaInput() {
    return this._logJournalSchema;
  }

  // log_on_group - computed: false, optional: true, required: false
  private _logOnGroup?: string; 
  public get logOnGroup() {
    return this.getStringAttribute('log_on_group');
  }
  public set logOnGroup(value: string) {
    this._logOnGroup = value;
  }
  public resetLogOnGroup() {
    this._logOnGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logOnGroupInput() {
    return this._logOnGroup;
  }

  // login - computed: false, optional: true, required: false
  private _login?: string; 
  public get login() {
    return this.getStringAttribute('login');
  }
  public set login(value: string) {
    this._login = value;
  }
  public resetLogin() {
    this._login = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loginInput() {
    return this._login;
  }

  // login_password - computed: true, optional: true, required: false
  private _loginPassword?: string; 
  public get loginPassword() {
    return this.getStringAttribute('login_password');
  }
  public set loginPassword(value: string) {
    this._loginPassword = value;
  }
  public resetLoginPassword() {
    this._loginPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loginPasswordInput() {
    return this._loginPassword;
  }

  // look_back_window_for_gl_batch_endpoint - computed: true, optional: true, required: false
  private _lookBackWindowForGlBatchEndpoint?: number; 
  public get lookBackWindowForGlBatchEndpoint() {
    return this.getNumberAttribute('look_back_window_for_gl_batch_endpoint');
  }
  public set lookBackWindowForGlBatchEndpoint(value: number) {
    this._lookBackWindowForGlBatchEndpoint = value;
  }
  public resetLookBackWindowForGlBatchEndpoint() {
    this._lookBackWindowForGlBatchEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lookBackWindowForGlBatchEndpointInput() {
    return this._lookBackWindowForGlBatchEndpoint;
  }

  // manager_accounts - computed: false, optional: true, required: false
  private _managerAccounts?: string[]; 
  public get managerAccounts() {
    return cdktf.Fn.tolist(this.getListAttribute('manager_accounts'));
  }
  public set managerAccounts(value: string[]) {
    this._managerAccounts = value;
  }
  public resetManagerAccounts() {
    this._managerAccounts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get managerAccountsInput() {
    return this._managerAccounts;
  }

  // max_api_requests_per_day - computed: true, optional: true, required: false
  private _maxApiRequestsPerDay?: number; 
  public get maxApiRequestsPerDay() {
    return this.getNumberAttribute('max_api_requests_per_day');
  }
  public set maxApiRequestsPerDay(value: number) {
    this._maxApiRequestsPerDay = value;
  }
  public resetMaxApiRequestsPerDay() {
    this._maxApiRequestsPerDay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxApiRequestsPerDayInput() {
    return this._maxApiRequestsPerDay;
  }

  // merchant_id - computed: true, optional: true, required: false
  private _merchantId?: string; 
  public get merchantId() {
    return this.getStringAttribute('merchant_id');
  }
  public set merchantId(value: string) {
    this._merchantId = value;
  }
  public resetMerchantId() {
    this._merchantId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get merchantIdInput() {
    return this._merchantId;
  }

  // message_type - computed: true, optional: true, required: false
  private _messageType?: string; 
  public get messageType() {
    return this.getStringAttribute('message_type');
  }
  public set messageType(value: string) {
    this._messageType = value;
  }
  public resetMessageType() {
    this._messageType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageTypeInput() {
    return this._messageType;
  }

  // metric_id - computed: false, optional: true, required: false
  private _metricId?: string; 
  public get metricId() {
    return this.getStringAttribute('metric_id');
  }
  public set metricId(value: string) {
    this._metricId = value;
  }
  public resetMetricId() {
    this._metricId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricIdInput() {
    return this._metricId;
  }

  // metrics - computed: false, optional: true, required: false
  private _metrics?: string[]; 
  public get metrics() {
    return cdktf.Fn.tolist(this.getListAttribute('metrics'));
  }
  public set metrics(value: string[]) {
    this._metrics = value;
  }
  public resetMetrics() {
    this._metrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricsInput() {
    return this._metrics;
  }

  // named_range - computed: true, optional: true, required: false
  private _namedRange?: string; 
  public get namedRange() {
    return this.getStringAttribute('named_range');
  }
  public set namedRange(value: string) {
    this._namedRange = value;
  }
  public resetNamedRange() {
    this._namedRange = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namedRangeInput() {
    return this._namedRange;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // network_code - computed: true, optional: true, required: false
  private _networkCode?: number; 
  public get networkCode() {
    return this.getNumberAttribute('network_code');
  }
  public set networkCode(value: number) {
    this._networkCode = value;
  }
  public resetNetworkCode() {
    this._networkCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkCodeInput() {
    return this._networkCode;
  }

  // non_standard_escape_char - computed: true, optional: true, required: false
  private _nonStandardEscapeChar?: boolean | cdktf.IResolvable; 
  public get nonStandardEscapeChar() {
    return this.getBooleanAttribute('non_standard_escape_char');
  }
  public set nonStandardEscapeChar(value: boolean | cdktf.IResolvable) {
    this._nonStandardEscapeChar = value;
  }
  public resetNonStandardEscapeChar() {
    this._nonStandardEscapeChar = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nonStandardEscapeCharInput() {
    return this._nonStandardEscapeChar;
  }

  // null_sequence - computed: true, optional: true, required: false
  private _nullSequence?: string; 
  public get nullSequence() {
    return this.getStringAttribute('null_sequence');
  }
  public set nullSequence(value: string) {
    this._nullSequence = value;
  }
  public resetNullSequence() {
    this._nullSequence = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nullSequenceInput() {
    return this._nullSequence;
  }

  // oauth_token - computed: true, optional: true, required: false
  private _oauthToken?: string; 
  public get oauthToken() {
    return this.getStringAttribute('oauth_token');
  }
  public set oauthToken(value: string) {
    this._oauthToken = value;
  }
  public resetOauthToken() {
    this._oauthToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauthTokenInput() {
    return this._oauthToken;
  }

  // oauth_token_secret - computed: true, optional: true, required: false
  private _oauthTokenSecret?: string; 
  public get oauthTokenSecret() {
    return this.getStringAttribute('oauth_token_secret');
  }
  public set oauthTokenSecret(value: string) {
    this._oauthTokenSecret = value;
  }
  public resetOauthTokenSecret() {
    this._oauthTokenSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauthTokenSecretInput() {
    return this._oauthTokenSecret;
  }

  // ocapi_client_id - computed: false, optional: true, required: false
  private _ocapiClientId?: string; 
  public get ocapiClientId() {
    return this.getStringAttribute('ocapi_client_id');
  }
  public set ocapiClientId(value: string) {
    this._ocapiClientId = value;
  }
  public resetOcapiClientId() {
    this._ocapiClientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ocapiClientIdInput() {
    return this._ocapiClientId;
  }

  // ocapi_client_secret - computed: false, optional: true, required: false
  private _ocapiClientSecret?: string; 
  public get ocapiClientSecret() {
    return this.getStringAttribute('ocapi_client_secret');
  }
  public set ocapiClientSecret(value: string) {
    this._ocapiClientSecret = value;
  }
  public resetOcapiClientSecret() {
    this._ocapiClientSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ocapiClientSecretInput() {
    return this._ocapiClientSecret;
  }

  // ocapi_custom_object_types - computed: false, optional: true, required: false
  private _ocapiCustomObjectTypes?: string; 
  public get ocapiCustomObjectTypes() {
    return this.getStringAttribute('ocapi_custom_object_types');
  }
  public set ocapiCustomObjectTypes(value: string) {
    this._ocapiCustomObjectTypes = value;
  }
  public resetOcapiCustomObjectTypes() {
    this._ocapiCustomObjectTypes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ocapiCustomObjectTypesInput() {
    return this._ocapiCustomObjectTypes;
  }

  // ocapi_hostname - computed: false, optional: true, required: false
  private _ocapiHostname?: string; 
  public get ocapiHostname() {
    return this.getStringAttribute('ocapi_hostname');
  }
  public set ocapiHostname(value: string) {
    this._ocapiHostname = value;
  }
  public resetOcapiHostname() {
    this._ocapiHostname = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ocapiHostnameInput() {
    return this._ocapiHostname;
  }

  // odbc_driver_manager_library_path - computed: false, optional: true, required: false
  private _odbcDriverManagerLibraryPath?: string; 
  public get odbcDriverManagerLibraryPath() {
    return this.getStringAttribute('odbc_driver_manager_library_path');
  }
  public set odbcDriverManagerLibraryPath(value: string) {
    this._odbcDriverManagerLibraryPath = value;
  }
  public resetOdbcDriverManagerLibraryPath() {
    this._odbcDriverManagerLibraryPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get odbcDriverManagerLibraryPathInput() {
    return this._odbcDriverManagerLibraryPath;
  }

  // odbc_sys_ini_path - computed: false, optional: true, required: false
  private _odbcSysIniPath?: string; 
  public get odbcSysIniPath() {
    return this.getStringAttribute('odbc_sys_ini_path');
  }
  public set odbcSysIniPath(value: string) {
    this._odbcSysIniPath = value;
  }
  public resetOdbcSysIniPath() {
    this._odbcSysIniPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get odbcSysIniPathInput() {
    return this._odbcSysIniPath;
  }

  // on_error - computed: true, optional: true, required: false
  private _onError?: string; 
  public get onError() {
    return this.getStringAttribute('on_error');
  }
  public set onError(value: string) {
    this._onError = value;
  }
  public resetOnError() {
    this._onError = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get onErrorInput() {
    return this._onError;
  }

  // on_premise - computed: true, optional: true, required: false
  private _onPremise?: boolean | cdktf.IResolvable; 
  public get onPremise() {
    return this.getBooleanAttribute('on_premise');
  }
  public set onPremise(value: boolean | cdktf.IResolvable) {
    this._onPremise = value;
  }
  public resetOnPremise() {
    this._onPremise = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get onPremiseInput() {
    return this._onPremise;
  }

  // organization - computed: true, optional: true, required: false
  private _organization?: string; 
  public get organization() {
    return this.getStringAttribute('organization');
  }
  public set organization(value: string) {
    this._organization = value;
  }
  public resetOrganization() {
    this._organization = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get organizationInput() {
    return this._organization;
  }

  // organization_domain - computed: false, optional: true, required: false
  private _organizationDomain?: string; 
  public get organizationDomain() {
    return this.getStringAttribute('organization_domain');
  }
  public set organizationDomain(value: string) {
    this._organizationDomain = value;
  }
  public resetOrganizationDomain() {
    this._organizationDomain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get organizationDomainInput() {
    return this._organizationDomain;
  }

  // organization_id - computed: true, optional: true, required: false
  private _organizationId?: string; 
  public get organizationId() {
    return this.getStringAttribute('organization_id');
  }
  public set organizationId(value: string) {
    this._organizationId = value;
  }
  public resetOrganizationId() {
    this._organizationId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get organizationIdInput() {
    return this._organizationId;
  }

  // organization_name - computed: false, optional: true, required: false
  private _organizationName?: string; 
  public get organizationName() {
    return this.getStringAttribute('organization_name');
  }
  public set organizationName(value: string) {
    this._organizationName = value;
  }
  public resetOrganizationName() {
    this._organizationName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get organizationNameInput() {
    return this._organizationName;
  }

  // organizations - computed: false, optional: true, required: false
  private _organizations?: string[]; 
  public get organizations() {
    return cdktf.Fn.tolist(this.getListAttribute('organizations'));
  }
  public set organizations(value: string[]) {
    this._organizations = value;
  }
  public resetOrganizations() {
    this._organizations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get organizationsInput() {
    return this._organizations;
  }

  // packed_mode_tables - computed: false, optional: true, required: false
  private _packedModeTables?: string[]; 
  public get packedModeTables() {
    return cdktf.Fn.tolist(this.getListAttribute('packed_mode_tables'));
  }
  public set packedModeTables(value: string[]) {
    this._packedModeTables = value;
  }
  public resetPackedModeTables() {
    this._packedModeTables = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get packedModeTablesInput() {
    return this._packedModeTables;
  }

  // packing_mode - computed: false, optional: true, required: false
  private _packingMode?: string; 
  public get packingMode() {
    return this.getStringAttribute('packing_mode');
  }
  public set packingMode(value: string) {
    this._packingMode = value;
  }
  public resetPackingMode() {
    this._packingMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get packingModeInput() {
    return this._packingMode;
  }

  // pages - computed: false, optional: true, required: false
  private _pages?: string[]; 
  public get pages() {
    return cdktf.Fn.tolist(this.getListAttribute('pages'));
  }
  public set pages(value: string[]) {
    this._pages = value;
  }
  public resetPages() {
    this._pages = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pagesInput() {
    return this._pages;
  }

  // partner_code - computed: false, optional: true, required: false
  private _partnerCode?: string; 
  public get partnerCode() {
    return this.getStringAttribute('partner_code');
  }
  public set partnerCode(value: string) {
    this._partnerCode = value;
  }
  public resetPartnerCode() {
    this._partnerCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partnerCodeInput() {
    return this._partnerCode;
  }

  // partner_user_id - computed: false, optional: true, required: false
  private _partnerUserId?: string; 
  public get partnerUserId() {
    return this.getStringAttribute('partner_user_id');
  }
  public set partnerUserId(value: string) {
    this._partnerUserId = value;
  }
  public resetPartnerUserId() {
    this._partnerUserId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partnerUserIdInput() {
    return this._partnerUserId;
  }

  // partner_user_secret - computed: false, optional: true, required: false
  private _partnerUserSecret?: string; 
  public get partnerUserSecret() {
    return this.getStringAttribute('partner_user_secret');
  }
  public set partnerUserSecret(value: string) {
    this._partnerUserSecret = value;
  }
  public resetPartnerUserSecret() {
    this._partnerUserSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partnerUserSecretInput() {
    return this._partnerUserSecret;
  }

  // partners - computed: false, optional: true, required: false
  private _partners?: string[]; 
  public get partners() {
    return cdktf.Fn.tolist(this.getListAttribute('partners'));
  }
  public set partners(value: string[]) {
    this._partners = value;
  }
  public resetPartners() {
    this._partners = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partnersInput() {
    return this._partners;
  }

  // pass_phrase - computed: false, optional: true, required: false
  private _passPhrase?: string; 
  public get passPhrase() {
    return this.getStringAttribute('pass_phrase');
  }
  public set passPhrase(value: string) {
    this._passPhrase = value;
  }
  public resetPassPhrase() {
    this._passPhrase = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passPhraseInput() {
    return this._passPhrase;
  }

  // passphrase - computed: true, optional: true, required: false
  private _passphrase?: string; 
  public get passphrase() {
    return this.getStringAttribute('passphrase');
  }
  public set passphrase(value: string) {
    this._passphrase = value;
  }
  public resetPassphrase() {
    this._passphrase = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passphraseInput() {
    return this._passphrase;
  }

  // password - computed: true, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // pat - computed: true, optional: true, required: false
  private _pat?: string; 
  public get pat() {
    return this.getStringAttribute('pat');
  }
  public set pat(value: string) {
    this._pat = value;
  }
  public resetPat() {
    this._pat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patInput() {
    return this._pat;
  }

  // pat_name - computed: false, optional: true, required: false
  private _patName?: string; 
  public get patName() {
    return this.getStringAttribute('pat_name');
  }
  public set patName(value: string) {
    this._patName = value;
  }
  public resetPatName() {
    this._patName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patNameInput() {
    return this._patName;
  }

  // pat_secret - computed: false, optional: true, required: false
  private _patSecret?: string; 
  public get patSecret() {
    return this.getStringAttribute('pat_secret');
  }
  public set patSecret(value: string) {
    this._patSecret = value;
  }
  public resetPatSecret() {
    this._patSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patSecretInput() {
    return this._patSecret;
  }

  // path - computed: true, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // pats - computed: false, optional: true, required: false
  private _pats?: string[]; 
  public get pats() {
    return cdktf.Fn.tolist(this.getListAttribute('pats'));
  }
  public set pats(value: string[]) {
    this._pats = value;
  }
  public resetPats() {
    this._pats = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patsInput() {
    return this._pats;
  }

  // pattern - computed: true, optional: true, required: false
  private _pattern?: string; 
  public get pattern() {
    return this.getStringAttribute('pattern');
  }
  public set pattern(value: string) {
    this._pattern = value;
  }
  public resetPattern() {
    this._pattern = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternInput() {
    return this._pattern;
  }

  // pdb_name - computed: true, optional: true, required: false
  private _pdbName?: string; 
  public get pdbName() {
    return this.getStringAttribute('pdb_name');
  }
  public set pdbName(value: string) {
    this._pdbName = value;
  }
  public resetPdbName() {
    this._pdbName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pdbNameInput() {
    return this._pdbName;
  }

  // pem_certificate - computed: true, optional: true, required: false
  private _pemCertificate?: string; 
  public get pemCertificate() {
    return this.getStringAttribute('pem_certificate');
  }
  public set pemCertificate(value: string) {
    this._pemCertificate = value;
  }
  public resetPemCertificate() {
    this._pemCertificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pemCertificateInput() {
    return this._pemCertificate;
  }

  // pem_private_key - computed: false, optional: true, required: false
  private _pemPrivateKey?: string; 
  public get pemPrivateKey() {
    return this.getStringAttribute('pem_private_key');
  }
  public set pemPrivateKey(value: string) {
    this._pemPrivateKey = value;
  }
  public resetPemPrivateKey() {
    this._pemPrivateKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pemPrivateKeyInput() {
    return this._pemPrivateKey;
  }

  // per_interaction_dimensions - computed: false, optional: true, required: false
  private _perInteractionDimensions?: string[]; 
  public get perInteractionDimensions() {
    return cdktf.Fn.tolist(this.getListAttribute('per_interaction_dimensions'));
  }
  public set perInteractionDimensions(value: string[]) {
    this._perInteractionDimensions = value;
  }
  public resetPerInteractionDimensions() {
    this._perInteractionDimensions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get perInteractionDimensionsInput() {
    return this._perInteractionDimensions;
  }

  // personal_access_token - computed: false, optional: true, required: false
  private _personalAccessToken?: string; 
  public get personalAccessToken() {
    return this.getStringAttribute('personal_access_token');
  }
  public set personalAccessToken(value: string) {
    this._personalAccessToken = value;
  }
  public resetPersonalAccessToken() {
    this._personalAccessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get personalAccessTokenInput() {
    return this._personalAccessToken;
  }

  // personal_api_token - computed: false, optional: true, required: false
  private _personalApiToken?: string; 
  public get personalApiToken() {
    return this.getStringAttribute('personal_api_token');
  }
  public set personalApiToken(value: string) {
    this._personalApiToken = value;
  }
  public resetPersonalApiToken() {
    this._personalApiToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get personalApiTokenInput() {
    return this._personalApiToken;
  }

  // pgp_pass_phrase - computed: false, optional: true, required: false
  private _pgpPassPhrase?: string; 
  public get pgpPassPhrase() {
    return this.getStringAttribute('pgp_pass_phrase');
  }
  public set pgpPassPhrase(value: string) {
    this._pgpPassPhrase = value;
  }
  public resetPgpPassPhrase() {
    this._pgpPassPhrase = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pgpPassPhraseInput() {
    return this._pgpPassPhrase;
  }

  // pgp_secret_key - computed: false, optional: true, required: false
  private _pgpSecretKey?: string; 
  public get pgpSecretKey() {
    return this.getStringAttribute('pgp_secret_key');
  }
  public set pgpSecretKey(value: string) {
    this._pgpSecretKey = value;
  }
  public resetPgpSecretKey() {
    this._pgpSecretKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pgpSecretKeyInput() {
    return this._pgpSecretKey;
  }

  // phone_number - computed: false, optional: true, required: false
  private _phoneNumber?: string; 
  public get phoneNumber() {
    return this.getStringAttribute('phone_number');
  }
  public set phoneNumber(value: string) {
    this._phoneNumber = value;
  }
  public resetPhoneNumber() {
    this._phoneNumber = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get phoneNumberInput() {
    return this._phoneNumber;
  }

  // plan - computed: true, optional: true, required: false
  private _plan?: string; 
  public get plan() {
    return this.getStringAttribute('plan');
  }
  public set plan(value: string) {
    this._plan = value;
  }
  public resetPlan() {
    this._plan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get planInput() {
    return this._plan;
  }

  // plan_type - computed: true, optional: true, required: false
  private _planType?: string; 
  public get planType() {
    return this.getStringAttribute('plan_type');
  }
  public set planType(value: string) {
    this._planType = value;
  }
  public resetPlanType() {
    this._planType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get planTypeInput() {
    return this._planType;
  }

  // port - computed: true, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // post_click_attribution_window_size - computed: true, optional: true, required: false
  private _postClickAttributionWindowSize?: string; 
  public get postClickAttributionWindowSize() {
    return this.getStringAttribute('post_click_attribution_window_size');
  }
  public set postClickAttributionWindowSize(value: string) {
    this._postClickAttributionWindowSize = value;
  }
  public resetPostClickAttributionWindowSize() {
    this._postClickAttributionWindowSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get postClickAttributionWindowSizeInput() {
    return this._postClickAttributionWindowSize;
  }

  // prebuilt_report - computed: true, optional: true, required: false
  private _prebuiltReport?: string; 
  public get prebuiltReport() {
    return this.getStringAttribute('prebuilt_report');
  }
  public set prebuiltReport(value: string) {
    this._prebuiltReport = value;
  }
  public resetPrebuiltReport() {
    this._prebuiltReport = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prebuiltReportInput() {
    return this._prebuiltReport;
  }

  // prefix - computed: true, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }

  // primary_key - computed: false, optional: true, required: false
  private _primaryKey?: string; 
  public get primaryKey() {
    return this.getStringAttribute('primary_key');
  }
  public set primaryKey(value: string) {
    this._primaryKey = value;
  }
  public resetPrimaryKey() {
    this._primaryKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get primaryKeyInput() {
    return this._primaryKey;
  }

  // primary_keys - computed: false, optional: true, required: false
  private _primaryKeys?: string[]; 
  public get primaryKeys() {
    return cdktf.Fn.tolist(this.getListAttribute('primary_keys'));
  }
  public set primaryKeys(value: string[]) {
    this._primaryKeys = value;
  }
  public resetPrimaryKeys() {
    this._primaryKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get primaryKeysInput() {
    return this._primaryKeys;
  }

  // prioritise_bulk_export_over_rest - computed: true, optional: true, required: false
  private _prioritiseBulkExportOverRest?: boolean | cdktf.IResolvable; 
  public get prioritiseBulkExportOverRest() {
    return this.getBooleanAttribute('prioritise_bulk_export_over_rest');
  }
  public set prioritiseBulkExportOverRest(value: boolean | cdktf.IResolvable) {
    this._prioritiseBulkExportOverRest = value;
  }
  public resetPrioritiseBulkExportOverRest() {
    this._prioritiseBulkExportOverRest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prioritiseBulkExportOverRestInput() {
    return this._prioritiseBulkExportOverRest;
  }

  // private_access_token - computed: false, optional: true, required: false
  private _privateAccessToken?: string; 
  public get privateAccessToken() {
    return this.getStringAttribute('private_access_token');
  }
  public set privateAccessToken(value: string) {
    this._privateAccessToken = value;
  }
  public resetPrivateAccessToken() {
    this._privateAccessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privateAccessTokenInput() {
    return this._privateAccessToken;
  }

  // private_key - computed: true, optional: true, required: false
  private _privateKey?: string; 
  public get privateKey() {
    return this.getStringAttribute('private_key');
  }
  public set privateKey(value: string) {
    this._privateKey = value;
  }
  public resetPrivateKey() {
    this._privateKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privateKeyInput() {
    return this._privateKey;
  }

  // private_token - computed: false, optional: true, required: false
  private _privateToken?: string; 
  public get privateToken() {
    return this.getStringAttribute('private_token');
  }
  public set privateToken(value: string) {
    this._privateToken = value;
  }
  public resetPrivateToken() {
    this._privateToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privateTokenInput() {
    return this._privateToken;
  }

  // product - computed: true, optional: true, required: false
  private _product?: string; 
  public get product() {
    return this.getStringAttribute('product');
  }
  public set product(value: string) {
    this._product = value;
  }
  public resetProduct() {
    this._product = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get productInput() {
    return this._product;
  }

  // profiles - computed: false, optional: true, required: false
  private _profiles?: string[]; 
  public get profiles() {
    return cdktf.Fn.tolist(this.getListAttribute('profiles'));
  }
  public set profiles(value: string[]) {
    this._profiles = value;
  }
  public resetProfiles() {
    this._profiles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profilesInput() {
    return this._profiles;
  }

  // profiles_amazon_dsp - computed: false, optional: true, required: false
  private _profilesAmazonDsp?: string; 
  public get profilesAmazonDsp() {
    return this.getStringAttribute('profiles_amazon_dsp');
  }
  public set profilesAmazonDsp(value: string) {
    this._profilesAmazonDsp = value;
  }
  public resetProfilesAmazonDsp() {
    this._profilesAmazonDsp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profilesAmazonDspInput() {
    return this._profilesAmazonDsp;
  }

  // project_access_token - computed: false, optional: true, required: false
  private _projectAccessToken?: string; 
  public get projectAccessToken() {
    return this.getStringAttribute('project_access_token');
  }
  public set projectAccessToken(value: string) {
    this._projectAccessToken = value;
  }
  public resetProjectAccessToken() {
    this._projectAccessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectAccessTokenInput() {
    return this._projectAccessToken;
  }

  // project_id - computed: true, optional: true, required: false
  private _projectId?: string; 
  public get projectId() {
    return this.getStringAttribute('project_id');
  }
  public set projectId(value: string) {
    this._projectId = value;
  }
  public resetProjectId() {
    this._projectId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectIdInput() {
    return this._projectId;
  }

  // project_ids - computed: false, optional: true, required: false
  private _projectIds?: string; 
  public get projectIds() {
    return this.getStringAttribute('project_ids');
  }
  public set projectIds(value: string) {
    this._projectIds = value;
  }
  public resetProjectIds() {
    this._projectIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectIdsInput() {
    return this._projectIds;
  }

  // project_key - computed: false, optional: true, required: false
  private _projectKey?: string; 
  public get projectKey() {
    return this.getStringAttribute('project_key');
  }
  public set projectKey(value: string) {
    this._projectKey = value;
  }
  public resetProjectKey() {
    this._projectKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectKeyInput() {
    return this._projectKey;
  }

  // projects - computed: false, optional: true, required: false
  private _projects?: string[]; 
  public get projects() {
    return cdktf.Fn.tolist(this.getListAttribute('projects'));
  }
  public set projects(value: string[]) {
    this._projects = value;
  }
  public resetProjects() {
    this._projects = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectsInput() {
    return this._projects;
  }

  // properties - computed: false, optional: true, required: false
  private _properties?: string[]; 
  public get properties() {
    return cdktf.Fn.tolist(this.getListAttribute('properties'));
  }
  public set properties(value: string[]) {
    this._properties = value;
  }
  public resetProperties() {
    this._properties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get propertiesInput() {
    return this._properties;
  }

  // property_id - computed: false, optional: true, required: false
  private _propertyId?: string; 
  public get propertyId() {
    return this.getStringAttribute('property_id');
  }
  public set propertyId(value: string) {
    this._propertyId = value;
  }
  public resetPropertyId() {
    this._propertyId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get propertyIdInput() {
    return this._propertyId;
  }

  // public_key - computed: true, optional: true, required: false
  private _publicKey?: string; 
  public get publicKey() {
    return this.getStringAttribute('public_key');
  }
  public set publicKey(value: string) {
    this._publicKey = value;
  }
  public resetPublicKey() {
    this._publicKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get publicKeyInput() {
    return this._publicKey;
  }

  // publication_name - computed: true, optional: true, required: false
  private _publicationName?: string; 
  public get publicationName() {
    return this.getStringAttribute('publication_name');
  }
  public set publicationName(value: string) {
    this._publicationName = value;
  }
  public resetPublicationName() {
    this._publicationName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get publicationNameInput() {
    return this._publicationName;
  }

  // publisher_id - computed: false, optional: true, required: false
  private _publisherId?: string; 
  public get publisherId() {
    return this.getStringAttribute('publisher_id');
  }
  public set publisherId(value: string) {
    this._publisherId = value;
  }
  public resetPublisherId() {
    this._publisherId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get publisherIdInput() {
    return this._publisherId;
  }

  // pull_archived_campaigns - computed: true, optional: true, required: false
  private _pullArchivedCampaigns?: boolean | cdktf.IResolvable; 
  public get pullArchivedCampaigns() {
    return this.getBooleanAttribute('pull_archived_campaigns');
  }
  public set pullArchivedCampaigns(value: boolean | cdktf.IResolvable) {
    this._pullArchivedCampaigns = value;
  }
  public resetPullArchivedCampaigns() {
    this._pullArchivedCampaigns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pullArchivedCampaignsInput() {
    return this._pullArchivedCampaigns;
  }

  // python_version - computed: false, optional: true, required: false
  private _pythonVersion?: string; 
  public get pythonVersion() {
    return this.getStringAttribute('python_version');
  }
  public set pythonVersion(value: string) {
    this._pythonVersion = value;
  }
  public resetPythonVersion() {
    this._pythonVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pythonVersionInput() {
    return this._pythonVersion;
  }

  // query_id - computed: true, optional: true, required: false
  private _queryId?: string; 
  public get queryId() {
    return this.getStringAttribute('query_id');
  }
  public set queryId(value: string) {
    this._queryId = value;
  }
  public resetQueryId() {
    this._queryId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryIdInput() {
    return this._queryId;
  }

  // query_param_value - computed: false, optional: true, required: false
  private _queryParamValue?: string; 
  public get queryParamValue() {
    return this.getStringAttribute('query_param_value');
  }
  public set queryParamValue(value: string) {
    this._queryParamValue = value;
  }
  public resetQueryParamValue() {
    this._queryParamValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryParamValueInput() {
    return this._queryParamValue;
  }

  // quota_project_id - computed: false, optional: true, required: false
  private _quotaProjectId?: string; 
  public get quotaProjectId() {
    return this.getStringAttribute('quota_project_id');
  }
  public set quotaProjectId(value: string) {
    this._quotaProjectId = value;
  }
  public resetQuotaProjectId() {
    this._quotaProjectId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get quotaProjectIdInput() {
    return this._quotaProjectId;
  }

  // quote_char - computed: false, optional: true, required: false
  private _quoteChar?: string; 
  public get quoteChar() {
    return this.getStringAttribute('quote_char');
  }
  public set quoteChar(value: string) {
    this._quoteChar = value;
  }
  public resetQuoteChar() {
    this._quoteChar = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get quoteCharInput() {
    return this._quoteChar;
  }

  // quote_character_enabled - computed: true, optional: true, required: false
  private _quoteCharacterEnabled?: boolean | cdktf.IResolvable; 
  public get quoteCharacterEnabled() {
    return this.getBooleanAttribute('quote_character_enabled');
  }
  public set quoteCharacterEnabled(value: boolean | cdktf.IResolvable) {
    this._quoteCharacterEnabled = value;
  }
  public resetQuoteCharacterEnabled() {
    this._quoteCharacterEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get quoteCharacterEnabledInput() {
    return this._quoteCharacterEnabled;
  }

  // rate_limit_plan - computed: true, optional: true, required: false
  private _rateLimitPlan?: string; 
  public get rateLimitPlan() {
    return this.getStringAttribute('rate_limit_plan');
  }
  public set rateLimitPlan(value: string) {
    this._rateLimitPlan = value;
  }
  public resetRateLimitPlan() {
    this._rateLimitPlan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rateLimitPlanInput() {
    return this._rateLimitPlan;
  }

  // refresh_token - computed: false, optional: true, required: false
  private _refreshToken?: string; 
  public get refreshToken() {
    return this.getStringAttribute('refresh_token');
  }
  public set refreshToken(value: string) {
    this._refreshToken = value;
  }
  public resetRefreshToken() {
    this._refreshToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get refreshTokenInput() {
    return this._refreshToken;
  }

  // refresh_token_expires_at - computed: false, optional: true, required: false
  private _refreshTokenExpiresAt?: string; 
  public get refreshTokenExpiresAt() {
    return this.getStringAttribute('refresh_token_expires_at');
  }
  public set refreshTokenExpiresAt(value: string) {
    this._refreshTokenExpiresAt = value;
  }
  public resetRefreshTokenExpiresAt() {
    this._refreshTokenExpiresAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get refreshTokenExpiresAtInput() {
    return this._refreshTokenExpiresAt;
  }

  // region - computed: true, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // region_api_url - computed: true, optional: true, required: false
  private _regionApiUrl?: string; 
  public get regionApiUrl() {
    return this.getStringAttribute('region_api_url');
  }
  public set regionApiUrl(value: string) {
    this._regionApiUrl = value;
  }
  public resetRegionApiUrl() {
    this._regionApiUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionApiUrlInput() {
    return this._regionApiUrl;
  }

  // region_auth_url - computed: true, optional: true, required: false
  private _regionAuthUrl?: string; 
  public get regionAuthUrl() {
    return this.getStringAttribute('region_auth_url');
  }
  public set regionAuthUrl(value: string) {
    this._regionAuthUrl = value;
  }
  public resetRegionAuthUrl() {
    this._regionAuthUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionAuthUrlInput() {
    return this._regionAuthUrl;
  }

  // region_token_url - computed: true, optional: true, required: false
  private _regionTokenUrl?: string; 
  public get regionTokenUrl() {
    return this.getStringAttribute('region_token_url');
  }
  public set regionTokenUrl(value: string) {
    this._regionTokenUrl = value;
  }
  public resetRegionTokenUrl() {
    this._regionTokenUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionTokenUrlInput() {
    return this._regionTokenUrl;
  }

  // region_url - computed: false, optional: true, required: false
  private _regionUrl?: string; 
  public get regionUrl() {
    return this.getStringAttribute('region_url');
  }
  public set regionUrl(value: string) {
    this._regionUrl = value;
  }
  public resetRegionUrl() {
    this._regionUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionUrlInput() {
    return this._regionUrl;
  }

  // replica_id - computed: true, optional: true, required: false
  private _replicaId?: number; 
  public get replicaId() {
    return this.getNumberAttribute('replica_id');
  }
  public set replicaId(value: number) {
    this._replicaId = value;
  }
  public resetReplicaId() {
    this._replicaId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replicaIdInput() {
    return this._replicaId;
  }

  // replication_slot - computed: true, optional: true, required: false
  private _replicationSlot?: string; 
  public get replicationSlot() {
    return this.getStringAttribute('replication_slot');
  }
  public set replicationSlot(value: string) {
    this._replicationSlot = value;
  }
  public resetReplicationSlot() {
    this._replicationSlot = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replicationSlotInput() {
    return this._replicationSlot;
  }

  // report_configuration_ids - computed: false, optional: true, required: false
  private _reportConfigurationIds?: string[]; 
  public get reportConfigurationIds() {
    return cdktf.Fn.tolist(this.getListAttribute('report_configuration_ids'));
  }
  public set reportConfigurationIds(value: string[]) {
    this._reportConfigurationIds = value;
  }
  public resetReportConfigurationIds() {
    this._reportConfigurationIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportConfigurationIdsInput() {
    return this._reportConfigurationIds;
  }

  // report_format_type - computed: false, optional: true, required: false
  private _reportFormatType?: string; 
  public get reportFormatType() {
    return this.getStringAttribute('report_format_type');
  }
  public set reportFormatType(value: string) {
    this._reportFormatType = value;
  }
  public resetReportFormatType() {
    this._reportFormatType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportFormatTypeInput() {
    return this._reportFormatType;
  }

  // report_granularity - computed: true, optional: true, required: false
  private _reportGranularity?: string; 
  public get reportGranularity() {
    return this.getStringAttribute('report_granularity');
  }
  public set reportGranularity(value: string) {
    this._reportGranularity = value;
  }
  public resetReportGranularity() {
    this._reportGranularity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportGranularityInput() {
    return this._reportGranularity;
  }

  // report_keys - computed: false, optional: true, required: false
  private _reportKeys?: string; 
  public get reportKeys() {
    return this.getStringAttribute('report_keys');
  }
  public set reportKeys(value: string) {
    this._reportKeys = value;
  }
  public resetReportKeys() {
    this._reportKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportKeysInput() {
    return this._reportKeys;
  }

  // report_service_api_key - computed: false, optional: true, required: false
  private _reportServiceApiKey?: string; 
  public get reportServiceApiKey() {
    return this.getStringAttribute('report_service_api_key');
  }
  public set reportServiceApiKey(value: string) {
    this._reportServiceApiKey = value;
  }
  public resetReportServiceApiKey() {
    this._reportServiceApiKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportServiceApiKeyInput() {
    return this._reportServiceApiKey;
  }

  // report_suites - computed: false, optional: true, required: false
  private _reportSuites?: string[]; 
  public get reportSuites() {
    return cdktf.Fn.tolist(this.getListAttribute('report_suites'));
  }
  public set reportSuites(value: string[]) {
    this._reportSuites = value;
  }
  public resetReportSuites() {
    this._reportSuites = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportSuitesInput() {
    return this._reportSuites;
  }

  // report_timezone - computed: false, optional: true, required: false
  private _reportTimezone?: string; 
  public get reportTimezone() {
    return this.getStringAttribute('report_timezone');
  }
  public set reportTimezone(value: string) {
    this._reportTimezone = value;
  }
  public resetReportTimezone() {
    this._reportTimezone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportTimezoneInput() {
    return this._reportTimezone;
  }

  // report_type - computed: true, optional: true, required: false
  private _reportType?: string; 
  public get reportType() {
    return this.getStringAttribute('report_type');
  }
  public set reportType(value: string) {
    this._reportType = value;
  }
  public resetReportType() {
    this._reportType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportTypeInput() {
    return this._reportType;
  }

  // report_url - computed: true, optional: true, required: false
  private _reportUrl?: string; 
  public get reportUrl() {
    return this.getStringAttribute('report_url');
  }
  public set reportUrl(value: string) {
    this._reportUrl = value;
  }
  public resetReportUrl() {
    this._reportUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportUrlInput() {
    return this._reportUrl;
  }

  // reports_linkedin_ads - computed: false, optional: true, required: false
  private _reportsLinkedinAds?: string[]; 
  public get reportsLinkedinAds() {
    return cdktf.Fn.tolist(this.getListAttribute('reports_linkedin_ads'));
  }
  public set reportsLinkedinAds(value: string[]) {
    this._reportsLinkedinAds = value;
  }
  public resetReportsLinkedinAds() {
    this._reportsLinkedinAds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportsLinkedinAdsInput() {
    return this._reportsLinkedinAds;
  }

  // repositories - computed: false, optional: true, required: false
  private _repositories?: string[]; 
  public get repositories() {
    return cdktf.Fn.tolist(this.getListAttribute('repositories'));
  }
  public set repositories(value: string[]) {
    this._repositories = value;
  }
  public resetRepositories() {
    this._repositories = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get repositoriesInput() {
    return this._repositories;
  }

  // resource_token - computed: false, optional: true, required: false
  private _resourceToken?: string; 
  public get resourceToken() {
    return this.getStringAttribute('resource_token');
  }
  public set resourceToken(value: string) {
    this._resourceToken = value;
  }
  public resetResourceToken() {
    this._resourceToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceTokenInput() {
    return this._resourceToken;
  }

  // resource_url - computed: true, optional: true, required: false
  private _resourceUrl?: string; 
  public get resourceUrl() {
    return this.getStringAttribute('resource_url');
  }
  public set resourceUrl(value: string) {
    this._resourceUrl = value;
  }
  public resetResourceUrl() {
    this._resourceUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceUrlInput() {
    return this._resourceUrl;
  }

  // rest_api_limit - computed: true, optional: true, required: false
  private _restApiLimit?: number; 
  public get restApiLimit() {
    return this.getNumberAttribute('rest_api_limit');
  }
  public set restApiLimit(value: number) {
    this._restApiLimit = value;
  }
  public resetRestApiLimit() {
    this._restApiLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get restApiLimitInput() {
    return this._restApiLimit;
  }

  // rfc_library_path - computed: false, optional: true, required: false
  private _rfcLibraryPath?: string; 
  public get rfcLibraryPath() {
    return this.getStringAttribute('rfc_library_path');
  }
  public set rfcLibraryPath(value: string) {
    this._rfcLibraryPath = value;
  }
  public resetRfcLibraryPath() {
    this._rfcLibraryPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rfcLibraryPathInput() {
    return this._rfcLibraryPath;
  }

  // role - computed: true, optional: true, required: false
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  public resetRole() {
    this._role = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // role_arn - computed: true, optional: true, required: false
  private _roleArn?: string; 
  public get roleArn() {
    return this.getStringAttribute('role_arn');
  }
  public set roleArn(value: string) {
    this._roleArn = value;
  }
  public resetRoleArn() {
    this._roleArn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get roleArnInput() {
    return this._roleArn;
  }

  // rollback_window - computed: true, optional: true, required: false
  private _rollbackWindow?: number; 
  public get rollbackWindow() {
    return this.getNumberAttribute('rollback_window');
  }
  public set rollbackWindow(value: number) {
    this._rollbackWindow = value;
  }
  public resetRollbackWindow() {
    this._rollbackWindow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rollbackWindowInput() {
    return this._rollbackWindow;
  }

  // rollback_window_size - computed: true, optional: true, required: false
  private _rollbackWindowSize?: number; 
  public get rollbackWindowSize() {
    return this.getNumberAttribute('rollback_window_size');
  }
  public set rollbackWindowSize(value: number) {
    this._rollbackWindowSize = value;
  }
  public resetRollbackWindowSize() {
    this._rollbackWindowSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rollbackWindowSizeInput() {
    return this._rollbackWindowSize;
  }

  // root_resource_id - computed: false, optional: true, required: false
  private _rootResourceId?: string; 
  public get rootResourceId() {
    return this.getStringAttribute('root_resource_id');
  }
  public set rootResourceId(value: string) {
    this._rootResourceId = value;
  }
  public resetRootResourceId() {
    this._rootResourceId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rootResourceIdInput() {
    return this._rootResourceId;
  }

  // s3_export_bucket - computed: false, optional: true, required: false
  private _s3ExportBucket?: string; 
  public get s3ExportBucket() {
    return this.getStringAttribute('s3_export_bucket');
  }
  public set s3ExportBucket(value: string) {
    this._s3ExportBucket = value;
  }
  public resetS3ExportBucket() {
    this._s3ExportBucket = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get s3ExportBucketInput() {
    return this._s3ExportBucket;
  }

  // s3_export_external_id - computed: false, optional: true, required: false
  private _s3ExportExternalId?: string; 
  public get s3ExportExternalId() {
    return this.getStringAttribute('s3_export_external_id');
  }
  public set s3ExportExternalId(value: string) {
    this._s3ExportExternalId = value;
  }
  public resetS3ExportExternalId() {
    this._s3ExportExternalId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get s3ExportExternalIdInput() {
    return this._s3ExportExternalId;
  }

  // s3_export_folder - computed: false, optional: true, required: false
  private _s3ExportFolder?: string; 
  public get s3ExportFolder() {
    return this.getStringAttribute('s3_export_folder');
  }
  public set s3ExportFolder(value: string) {
    this._s3ExportFolder = value;
  }
  public resetS3ExportFolder() {
    this._s3ExportFolder = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get s3ExportFolderInput() {
    return this._s3ExportFolder;
  }

  // s3_export_role_arn - computed: false, optional: true, required: false
  private _s3ExportRoleArn?: string; 
  public get s3ExportRoleArn() {
    return this.getStringAttribute('s3_export_role_arn');
  }
  public set s3ExportRoleArn(value: string) {
    this._s3ExportRoleArn = value;
  }
  public resetS3ExportRoleArn() {
    this._s3ExportRoleArn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get s3ExportRoleArnInput() {
    return this._s3ExportRoleArn;
  }

  // s3bucket - computed: true, optional: true, required: false
  private _s3Bucket?: string; 
  public get s3Bucket() {
    return this.getStringAttribute('s3bucket');
  }
  public set s3Bucket(value: string) {
    this._s3Bucket = value;
  }
  public resetS3Bucket() {
    this._s3Bucket = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get s3BucketInput() {
    return this._s3Bucket;
  }

  // s3external_id - computed: true, optional: true, required: false
  private _s3ExternalId?: string; 
  public get s3ExternalId() {
    return this.getStringAttribute('s3external_id');
  }
  public set s3ExternalId(value: string) {
    this._s3ExternalId = value;
  }
  public resetS3ExternalId() {
    this._s3ExternalId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get s3ExternalIdInput() {
    return this._s3ExternalId;
  }

  // s3folder - computed: true, optional: true, required: false
  private _s3Folder?: string; 
  public get s3Folder() {
    return this.getStringAttribute('s3folder');
  }
  public set s3Folder(value: string) {
    this._s3Folder = value;
  }
  public resetS3Folder() {
    this._s3Folder = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get s3FolderInput() {
    return this._s3Folder;
  }

  // s3path - computed: false, optional: true, required: false
  private _s3Path?: string; 
  public get s3Path() {
    return this.getStringAttribute('s3path');
  }
  public set s3Path(value: string) {
    this._s3Path = value;
  }
  public resetS3Path() {
    this._s3Path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get s3PathInput() {
    return this._s3Path;
  }

  // s3role_arn - computed: true, optional: true, required: false
  private _s3RoleArn?: string; 
  public get s3RoleArn() {
    return this.getStringAttribute('s3role_arn');
  }
  public set s3RoleArn(value: string) {
    this._s3RoleArn = value;
  }
  public resetS3RoleArn() {
    this._s3RoleArn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get s3RoleArnInput() {
    return this._s3RoleArn;
  }

  // sales_account_sync_mode - computed: true, optional: true, required: false
  private _salesAccountSyncMode?: string; 
  public get salesAccountSyncMode() {
    return this.getStringAttribute('sales_account_sync_mode');
  }
  public set salesAccountSyncMode(value: string) {
    this._salesAccountSyncMode = value;
  }
  public resetSalesAccountSyncMode() {
    this._salesAccountSyncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get salesAccountSyncModeInput() {
    return this._salesAccountSyncMode;
  }

  // sales_accounts - computed: false, optional: true, required: false
  private _salesAccounts?: string[]; 
  public get salesAccounts() {
    return cdktf.Fn.tolist(this.getListAttribute('sales_accounts'));
  }
  public set salesAccounts(value: string[]) {
    this._salesAccounts = value;
  }
  public resetSalesAccounts() {
    this._salesAccounts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get salesAccountsInput() {
    return this._salesAccounts;
  }

  // salesforce_security_token - computed: false, optional: true, required: false
  private _salesforceSecurityToken?: string; 
  public get salesforceSecurityToken() {
    return this.getStringAttribute('salesforce_security_token');
  }
  public set salesforceSecurityToken(value: string) {
    this._salesforceSecurityToken = value;
  }
  public resetSalesforceSecurityToken() {
    this._salesforceSecurityToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get salesforceSecurityTokenInput() {
    return this._salesforceSecurityToken;
  }

  // sandbox_account - computed: false, optional: true, required: false
  private _sandboxAccount?: string; 
  public get sandboxAccount() {
    return this.getStringAttribute('sandbox_account');
  }
  public set sandboxAccount(value: string) {
    this._sandboxAccount = value;
  }
  public resetSandboxAccount() {
    this._sandboxAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sandboxAccountInput() {
    return this._sandboxAccount;
  }

  // sap_schema - computed: false, optional: true, required: false
  private _sapSchema?: string; 
  public get sapSchema() {
    return this.getStringAttribute('sap_schema');
  }
  public set sapSchema(value: string) {
    this._sapSchema = value;
  }
  public resetSapSchema() {
    this._sapSchema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sapSchemaInput() {
    return this._sapSchema;
  }

  // sap_source_schema - computed: false, optional: true, required: false
  private _sapSourceSchema?: string; 
  public get sapSourceSchema() {
    return this.getStringAttribute('sap_source_schema');
  }
  public set sapSourceSchema(value: string) {
    this._sapSourceSchema = value;
  }
  public resetSapSourceSchema() {
    this._sapSourceSchema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sapSourceSchemaInput() {
    return this._sapSourceSchema;
  }

  // sap_user - computed: true, optional: true, required: false
  private _sapUser?: string; 
  public get sapUser() {
    return this.getStringAttribute('sap_user');
  }
  public set sapUser(value: string) {
    this._sapUser = value;
  }
  public resetSapUser() {
    this._sapUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sapUserInput() {
    return this._sapUser;
  }

  // sasl_mechanism - computed: false, optional: true, required: false
  private _saslMechanism?: string; 
  public get saslMechanism() {
    return this.getStringAttribute('sasl_mechanism');
  }
  public set saslMechanism(value: string) {
    this._saslMechanism = value;
  }
  public resetSaslMechanism() {
    this._saslMechanism = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get saslMechanismInput() {
    return this._saslMechanism;
  }

  // sasl_plain_key - computed: false, optional: true, required: false
  private _saslPlainKey?: string; 
  public get saslPlainKey() {
    return this.getStringAttribute('sasl_plain_key');
  }
  public set saslPlainKey(value: string) {
    this._saslPlainKey = value;
  }
  public resetSaslPlainKey() {
    this._saslPlainKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get saslPlainKeyInput() {
    return this._saslPlainKey;
  }

  // sasl_plain_secret - computed: false, optional: true, required: false
  private _saslPlainSecret?: string; 
  public get saslPlainSecret() {
    return this.getStringAttribute('sasl_plain_secret');
  }
  public set saslPlainSecret(value: string) {
    this._saslPlainSecret = value;
  }
  public resetSaslPlainSecret() {
    this._saslPlainSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get saslPlainSecretInput() {
    return this._saslPlainSecret;
  }

  // sasl_scram256_key - computed: false, optional: true, required: false
  private _saslScram256Key?: string; 
  public get saslScram256Key() {
    return this.getStringAttribute('sasl_scram256_key');
  }
  public set saslScram256Key(value: string) {
    this._saslScram256Key = value;
  }
  public resetSaslScram256Key() {
    this._saslScram256Key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get saslScram256KeyInput() {
    return this._saslScram256Key;
  }

  // sasl_scram256_secret - computed: false, optional: true, required: false
  private _saslScram256Secret?: string; 
  public get saslScram256Secret() {
    return this.getStringAttribute('sasl_scram256_secret');
  }
  public set saslScram256Secret(value: string) {
    this._saslScram256Secret = value;
  }
  public resetSaslScram256Secret() {
    this._saslScram256Secret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get saslScram256SecretInput() {
    return this._saslScram256Secret;
  }

  // sasl_scram512_key - computed: false, optional: true, required: false
  private _saslScram512Key?: string; 
  public get saslScram512Key() {
    return this.getStringAttribute('sasl_scram512_key');
  }
  public set saslScram512Key(value: string) {
    this._saslScram512Key = value;
  }
  public resetSaslScram512Key() {
    this._saslScram512Key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get saslScram512KeyInput() {
    return this._saslScram512Key;
  }

  // sasl_scram512_secret - computed: false, optional: true, required: false
  private _saslScram512Secret?: string; 
  public get saslScram512Secret() {
    return this.getStringAttribute('sasl_scram512_secret');
  }
  public set saslScram512Secret(value: string) {
    this._saslScram512Secret = value;
  }
  public resetSaslScram512Secret() {
    this._saslScram512Secret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get saslScram512SecretInput() {
    return this._saslScram512Secret;
  }

  // schema_registry_credentials_source - computed: false, optional: true, required: false
  private _schemaRegistryCredentialsSource?: string; 
  public get schemaRegistryCredentialsSource() {
    return this.getStringAttribute('schema_registry_credentials_source');
  }
  public set schemaRegistryCredentialsSource(value: string) {
    this._schemaRegistryCredentialsSource = value;
  }
  public resetSchemaRegistryCredentialsSource() {
    this._schemaRegistryCredentialsSource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaRegistryCredentialsSourceInput() {
    return this._schemaRegistryCredentialsSource;
  }

  // schema_registry_key - computed: false, optional: true, required: false
  private _schemaRegistryKey?: string; 
  public get schemaRegistryKey() {
    return this.getStringAttribute('schema_registry_key');
  }
  public set schemaRegistryKey(value: string) {
    this._schemaRegistryKey = value;
  }
  public resetSchemaRegistryKey() {
    this._schemaRegistryKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaRegistryKeyInput() {
    return this._schemaRegistryKey;
  }

  // schema_registry_secret - computed: false, optional: true, required: false
  private _schemaRegistrySecret?: string; 
  public get schemaRegistrySecret() {
    return this.getStringAttribute('schema_registry_secret');
  }
  public set schemaRegistrySecret(value: string) {
    this._schemaRegistrySecret = value;
  }
  public resetSchemaRegistrySecret() {
    this._schemaRegistrySecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaRegistrySecretInput() {
    return this._schemaRegistrySecret;
  }

  // schema_registry_urls - computed: false, optional: true, required: false
  private _schemaRegistryUrls?: string[]; 
  public get schemaRegistryUrls() {
    return cdktf.Fn.tolist(this.getListAttribute('schema_registry_urls'));
  }
  public set schemaRegistryUrls(value: string[]) {
    this._schemaRegistryUrls = value;
  }
  public resetSchemaRegistryUrls() {
    this._schemaRegistryUrls = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaRegistryUrlsInput() {
    return this._schemaRegistryUrls;
  }

  // scope - computed: false, optional: true, required: false
  private _scope?: string; 
  public get scope() {
    return this.getStringAttribute('scope');
  }
  public set scope(value: string) {
    this._scope = value;
  }
  public resetScope() {
    this._scope = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopeInput() {
    return this._scope;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes?: string; 
  public get scopes() {
    return this.getStringAttribute('scopes');
  }
  public set scopes(value: string) {
    this._scopes = value;
  }
  public resetScopes() {
    this._scopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes;
  }

  // seats - computed: false, optional: true, required: false
  private _seats?: string[]; 
  public get seats() {
    return cdktf.Fn.tolist(this.getListAttribute('seats'));
  }
  public set seats(value: string[]) {
    this._seats = value;
  }
  public resetSeats() {
    this._seats = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seatsInput() {
    return this._seats;
  }

  // secret - computed: true, optional: true, required: false
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  public resetSecret() {
    this._secret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey?: string; 
  public get secretAccessKey() {
    return this.getStringAttribute('secret_access_key');
  }
  public set secretAccessKey(value: string) {
    this._secretAccessKey = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey;
  }

  // secret_key - computed: true, optional: true, required: false
  private _secretKey?: string; 
  public get secretKey() {
    return this.getStringAttribute('secret_key');
  }
  public set secretKey(value: string) {
    this._secretKey = value;
  }
  public resetSecretKey() {
    this._secretKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyInput() {
    return this._secretKey;
  }

  // secrets - computed: true, optional: true, required: false
  private _secrets?: string; 
  public get secrets() {
    return this.getStringAttribute('secrets');
  }
  public set secrets(value: string) {
    this._secrets = value;
  }
  public resetSecrets() {
    this._secrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretsInput() {
    return this._secrets;
  }

  // security_protocol - computed: true, optional: true, required: false
  private _securityProtocol?: string; 
  public get securityProtocol() {
    return this.getStringAttribute('security_protocol');
  }
  public set securityProtocol(value: string) {
    this._securityProtocol = value;
  }
  public resetSecurityProtocol() {
    this._securityProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get securityProtocolInput() {
    return this._securityProtocol;
  }

  // segments - computed: false, optional: true, required: false
  private _segments?: string[]; 
  public get segments() {
    return cdktf.Fn.tolist(this.getListAttribute('segments'));
  }
  public set segments(value: string[]) {
    this._segments = value;
  }
  public resetSegments() {
    this._segments = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get segmentsInput() {
    return this._segments;
  }

  // selected_event_types - computed: false, optional: true, required: false
  private _selectedEventTypes?: string[]; 
  public get selectedEventTypes() {
    return cdktf.Fn.tolist(this.getListAttribute('selected_event_types'));
  }
  public set selectedEventTypes(value: string[]) {
    this._selectedEventTypes = value;
  }
  public resetSelectedEventTypes() {
    this._selectedEventTypes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectedEventTypesInput() {
    return this._selectedEventTypes;
  }

  // selected_exports - computed: false, optional: true, required: false
  private _selectedExports?: string[]; 
  public get selectedExports() {
    return cdktf.Fn.tolist(this.getListAttribute('selected_exports'));
  }
  public set selectedExports(value: string[]) {
    this._selectedExports = value;
  }
  public resetSelectedExports() {
    this._selectedExports = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectedExportsInput() {
    return this._selectedExports;
  }

  // selected_range - computed: false, optional: true, required: false
  private _selectedRange?: string; 
  public get selectedRange() {
    return this.getStringAttribute('selected_range');
  }
  public set selectedRange(value: string) {
    this._selectedRange = value;
  }
  public resetSelectedRange() {
    this._selectedRange = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectedRangeInput() {
    return this._selectedRange;
  }

  // sender_id - computed: false, optional: true, required: false
  private _senderId?: string; 
  public get senderId() {
    return this.getStringAttribute('sender_id');
  }
  public set senderId(value: string) {
    this._senderId = value;
  }
  public resetSenderId() {
    this._senderId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get senderIdInput() {
    return this._senderId;
  }

  // sender_password - computed: false, optional: true, required: false
  private _senderPassword?: string; 
  public get senderPassword() {
    return this.getStringAttribute('sender_password');
  }
  public set senderPassword(value: string) {
    this._senderPassword = value;
  }
  public resetSenderPassword() {
    this._senderPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get senderPasswordInput() {
    return this._senderPassword;
  }

  // server - computed: true, optional: true, required: false
  private _server?: string; 
  public get server() {
    return this.getStringAttribute('server');
  }
  public set server(value: string) {
    this._server = value;
  }
  public resetServer() {
    this._server = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serverInput() {
    return this._server;
  }

  // server_address - computed: false, optional: true, required: false
  private _serverAddress?: string; 
  public get serverAddress() {
    return this.getStringAttribute('server_address');
  }
  public set serverAddress(value: string) {
    this._serverAddress = value;
  }
  public resetServerAddress() {
    this._serverAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serverAddressInput() {
    return this._serverAddress;
  }

  // server_region - computed: true, optional: true, required: false
  private _serverRegion?: string; 
  public get serverRegion() {
    return this.getStringAttribute('server_region');
  }
  public set serverRegion(value: string) {
    this._serverRegion = value;
  }
  public resetServerRegion() {
    this._serverRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serverRegionInput() {
    return this._serverRegion;
  }

  // server_url - computed: true, optional: true, required: false
  private _serverUrl?: string; 
  public get serverUrl() {
    return this.getStringAttribute('server_url');
  }
  public set serverUrl(value: string) {
    this._serverUrl = value;
  }
  public resetServerUrl() {
    this._serverUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serverUrlInput() {
    return this._serverUrl;
  }

  // server_variable - computed: false, optional: true, required: false
  private _serverVariable?: string; 
  public get serverVariable() {
    return this.getStringAttribute('server_variable');
  }
  public set serverVariable(value: string) {
    this._serverVariable = value;
  }
  public resetServerVariable() {
    this._serverVariable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serverVariableInput() {
    return this._serverVariable;
  }

  // servers - computed: false, optional: true, required: false
  private _servers?: string[]; 
  public get servers() {
    return cdktf.Fn.tolist(this.getListAttribute('servers'));
  }
  public set servers(value: string[]) {
    this._servers = value;
  }
  public resetServers() {
    this._servers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serversInput() {
    return this._servers;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_email - computed: false, optional: true, required: false
  private _serviceAccountEmail?: string; 
  public get serviceAccountEmail() {
    return this.getStringAttribute('service_account_email');
  }
  public set serviceAccountEmail(value: string) {
    this._serviceAccountEmail = value;
  }
  public resetServiceAccountEmail() {
    this._serviceAccountEmail = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountEmailInput() {
    return this._serviceAccountEmail;
  }

  // service_account_key - computed: false, optional: true, required: false
  private _serviceAccountKey?: string; 
  public get serviceAccountKey() {
    return this.getStringAttribute('service_account_key');
  }
  public set serviceAccountKey(value: string) {
    this._serviceAccountKey = value;
  }
  public resetServiceAccountKey() {
    this._serviceAccountKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountKeyInput() {
    return this._serviceAccountKey;
  }

  // service_account_secret - computed: false, optional: true, required: false
  private _serviceAccountSecret?: string; 
  public get serviceAccountSecret() {
    return this.getStringAttribute('service_account_secret');
  }
  public set serviceAccountSecret(value: string) {
    this._serviceAccountSecret = value;
  }
  public resetServiceAccountSecret() {
    this._serviceAccountSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountSecretInput() {
    return this._serviceAccountSecret;
  }

  // service_account_username - computed: false, optional: true, required: false
  private _serviceAccountUsername?: string; 
  public get serviceAccountUsername() {
    return this.getStringAttribute('service_account_username');
  }
  public set serviceAccountUsername(value: string) {
    this._serviceAccountUsername = value;
  }
  public resetServiceAccountUsername() {
    this._serviceAccountUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountUsernameInput() {
    return this._serviceAccountUsername;
  }

  // service_authentication - computed: false, optional: true, required: false
  private _serviceAuthentication?: string; 
  public get serviceAuthentication() {
    return this.getStringAttribute('service_authentication');
  }
  public set serviceAuthentication(value: string) {
    this._serviceAuthentication = value;
  }
  public resetServiceAuthentication() {
    this._serviceAuthentication = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAuthenticationInput() {
    return this._serviceAuthentication;
  }

  // service_name - computed: false, optional: true, required: false
  private _serviceName?: string; 
  public get serviceName() {
    return this.getStringAttribute('service_name');
  }
  public set serviceName(value: string) {
    this._serviceName = value;
  }
  public resetServiceName() {
    this._serviceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceNameInput() {
    return this._serviceName;
  }

  // service_version - computed: true, optional: false, required: false
  public get serviceVersion() {
    return this.getStringAttribute('service_version');
  }

  // sftp_host - computed: true, optional: true, required: false
  private _sftpHost?: string; 
  public get sftpHost() {
    return this.getStringAttribute('sftp_host');
  }
  public set sftpHost(value: string) {
    this._sftpHost = value;
  }
  public resetSftpHost() {
    this._sftpHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sftpHostInput() {
    return this._sftpHost;
  }

  // sftp_is_key_pair - computed: true, optional: true, required: false
  private _sftpIsKeyPair?: boolean | cdktf.IResolvable; 
  public get sftpIsKeyPair() {
    return this.getBooleanAttribute('sftp_is_key_pair');
  }
  public set sftpIsKeyPair(value: boolean | cdktf.IResolvable) {
    this._sftpIsKeyPair = value;
  }
  public resetSftpIsKeyPair() {
    this._sftpIsKeyPair = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sftpIsKeyPairInput() {
    return this._sftpIsKeyPair;
  }

  // sftp_password - computed: true, optional: true, required: false
  private _sftpPassword?: string; 
  public get sftpPassword() {
    return this.getStringAttribute('sftp_password');
  }
  public set sftpPassword(value: string) {
    this._sftpPassword = value;
  }
  public resetSftpPassword() {
    this._sftpPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sftpPasswordInput() {
    return this._sftpPassword;
  }

  // sftp_port - computed: true, optional: true, required: false
  private _sftpPort?: number; 
  public get sftpPort() {
    return this.getNumberAttribute('sftp_port');
  }
  public set sftpPort(value: number) {
    this._sftpPort = value;
  }
  public resetSftpPort() {
    this._sftpPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sftpPortInput() {
    return this._sftpPort;
  }

  // sftp_public_key - computed: false, optional: true, required: false
  private _sftpPublicKey?: string; 
  public get sftpPublicKey() {
    return this.getStringAttribute('sftp_public_key');
  }
  public set sftpPublicKey(value: string) {
    this._sftpPublicKey = value;
  }
  public resetSftpPublicKey() {
    this._sftpPublicKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sftpPublicKeyInput() {
    return this._sftpPublicKey;
  }

  // sftp_user - computed: true, optional: true, required: false
  private _sftpUser?: string; 
  public get sftpUser() {
    return this.getStringAttribute('sftp_user');
  }
  public set sftpUser(value: string) {
    this._sftpUser = value;
  }
  public resetSftpUser() {
    this._sftpUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sftpUserInput() {
    return this._sftpUser;
  }

  // share_url - computed: true, optional: true, required: false
  private _shareUrl?: string; 
  public get shareUrl() {
    return this.getStringAttribute('share_url');
  }
  public set shareUrl(value: string) {
    this._shareUrl = value;
  }
  public resetShareUrl() {
    this._shareUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get shareUrlInput() {
    return this._shareUrl;
  }

  // sheet_id - computed: true, optional: true, required: false
  private _sheetId?: string; 
  public get sheetId() {
    return this.getStringAttribute('sheet_id');
  }
  public set sheetId(value: string) {
    this._sheetId = value;
  }
  public resetSheetId() {
    this._sheetId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sheetIdInput() {
    return this._sheetId;
  }

  // shop - computed: true, optional: true, required: false
  private _shop?: string; 
  public get shop() {
    return this.getStringAttribute('shop');
  }
  public set shop(value: string) {
    this._shop = value;
  }
  public resetShop() {
    this._shop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get shopInput() {
    return this._shop;
  }

  // shop_domain - computed: false, optional: true, required: false
  private _shopDomain?: string; 
  public get shopDomain() {
    return this.getStringAttribute('shop_domain');
  }
  public set shopDomain(value: string) {
    this._shopDomain = value;
  }
  public resetShopDomain() {
    this._shopDomain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get shopDomainInput() {
    return this._shopDomain;
  }

  // short_code - computed: true, optional: true, required: false
  private _shortCode?: string; 
  public get shortCode() {
    return this.getStringAttribute('short_code');
  }
  public set shortCode(value: string) {
    this._shortCode = value;
  }
  public resetShortCode() {
    this._shortCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get shortCodeInput() {
    return this._shortCode;
  }

  // should_sync_events_with_deleted_profiles - computed: true, optional: true, required: false
  private _shouldSyncEventsWithDeletedProfiles?: boolean | cdktf.IResolvable; 
  public get shouldSyncEventsWithDeletedProfiles() {
    return this.getBooleanAttribute('should_sync_events_with_deleted_profiles');
  }
  public set shouldSyncEventsWithDeletedProfiles(value: boolean | cdktf.IResolvable) {
    this._shouldSyncEventsWithDeletedProfiles = value;
  }
  public resetShouldSyncEventsWithDeletedProfiles() {
    this._shouldSyncEventsWithDeletedProfiles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get shouldSyncEventsWithDeletedProfilesInput() {
    return this._shouldSyncEventsWithDeletedProfiles;
  }

  // should_sync_reimport_tables - computed: true, optional: true, required: false
  private _shouldSyncReimportTables?: boolean | cdktf.IResolvable; 
  public get shouldSyncReimportTables() {
    return this.getBooleanAttribute('should_sync_reimport_tables');
  }
  public set shouldSyncReimportTables(value: boolean | cdktf.IResolvable) {
    this._shouldSyncReimportTables = value;
  }
  public resetShouldSyncReimportTables() {
    this._shouldSyncReimportTables = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get shouldSyncReimportTablesInput() {
    return this._shouldSyncReimportTables;
  }

  // show_records_with_no_metrics - computed: true, optional: true, required: false
  private _showRecordsWithNoMetrics?: boolean | cdktf.IResolvable; 
  public get showRecordsWithNoMetrics() {
    return this.getBooleanAttribute('show_records_with_no_metrics');
  }
  public set showRecordsWithNoMetrics(value: boolean | cdktf.IResolvable) {
    this._showRecordsWithNoMetrics = value;
  }
  public resetShowRecordsWithNoMetrics() {
    this._showRecordsWithNoMetrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get showRecordsWithNoMetricsInput() {
    return this._showRecordsWithNoMetrics;
  }

  // sid - computed: true, optional: true, required: false
  private _sid?: string; 
  public get sid() {
    return this.getStringAttribute('sid');
  }
  public set sid(value: string) {
    this._sid = value;
  }
  public resetSid() {
    this._sid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sidInput() {
    return this._sid;
  }

  // signature_encoding - computed: true, optional: true, required: false
  private _signatureEncoding?: string; 
  public get signatureEncoding() {
    return this.getStringAttribute('signature_encoding');
  }
  public set signatureEncoding(value: string) {
    this._signatureEncoding = value;
  }
  public resetSignatureEncoding() {
    this._signatureEncoding = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signatureEncodingInput() {
    return this._signatureEncoding;
  }

  // signer_public_key - computed: false, optional: true, required: false
  private _signerPublicKey?: string; 
  public get signerPublicKey() {
    return this.getStringAttribute('signer_public_key');
  }
  public set signerPublicKey(value: string) {
    this._signerPublicKey = value;
  }
  public resetSignerPublicKey() {
    this._signerPublicKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signerPublicKeyInput() {
    return this._signerPublicKey;
  }

  // site_address - computed: false, optional: true, required: false
  private _siteAddress?: string; 
  public get siteAddress() {
    return this.getStringAttribute('site_address');
  }
  public set siteAddress(value: string) {
    this._siteAddress = value;
  }
  public resetSiteAddress() {
    this._siteAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get siteAddressInput() {
    return this._siteAddress;
  }

  // site_id - computed: true, optional: true, required: false
  private _siteId?: string; 
  public get siteId() {
    return this.getStringAttribute('site_id');
  }
  public set siteId(value: string) {
    this._siteId = value;
  }
  public resetSiteId() {
    this._siteId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get siteIdInput() {
    return this._siteId;
  }

  // site_name - computed: false, optional: true, required: false
  private _siteName?: string; 
  public get siteName() {
    return this.getStringAttribute('site_name');
  }
  public set siteName(value: string) {
    this._siteName = value;
  }
  public resetSiteName() {
    this._siteName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get siteNameInput() {
    return this._siteName;
  }

  // site_urls - computed: false, optional: true, required: false
  private _siteUrls?: string[]; 
  public get siteUrls() {
    return cdktf.Fn.tolist(this.getListAttribute('site_urls'));
  }
  public set siteUrls(value: string[]) {
    this._siteUrls = value;
  }
  public resetSiteUrls() {
    this._siteUrls = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get siteUrlsInput() {
    return this._siteUrls;
  }

  // skip_after - computed: true, optional: true, required: false
  private _skipAfter?: number; 
  public get skipAfter() {
    return this.getNumberAttribute('skip_after');
  }
  public set skipAfter(value: number) {
    this._skipAfter = value;
  }
  public resetSkipAfter() {
    this._skipAfter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get skipAfterInput() {
    return this._skipAfter;
  }

  // skip_before - computed: true, optional: true, required: false
  private _skipBefore?: number; 
  public get skipBefore() {
    return this.getNumberAttribute('skip_before');
  }
  public set skipBefore(value: number) {
    this._skipBefore = value;
  }
  public resetSkipBefore() {
    this._skipBefore = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get skipBeforeInput() {
    return this._skipBefore;
  }

  // skip_empty_reports - computed: true, optional: true, required: false
  private _skipEmptyReports?: boolean | cdktf.IResolvable; 
  public get skipEmptyReports() {
    return this.getBooleanAttribute('skip_empty_reports');
  }
  public set skipEmptyReports(value: boolean | cdktf.IResolvable) {
    this._skipEmptyReports = value;
  }
  public resetSkipEmptyReports() {
    this._skipEmptyReports = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get skipEmptyReportsInput() {
    return this._skipEmptyReports;
  }

  // snc_certificate - computed: false, optional: true, required: false
  private _sncCertificate?: string; 
  public get sncCertificate() {
    return this.getStringAttribute('snc_certificate');
  }
  public set sncCertificate(value: string) {
    this._sncCertificate = value;
  }
  public resetSncCertificate() {
    this._sncCertificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sncCertificateInput() {
    return this._sncCertificate;
  }

  // snc_certificate_source - computed: false, optional: true, required: false
  private _sncCertificateSource?: string; 
  public get sncCertificateSource() {
    return this.getStringAttribute('snc_certificate_source');
  }
  public set sncCertificateSource(value: string) {
    this._sncCertificateSource = value;
  }
  public resetSncCertificateSource() {
    this._sncCertificateSource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sncCertificateSourceInput() {
    return this._sncCertificateSource;
  }

  // snc_fivetran_name - computed: false, optional: true, required: false
  private _sncFivetranName?: string; 
  public get sncFivetranName() {
    return this.getStringAttribute('snc_fivetran_name');
  }
  public set sncFivetranName(value: string) {
    this._sncFivetranName = value;
  }
  public resetSncFivetranName() {
    this._sncFivetranName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sncFivetranNameInput() {
    return this._sncFivetranName;
  }

  // snc_library_path - computed: false, optional: true, required: false
  private _sncLibraryPath?: string; 
  public get sncLibraryPath() {
    return this.getStringAttribute('snc_library_path');
  }
  public set sncLibraryPath(value: string) {
    this._sncLibraryPath = value;
  }
  public resetSncLibraryPath() {
    this._sncLibraryPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sncLibraryPathInput() {
    return this._sncLibraryPath;
  }

  // snc_mode - computed: true, optional: true, required: false
  private _sncMode?: string; 
  public get sncMode() {
    return this.getStringAttribute('snc_mode');
  }
  public set sncMode(value: string) {
    this._sncMode = value;
  }
  public resetSncMode() {
    this._sncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sncModeInput() {
    return this._sncMode;
  }

  // snc_my_name - computed: false, optional: true, required: false
  private _sncMyName?: string; 
  public get sncMyName() {
    return this.getStringAttribute('snc_my_name');
  }
  public set sncMyName(value: string) {
    this._sncMyName = value;
  }
  public resetSncMyName() {
    this._sncMyName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sncMyNameInput() {
    return this._sncMyName;
  }

  // snc_name - computed: false, optional: true, required: false
  private _sncName?: string; 
  public get sncName() {
    return this.getStringAttribute('snc_name');
  }
  public set sncName(value: string) {
    this._sncName = value;
  }
  public resetSncName() {
    this._sncName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sncNameInput() {
    return this._sncName;
  }

  // snc_partner_name - computed: false, optional: true, required: false
  private _sncPartnerName?: string; 
  public get sncPartnerName() {
    return this.getStringAttribute('snc_partner_name');
  }
  public set sncPartnerName(value: string) {
    this._sncPartnerName = value;
  }
  public resetSncPartnerName() {
    this._sncPartnerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sncPartnerNameInput() {
    return this._sncPartnerName;
  }

  // snc_source_name - computed: false, optional: true, required: false
  private _sncSourceName?: string; 
  public get sncSourceName() {
    return this.getStringAttribute('snc_source_name');
  }
  public set sncSourceName(value: string) {
    this._sncSourceName = value;
  }
  public resetSncSourceName() {
    this._sncSourceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sncSourceNameInput() {
    return this._sncSourceName;
  }

  // soap_uri - computed: true, optional: true, required: false
  private _soapUri?: string; 
  public get soapUri() {
    return this.getStringAttribute('soap_uri');
  }
  public set soapUri(value: string) {
    this._soapUri = value;
  }
  public resetSoapUri() {
    this._soapUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get soapUriInput() {
    return this._soapUri;
  }

  // social_data_sync_timeframe - computed: false, optional: true, required: false
  private _socialDataSyncTimeframe?: string; 
  public get socialDataSyncTimeframe() {
    return this.getStringAttribute('social_data_sync_timeframe');
  }
  public set socialDataSyncTimeframe(value: string) {
    this._socialDataSyncTimeframe = value;
  }
  public resetSocialDataSyncTimeframe() {
    this._socialDataSyncTimeframe = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socialDataSyncTimeframeInput() {
    return this._socialDataSyncTimeframe;
  }

  // source - computed: true, optional: true, required: false
  private _source?: string; 
  public get source() {
    return this.getStringAttribute('source');
  }
  public set source(value: string) {
    this._source = value;
  }
  public resetSource() {
    this._source = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceInput() {
    return this._source;
  }

  // source_name - computed: false, optional: true, required: false
  private _sourceName?: string; 
  public get sourceName() {
    return this.getStringAttribute('source_name');
  }
  public set sourceName(value: string) {
    this._sourceName = value;
  }
  public resetSourceName() {
    this._sourceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceNameInput() {
    return this._sourceName;
  }

  // store_hash - computed: false, optional: true, required: false
  private _storeHash?: string; 
  public get storeHash() {
    return this.getStringAttribute('store_hash');
  }
  public set storeHash(value: string) {
    this._storeHash = value;
  }
  public resetStoreHash() {
    this._storeHash = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storeHashInput() {
    return this._storeHash;
  }

  // store_id - computed: false, optional: true, required: false
  private _storeId?: string; 
  public get storeId() {
    return this.getStringAttribute('store_id');
  }
  public set storeId(value: string) {
    this._storeId = value;
  }
  public resetStoreId() {
    this._storeId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storeIdInput() {
    return this._storeId;
  }

  // sub_collections - computed: false, optional: true, required: false
  private _subCollections?: string[]; 
  public get subCollections() {
    return cdktf.Fn.tolist(this.getListAttribute('sub_collections'));
  }
  public set subCollections(value: string[]) {
    this._subCollections = value;
  }
  public resetSubCollections() {
    this._subCollections = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subCollectionsInput() {
    return this._subCollections;
  }

  // sub_domain - computed: true, optional: true, required: false
  private _subDomain?: string; 
  public get subDomain() {
    return this.getStringAttribute('sub_domain');
  }
  public set subDomain(value: string) {
    this._subDomain = value;
  }
  public resetSubDomain() {
    this._subDomain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subDomainInput() {
    return this._subDomain;
  }

  // subdomain - computed: true, optional: true, required: false
  private _subdomain?: string; 
  public get subdomain() {
    return this.getStringAttribute('subdomain');
  }
  public set subdomain(value: string) {
    this._subdomain = value;
  }
  public resetSubdomain() {
    this._subdomain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subdomainInput() {
    return this._subdomain;
  }

  // subscriber_name - computed: true, optional: false, required: false
  public get subscriberName() {
    return this.getStringAttribute('subscriber_name');
  }

  // subscription - computed: false, optional: true, required: false
  private _subscription?: string; 
  public get subscription() {
    return this.getStringAttribute('subscription');
  }
  public set subscription(value: string) {
    this._subscription = value;
  }
  public resetSubscription() {
    this._subscription = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subscriptionInput() {
    return this._subscription;
  }

  // subscription_key - computed: false, optional: true, required: false
  private _subscriptionKey?: string; 
  public get subscriptionKey() {
    return this.getStringAttribute('subscription_key');
  }
  public set subscriptionKey(value: string) {
    this._subscriptionKey = value;
  }
  public resetSubscriptionKey() {
    this._subscriptionKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subscriptionKeyInput() {
    return this._subscriptionKey;
  }

  // support_connected_accounts_sync - computed: true, optional: true, required: false
  private _supportConnectedAccountsSync?: boolean | cdktf.IResolvable; 
  public get supportConnectedAccountsSync() {
    return this.getBooleanAttribute('support_connected_accounts_sync');
  }
  public set supportConnectedAccountsSync(value: boolean | cdktf.IResolvable) {
    this._supportConnectedAccountsSync = value;
  }
  public resetSupportConnectedAccountsSync() {
    this._supportConnectedAccountsSync = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get supportConnectedAccountsSyncInput() {
    return this._supportConnectedAccountsSync;
  }

  // support_nested_columns - computed: true, optional: true, required: false
  private _supportNestedColumns?: boolean | cdktf.IResolvable; 
  public get supportNestedColumns() {
    return this.getBooleanAttribute('support_nested_columns');
  }
  public set supportNestedColumns(value: boolean | cdktf.IResolvable) {
    this._supportNestedColumns = value;
  }
  public resetSupportNestedColumns() {
    this._supportNestedColumns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get supportNestedColumnsInput() {
    return this._supportNestedColumns;
  }

  // survey_ids - computed: false, optional: true, required: false
  private _surveyIds?: string; 
  public get surveyIds() {
    return this.getStringAttribute('survey_ids');
  }
  public set surveyIds(value: string) {
    this._surveyIds = value;
  }
  public resetSurveyIds() {
    this._surveyIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get surveyIdsInput() {
    return this._surveyIds;
  }

  // swipe_attribution_window - computed: true, optional: true, required: false
  private _swipeAttributionWindow?: string; 
  public get swipeAttributionWindow() {
    return this.getStringAttribute('swipe_attribution_window');
  }
  public set swipeAttributionWindow(value: string) {
    this._swipeAttributionWindow = value;
  }
  public resetSwipeAttributionWindow() {
    this._swipeAttributionWindow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get swipeAttributionWindowInput() {
    return this._swipeAttributionWindow;
  }

  // sync_data_locker - computed: true, optional: true, required: false
  private _syncDataLocker?: boolean | cdktf.IResolvable; 
  public get syncDataLocker() {
    return this.getBooleanAttribute('sync_data_locker');
  }
  public set syncDataLocker(value: boolean | cdktf.IResolvable) {
    this._syncDataLocker = value;
  }
  public resetSyncDataLocker() {
    this._syncDataLocker = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncDataLockerInput() {
    return this._syncDataLocker;
  }

  // sync_format - computed: true, optional: true, required: false
  private _syncFormat?: string; 
  public get syncFormat() {
    return this.getStringAttribute('sync_format');
  }
  public set syncFormat(value: string) {
    this._syncFormat = value;
  }
  public resetSyncFormat() {
    this._syncFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncFormatInput() {
    return this._syncFormat;
  }

  // sync_formula_fields - computed: true, optional: true, required: false
  private _syncFormulaFields?: boolean | cdktf.IResolvable; 
  public get syncFormulaFields() {
    return this.getBooleanAttribute('sync_formula_fields');
  }
  public set syncFormulaFields(value: boolean | cdktf.IResolvable) {
    this._syncFormulaFields = value;
  }
  public resetSyncFormulaFields() {
    this._syncFormulaFields = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncFormulaFieldsInput() {
    return this._syncFormulaFields;
  }

  // sync_metadata - computed: true, optional: true, required: false
  private _syncMetadata?: boolean | cdktf.IResolvable; 
  public get syncMetadata() {
    return this.getBooleanAttribute('sync_metadata');
  }
  public set syncMetadata(value: boolean | cdktf.IResolvable) {
    this._syncMetadata = value;
  }
  public resetSyncMetadata() {
    this._syncMetadata = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncMetadataInput() {
    return this._syncMetadata;
  }

  // sync_method - computed: true, optional: true, required: false
  private _syncMethod?: string; 
  public get syncMethod() {
    return this.getStringAttribute('sync_method');
  }
  public set syncMethod(value: string) {
    this._syncMethod = value;
  }
  public resetSyncMethod() {
    this._syncMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncMethodInput() {
    return this._syncMethod;
  }

  // sync_mode - computed: true, optional: true, required: false
  private _syncMode?: string; 
  public get syncMode() {
    return this.getStringAttribute('sync_mode');
  }
  public set syncMode(value: string) {
    this._syncMode = value;
  }
  public resetSyncMode() {
    this._syncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncModeInput() {
    return this._syncMode;
  }

  // sync_mode_advertiser - computed: true, optional: true, required: false
  private _syncModeAdvertiser?: string; 
  public get syncModeAdvertiser() {
    return this.getStringAttribute('sync_mode_advertiser');
  }
  public set syncModeAdvertiser(value: string) {
    this._syncModeAdvertiser = value;
  }
  public resetSyncModeAdvertiser() {
    this._syncModeAdvertiser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncModeAdvertiserInput() {
    return this._syncModeAdvertiser;
  }

  // sync_mode_seat - computed: true, optional: true, required: false
  private _syncModeSeat?: string; 
  public get syncModeSeat() {
    return this.getStringAttribute('sync_mode_seat');
  }
  public set syncModeSeat(value: string) {
    this._syncModeSeat = value;
  }
  public resetSyncModeSeat() {
    this._syncModeSeat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncModeSeatInput() {
    return this._syncModeSeat;
  }

  // sync_multiple_accounts - computed: true, optional: true, required: false
  private _syncMultipleAccounts?: boolean | cdktf.IResolvable; 
  public get syncMultipleAccounts() {
    return this.getBooleanAttribute('sync_multiple_accounts');
  }
  public set syncMultipleAccounts(value: boolean | cdktf.IResolvable) {
    this._syncMultipleAccounts = value;
  }
  public resetSyncMultipleAccounts() {
    this._syncMultipleAccounts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncMultipleAccountsInput() {
    return this._syncMultipleAccounts;
  }

  // sync_pack_mode - computed: true, optional: true, required: false
  private _syncPackMode?: string; 
  public get syncPackMode() {
    return this.getStringAttribute('sync_pack_mode');
  }
  public set syncPackMode(value: string) {
    this._syncPackMode = value;
  }
  public resetSyncPackMode() {
    this._syncPackMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncPackModeInput() {
    return this._syncPackMode;
  }

  // sync_permissions - computed: true, optional: true, required: false
  private _syncPermissions?: boolean | cdktf.IResolvable; 
  public get syncPermissions() {
    return this.getBooleanAttribute('sync_permissions');
  }
  public set syncPermissions(value: boolean | cdktf.IResolvable) {
    this._syncPermissions = value;
  }
  public resetSyncPermissions() {
    this._syncPermissions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncPermissionsInput() {
    return this._syncPermissions;
  }

  // sync_pull_api - computed: true, optional: true, required: false
  private _syncPullApi?: boolean | cdktf.IResolvable; 
  public get syncPullApi() {
    return this.getBooleanAttribute('sync_pull_api');
  }
  public set syncPullApi(value: boolean | cdktf.IResolvable) {
    this._syncPullApi = value;
  }
  public resetSyncPullApi() {
    this._syncPullApi = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncPullApiInput() {
    return this._syncPullApi;
  }

  // sync_type - computed: true, optional: true, required: false
  private _syncType?: string; 
  public get syncType() {
    return this.getStringAttribute('sync_type');
  }
  public set syncType(value: string) {
    this._syncType = value;
  }
  public resetSyncType() {
    this._syncType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncTypeInput() {
    return this._syncType;
  }

  // sysnr - computed: false, optional: true, required: false
  private _sysnr?: string; 
  public get sysnr() {
    return this.getStringAttribute('sysnr');
  }
  public set sysnr(value: string) {
    this._sysnr = value;
  }
  public resetSysnr() {
    this._sysnr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sysnrInput() {
    return this._sysnr;
  }

  // system_id - computed: false, optional: true, required: false
  private _systemId?: string; 
  public get systemId() {
    return this.getStringAttribute('system_id');
  }
  public set systemId(value: string) {
    this._systemId = value;
  }
  public resetSystemId() {
    this._systemId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get systemIdInput() {
    return this._systemId;
  }

  // table_id - computed: false, optional: true, required: false
  private _tableId?: string; 
  public get tableId() {
    return this.getStringAttribute('table_id');
  }
  public set tableId(value: string) {
    this._tableId = value;
  }
  public resetTableId() {
    this._tableId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableIdInput() {
    return this._tableId;
  }

  // table_name - computed: false, optional: true, required: false
  private _tableName?: string; 
  public get tableName() {
    return this.getStringAttribute('table_name');
  }
  public set tableName(value: string) {
    this._tableName = value;
  }
  public resetTableName() {
    this._tableName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableNameInput() {
    return this._tableName;
  }

  // tables_without_access_updated_at - computed: false, optional: true, required: false
  private _tablesWithoutAccessUpdatedAt?: string; 
  public get tablesWithoutAccessUpdatedAt() {
    return this.getStringAttribute('tables_without_access_updated_at');
  }
  public set tablesWithoutAccessUpdatedAt(value: string) {
    this._tablesWithoutAccessUpdatedAt = value;
  }
  public resetTablesWithoutAccessUpdatedAt() {
    this._tablesWithoutAccessUpdatedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tablesWithoutAccessUpdatedAtInput() {
    return this._tablesWithoutAccessUpdatedAt;
  }

  // target_entity_id - computed: true, optional: true, required: false
  private _targetEntityId?: string; 
  public get targetEntityId() {
    return this.getStringAttribute('target_entity_id');
  }
  public set targetEntityId(value: string) {
    this._targetEntityId = value;
  }
  public resetTargetEntityId() {
    this._targetEntityId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetEntityIdInput() {
    return this._targetEntityId;
  }

  // target_host - computed: false, optional: true, required: false
  private _targetHost?: string; 
  public get targetHost() {
    return this.getStringAttribute('target_host');
  }
  public set targetHost(value: string) {
    this._targetHost = value;
  }
  public resetTargetHost() {
    this._targetHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetHostInput() {
    return this._targetHost;
  }

  // tde_certificate - computed: false, optional: true, required: false
  private _tdeCertificate?: string; 
  public get tdeCertificate() {
    return this.getStringAttribute('tde_certificate');
  }
  public set tdeCertificate(value: string) {
    this._tdeCertificate = value;
  }
  public resetTdeCertificate() {
    this._tdeCertificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tdeCertificateInput() {
    return this._tdeCertificate;
  }

  // tde_certificate_name - computed: false, optional: true, required: false
  private _tdeCertificateName?: string; 
  public get tdeCertificateName() {
    return this.getStringAttribute('tde_certificate_name');
  }
  public set tdeCertificateName(value: string) {
    this._tdeCertificateName = value;
  }
  public resetTdeCertificateName() {
    this._tdeCertificateName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tdeCertificateNameInput() {
    return this._tdeCertificateName;
  }

  // tde_password - computed: false, optional: true, required: false
  private _tdePassword?: string; 
  public get tdePassword() {
    return this.getStringAttribute('tde_password');
  }
  public set tdePassword(value: string) {
    this._tdePassword = value;
  }
  public resetTdePassword() {
    this._tdePassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tdePasswordInput() {
    return this._tdePassword;
  }

  // tde_private_key - computed: false, optional: true, required: false
  private _tdePrivateKey?: string; 
  public get tdePrivateKey() {
    return this.getStringAttribute('tde_private_key');
  }
  public set tdePrivateKey(value: string) {
    this._tdePrivateKey = value;
  }
  public resetTdePrivateKey() {
    this._tdePrivateKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tdePrivateKeyInput() {
    return this._tdePrivateKey;
  }

  // tde_wallet_password - computed: false, optional: true, required: false
  private _tdeWalletPassword?: string; 
  public get tdeWalletPassword() {
    return this.getStringAttribute('tde_wallet_password');
  }
  public set tdeWalletPassword(value: string) {
    this._tdeWalletPassword = value;
  }
  public resetTdeWalletPassword() {
    this._tdeWalletPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tdeWalletPasswordInput() {
    return this._tdeWalletPassword;
  }

  // team_id - computed: false, optional: true, required: false
  private _teamId?: string; 
  public get teamId() {
    return this.getStringAttribute('team_id');
  }
  public set teamId(value: string) {
    this._teamId = value;
  }
  public resetTeamId() {
    this._teamId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get teamIdInput() {
    return this._teamId;
  }

  // technical_account_id - computed: true, optional: true, required: false
  private _technicalAccountId?: string; 
  public get technicalAccountId() {
    return this.getStringAttribute('technical_account_id');
  }
  public set technicalAccountId(value: string) {
    this._technicalAccountId = value;
  }
  public resetTechnicalAccountId() {
    this._technicalAccountId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get technicalAccountIdInput() {
    return this._technicalAccountId;
  }

  // template_labels - computed: false, optional: true, required: false
  private _templateLabels?: string[]; 
  public get templateLabels() {
    return cdktf.Fn.tolist(this.getListAttribute('template_labels'));
  }
  public set templateLabels(value: string[]) {
    this._templateLabels = value;
  }
  public resetTemplateLabels() {
    this._templateLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get templateLabelsInput() {
    return this._templateLabels;
  }

  // tenant - computed: false, optional: true, required: false
  private _tenant?: string; 
  public get tenant() {
    return this.getStringAttribute('tenant');
  }
  public set tenant(value: string) {
    this._tenant = value;
  }
  public resetTenant() {
    this._tenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantInput() {
    return this._tenant;
  }

  // tenant_app_url - computed: false, optional: true, required: false
  private _tenantAppUrl?: string; 
  public get tenantAppUrl() {
    return this.getStringAttribute('tenant_app_url');
  }
  public set tenantAppUrl(value: string) {
    this._tenantAppUrl = value;
  }
  public resetTenantAppUrl() {
    this._tenantAppUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantAppUrlInput() {
    return this._tenantAppUrl;
  }

  // tenant_code - computed: false, optional: true, required: false
  private _tenantCode?: string; 
  public get tenantCode() {
    return this.getStringAttribute('tenant_code');
  }
  public set tenantCode(value: string) {
    this._tenantCode = value;
  }
  public resetTenantCode() {
    this._tenantCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantCodeInput() {
    return this._tenantCode;
  }

  // tenant_id - computed: false, optional: true, required: false
  private _tenantId?: string; 
  public get tenantId() {
    return this.getStringAttribute('tenant_id');
  }
  public set tenantId(value: string) {
    this._tenantId = value;
  }
  public resetTenantId() {
    this._tenantId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantIdInput() {
    return this._tenantId;
  }

  // tenant_name - computed: false, optional: true, required: false
  private _tenantName?: string; 
  public get tenantName() {
    return this.getStringAttribute('tenant_name');
  }
  public set tenantName(value: string) {
    this._tenantName = value;
  }
  public resetTenantName() {
    this._tenantName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantNameInput() {
    return this._tenantName;
  }

  // tenant_url - computed: false, optional: true, required: false
  private _tenantUrl?: string; 
  public get tenantUrl() {
    return this.getStringAttribute('tenant_url');
  }
  public set tenantUrl(value: string) {
    this._tenantUrl = value;
  }
  public resetTenantUrl() {
    this._tenantUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantUrlInput() {
    return this._tenantUrl;
  }

  // test_table_name - computed: true, optional: true, required: false
  private _testTableName?: string; 
  public get testTableName() {
    return this.getStringAttribute('test_table_name');
  }
  public set testTableName(value: string) {
    this._testTableName = value;
  }
  public resetTestTableName() {
    this._testTableName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get testTableNameInput() {
    return this._testTableName;
  }

  // time_zone - computed: true, optional: true, required: false
  private _timeZone?: string; 
  public get timeZone() {
    return this.getStringAttribute('time_zone');
  }
  public set timeZone(value: string) {
    this._timeZone = value;
  }
  public resetTimeZone() {
    this._timeZone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeZoneInput() {
    return this._timeZone;
  }

  // timeframe_months - computed: true, optional: true, required: false
  private _timeframeMonths?: string; 
  public get timeframeMonths() {
    return this.getStringAttribute('timeframe_months');
  }
  public set timeframeMonths(value: string) {
    this._timeframeMonths = value;
  }
  public resetTimeframeMonths() {
    this._timeframeMonths = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeframeMonthsInput() {
    return this._timeframeMonths;
  }

  // timezone - computed: true, optional: true, required: false
  private _timezone?: string; 
  public get timezone() {
    return this.getStringAttribute('timezone');
  }
  public set timezone(value: string) {
    this._timezone = value;
  }
  public resetTimezone() {
    this._timezone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timezoneInput() {
    return this._timezone;
  }

  // timezone_mode - computed: true, optional: true, required: false
  private _timezoneMode?: string; 
  public get timezoneMode() {
    return this.getStringAttribute('timezone_mode');
  }
  public set timezoneMode(value: string) {
    this._timezoneMode = value;
  }
  public resetTimezoneMode() {
    this._timezoneMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timezoneModeInput() {
    return this._timezoneMode;
  }

  // tns - computed: true, optional: true, required: false
  private _tns?: string; 
  public get tns() {
    return this.getStringAttribute('tns');
  }
  public set tns(value: string) {
    this._tns = value;
  }
  public resetTns() {
    this._tns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tnsInput() {
    return this._tns;
  }

  // toast_id - computed: false, optional: true, required: false
  private _toastId?: string; 
  public get toastId() {
    return this.getStringAttribute('toast_id');
  }
  public set toastId(value: string) {
    this._toastId = value;
  }
  public resetToastId() {
    this._toastId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get toastIdInput() {
    return this._toastId;
  }

  // token - computed: false, optional: true, required: false
  private _token?: string; 
  public get token() {
    return this.getStringAttribute('token');
  }
  public set token(value: string) {
    this._token = value;
  }
  public resetToken() {
    this._token = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenInput() {
    return this._token;
  }

  // token_authenticated_container - computed: false, optional: true, required: false
  private _tokenAuthenticatedContainer?: string; 
  public get tokenAuthenticatedContainer() {
    return this.getStringAttribute('token_authenticated_container');
  }
  public set tokenAuthenticatedContainer(value: string) {
    this._tokenAuthenticatedContainer = value;
  }
  public resetTokenAuthenticatedContainer() {
    this._tokenAuthenticatedContainer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenAuthenticatedContainerInput() {
    return this._tokenAuthenticatedContainer;
  }

  // token_authenticated_database - computed: false, optional: true, required: false
  private _tokenAuthenticatedDatabase?: string; 
  public get tokenAuthenticatedDatabase() {
    return this.getStringAttribute('token_authenticated_database');
  }
  public set tokenAuthenticatedDatabase(value: string) {
    this._tokenAuthenticatedDatabase = value;
  }
  public resetTokenAuthenticatedDatabase() {
    this._tokenAuthenticatedDatabase = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenAuthenticatedDatabaseInput() {
    return this._tokenAuthenticatedDatabase;
  }

  // token_id - computed: false, optional: true, required: false
  private _tokenId?: string; 
  public get tokenId() {
    return this.getStringAttribute('token_id');
  }
  public set tokenId(value: string) {
    this._tokenId = value;
  }
  public resetTokenId() {
    this._tokenId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenIdInput() {
    return this._tokenId;
  }

  // token_key - computed: true, optional: true, required: false
  private _tokenKey?: string; 
  public get tokenKey() {
    return this.getStringAttribute('token_key');
  }
  public set tokenKey(value: string) {
    this._tokenKey = value;
  }
  public resetTokenKey() {
    this._tokenKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenKeyInput() {
    return this._tokenKey;
  }

  // token_secret - computed: true, optional: true, required: false
  private _tokenSecret?: string; 
  public get tokenSecret() {
    return this.getStringAttribute('token_secret');
  }
  public set tokenSecret(value: string) {
    this._tokenSecret = value;
  }
  public resetTokenSecret() {
    this._tokenSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenSecretInput() {
    return this._tokenSecret;
  }

  // token_secret_key - computed: false, optional: true, required: false
  private _tokenSecretKey?: string; 
  public get tokenSecretKey() {
    return this.getStringAttribute('token_secret_key');
  }
  public set tokenSecretKey(value: string) {
    this._tokenSecretKey = value;
  }
  public resetTokenSecretKey() {
    this._tokenSecretKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenSecretKeyInput() {
    return this._tokenSecretKey;
  }

  // token_url_region - computed: true, optional: true, required: false
  private _tokenUrlRegion?: string; 
  public get tokenUrlRegion() {
    return this.getStringAttribute('token_url_region');
  }
  public set tokenUrlRegion(value: string) {
    this._tokenUrlRegion = value;
  }
  public resetTokenUrlRegion() {
    this._tokenUrlRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenUrlRegionInput() {
    return this._tokenUrlRegion;
  }

  // topics - computed: false, optional: true, required: false
  private _topics?: string[]; 
  public get topics() {
    return cdktf.Fn.tolist(this.getListAttribute('topics'));
  }
  public set topics(value: string[]) {
    this._topics = value;
  }
  public resetTopics() {
    this._topics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicsInput() {
    return this._topics;
  }

  // trust_store_type - computed: false, optional: true, required: false
  private _trustStoreType?: string; 
  public get trustStoreType() {
    return this.getStringAttribute('trust_store_type');
  }
  public set trustStoreType(value: string) {
    this._trustStoreType = value;
  }
  public resetTrustStoreType() {
    this._trustStoreType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get trustStoreTypeInput() {
    return this._trustStoreType;
  }

  // trusted_cert - computed: false, optional: true, required: false
  private _trustedCert?: string; 
  public get trustedCert() {
    return this.getStringAttribute('trusted_cert');
  }
  public set trustedCert(value: string) {
    this._trustedCert = value;
  }
  public resetTrustedCert() {
    this._trustedCert = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get trustedCertInput() {
    return this._trustedCert;
  }

  // truststore - computed: false, optional: true, required: false
  private _truststore?: string; 
  public get truststore() {
    return this.getStringAttribute('truststore');
  }
  public set truststore(value: string) {
    this._truststore = value;
  }
  public resetTruststore() {
    this._truststore = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get truststoreInput() {
    return this._truststore;
  }

  // tunnel_host - computed: false, optional: true, required: false
  private _tunnelHost?: string; 
  public get tunnelHost() {
    return this.getStringAttribute('tunnel_host');
  }
  public set tunnelHost(value: string) {
    this._tunnelHost = value;
  }
  public resetTunnelHost() {
    this._tunnelHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tunnelHostInput() {
    return this._tunnelHost;
  }

  // tunnel_port - computed: true, optional: true, required: false
  private _tunnelPort?: number; 
  public get tunnelPort() {
    return this.getNumberAttribute('tunnel_port');
  }
  public set tunnelPort(value: number) {
    this._tunnelPort = value;
  }
  public resetTunnelPort() {
    this._tunnelPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tunnelPortInput() {
    return this._tunnelPort;
  }

  // tunnel_user - computed: false, optional: true, required: false
  private _tunnelUser?: string; 
  public get tunnelUser() {
    return this.getStringAttribute('tunnel_user');
  }
  public set tunnelUser(value: string) {
    this._tunnelUser = value;
  }
  public resetTunnelUser() {
    this._tunnelUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tunnelUserInput() {
    return this._tunnelUser;
  }

  // type_name - computed: false, optional: true, required: false
  private _typeName?: string; 
  public get typeName() {
    return this.getStringAttribute('type_name');
  }
  public set typeName(value: string) {
    this._typeName = value;
  }
  public resetTypeName() {
    this._typeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeNameInput() {
    return this._typeName;
  }

  // unique_id - computed: true, optional: true, required: false
  private _uniqueId?: string; 
  public get uniqueId() {
    return this.getStringAttribute('unique_id');
  }
  public set uniqueId(value: string) {
    this._uniqueId = value;
  }
  public resetUniqueId() {
    this._uniqueId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uniqueIdInput() {
    return this._uniqueId;
  }

  // update_config_on_each_sync - computed: true, optional: true, required: false
  private _updateConfigOnEachSync?: boolean | cdktf.IResolvable; 
  public get updateConfigOnEachSync() {
    return this.getBooleanAttribute('update_config_on_each_sync');
  }
  public set updateConfigOnEachSync(value: boolean | cdktf.IResolvable) {
    this._updateConfigOnEachSync = value;
  }
  public resetUpdateConfigOnEachSync() {
    this._updateConfigOnEachSync = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get updateConfigOnEachSyncInput() {
    return this._updateConfigOnEachSync;
  }

  // update_method - computed: true, optional: true, required: false
  private _updateMethod?: string; 
  public get updateMethod() {
    return this.getStringAttribute('update_method');
  }
  public set updateMethod(value: string) {
    this._updateMethod = value;
  }
  public resetUpdateMethod() {
    this._updateMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get updateMethodInput() {
    return this._updateMethod;
  }

  // uri - computed: true, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }

  // url_format - computed: true, optional: true, required: false
  private _urlFormat?: string; 
  public get urlFormat() {
    return this.getStringAttribute('url_format');
  }
  public set urlFormat(value: string) {
    this._urlFormat = value;
  }
  public resetUrlFormat() {
    this._urlFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlFormatInput() {
    return this._urlFormat;
  }

  // use_api_keys - computed: true, optional: true, required: false
  private _useApiKeys?: boolean | cdktf.IResolvable; 
  public get useApiKeys() {
    return this.getBooleanAttribute('use_api_keys');
  }
  public set useApiKeys(value: boolean | cdktf.IResolvable) {
    this._useApiKeys = value;
  }
  public resetUseApiKeys() {
    this._useApiKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useApiKeysInput() {
    return this._useApiKeys;
  }

  // use_cloud_storage - computed: true, optional: true, required: false
  private _useCloudStorage?: boolean | cdktf.IResolvable; 
  public get useCloudStorage() {
    return this.getBooleanAttribute('use_cloud_storage');
  }
  public set useCloudStorage(value: boolean | cdktf.IResolvable) {
    this._useCloudStorage = value;
  }
  public resetUseCloudStorage() {
    this._useCloudStorage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useCloudStorageInput() {
    return this._useCloudStorage;
  }

  // use_customer_bucket - computed: true, optional: true, required: false
  private _useCustomerBucket?: boolean | cdktf.IResolvable; 
  public get useCustomerBucket() {
    return this.getBooleanAttribute('use_customer_bucket');
  }
  public set useCustomerBucket(value: boolean | cdktf.IResolvable) {
    this._useCustomerBucket = value;
  }
  public resetUseCustomerBucket() {
    this._useCustomerBucket = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useCustomerBucketInput() {
    return this._useCustomerBucket;
  }

  // use_oracle_rac - computed: true, optional: true, required: false
  private _useOracleRac?: boolean | cdktf.IResolvable; 
  public get useOracleRac() {
    return this.getBooleanAttribute('use_oracle_rac');
  }
  public set useOracleRac(value: boolean | cdktf.IResolvable) {
    this._useOracleRac = value;
  }
  public resetUseOracleRac() {
    this._useOracleRac = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useOracleRacInput() {
    return this._useOracleRac;
  }

  // use_pgp_encryption_options - computed: true, optional: true, required: false
  private _usePgpEncryptionOptions?: boolean | cdktf.IResolvable; 
  public get usePgpEncryptionOptions() {
    return this.getBooleanAttribute('use_pgp_encryption_options');
  }
  public set usePgpEncryptionOptions(value: boolean | cdktf.IResolvable) {
    this._usePgpEncryptionOptions = value;
  }
  public resetUsePgpEncryptionOptions() {
    this._usePgpEncryptionOptions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePgpEncryptionOptionsInput() {
    return this._usePgpEncryptionOptions;
  }

  // use_service_account - computed: true, optional: true, required: false
  private _useServiceAccount?: boolean | cdktf.IResolvable; 
  public get useServiceAccount() {
    return this.getBooleanAttribute('use_service_account');
  }
  public set useServiceAccount(value: boolean | cdktf.IResolvable) {
    this._useServiceAccount = value;
  }
  public resetUseServiceAccount() {
    this._useServiceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useServiceAccountInput() {
    return this._useServiceAccount;
  }

  // use_template_labels - computed: true, optional: true, required: false
  private _useTemplateLabels?: boolean | cdktf.IResolvable; 
  public get useTemplateLabels() {
    return this.getBooleanAttribute('use_template_labels');
  }
  public set useTemplateLabels(value: boolean | cdktf.IResolvable) {
    this._useTemplateLabels = value;
  }
  public resetUseTemplateLabels() {
    this._useTemplateLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTemplateLabelsInput() {
    return this._useTemplateLabels;
  }

  // use_webhooks - computed: true, optional: true, required: false
  private _useWebhooks?: boolean | cdktf.IResolvable; 
  public get useWebhooks() {
    return this.getBooleanAttribute('use_webhooks');
  }
  public set useWebhooks(value: boolean | cdktf.IResolvable) {
    this._useWebhooks = value;
  }
  public resetUseWebhooks() {
    this._useWebhooks = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useWebhooksInput() {
    return this._useWebhooks;
  }

  // use_workspace - computed: true, optional: true, required: false
  private _useWorkspace?: boolean | cdktf.IResolvable; 
  public get useWorkspace() {
    return this.getBooleanAttribute('use_workspace');
  }
  public set useWorkspace(value: boolean | cdktf.IResolvable) {
    this._useWorkspace = value;
  }
  public resetUseWorkspace() {
    this._useWorkspace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useWorkspaceInput() {
    return this._useWorkspace;
  }

  // user - computed: true, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }

  // user_id - computed: true, optional: true, required: false
  private _userId?: string; 
  public get userId() {
    return this.getStringAttribute('user_id');
  }
  public set userId(value: string) {
    this._userId = value;
  }
  public resetUserId() {
    this._userId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userIdInput() {
    return this._userId;
  }

  // user_key - computed: true, optional: true, required: false
  private _userKey?: string; 
  public get userKey() {
    return this.getStringAttribute('user_key');
  }
  public set userKey(value: string) {
    this._userKey = value;
  }
  public resetUserKey() {
    this._userKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userKeyInput() {
    return this._userKey;
  }

  // user_name - computed: true, optional: true, required: false
  private _userName?: string; 
  public get userName() {
    return this.getStringAttribute('user_name');
  }
  public set userName(value: string) {
    this._userName = value;
  }
  public resetUserName() {
    this._userName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userNameInput() {
    return this._userName;
  }

  // user_profiles - computed: false, optional: true, required: false
  private _userProfiles?: string[]; 
  public get userProfiles() {
    return cdktf.Fn.tolist(this.getListAttribute('user_profiles'));
  }
  public set userProfiles(value: string[]) {
    this._userProfiles = value;
  }
  public resetUserProfiles() {
    this._userProfiles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userProfilesInput() {
    return this._userProfiles;
  }

  // user_token - computed: false, optional: true, required: false
  private _userToken?: string; 
  public get userToken() {
    return this.getStringAttribute('user_token');
  }
  public set userToken(value: string) {
    this._userToken = value;
  }
  public resetUserToken() {
    this._userToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userTokenInput() {
    return this._userToken;
  }

  // username - computed: true, optional: true, required: false
  private _username?: string; 
  public get username() {
    return this.getStringAttribute('username');
  }
  public set username(value: string) {
    this._username = value;
  }
  public resetUsername() {
    this._username = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usernameInput() {
    return this._username;
  }

  // vendors_id - computed: false, optional: true, required: false
  private _vendorsId?: string[]; 
  public get vendorsId() {
    return cdktf.Fn.tolist(this.getListAttribute('vendors_id'));
  }
  public set vendorsId(value: string[]) {
    this._vendorsId = value;
  }
  public resetVendorsId() {
    this._vendorsId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vendorsIdInput() {
    return this._vendorsId;
  }

  // version - computed: false, optional: true, required: false
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  public resetVersion() {
    this._version = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }

  // view_attribution_window - computed: true, optional: true, required: false
  private _viewAttributionWindow?: string; 
  public get viewAttributionWindow() {
    return this.getStringAttribute('view_attribution_window');
  }
  public set viewAttributionWindow(value: string) {
    this._viewAttributionWindow = value;
  }
  public resetViewAttributionWindow() {
    this._viewAttributionWindow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get viewAttributionWindowInput() {
    return this._viewAttributionWindow;
  }

  // view_id - computed: false, optional: true, required: false
  private _viewId?: string; 
  public get viewId() {
    return this.getStringAttribute('view_id');
  }
  public set viewId(value: string) {
    this._viewId = value;
  }
  public resetViewId() {
    this._viewId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get viewIdInput() {
    return this._viewId;
  }

  // view_through_attribution_window_size - computed: true, optional: true, required: false
  private _viewThroughAttributionWindowSize?: string; 
  public get viewThroughAttributionWindowSize() {
    return this.getStringAttribute('view_through_attribution_window_size');
  }
  public set viewThroughAttributionWindowSize(value: string) {
    this._viewThroughAttributionWindowSize = value;
  }
  public resetViewThroughAttributionWindowSize() {
    this._viewThroughAttributionWindowSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get viewThroughAttributionWindowSizeInput() {
    return this._viewThroughAttributionWindowSize;
  }

  // web_service_api_key - computed: false, optional: true, required: false
  private _webServiceApiKey?: string; 
  public get webServiceApiKey() {
    return this.getStringAttribute('web_service_api_key');
  }
  public set webServiceApiKey(value: string) {
    this._webServiceApiKey = value;
  }
  public resetWebServiceApiKey() {
    this._webServiceApiKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webServiceApiKeyInput() {
    return this._webServiceApiKey;
  }

  // webhook_endpoint - computed: false, optional: true, required: false
  private _webhookEndpoint?: string; 
  public get webhookEndpoint() {
    return this.getStringAttribute('webhook_endpoint');
  }
  public set webhookEndpoint(value: string) {
    this._webhookEndpoint = value;
  }
  public resetWebhookEndpoint() {
    this._webhookEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webhookEndpointInput() {
    return this._webhookEndpoint;
  }

  // webhook_key - computed: false, optional: true, required: false
  private _webhookKey?: string; 
  public get webhookKey() {
    return this.getStringAttribute('webhook_key');
  }
  public set webhookKey(value: string) {
    this._webhookKey = value;
  }
  public resetWebhookKey() {
    this._webhookKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webhookKeyInput() {
    return this._webhookKey;
  }

  // webhook_name - computed: false, optional: true, required: false
  private _webhookName?: string; 
  public get webhookName() {
    return this.getStringAttribute('webhook_name');
  }
  public set webhookName(value: string) {
    this._webhookName = value;
  }
  public resetWebhookName() {
    this._webhookName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webhookNameInput() {
    return this._webhookName;
  }

  // webhook_url - computed: false, optional: true, required: false
  private _webhookUrl?: string; 
  public get webhookUrl() {
    return this.getStringAttribute('webhook_url');
  }
  public set webhookUrl(value: string) {
    this._webhookUrl = value;
  }
  public resetWebhookUrl() {
    this._webhookUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webhookUrlInput() {
    return this._webhookUrl;
  }

  // word_press_site_id_or_woocommerce_domain_name - computed: false, optional: true, required: false
  private _wordPressSiteIdOrWoocommerceDomainName?: string; 
  public get wordPressSiteIdOrWoocommerceDomainName() {
    return this.getStringAttribute('word_press_site_id_or_woocommerce_domain_name');
  }
  public set wordPressSiteIdOrWoocommerceDomainName(value: string) {
    this._wordPressSiteIdOrWoocommerceDomainName = value;
  }
  public resetWordPressSiteIdOrWoocommerceDomainName() {
    this._wordPressSiteIdOrWoocommerceDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get wordPressSiteIdOrWoocommerceDomainNameInput() {
    return this._wordPressSiteIdOrWoocommerceDomainName;
  }

  // workplace_id - computed: false, optional: true, required: false
  private _workplaceId?: string; 
  public get workplaceId() {
    return this.getStringAttribute('workplace_id');
  }
  public set workplaceId(value: string) {
    this._workplaceId = value;
  }
  public resetWorkplaceId() {
    this._workplaceId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get workplaceIdInput() {
    return this._workplaceId;
  }

  // workspace - computed: false, optional: true, required: false
  private _workspace?: string; 
  public get workspace() {
    return this.getStringAttribute('workspace');
  }
  public set workspace(value: string) {
    this._workspace = value;
  }
  public resetWorkspace() {
    this._workspace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get workspaceInput() {
    return this._workspace;
  }

  // workspace_name - computed: false, optional: true, required: false
  private _workspaceName?: string; 
  public get workspaceName() {
    return this.getStringAttribute('workspace_name');
  }
  public set workspaceName(value: string) {
    this._workspaceName = value;
  }
  public resetWorkspaceName() {
    this._workspaceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get workspaceNameInput() {
    return this._workspaceName;
  }

  // workspace_same_as_source - computed: true, optional: true, required: false
  private _workspaceSameAsSource?: boolean | cdktf.IResolvable; 
  public get workspaceSameAsSource() {
    return this.getBooleanAttribute('workspace_same_as_source');
  }
  public set workspaceSameAsSource(value: boolean | cdktf.IResolvable) {
    this._workspaceSameAsSource = value;
  }
  public resetWorkspaceSameAsSource() {
    this._workspaceSameAsSource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get workspaceSameAsSourceInput() {
    return this._workspaceSameAsSource;
  }

  // workspace_schema - computed: false, optional: true, required: false
  private _workspaceSchema?: string; 
  public get workspaceSchema() {
    return this.getStringAttribute('workspace_schema');
  }
  public set workspaceSchema(value: string) {
    this._workspaceSchema = value;
  }
  public resetWorkspaceSchema() {
    this._workspaceSchema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get workspaceSchemaInput() {
    return this._workspaceSchema;
  }

  // workspace_token - computed: false, optional: true, required: false
  private _workspaceToken?: string; 
  public get workspaceToken() {
    return this.getStringAttribute('workspace_token');
  }
  public set workspaceToken(value: string) {
    this._workspaceToken = value;
  }
  public resetWorkspaceToken() {
    this._workspaceToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get workspaceTokenInput() {
    return this._workspaceToken;
  }

  // ws_certificate - computed: false, optional: true, required: false
  private _wsCertificate?: string; 
  public get wsCertificate() {
    return this.getStringAttribute('ws_certificate');
  }
  public set wsCertificate(value: string) {
    this._wsCertificate = value;
  }
  public resetWsCertificate() {
    this._wsCertificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get wsCertificateInput() {
    return this._wsCertificate;
  }

  // x_api_key - computed: false, optional: true, required: false
  private _xApiKey?: string; 
  public get xApiKey() {
    return this.getStringAttribute('x_api_key');
  }
  public set xApiKey(value: string) {
    this._xApiKey = value;
  }
  public resetXApiKey() {
    this._xApiKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xApiKeyInput() {
    return this._xApiKey;
  }

  // x_key - computed: false, optional: true, required: false
  private _xKey?: string; 
  public get xKey() {
    return this.getStringAttribute('x_key');
  }
  public set xKey(value: string) {
    this._xKey = value;
  }
  public resetXKey() {
    this._xKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xKeyInput() {
    return this._xKey;
  }

  // x_master_key - computed: false, optional: true, required: false
  private _xMasterKey?: string; 
  public get xMasterKey() {
    return this.getStringAttribute('x_master_key');
  }
  public set xMasterKey(value: string) {
    this._xMasterKey = value;
  }
  public resetXMasterKey() {
    this._xMasterKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xMasterKeyInput() {
    return this._xMasterKey;
  }

  // x_user_email - computed: false, optional: true, required: false
  private _xUserEmail?: string; 
  public get xUserEmail() {
    return this.getStringAttribute('x_user_email');
  }
  public set xUserEmail(value: string) {
    this._xUserEmail = value;
  }
  public resetXUserEmail() {
    this._xUserEmail = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xUserEmailInput() {
    return this._xUserEmail;
  }

  // x_user_token - computed: false, optional: true, required: false
  private _xUserToken?: string; 
  public get xUserToken() {
    return this.getStringAttribute('x_user_token');
  }
  public set xUserToken(value: string) {
    this._xUserToken = value;
  }
  public resetXUserToken() {
    this._xUserToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xUserTokenInput() {
    return this._xUserToken;
  }

  // accounts_reddit_ads - computed: false, optional: true, required: false
  private _accountsRedditAds = new ConnectorConfigAccountsRedditAdsList(this, "accounts_reddit_ads", true);
  public get accountsRedditAds() {
    return this._accountsRedditAds;
  }
  public putAccountsRedditAds(value: ConnectorConfigAccountsRedditAds[] | cdktf.IResolvable) {
    this._accountsRedditAds.internalValue = value;
  }
  public resetAccountsRedditAds() {
    this._accountsRedditAds.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountsRedditAdsInput() {
    return this._accountsRedditAds.internalValue;
  }

  // adobe_analytics_configurations - computed: false, optional: true, required: false
  private _adobeAnalyticsConfigurations = new ConnectorConfigAdobeAnalyticsConfigurationsList(this, "adobe_analytics_configurations", true);
  public get adobeAnalyticsConfigurations() {
    return this._adobeAnalyticsConfigurations;
  }
  public putAdobeAnalyticsConfigurations(value: ConnectorConfigAdobeAnalyticsConfigurations[] | cdktf.IResolvable) {
    this._adobeAnalyticsConfigurations.internalValue = value;
  }
  public resetAdobeAnalyticsConfigurations() {
    this._adobeAnalyticsConfigurations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adobeAnalyticsConfigurationsInput() {
    return this._adobeAnalyticsConfigurations.internalValue;
  }

  // app_ids_appsflyer - computed: false, optional: true, required: false
  private _appIdsAppsflyer = new ConnectorConfigAppIdsAppsflyerList(this, "app_ids_appsflyer", true);
  public get appIdsAppsflyer() {
    return this._appIdsAppsflyer;
  }
  public putAppIdsAppsflyer(value: ConnectorConfigAppIdsAppsflyer[] | cdktf.IResolvable) {
    this._appIdsAppsflyer.internalValue = value;
  }
  public resetAppIdsAppsflyer() {
    this._appIdsAppsflyer.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appIdsAppsflyerInput() {
    return this._appIdsAppsflyer.internalValue;
  }

  // custom_payloads - computed: false, optional: true, required: false
  private _customPayloads = new ConnectorConfigCustomPayloadsList(this, "custom_payloads", true);
  public get customPayloads() {
    return this._customPayloads;
  }
  public putCustomPayloads(value: ConnectorConfigCustomPayloads[] | cdktf.IResolvable) {
    this._customPayloads.internalValue = value;
  }
  public resetCustomPayloads() {
    this._customPayloads.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customPayloadsInput() {
    return this._customPayloads.internalValue;
  }

  // custom_reports - computed: false, optional: true, required: false
  private _customReports = new ConnectorConfigCustomReportsList(this, "custom_reports", true);
  public get customReports() {
    return this._customReports;
  }
  public putCustomReports(value: ConnectorConfigCustomReports[] | cdktf.IResolvable) {
    this._customReports.internalValue = value;
  }
  public resetCustomReports() {
    this._customReports.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customReportsInput() {
    return this._customReports.internalValue;
  }

  // custom_tables - computed: false, optional: true, required: false
  private _customTables = new ConnectorConfigCustomTablesList(this, "custom_tables", true);
  public get customTables() {
    return this._customTables;
  }
  public putCustomTables(value: ConnectorConfigCustomTables[] | cdktf.IResolvable) {
    this._customTables.internalValue = value;
  }
  public resetCustomTables() {
    this._customTables.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customTablesInput() {
    return this._customTables.internalValue;
  }

  // data_model_path_alias_list - computed: false, optional: true, required: false
  private _dataModelPathAliasList = new ConnectorConfigDataModelPathAliasListStructList(this, "data_model_path_alias_list", true);
  public get dataModelPathAliasList() {
    return this._dataModelPathAliasList;
  }
  public putDataModelPathAliasList(value: ConnectorConfigDataModelPathAliasListStruct[] | cdktf.IResolvable) {
    this._dataModelPathAliasList.internalValue = value;
  }
  public resetDataModelPathAliasList() {
    this._dataModelPathAliasList.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataModelPathAliasListInput() {
    return this._dataModelPathAliasList.internalValue;
  }

  // files - computed: false, optional: true, required: false
  private _files = new ConnectorConfigFilesList(this, "files", true);
  public get files() {
    return this._files;
  }
  public putFiles(value: ConnectorConfigFiles[] | cdktf.IResolvable) {
    this._files.internalValue = value;
  }
  public resetFiles() {
    this._files.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filesInput() {
    return this._files.internalValue;
  }

  // project_credentials - computed: false, optional: true, required: false
  private _projectCredentials = new ConnectorConfigProjectCredentialsList(this, "project_credentials", true);
  public get projectCredentials() {
    return this._projectCredentials;
  }
  public putProjectCredentials(value: ConnectorConfigProjectCredentials[] | cdktf.IResolvable) {
    this._projectCredentials.internalValue = value;
  }
  public resetProjectCredentials() {
    this._projectCredentials.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectCredentialsInput() {
    return this._projectCredentials.internalValue;
  }

  // report_configs - computed: false, optional: true, required: false
  private _reportConfigs = new ConnectorConfigReportConfigsList(this, "report_configs", true);
  public get reportConfigs() {
    return this._reportConfigs;
  }
  public putReportConfigs(value: ConnectorConfigReportConfigs[] | cdktf.IResolvable) {
    this._reportConfigs.internalValue = value;
  }
  public resetReportConfigs() {
    this._reportConfigs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportConfigsInput() {
    return this._reportConfigs.internalValue;
  }

  // report_list - computed: false, optional: true, required: false
  private _reportList = new ConnectorConfigReportListStructList(this, "report_list", true);
  public get reportList() {
    return this._reportList;
  }
  public putReportList(value: ConnectorConfigReportListStruct[] | cdktf.IResolvable) {
    this._reportList.internalValue = value;
  }
  public resetReportList() {
    this._reportList.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportListInput() {
    return this._reportList.internalValue;
  }

  // reports - computed: false, optional: true, required: false
  private _reports = new ConnectorConfigReportsList(this, "reports", true);
  public get reports() {
    return this._reports;
  }
  public putReports(value: ConnectorConfigReports[] | cdktf.IResolvable) {
    this._reports.internalValue = value;
  }
  public resetReports() {
    this._reports.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reportsInput() {
    return this._reports.internalValue;
  }

  // secrets_list - computed: false, optional: true, required: false
  private _secretsList = new ConnectorConfigSecretsListStructList(this, "secrets_list", true);
  public get secretsList() {
    return this._secretsList;
  }
  public putSecretsList(value: ConnectorConfigSecretsListStruct[] | cdktf.IResolvable) {
    this._secretsList.internalValue = value;
  }
  public resetSecretsList() {
    this._secretsList.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretsListInput() {
    return this._secretsList.internalValue;
  }

  // tenant_configs - computed: false, optional: true, required: false
  private _tenantConfigs = new ConnectorConfigTenantConfigsList(this, "tenant_configs", true);
  public get tenantConfigs() {
    return this._tenantConfigs;
  }
  public putTenantConfigs(value: ConnectorConfigTenantConfigs[] | cdktf.IResolvable) {
    this._tenantConfigs.internalValue = value;
  }
  public resetTenantConfigs() {
    this._tenantConfigs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantConfigsInput() {
    return this._tenantConfigs.internalValue;
  }
}
export interface ConnectorDestinationSchema {
  /**
  * The connector schema name in destination. Has to be unique within the group (destination). Required for connector creation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#name Connector#name}
  */
  readonly name?: string;
  /**
  * The connector schema prefix has to be unique within the group (destination). Each replicated schema is prefixed with the provided value. Required for connector creation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#prefix Connector#prefix}
  */
  readonly prefix?: string;
  /**
  * The table name unique within the schema to which connector will sync the data. Required for connector creation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#table Connector#table}
  */
  readonly table?: string;
  /**
  * Table group name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#table_group_name Connector#table_group_name}
  */
  readonly tableGroupName?: string;
}

export function connectorDestinationSchemaToTerraform(struct?: ConnectorDestinationSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    prefix: cdktf.stringToTerraform(struct!.prefix),
    table: cdktf.stringToTerraform(struct!.table),
    table_group_name: cdktf.stringToTerraform(struct!.tableGroupName),
  }
}


export function connectorDestinationSchemaToHclTerraform(struct?: ConnectorDestinationSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table_group_name: {
      value: cdktf.stringToHclTerraform(struct!.tableGroupName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorDestinationSchemaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): ConnectorDestinationSchema | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._tableGroupName !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableGroupName = this._tableGroupName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorDestinationSchema | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._prefix = undefined;
      this._table = undefined;
      this._tableGroupName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._prefix = value.prefix;
      this._table = value.table;
      this._tableGroupName = value.tableGroupName;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // prefix - computed: false, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }

  // table - computed: false, optional: true, required: false
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  public resetTable() {
    this._table = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // table_group_name - computed: false, optional: true, required: false
  private _tableGroupName?: string; 
  public get tableGroupName() {
    return this.getStringAttribute('table_group_name');
  }
  public set tableGroupName(value: string) {
    this._tableGroupName = value;
  }
  public resetTableGroupName() {
    this._tableGroupName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableGroupNameInput() {
    return this._tableGroupName;
  }
}
export interface ConnectorTimeouts {
  /**
  * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#create Connector#create}
  */
  readonly create?: string;
  /**
  * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#update Connector#update}
  */
  readonly update?: string;
}

export function connectorTimeoutsToTerraform(struct?: ConnectorTimeouts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    create: cdktf.stringToTerraform(struct!.create),
    update: cdktf.stringToTerraform(struct!.update),
  }
}


export function connectorTimeoutsToHclTerraform(struct?: ConnectorTimeouts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    create: {
      value: cdktf.stringToHclTerraform(struct!.create),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    update: {
      value: cdktf.stringToHclTerraform(struct!.update),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ConnectorTimeoutsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): ConnectorTimeouts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._create !== undefined) {
      hasAnyValues = true;
      internalValueResult.create = this._create;
    }
    if (this._update !== undefined) {
      hasAnyValues = true;
      internalValueResult.update = this._update;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ConnectorTimeouts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._create = undefined;
      this._update = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._create = value.create;
      this._update = value.update;
    }
  }

  // create - computed: false, optional: true, required: false
  private _create?: string; 
  public get create() {
    return this.getStringAttribute('create');
  }
  public set create(value: string) {
    this._create = value;
  }
  public resetCreate() {
    this._create = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get createInput() {
    return this._create;
  }

  // update - computed: false, optional: true, required: false
  private _update?: string; 
  public get update() {
    return this.getStringAttribute('update');
  }
  public set update(value: string) {
    this._update = value;
  }
  public resetUpdate() {
    this._update = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get updateInput() {
    return this._update;
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector fivetran_connector}
*/
export class Connector extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "fivetran_connector";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a Connector resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the Connector to import
  * @param importFromId The id of the existing Connector that should be imported. Refer to the {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the Connector to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "fivetran_connector", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/fivetran/fivetran/1.9.11/docs/resources/connector fivetran_connector} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options ConnectorConfig
  */
  public constructor(scope: Construct, id: string, config: ConnectorConfig) {
    super(scope, id, {
      terraformResourceType: 'fivetran_connector',
      terraformGeneratorMetadata: {
        providerName: 'fivetran',
        providerVersion: '1.9.11'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._dataDelaySensitivity = config.dataDelaySensitivity;
    this._dataDelayThreshold = config.dataDelayThreshold;
    this._groupId = config.groupId;
    this._hybridDeploymentAgentId = config.hybridDeploymentAgentId;
    this._networkingMethod = config.networkingMethod;
    this._privateLinkId = config.privateLinkId;
    this._proxyAgentId = config.proxyAgentId;
    this._runSetupTests = config.runSetupTests;
    this._service = config.service;
    this._trustCertificates = config.trustCertificates;
    this._trustFingerprints = config.trustFingerprints;
    this._auth.internalValue = config.auth;
    this._config.internalValue = config.config;
    this._destinationSchema.internalValue = config.destinationSchema;
    this._timeouts.internalValue = config.timeouts;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // connected_by - computed: true, optional: false, required: false
  public get connectedBy() {
    return this.getStringAttribute('connected_by');
  }

  // created_at - computed: true, optional: false, required: false
  public get createdAt() {
    return this.getStringAttribute('created_at');
  }

  // data_delay_sensitivity - computed: false, optional: true, required: false
  private _dataDelaySensitivity?: string; 
  public get dataDelaySensitivity() {
    return this.getStringAttribute('data_delay_sensitivity');
  }
  public set dataDelaySensitivity(value: string) {
    this._dataDelaySensitivity = value;
  }
  public resetDataDelaySensitivity() {
    this._dataDelaySensitivity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataDelaySensitivityInput() {
    return this._dataDelaySensitivity;
  }

  // data_delay_threshold - computed: true, optional: true, required: false
  private _dataDelayThreshold?: number; 
  public get dataDelayThreshold() {
    return this.getNumberAttribute('data_delay_threshold');
  }
  public set dataDelayThreshold(value: number) {
    this._dataDelayThreshold = value;
  }
  public resetDataDelayThreshold() {
    this._dataDelayThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataDelayThresholdInput() {
    return this._dataDelayThreshold;
  }

  // group_id - computed: false, optional: false, required: true
  private _groupId?: string; 
  public get groupId() {
    return this.getStringAttribute('group_id');
  }
  public set groupId(value: string) {
    this._groupId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get groupIdInput() {
    return this._groupId;
  }

  // hybrid_deployment_agent_id - computed: false, optional: true, required: false
  private _hybridDeploymentAgentId?: string; 
  public get hybridDeploymentAgentId() {
    return this.getStringAttribute('hybrid_deployment_agent_id');
  }
  public set hybridDeploymentAgentId(value: string) {
    this._hybridDeploymentAgentId = value;
  }
  public resetHybridDeploymentAgentId() {
    this._hybridDeploymentAgentId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hybridDeploymentAgentIdInput() {
    return this._hybridDeploymentAgentId;
  }

  // id - computed: true, optional: false, required: false
  public get id() {
    return this.getStringAttribute('id');
  }

  // name - computed: true, optional: false, required: false
  public get name() {
    return this.getStringAttribute('name');
  }

  // networking_method - computed: true, optional: true, required: false
  private _networkingMethod?: string; 
  public get networkingMethod() {
    return this.getStringAttribute('networking_method');
  }
  public set networkingMethod(value: string) {
    this._networkingMethod = value;
  }
  public resetNetworkingMethod() {
    this._networkingMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkingMethodInput() {
    return this._networkingMethod;
  }

  // private_link_id - computed: false, optional: true, required: false
  private _privateLinkId?: string; 
  public get privateLinkId() {
    return this.getStringAttribute('private_link_id');
  }
  public set privateLinkId(value: string) {
    this._privateLinkId = value;
  }
  public resetPrivateLinkId() {
    this._privateLinkId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privateLinkIdInput() {
    return this._privateLinkId;
  }

  // proxy_agent_id - computed: false, optional: true, required: false
  private _proxyAgentId?: string; 
  public get proxyAgentId() {
    return this.getStringAttribute('proxy_agent_id');
  }
  public set proxyAgentId(value: string) {
    this._proxyAgentId = value;
  }
  public resetProxyAgentId() {
    this._proxyAgentId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get proxyAgentIdInput() {
    return this._proxyAgentId;
  }

  // run_setup_tests - computed: true, optional: true, required: false
  private _runSetupTests?: boolean | cdktf.IResolvable; 
  public get runSetupTests() {
    return this.getBooleanAttribute('run_setup_tests');
  }
  public set runSetupTests(value: boolean | cdktf.IResolvable) {
    this._runSetupTests = value;
  }
  public resetRunSetupTests() {
    this._runSetupTests = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runSetupTestsInput() {
    return this._runSetupTests;
  }

  // service - computed: false, optional: false, required: true
  private _service?: string; 
  public get service() {
    return this.getStringAttribute('service');
  }
  public set service(value: string) {
    this._service = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceInput() {
    return this._service;
  }

  // trust_certificates - computed: true, optional: true, required: false
  private _trustCertificates?: boolean | cdktf.IResolvable; 
  public get trustCertificates() {
    return this.getBooleanAttribute('trust_certificates');
  }
  public set trustCertificates(value: boolean | cdktf.IResolvable) {
    this._trustCertificates = value;
  }
  public resetTrustCertificates() {
    this._trustCertificates = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get trustCertificatesInput() {
    return this._trustCertificates;
  }

  // trust_fingerprints - computed: true, optional: true, required: false
  private _trustFingerprints?: boolean | cdktf.IResolvable; 
  public get trustFingerprints() {
    return this.getBooleanAttribute('trust_fingerprints');
  }
  public set trustFingerprints(value: boolean | cdktf.IResolvable) {
    this._trustFingerprints = value;
  }
  public resetTrustFingerprints() {
    this._trustFingerprints = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get trustFingerprintsInput() {
    return this._trustFingerprints;
  }

  // auth - computed: false, optional: true, required: false
  private _auth = new ConnectorAuthOutputReference(this, "auth");
  public get auth() {
    return this._auth;
  }
  public putAuth(value: ConnectorAuth) {
    this._auth.internalValue = value;
  }
  public resetAuth() {
    this._auth.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authInput() {
    return this._auth.internalValue;
  }

  // config - computed: false, optional: true, required: false
  private _config = new ConnectorConfigAOutputReference(this, "config");
  public get config() {
    return this._config;
  }
  public putConfig(value: ConnectorConfigA) {
    this._config.internalValue = value;
  }
  public resetConfig() {
    this._config.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config.internalValue;
  }

  // destination_schema - computed: false, optional: true, required: false
  private _destinationSchema = new ConnectorDestinationSchemaOutputReference(this, "destination_schema");
  public get destinationSchema() {
    return this._destinationSchema;
  }
  public putDestinationSchema(value: ConnectorDestinationSchema) {
    this._destinationSchema.internalValue = value;
  }
  public resetDestinationSchema() {
    this._destinationSchema.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destinationSchemaInput() {
    return this._destinationSchema.internalValue;
  }

  // timeouts - computed: false, optional: true, required: false
  private _timeouts = new ConnectorTimeoutsOutputReference(this, "timeouts");
  public get timeouts() {
    return this._timeouts;
  }
  public putTimeouts(value: ConnectorTimeouts) {
    this._timeouts.internalValue = value;
  }
  public resetTimeouts() {
    this._timeouts.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeoutsInput() {
    return this._timeouts.internalValue;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      data_delay_sensitivity: cdktf.stringToTerraform(this._dataDelaySensitivity),
      data_delay_threshold: cdktf.numberToTerraform(this._dataDelayThreshold),
      group_id: cdktf.stringToTerraform(this._groupId),
      hybrid_deployment_agent_id: cdktf.stringToTerraform(this._hybridDeploymentAgentId),
      networking_method: cdktf.stringToTerraform(this._networkingMethod),
      private_link_id: cdktf.stringToTerraform(this._privateLinkId),
      proxy_agent_id: cdktf.stringToTerraform(this._proxyAgentId),
      run_setup_tests: cdktf.booleanToTerraform(this._runSetupTests),
      service: cdktf.stringToTerraform(this._service),
      trust_certificates: cdktf.booleanToTerraform(this._trustCertificates),
      trust_fingerprints: cdktf.booleanToTerraform(this._trustFingerprints),
      auth: connectorAuthToTerraform(this._auth.internalValue),
      config: connectorConfigAToTerraform(this._config.internalValue),
      destination_schema: connectorDestinationSchemaToTerraform(this._destinationSchema.internalValue),
      timeouts: connectorTimeoutsToTerraform(this._timeouts.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      data_delay_sensitivity: {
        value: cdktf.stringToHclTerraform(this._dataDelaySensitivity),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      data_delay_threshold: {
        value: cdktf.numberToHclTerraform(this._dataDelayThreshold),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      group_id: {
        value: cdktf.stringToHclTerraform(this._groupId),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      hybrid_deployment_agent_id: {
        value: cdktf.stringToHclTerraform(this._hybridDeploymentAgentId),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      networking_method: {
        value: cdktf.stringToHclTerraform(this._networkingMethod),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      private_link_id: {
        value: cdktf.stringToHclTerraform(this._privateLinkId),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      proxy_agent_id: {
        value: cdktf.stringToHclTerraform(this._proxyAgentId),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      run_setup_tests: {
        value: cdktf.booleanToHclTerraform(this._runSetupTests),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      service: {
        value: cdktf.stringToHclTerraform(this._service),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      trust_certificates: {
        value: cdktf.booleanToHclTerraform(this._trustCertificates),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      trust_fingerprints: {
        value: cdktf.booleanToHclTerraform(this._trustFingerprints),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      auth: {
        value: connectorAuthToHclTerraform(this._auth.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "ConnectorAuth",
      },
      config: {
        value: connectorConfigAToHclTerraform(this._config.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "ConnectorConfigA",
      },
      destination_schema: {
        value: connectorDestinationSchemaToHclTerraform(this._destinationSchema.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "ConnectorDestinationSchema",
      },
      timeouts: {
        value: connectorTimeoutsToHclTerraform(this._timeouts.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "ConnectorTimeouts",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
