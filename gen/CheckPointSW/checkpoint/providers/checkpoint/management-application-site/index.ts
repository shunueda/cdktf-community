// https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface ManagementApplicationSiteConfig extends cdktf.TerraformMetaArguments {
  /**
  * Used to configure or edit the additional categories of a custom application / site used in the Application and URL Filtering or Threat Prevention.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#additional_categories ManagementApplicationSite#additional_categories}
  */
  readonly additionalCategories?: string[];
  /**
  * Application signature generated by <a href="https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=&solutionid=sk103051">Signature Tool</a>.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#application_signature ManagementApplicationSite#application_signature}
  */
  readonly applicationSignature?: string;
  /**
  * Color of the object. Should be one of existing colors.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#color ManagementApplicationSite#color}
  */
  readonly color?: string;
  /**
  * Comments string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#comments ManagementApplicationSite#comments}
  */
  readonly comments?: string;
  /**
  * A description for the application.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#description ManagementApplicationSite#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#id ManagementApplicationSite#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#ignore_errors ManagementApplicationSite#ignore_errors}
  */
  readonly ignoreErrors?: boolean | cdktf.IResolvable;
  /**
  * Apply changes ignoring warnings.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#ignore_warnings ManagementApplicationSite#ignore_warnings}
  */
  readonly ignoreWarnings?: boolean | cdktf.IResolvable;
  /**
  * Object name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#name ManagementApplicationSite#name}
  */
  readonly name: string;
  /**
  * Each application is assigned to one primary category based on its most defining aspect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#primary_category ManagementApplicationSite#primary_category}
  */
  readonly primaryCategory?: string;
  /**
  * Collection of tag identifiers.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#tags ManagementApplicationSite#tags}
  */
  readonly tags?: string[];
  /**
  * URLs that determine this particular application.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#url_list ManagementApplicationSite#url_list}
  */
  readonly urlList?: string[];
  /**
  * States whether the URL is defined as a Regular Expression or not.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#urls_defined_as_regular_expression ManagementApplicationSite#urls_defined_as_regular_expression}
  */
  readonly urlsDefinedAsRegularExpression?: boolean | cdktf.IResolvable;
}

/**
* Represents a {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site checkpoint_management_application_site}
*/
export class ManagementApplicationSite extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "checkpoint_management_application_site";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a ManagementApplicationSite resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the ManagementApplicationSite to import
  * @param importFromId The id of the existing ManagementApplicationSite that should be imported. Refer to the {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the ManagementApplicationSite to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "checkpoint_management_application_site", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/checkpointsw/checkpoint/2.11.0/docs/resources/management_application_site checkpoint_management_application_site} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options ManagementApplicationSiteConfig
  */
  public constructor(scope: Construct, id: string, config: ManagementApplicationSiteConfig) {
    super(scope, id, {
      terraformResourceType: 'checkpoint_management_application_site',
      terraformGeneratorMetadata: {
        providerName: 'checkpoint',
        providerVersion: '2.11.0'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._additionalCategories = config.additionalCategories;
    this._applicationSignature = config.applicationSignature;
    this._color = config.color;
    this._comments = config.comments;
    this._description = config.description;
    this._id = config.id;
    this._ignoreErrors = config.ignoreErrors;
    this._ignoreWarnings = config.ignoreWarnings;
    this._name = config.name;
    this._primaryCategory = config.primaryCategory;
    this._tags = config.tags;
    this._urlList = config.urlList;
    this._urlsDefinedAsRegularExpression = config.urlsDefinedAsRegularExpression;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // additional_categories - computed: false, optional: true, required: false
  private _additionalCategories?: string[]; 
  public get additionalCategories() {
    return cdktf.Fn.tolist(this.getListAttribute('additional_categories'));
  }
  public set additionalCategories(value: string[]) {
    this._additionalCategories = value;
  }
  public resetAdditionalCategories() {
    this._additionalCategories = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get additionalCategoriesInput() {
    return this._additionalCategories;
  }

  // application_signature - computed: false, optional: true, required: false
  private _applicationSignature?: string; 
  public get applicationSignature() {
    return this.getStringAttribute('application_signature');
  }
  public set applicationSignature(value: string) {
    this._applicationSignature = value;
  }
  public resetApplicationSignature() {
    this._applicationSignature = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationSignatureInput() {
    return this._applicationSignature;
  }

  // color - computed: false, optional: true, required: false
  private _color?: string; 
  public get color() {
    return this.getStringAttribute('color');
  }
  public set color(value: string) {
    this._color = value;
  }
  public resetColor() {
    this._color = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get colorInput() {
    return this._color;
  }

  // comments - computed: false, optional: true, required: false
  private _comments?: string; 
  public get comments() {
    return this.getStringAttribute('comments');
  }
  public set comments(value: string) {
    this._comments = value;
  }
  public resetComments() {
    this._comments = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commentsInput() {
    return this._comments;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // id - computed: true, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // ignore_errors - computed: false, optional: true, required: false
  private _ignoreErrors?: boolean | cdktf.IResolvable; 
  public get ignoreErrors() {
    return this.getBooleanAttribute('ignore_errors');
  }
  public set ignoreErrors(value: boolean | cdktf.IResolvable) {
    this._ignoreErrors = value;
  }
  public resetIgnoreErrors() {
    this._ignoreErrors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ignoreErrorsInput() {
    return this._ignoreErrors;
  }

  // ignore_warnings - computed: false, optional: true, required: false
  private _ignoreWarnings?: boolean | cdktf.IResolvable; 
  public get ignoreWarnings() {
    return this.getBooleanAttribute('ignore_warnings');
  }
  public set ignoreWarnings(value: boolean | cdktf.IResolvable) {
    this._ignoreWarnings = value;
  }
  public resetIgnoreWarnings() {
    this._ignoreWarnings = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ignoreWarningsInput() {
    return this._ignoreWarnings;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // primary_category - computed: false, optional: true, required: false
  private _primaryCategory?: string; 
  public get primaryCategory() {
    return this.getStringAttribute('primary_category');
  }
  public set primaryCategory(value: string) {
    this._primaryCategory = value;
  }
  public resetPrimaryCategory() {
    this._primaryCategory = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get primaryCategoryInput() {
    return this._primaryCategory;
  }

  // tags - computed: false, optional: true, required: false
  private _tags?: string[]; 
  public get tags() {
    return cdktf.Fn.tolist(this.getListAttribute('tags'));
  }
  public set tags(value: string[]) {
    this._tags = value;
  }
  public resetTags() {
    this._tags = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags;
  }

  // url_list - computed: false, optional: true, required: false
  private _urlList?: string[]; 
  public get urlList() {
    return cdktf.Fn.tolist(this.getListAttribute('url_list'));
  }
  public set urlList(value: string[]) {
    this._urlList = value;
  }
  public resetUrlList() {
    this._urlList = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlListInput() {
    return this._urlList;
  }

  // urls_defined_as_regular_expression - computed: false, optional: true, required: false
  private _urlsDefinedAsRegularExpression?: boolean | cdktf.IResolvable; 
  public get urlsDefinedAsRegularExpression() {
    return this.getBooleanAttribute('urls_defined_as_regular_expression');
  }
  public set urlsDefinedAsRegularExpression(value: boolean | cdktf.IResolvable) {
    this._urlsDefinedAsRegularExpression = value;
  }
  public resetUrlsDefinedAsRegularExpression() {
    this._urlsDefinedAsRegularExpression = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlsDefinedAsRegularExpressionInput() {
    return this._urlsDefinedAsRegularExpression;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      additional_categories: cdktf.listMapper(cdktf.stringToTerraform, false)(this._additionalCategories),
      application_signature: cdktf.stringToTerraform(this._applicationSignature),
      color: cdktf.stringToTerraform(this._color),
      comments: cdktf.stringToTerraform(this._comments),
      description: cdktf.stringToTerraform(this._description),
      id: cdktf.stringToTerraform(this._id),
      ignore_errors: cdktf.booleanToTerraform(this._ignoreErrors),
      ignore_warnings: cdktf.booleanToTerraform(this._ignoreWarnings),
      name: cdktf.stringToTerraform(this._name),
      primary_category: cdktf.stringToTerraform(this._primaryCategory),
      tags: cdktf.listMapper(cdktf.stringToTerraform, false)(this._tags),
      url_list: cdktf.listMapper(cdktf.stringToTerraform, false)(this._urlList),
      urls_defined_as_regular_expression: cdktf.booleanToTerraform(this._urlsDefinedAsRegularExpression),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      additional_categories: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._additionalCategories),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      application_signature: {
        value: cdktf.stringToHclTerraform(this._applicationSignature),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      color: {
        value: cdktf.stringToHclTerraform(this._color),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      comments: {
        value: cdktf.stringToHclTerraform(this._comments),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      description: {
        value: cdktf.stringToHclTerraform(this._description),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      id: {
        value: cdktf.stringToHclTerraform(this._id),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      ignore_errors: {
        value: cdktf.booleanToHclTerraform(this._ignoreErrors),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      ignore_warnings: {
        value: cdktf.booleanToHclTerraform(this._ignoreWarnings),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      name: {
        value: cdktf.stringToHclTerraform(this._name),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      primary_category: {
        value: cdktf.stringToHclTerraform(this._primaryCategory),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      tags: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._tags),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      url_list: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._urlList),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      urls_defined_as_regular_expression: {
        value: cdktf.booleanToHclTerraform(this._urlsDefinedAsRegularExpression),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
