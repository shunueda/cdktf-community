// https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface AdvancedMalwareProtectionPolicyDefinitionConfig extends cdktf.TerraformMetaArguments {
  /**
  * File reputation alerts Log level
  *   - Choices: `critical`, `warning`, `info`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#alert_log_level AdvancedMalwareProtectionPolicyDefinition#alert_log_level}
  */
  readonly alertLogLevel?: string;
  /**
  * AMP Cloud Region
  *   - Choices: `nam`, `eu`, `apjc`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#amp_cloud_region AdvancedMalwareProtectionPolicyDefinition#amp_cloud_region}
  */
  readonly ampCloudRegion?: string;
  /**
  * AMP Cloud Region
  *   - Choices: `nam`, `eu`, `apjc`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#amp_cloud_region_est_server AdvancedMalwareProtectionPolicyDefinition#amp_cloud_region_est_server}
  */
  readonly ampCloudRegionEstServer?: string;
  /**
  * The description of the policy definition
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#description AdvancedMalwareProtectionPolicyDefinition#description}
  */
  readonly description: string;
  /**
  * Should file analysis be enabled
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#file_analysis AdvancedMalwareProtectionPolicyDefinition#file_analysis}
  */
  readonly fileAnalysis?: boolean | cdktf.IResolvable;
  /**
  * File analysis alerts Log level
  *   - Choices: `critical`, `warning`, `info`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#file_analysis_alert_log_level AdvancedMalwareProtectionPolicyDefinition#file_analysis_alert_log_level}
  */
  readonly fileAnalysisAlertLogLevel?: string;
  /**
  * TG Cloud Region
  *   - Choices: `nam`, `eu`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#file_analysis_cloud_region AdvancedMalwareProtectionPolicyDefinition#file_analysis_cloud_region}
  */
  readonly fileAnalysisCloudRegion?: string;
  /**
  * List of file type
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#file_analysis_file_types AdvancedMalwareProtectionPolicyDefinition#file_analysis_file_types}
  */
  readonly fileAnalysisFileTypes?: string[];
  /**
  * Should match all VPNs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#match_all_vpn AdvancedMalwareProtectionPolicyDefinition#match_all_vpn}
  */
  readonly matchAllVpn?: boolean | cdktf.IResolvable;
  /**
  * The policy mode
  *   - Choices: `security`, `unified`
  *   - Default value: `security`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#mode AdvancedMalwareProtectionPolicyDefinition#mode}
  */
  readonly mode?: string;
  /**
  * The name of the policy definition
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#name AdvancedMalwareProtectionPolicyDefinition#name}
  */
  readonly name: string;
  /**
  * List of VPN IDs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#target_vpns AdvancedMalwareProtectionPolicyDefinition#target_vpns}
  */
  readonly targetVpns?: string[];
}

/**
* Represents a {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition sdwan_advanced_malware_protection_policy_definition}
*/
export class AdvancedMalwareProtectionPolicyDefinition extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "sdwan_advanced_malware_protection_policy_definition";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a AdvancedMalwareProtectionPolicyDefinition resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the AdvancedMalwareProtectionPolicyDefinition to import
  * @param importFromId The id of the existing AdvancedMalwareProtectionPolicyDefinition that should be imported. Refer to the {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the AdvancedMalwareProtectionPolicyDefinition to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "sdwan_advanced_malware_protection_policy_definition", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/ciscodevnet/sdwan/0.8.0/docs/resources/advanced_malware_protection_policy_definition sdwan_advanced_malware_protection_policy_definition} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options AdvancedMalwareProtectionPolicyDefinitionConfig
  */
  public constructor(scope: Construct, id: string, config: AdvancedMalwareProtectionPolicyDefinitionConfig) {
    super(scope, id, {
      terraformResourceType: 'sdwan_advanced_malware_protection_policy_definition',
      terraformGeneratorMetadata: {
        providerName: 'sdwan',
        providerVersion: '0.8.0'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._alertLogLevel = config.alertLogLevel;
    this._ampCloudRegion = config.ampCloudRegion;
    this._ampCloudRegionEstServer = config.ampCloudRegionEstServer;
    this._description = config.description;
    this._fileAnalysis = config.fileAnalysis;
    this._fileAnalysisAlertLogLevel = config.fileAnalysisAlertLogLevel;
    this._fileAnalysisCloudRegion = config.fileAnalysisCloudRegion;
    this._fileAnalysisFileTypes = config.fileAnalysisFileTypes;
    this._matchAllVpn = config.matchAllVpn;
    this._mode = config.mode;
    this._name = config.name;
    this._targetVpns = config.targetVpns;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // alert_log_level - computed: false, optional: true, required: false
  private _alertLogLevel?: string; 
  public get alertLogLevel() {
    return this.getStringAttribute('alert_log_level');
  }
  public set alertLogLevel(value: string) {
    this._alertLogLevel = value;
  }
  public resetAlertLogLevel() {
    this._alertLogLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get alertLogLevelInput() {
    return this._alertLogLevel;
  }

  // amp_cloud_region - computed: false, optional: true, required: false
  private _ampCloudRegion?: string; 
  public get ampCloudRegion() {
    return this.getStringAttribute('amp_cloud_region');
  }
  public set ampCloudRegion(value: string) {
    this._ampCloudRegion = value;
  }
  public resetAmpCloudRegion() {
    this._ampCloudRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ampCloudRegionInput() {
    return this._ampCloudRegion;
  }

  // amp_cloud_region_est_server - computed: false, optional: true, required: false
  private _ampCloudRegionEstServer?: string; 
  public get ampCloudRegionEstServer() {
    return this.getStringAttribute('amp_cloud_region_est_server');
  }
  public set ampCloudRegionEstServer(value: string) {
    this._ampCloudRegionEstServer = value;
  }
  public resetAmpCloudRegionEstServer() {
    this._ampCloudRegionEstServer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ampCloudRegionEstServerInput() {
    return this._ampCloudRegionEstServer;
  }

  // description - computed: false, optional: false, required: true
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // file_analysis - computed: false, optional: true, required: false
  private _fileAnalysis?: boolean | cdktf.IResolvable; 
  public get fileAnalysis() {
    return this.getBooleanAttribute('file_analysis');
  }
  public set fileAnalysis(value: boolean | cdktf.IResolvable) {
    this._fileAnalysis = value;
  }
  public resetFileAnalysis() {
    this._fileAnalysis = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileAnalysisInput() {
    return this._fileAnalysis;
  }

  // file_analysis_alert_log_level - computed: false, optional: true, required: false
  private _fileAnalysisAlertLogLevel?: string; 
  public get fileAnalysisAlertLogLevel() {
    return this.getStringAttribute('file_analysis_alert_log_level');
  }
  public set fileAnalysisAlertLogLevel(value: string) {
    this._fileAnalysisAlertLogLevel = value;
  }
  public resetFileAnalysisAlertLogLevel() {
    this._fileAnalysisAlertLogLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileAnalysisAlertLogLevelInput() {
    return this._fileAnalysisAlertLogLevel;
  }

  // file_analysis_cloud_region - computed: false, optional: true, required: false
  private _fileAnalysisCloudRegion?: string; 
  public get fileAnalysisCloudRegion() {
    return this.getStringAttribute('file_analysis_cloud_region');
  }
  public set fileAnalysisCloudRegion(value: string) {
    this._fileAnalysisCloudRegion = value;
  }
  public resetFileAnalysisCloudRegion() {
    this._fileAnalysisCloudRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileAnalysisCloudRegionInput() {
    return this._fileAnalysisCloudRegion;
  }

  // file_analysis_file_types - computed: false, optional: true, required: false
  private _fileAnalysisFileTypes?: string[]; 
  public get fileAnalysisFileTypes() {
    return cdktf.Fn.tolist(this.getListAttribute('file_analysis_file_types'));
  }
  public set fileAnalysisFileTypes(value: string[]) {
    this._fileAnalysisFileTypes = value;
  }
  public resetFileAnalysisFileTypes() {
    this._fileAnalysisFileTypes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileAnalysisFileTypesInput() {
    return this._fileAnalysisFileTypes;
  }

  // id - computed: true, optional: false, required: false
  public get id() {
    return this.getStringAttribute('id');
  }

  // match_all_vpn - computed: false, optional: true, required: false
  private _matchAllVpn?: boolean | cdktf.IResolvable; 
  public get matchAllVpn() {
    return this.getBooleanAttribute('match_all_vpn');
  }
  public set matchAllVpn(value: boolean | cdktf.IResolvable) {
    this._matchAllVpn = value;
  }
  public resetMatchAllVpn() {
    this._matchAllVpn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchAllVpnInput() {
    return this._matchAllVpn;
  }

  // mode - computed: true, optional: true, required: false
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // target_vpns - computed: false, optional: true, required: false
  private _targetVpns?: string[]; 
  public get targetVpns() {
    return cdktf.Fn.tolist(this.getListAttribute('target_vpns'));
  }
  public set targetVpns(value: string[]) {
    this._targetVpns = value;
  }
  public resetTargetVpns() {
    this._targetVpns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetVpnsInput() {
    return this._targetVpns;
  }

  // version - computed: true, optional: false, required: false
  public get version() {
    return this.getNumberAttribute('version');
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      alert_log_level: cdktf.stringToTerraform(this._alertLogLevel),
      amp_cloud_region: cdktf.stringToTerraform(this._ampCloudRegion),
      amp_cloud_region_est_server: cdktf.stringToTerraform(this._ampCloudRegionEstServer),
      description: cdktf.stringToTerraform(this._description),
      file_analysis: cdktf.booleanToTerraform(this._fileAnalysis),
      file_analysis_alert_log_level: cdktf.stringToTerraform(this._fileAnalysisAlertLogLevel),
      file_analysis_cloud_region: cdktf.stringToTerraform(this._fileAnalysisCloudRegion),
      file_analysis_file_types: cdktf.listMapper(cdktf.stringToTerraform, false)(this._fileAnalysisFileTypes),
      match_all_vpn: cdktf.booleanToTerraform(this._matchAllVpn),
      mode: cdktf.stringToTerraform(this._mode),
      name: cdktf.stringToTerraform(this._name),
      target_vpns: cdktf.listMapper(cdktf.stringToTerraform, false)(this._targetVpns),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      alert_log_level: {
        value: cdktf.stringToHclTerraform(this._alertLogLevel),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      amp_cloud_region: {
        value: cdktf.stringToHclTerraform(this._ampCloudRegion),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      amp_cloud_region_est_server: {
        value: cdktf.stringToHclTerraform(this._ampCloudRegionEstServer),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      description: {
        value: cdktf.stringToHclTerraform(this._description),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      file_analysis: {
        value: cdktf.booleanToHclTerraform(this._fileAnalysis),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      file_analysis_alert_log_level: {
        value: cdktf.stringToHclTerraform(this._fileAnalysisAlertLogLevel),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      file_analysis_cloud_region: {
        value: cdktf.stringToHclTerraform(this._fileAnalysisCloudRegion),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      file_analysis_file_types: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._fileAnalysisFileTypes),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      match_all_vpn: {
        value: cdktf.booleanToHclTerraform(this._matchAllVpn),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      mode: {
        value: cdktf.stringToHclTerraform(this._mode),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      name: {
        value: cdktf.stringToHclTerraform(this._name),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      target_vpns: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._targetVpns),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
