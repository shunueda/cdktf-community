// https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface VulnerabilityExceptionHostConfig extends cdktf.TerraformMetaArguments {
  /**
  * The description of the vulnerability exception
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#description VulnerabilityExceptionHost#description}
  */
  readonly description?: string;
  /**
  * The state of the vulnerability exception
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#enabled VulnerabilityExceptionHost#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * The expiration date of the vulnerability exception
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#expiry VulnerabilityExceptionHost#expiry}
  */
  readonly expiry?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#id VulnerabilityExceptionHost#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * The name of the vulnerability exception
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#name VulnerabilityExceptionHost#name}
  */
  readonly name: string;
  /**
  * List of severities for the vulnerability exception. Valid severities are: [Fix Pending Other Unknown Accepted Risk False Positive Compensating Controls]
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#reason VulnerabilityExceptionHost#reason}
  */
  readonly reason?: string;
  /**
  * resource_scope block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#resource_scope VulnerabilityExceptionHost#resource_scope}
  */
  readonly resourceScope?: VulnerabilityExceptionHostResourceScope;
  /**
  * vulnerability_criteria block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#vulnerability_criteria VulnerabilityExceptionHost#vulnerability_criteria}
  */
  readonly vulnerabilityCriteria: VulnerabilityExceptionHostVulnerabilityCriteria;
}
export interface VulnerabilityExceptionHostResourceScope {
  /**
  * The list of cluster names
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#cluster_names VulnerabilityExceptionHost#cluster_names}
  */
  readonly clusterNames?: string[];
  /**
  * The list of external ips
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#external_ips VulnerabilityExceptionHost#external_ips}
  */
  readonly externalIps?: string[];
  /**
  * The list of hostnames
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#hostnames VulnerabilityExceptionHost#hostnames}
  */
  readonly hostnames?: string[];
  /**
  * The list of namespaces
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#namespaces VulnerabilityExceptionHost#namespaces}
  */
  readonly namespaces?: string[];
}

export function vulnerabilityExceptionHostResourceScopeToTerraform(struct?: VulnerabilityExceptionHostResourceScopeOutputReference | VulnerabilityExceptionHostResourceScope): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.clusterNames),
    external_ips: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.externalIps),
    hostnames: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.hostnames),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
  }
}


export function vulnerabilityExceptionHostResourceScopeToHclTerraform(struct?: VulnerabilityExceptionHostResourceScopeOutputReference | VulnerabilityExceptionHostResourceScope): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.clusterNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    external_ips: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.externalIps),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    hostnames: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.hostnames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class VulnerabilityExceptionHostResourceScopeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): VulnerabilityExceptionHostResourceScope | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clusterNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterNames = this._clusterNames;
    }
    if (this._externalIps !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalIps = this._externalIps;
    }
    if (this._hostnames !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostnames = this._hostnames;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: VulnerabilityExceptionHostResourceScope | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._clusterNames = undefined;
      this._externalIps = undefined;
      this._hostnames = undefined;
      this._namespaces = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._clusterNames = value.clusterNames;
      this._externalIps = value.externalIps;
      this._hostnames = value.hostnames;
      this._namespaces = value.namespaces;
    }
  }

  // cluster_names - computed: false, optional: true, required: false
  private _clusterNames?: string[]; 
  public get clusterNames() {
    return this.getListAttribute('cluster_names');
  }
  public set clusterNames(value: string[]) {
    this._clusterNames = value;
  }
  public resetClusterNames() {
    this._clusterNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterNamesInput() {
    return this._clusterNames;
  }

  // external_ips - computed: false, optional: true, required: false
  private _externalIps?: string[]; 
  public get externalIps() {
    return this.getListAttribute('external_ips');
  }
  public set externalIps(value: string[]) {
    this._externalIps = value;
  }
  public resetExternalIps() {
    this._externalIps = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalIpsInput() {
    return this._externalIps;
  }

  // hostnames - computed: false, optional: true, required: false
  private _hostnames?: string[]; 
  public get hostnames() {
    return this.getListAttribute('hostnames');
  }
  public set hostnames(value: string[]) {
    this._hostnames = value;
  }
  public resetHostnames() {
    this._hostnames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnamesInput() {
    return this._hostnames;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }
}
export interface VulnerabilityExceptionHostVulnerabilityCriteriaPackage {
  /**
  * The name of the package
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#name VulnerabilityExceptionHost#name}
  */
  readonly name: string;
  /**
  * The version of the package
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#version VulnerabilityExceptionHost#version}
  */
  readonly version: string;
}

export function vulnerabilityExceptionHostVulnerabilityCriteriaPackageToTerraform(struct?: VulnerabilityExceptionHostVulnerabilityCriteriaPackage | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function vulnerabilityExceptionHostVulnerabilityCriteriaPackageToHclTerraform(struct?: VulnerabilityExceptionHostVulnerabilityCriteriaPackage | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class VulnerabilityExceptionHostVulnerabilityCriteriaPackageOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): VulnerabilityExceptionHostVulnerabilityCriteriaPackage | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: VulnerabilityExceptionHostVulnerabilityCriteriaPackage | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._version = value.version;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}

export class VulnerabilityExceptionHostVulnerabilityCriteriaPackageList extends cdktf.ComplexList {
  public internalValue? : VulnerabilityExceptionHostVulnerabilityCriteriaPackage[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): VulnerabilityExceptionHostVulnerabilityCriteriaPackageOutputReference {
    return new VulnerabilityExceptionHostVulnerabilityCriteriaPackageOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface VulnerabilityExceptionHostVulnerabilityCriteria {
  /**
  * The list of cves
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#cves VulnerabilityExceptionHost#cves}
  */
  readonly cves?: string[];
  /**
  * Whether to filter on fixable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#fixable_vuln VulnerabilityExceptionHost#fixable_vuln}
  */
  readonly fixableVuln?: string;
  /**
  * List of severities for the vulnerability exception. Valid severities are: Critical, High, Medium, Low, Info
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#severities VulnerabilityExceptionHost#severities}
  */
  readonly severities?: string[];
  /**
  * package block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#package VulnerabilityExceptionHost#package}
  */
  readonly package?: VulnerabilityExceptionHostVulnerabilityCriteriaPackage[] | cdktf.IResolvable;
}

export function vulnerabilityExceptionHostVulnerabilityCriteriaToTerraform(struct?: VulnerabilityExceptionHostVulnerabilityCriteriaOutputReference | VulnerabilityExceptionHostVulnerabilityCriteria): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cves: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.cves),
    fixable_vuln: cdktf.stringToTerraform(struct!.fixableVuln),
    severities: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.severities),
    package: cdktf.listMapper(vulnerabilityExceptionHostVulnerabilityCriteriaPackageToTerraform, true)(struct!.package),
  }
}


export function vulnerabilityExceptionHostVulnerabilityCriteriaToHclTerraform(struct?: VulnerabilityExceptionHostVulnerabilityCriteriaOutputReference | VulnerabilityExceptionHostVulnerabilityCriteria): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cves: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.cves),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    fixable_vuln: {
      value: cdktf.stringToHclTerraform(struct!.fixableVuln),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    severities: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.severities),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    package: {
      value: cdktf.listMapperHcl(vulnerabilityExceptionHostVulnerabilityCriteriaPackageToHclTerraform, true)(struct!.package),
      isBlock: true,
      type: "set",
      storageClassType: "VulnerabilityExceptionHostVulnerabilityCriteriaPackageList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class VulnerabilityExceptionHostVulnerabilityCriteriaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): VulnerabilityExceptionHostVulnerabilityCriteria | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cves !== undefined) {
      hasAnyValues = true;
      internalValueResult.cves = this._cves;
    }
    if (this._fixableVuln !== undefined) {
      hasAnyValues = true;
      internalValueResult.fixableVuln = this._fixableVuln;
    }
    if (this._severities !== undefined) {
      hasAnyValues = true;
      internalValueResult.severities = this._severities;
    }
    if (this._package?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.package = this._package?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: VulnerabilityExceptionHostVulnerabilityCriteria | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._cves = undefined;
      this._fixableVuln = undefined;
      this._severities = undefined;
      this._package.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._cves = value.cves;
      this._fixableVuln = value.fixableVuln;
      this._severities = value.severities;
      this._package.internalValue = value.package;
    }
  }

  // cves - computed: false, optional: true, required: false
  private _cves?: string[]; 
  public get cves() {
    return this.getListAttribute('cves');
  }
  public set cves(value: string[]) {
    this._cves = value;
  }
  public resetCves() {
    this._cves = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cvesInput() {
    return this._cves;
  }

  // fixable_vuln - computed: false, optional: true, required: false
  private _fixableVuln?: string; 
  public get fixableVuln() {
    return this.getStringAttribute('fixable_vuln');
  }
  public set fixableVuln(value: string) {
    this._fixableVuln = value;
  }
  public resetFixableVuln() {
    this._fixableVuln = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fixableVulnInput() {
    return this._fixableVuln;
  }

  // severities - computed: false, optional: true, required: false
  private _severities?: string[]; 
  public get severities() {
    return this.getListAttribute('severities');
  }
  public set severities(value: string[]) {
    this._severities = value;
  }
  public resetSeverities() {
    this._severities = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get severitiesInput() {
    return this._severities;
  }

  // package - computed: false, optional: true, required: false
  private _package = new VulnerabilityExceptionHostVulnerabilityCriteriaPackageList(this, "package", true);
  public get package() {
    return this._package;
  }
  public putPackage(value: VulnerabilityExceptionHostVulnerabilityCriteriaPackage[] | cdktf.IResolvable) {
    this._package.internalValue = value;
  }
  public resetPackage() {
    this._package.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get packageInput() {
    return this._package.internalValue;
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host lacework_vulnerability_exception_host}
*/
export class VulnerabilityExceptionHost extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "lacework_vulnerability_exception_host";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a VulnerabilityExceptionHost resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the VulnerabilityExceptionHost to import
  * @param importFromId The id of the existing VulnerabilityExceptionHost that should be imported. Refer to the {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the VulnerabilityExceptionHost to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "lacework_vulnerability_exception_host", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/lacework/lacework/2.0.10/docs/resources/vulnerability_exception_host lacework_vulnerability_exception_host} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options VulnerabilityExceptionHostConfig
  */
  public constructor(scope: Construct, id: string, config: VulnerabilityExceptionHostConfig) {
    super(scope, id, {
      terraformResourceType: 'lacework_vulnerability_exception_host',
      terraformGeneratorMetadata: {
        providerName: 'lacework',
        providerVersion: '2.0.10'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._description = config.description;
    this._enabled = config.enabled;
    this._expiry = config.expiry;
    this._id = config.id;
    this._name = config.name;
    this._reason = config.reason;
    this._resourceScope.internalValue = config.resourceScope;
    this._vulnerabilityCriteria.internalValue = config.vulnerabilityCriteria;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // created_by - computed: true, optional: false, required: false
  public get createdBy() {
    return this.getStringAttribute('created_by');
  }

  // created_time - computed: true, optional: false, required: false
  public get createdTime() {
    return this.getStringAttribute('created_time');
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // expiry - computed: false, optional: true, required: false
  private _expiry?: string; 
  public get expiry() {
    return this.getStringAttribute('expiry');
  }
  public set expiry(value: string) {
    this._expiry = value;
  }
  public resetExpiry() {
    this._expiry = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expiryInput() {
    return this._expiry;
  }

  // guid - computed: true, optional: false, required: false
  public get guid() {
    return this.getStringAttribute('guid');
  }

  // id - computed: true, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }

  // type - computed: true, optional: false, required: false
  public get type() {
    return this.getStringAttribute('type');
  }

  // updated_by - computed: true, optional: false, required: false
  public get updatedBy() {
    return this.getStringAttribute('updated_by');
  }

  // updated_time - computed: true, optional: false, required: false
  public get updatedTime() {
    return this.getStringAttribute('updated_time');
  }

  // resource_scope - computed: false, optional: true, required: false
  private _resourceScope = new VulnerabilityExceptionHostResourceScopeOutputReference(this, "resource_scope");
  public get resourceScope() {
    return this._resourceScope;
  }
  public putResourceScope(value: VulnerabilityExceptionHostResourceScope) {
    this._resourceScope.internalValue = value;
  }
  public resetResourceScope() {
    this._resourceScope.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceScopeInput() {
    return this._resourceScope.internalValue;
  }

  // vulnerability_criteria - computed: false, optional: false, required: true
  private _vulnerabilityCriteria = new VulnerabilityExceptionHostVulnerabilityCriteriaOutputReference(this, "vulnerability_criteria");
  public get vulnerabilityCriteria() {
    return this._vulnerabilityCriteria;
  }
  public putVulnerabilityCriteria(value: VulnerabilityExceptionHostVulnerabilityCriteria) {
    this._vulnerabilityCriteria.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get vulnerabilityCriteriaInput() {
    return this._vulnerabilityCriteria.internalValue;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      description: cdktf.stringToTerraform(this._description),
      enabled: cdktf.booleanToTerraform(this._enabled),
      expiry: cdktf.stringToTerraform(this._expiry),
      id: cdktf.stringToTerraform(this._id),
      name: cdktf.stringToTerraform(this._name),
      reason: cdktf.stringToTerraform(this._reason),
      resource_scope: vulnerabilityExceptionHostResourceScopeToTerraform(this._resourceScope.internalValue),
      vulnerability_criteria: vulnerabilityExceptionHostVulnerabilityCriteriaToTerraform(this._vulnerabilityCriteria.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      description: {
        value: cdktf.stringToHclTerraform(this._description),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      enabled: {
        value: cdktf.booleanToHclTerraform(this._enabled),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      expiry: {
        value: cdktf.stringToHclTerraform(this._expiry),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      id: {
        value: cdktf.stringToHclTerraform(this._id),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      name: {
        value: cdktf.stringToHclTerraform(this._name),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      reason: {
        value: cdktf.stringToHclTerraform(this._reason),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      resource_scope: {
        value: vulnerabilityExceptionHostResourceScopeToHclTerraform(this._resourceScope.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "VulnerabilityExceptionHostResourceScopeList",
      },
      vulnerability_criteria: {
        value: vulnerabilityExceptionHostVulnerabilityCriteriaToHclTerraform(this._vulnerabilityCriteria.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "VulnerabilityExceptionHostVulnerabilityCriteriaList",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
