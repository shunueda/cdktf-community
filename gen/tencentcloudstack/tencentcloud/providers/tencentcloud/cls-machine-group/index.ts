// https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface ClsMachineGroupConfig extends cdktf.TerraformMetaArguments {
  /**
  * Whether to enable automatic update for the machine group.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group#auto_update ClsMachineGroup#auto_update}
  */
  readonly autoUpdate?: boolean | cdktf.IResolvable;
  /**
  * Machine group name, which must be unique.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group#group_name ClsMachineGroup#group_name}
  */
  readonly groupName: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group#id ClsMachineGroup#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Whether to enable the service log to record the logs generated by the LogListener service itself. After it is enabled, the internal logset cls_service_logging and the loglistener_status, loglistener_alarm, and loglistener_business log topics will be created, which will not incur fees.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group#service_logging ClsMachineGroup#service_logging}
  */
  readonly serviceLogging?: boolean | cdktf.IResolvable;
  /**
  * Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group#tags ClsMachineGroup#tags}
  */
  readonly tags?: { [key: string]: string };
  /**
  * Update end time. We recommend you update LogListener during off-peak hours.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group#update_end_time ClsMachineGroup#update_end_time}
  */
  readonly updateEndTime?: string;
  /**
  * Update start time. We recommend you update LogListener during off-peak hours.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group#update_start_time ClsMachineGroup#update_start_time}
  */
  readonly updateStartTime?: string;
  /**
  * machine_group_type block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group#machine_group_type ClsMachineGroup#machine_group_type}
  */
  readonly machineGroupType: ClsMachineGroupMachineGroupType;
}
export interface ClsMachineGroupMachineGroupType {
  /**
  * Machine group type. Valid values: ip: the IP addresses of collection machines are stored in Values of the machine group; label: the tags of the machines are stored in Values of the machine group.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group#type ClsMachineGroup#type}
  */
  readonly type: string;
  /**
  * Machine description list.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group#values ClsMachineGroup#values}
  */
  readonly values: string[];
}

export function clsMachineGroupMachineGroupTypeToTerraform(struct?: ClsMachineGroupMachineGroupTypeOutputReference | ClsMachineGroupMachineGroupType): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function clsMachineGroupMachineGroupTypeToHclTerraform(struct?: ClsMachineGroupMachineGroupTypeOutputReference | ClsMachineGroupMachineGroupType): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ClsMachineGroupMachineGroupTypeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): ClsMachineGroupMachineGroupType | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ClsMachineGroupMachineGroupType | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._type = undefined;
      this._values = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._type = value.type;
      this._values = value.values;
    }
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // values - computed: false, optional: false, required: true
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group tencentcloud_cls_machine_group}
*/
export class ClsMachineGroup extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "tencentcloud_cls_machine_group";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a ClsMachineGroup resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the ClsMachineGroup to import
  * @param importFromId The id of the existing ClsMachineGroup that should be imported. Refer to the {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the ClsMachineGroup to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "tencentcloud_cls_machine_group", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/cls_machine_group tencentcloud_cls_machine_group} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options ClsMachineGroupConfig
  */
  public constructor(scope: Construct, id: string, config: ClsMachineGroupConfig) {
    super(scope, id, {
      terraformResourceType: 'tencentcloud_cls_machine_group',
      terraformGeneratorMetadata: {
        providerName: 'tencentcloud',
        providerVersion: '1.82.32'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._autoUpdate = config.autoUpdate;
    this._groupName = config.groupName;
    this._id = config.id;
    this._serviceLogging = config.serviceLogging;
    this._tags = config.tags;
    this._updateEndTime = config.updateEndTime;
    this._updateStartTime = config.updateStartTime;
    this._machineGroupType.internalValue = config.machineGroupType;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // auto_update - computed: false, optional: true, required: false
  private _autoUpdate?: boolean | cdktf.IResolvable; 
  public get autoUpdate() {
    return this.getBooleanAttribute('auto_update');
  }
  public set autoUpdate(value: boolean | cdktf.IResolvable) {
    this._autoUpdate = value;
  }
  public resetAutoUpdate() {
    this._autoUpdate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoUpdateInput() {
    return this._autoUpdate;
  }

  // group_name - computed: false, optional: false, required: true
  private _groupName?: string; 
  public get groupName() {
    return this.getStringAttribute('group_name');
  }
  public set groupName(value: string) {
    this._groupName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get groupNameInput() {
    return this._groupName;
  }

  // id - computed: true, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // service_logging - computed: false, optional: true, required: false
  private _serviceLogging?: boolean | cdktf.IResolvable; 
  public get serviceLogging() {
    return this.getBooleanAttribute('service_logging');
  }
  public set serviceLogging(value: boolean | cdktf.IResolvable) {
    this._serviceLogging = value;
  }
  public resetServiceLogging() {
    this._serviceLogging = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceLoggingInput() {
    return this._serviceLogging;
  }

  // tags - computed: false, optional: true, required: false
  private _tags?: { [key: string]: string }; 
  public get tags() {
    return this.getStringMapAttribute('tags');
  }
  public set tags(value: { [key: string]: string }) {
    this._tags = value;
  }
  public resetTags() {
    this._tags = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags;
  }

  // update_end_time - computed: false, optional: true, required: false
  private _updateEndTime?: string; 
  public get updateEndTime() {
    return this.getStringAttribute('update_end_time');
  }
  public set updateEndTime(value: string) {
    this._updateEndTime = value;
  }
  public resetUpdateEndTime() {
    this._updateEndTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get updateEndTimeInput() {
    return this._updateEndTime;
  }

  // update_start_time - computed: false, optional: true, required: false
  private _updateStartTime?: string; 
  public get updateStartTime() {
    return this.getStringAttribute('update_start_time');
  }
  public set updateStartTime(value: string) {
    this._updateStartTime = value;
  }
  public resetUpdateStartTime() {
    this._updateStartTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get updateStartTimeInput() {
    return this._updateStartTime;
  }

  // machine_group_type - computed: false, optional: false, required: true
  private _machineGroupType = new ClsMachineGroupMachineGroupTypeOutputReference(this, "machine_group_type");
  public get machineGroupType() {
    return this._machineGroupType;
  }
  public putMachineGroupType(value: ClsMachineGroupMachineGroupType) {
    this._machineGroupType.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get machineGroupTypeInput() {
    return this._machineGroupType.internalValue;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      auto_update: cdktf.booleanToTerraform(this._autoUpdate),
      group_name: cdktf.stringToTerraform(this._groupName),
      id: cdktf.stringToTerraform(this._id),
      service_logging: cdktf.booleanToTerraform(this._serviceLogging),
      tags: cdktf.hashMapper(cdktf.stringToTerraform)(this._tags),
      update_end_time: cdktf.stringToTerraform(this._updateEndTime),
      update_start_time: cdktf.stringToTerraform(this._updateStartTime),
      machine_group_type: clsMachineGroupMachineGroupTypeToTerraform(this._machineGroupType.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      auto_update: {
        value: cdktf.booleanToHclTerraform(this._autoUpdate),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      group_name: {
        value: cdktf.stringToHclTerraform(this._groupName),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      id: {
        value: cdktf.stringToHclTerraform(this._id),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      service_logging: {
        value: cdktf.booleanToHclTerraform(this._serviceLogging),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      tags: {
        value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(this._tags),
        isBlock: false,
        type: "map",
        storageClassType: "stringMap",
      },
      update_end_time: {
        value: cdktf.stringToHclTerraform(this._updateEndTime),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      update_start_time: {
        value: cdktf.stringToHclTerraform(this._updateStartTime),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      machine_group_type: {
        value: clsMachineGroupMachineGroupTypeToHclTerraform(this._machineGroupType.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "ClsMachineGroupMachineGroupTypeList",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
