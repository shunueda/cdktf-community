// https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface ThpcWorkspacesConfig extends cdktf.TerraformMetaArguments {
  /**
  * CAM role name authorized to access.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#cam_role_name ThpcWorkspaces#cam_role_name}
  */
  readonly camRoleName?: string;
  /**
  * A string used to ensure the idempotence of the request. This string is generated by the customer and must be unique across different requests, with a maximum length of 64 ASCII characters. If this parameter is not specified, the idempotence of the request cannot be guaranteed. Example value: system-f3827db9-c58a-49cc-bf10-33fc1923a34a.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#client_token ThpcWorkspaces#client_token}
  */
  readonly clientToken?: string;
  /**
  * Placement Group ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#disaster_recover_group_id ThpcWorkspaces#disaster_recover_group_id}
  */
  readonly disasterRecoverGroupId?: string;
  /**
  * The hostname of the instance. Windows instance: The name should be a combination of 2 to 15 characters comprised of letters (case insensitive), numbers, and hyphens (-). Period (.) is not supported, and the name cannot be a string of pure numbers. Other types (such as Linux) of instances: The name should be a combination of 2 to 60 characters, supporting multiple periods (.). The piece between two periods is composed of letters (case insensitive), numbers, and hyphens (-). Modifying will cause the instance reset.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#host_name ThpcWorkspaces#host_name}
  */
  readonly hostName?: string;
  /**
  * Hyper Computing Cluster ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#hpc_cluster_id ThpcWorkspaces#hpc_cluster_id}
  */
  readonly hpcClusterId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#id ThpcWorkspaces#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Image ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#image_id ThpcWorkspaces#image_id}
  */
  readonly imageId?: string;
  /**
  * Workspace Security Group.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#security_group_ids ThpcWorkspaces#security_group_ids}
  */
  readonly securityGroupIds?: string[];
  /**
  * Workspace billing type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#space_charge_type ThpcWorkspaces#space_charge_type}
  */
  readonly spaceChargeType?: string;
  /**
  * Workspace Display Name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#space_name ThpcWorkspaces#space_name}
  */
  readonly spaceName?: string;
  /**
  * Workspace specifications.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#space_type ThpcWorkspaces#space_type}
  */
  readonly spaceType?: string;
  /**
  * User Data for Workspace.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#user_data ThpcWorkspaces#user_data}
  */
  readonly userData?: string;
  /**
  * data_disks block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#data_disks ThpcWorkspaces#data_disks}
  */
  readonly dataDisks?: ThpcWorkspacesDataDisks[] | cdktf.IResolvable;
  /**
  * enhanced_service block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#enhanced_service ThpcWorkspaces#enhanced_service}
  */
  readonly enhancedService?: ThpcWorkspacesEnhancedService;
  /**
  * internet_accessible block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#internet_accessible ThpcWorkspaces#internet_accessible}
  */
  readonly internetAccessible?: ThpcWorkspacesInternetAccessible;
  /**
  * login_settings block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#login_settings ThpcWorkspaces#login_settings}
  */
  readonly loginSettings?: ThpcWorkspacesLoginSettings;
  /**
  * placement block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#placement ThpcWorkspaces#placement}
  */
  readonly placement?: ThpcWorkspacesPlacement;
  /**
  * space_charge_prepaid block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#space_charge_prepaid ThpcWorkspaces#space_charge_prepaid}
  */
  readonly spaceChargePrepaid?: ThpcWorkspacesSpaceChargePrepaid;
  /**
  * system_disk block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#system_disk ThpcWorkspaces#system_disk}
  */
  readonly systemDisk?: ThpcWorkspacesSystemDisk;
  /**
  * tag_specification block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#tag_specification ThpcWorkspaces#tag_specification}
  */
  readonly tagSpecification?: ThpcWorkspacesTagSpecification[] | cdktf.IResolvable;
  /**
  * virtual_private_cloud block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#virtual_private_cloud ThpcWorkspaces#virtual_private_cloud}
  */
  readonly virtualPrivateCloud?: ThpcWorkspacesVirtualPrivateCloud;
}
export interface ThpcWorkspacesDataDisks {
  /**
  * Sudden performance. PS: During testing.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#burst_performance ThpcWorkspaces#burst_performance}
  */
  readonly burstPerformance?: boolean | cdktf.IResolvable;
  /**
  * Decides whether the disk is deleted with instance(only applied to `CLOUD_BASIC`, `CLOUD_SSD` and `CLOUD_PREMIUM` disk with `POSTPAID_BY_HOUR` instance), Default is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#delete_with_instance ThpcWorkspaces#delete_with_instance}
  */
  readonly deleteWithInstance?: boolean | cdktf.IResolvable;
  /**
  * Data disk ID used to initialize the data disk. When data disk type is `LOCAL_BASIC` and `LOCAL_SSD`, disk id is not supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#disk_id ThpcWorkspaces#disk_id}
  */
  readonly diskId?: string;
  /**
  * Size of the data disk, and unit is GB.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#disk_size ThpcWorkspaces#disk_size}
  */
  readonly diskSize?: number;
  /**
  * Data disk type. For more information about limits on different data disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: LOCAL_BASIC: local disk, LOCAL_SSD: local SSD disk, LOCAL_NVME: local NVME disk, specified in the InstanceType, LOCAL_PRO: local HDD disk, specified in the InstanceType, CLOUD_BASIC: HDD cloud disk, CLOUD_PREMIUM: Premium Cloud Storage, CLOUD_SSD: SSD, CLOUD_HSSD: Enhanced SSD, CLOUD_TSSD: Tremendous SSD, CLOUD_BSSD: Balanced SSD.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#disk_type ThpcWorkspaces#disk_type}
  */
  readonly diskType?: string;
  /**
  * Decides whether the disk is encrypted. Default is `false`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#encrypt ThpcWorkspaces#encrypt}
  */
  readonly encrypt?: boolean | cdktf.IResolvable;
  /**
  * Kms key ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#kms_key_id ThpcWorkspaces#kms_key_id}
  */
  readonly kmsKeyId?: string;
  /**
  * Snapshot ID of the data disk. The selected data disk snapshot size must be smaller than the data disk size.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#snapshot_id ThpcWorkspaces#snapshot_id}
  */
  readonly snapshotId?: string;
  /**
  * Add extra performance to the data disk. Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#throughput_performance ThpcWorkspaces#throughput_performance}
  */
  readonly throughputPerformance?: number;
}

export function thpcWorkspacesDataDisksToTerraform(struct?: ThpcWorkspacesDataDisks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    burst_performance: cdktf.booleanToTerraform(struct!.burstPerformance),
    delete_with_instance: cdktf.booleanToTerraform(struct!.deleteWithInstance),
    disk_id: cdktf.stringToTerraform(struct!.diskId),
    disk_size: cdktf.numberToTerraform(struct!.diskSize),
    disk_type: cdktf.stringToTerraform(struct!.diskType),
    encrypt: cdktf.booleanToTerraform(struct!.encrypt),
    kms_key_id: cdktf.stringToTerraform(struct!.kmsKeyId),
    snapshot_id: cdktf.stringToTerraform(struct!.snapshotId),
    throughput_performance: cdktf.numberToTerraform(struct!.throughputPerformance),
  }
}


export function thpcWorkspacesDataDisksToHclTerraform(struct?: ThpcWorkspacesDataDisks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    burst_performance: {
      value: cdktf.booleanToHclTerraform(struct!.burstPerformance),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    delete_with_instance: {
      value: cdktf.booleanToHclTerraform(struct!.deleteWithInstance),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disk_id: {
      value: cdktf.stringToHclTerraform(struct!.diskId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disk_size: {
      value: cdktf.numberToHclTerraform(struct!.diskSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    disk_type: {
      value: cdktf.stringToHclTerraform(struct!.diskType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    encrypt: {
      value: cdktf.booleanToHclTerraform(struct!.encrypt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    kms_key_id: {
      value: cdktf.stringToHclTerraform(struct!.kmsKeyId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snapshot_id: {
      value: cdktf.stringToHclTerraform(struct!.snapshotId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    throughput_performance: {
      value: cdktf.numberToHclTerraform(struct!.throughputPerformance),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesDataDisksOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ThpcWorkspacesDataDisks | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._burstPerformance !== undefined) {
      hasAnyValues = true;
      internalValueResult.burstPerformance = this._burstPerformance;
    }
    if (this._deleteWithInstance !== undefined) {
      hasAnyValues = true;
      internalValueResult.deleteWithInstance = this._deleteWithInstance;
    }
    if (this._diskId !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskId = this._diskId;
    }
    if (this._diskSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskSize = this._diskSize;
    }
    if (this._diskType !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskType = this._diskType;
    }
    if (this._encrypt !== undefined) {
      hasAnyValues = true;
      internalValueResult.encrypt = this._encrypt;
    }
    if (this._kmsKeyId !== undefined) {
      hasAnyValues = true;
      internalValueResult.kmsKeyId = this._kmsKeyId;
    }
    if (this._snapshotId !== undefined) {
      hasAnyValues = true;
      internalValueResult.snapshotId = this._snapshotId;
    }
    if (this._throughputPerformance !== undefined) {
      hasAnyValues = true;
      internalValueResult.throughputPerformance = this._throughputPerformance;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesDataDisks | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._burstPerformance = undefined;
      this._deleteWithInstance = undefined;
      this._diskId = undefined;
      this._diskSize = undefined;
      this._diskType = undefined;
      this._encrypt = undefined;
      this._kmsKeyId = undefined;
      this._snapshotId = undefined;
      this._throughputPerformance = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._burstPerformance = value.burstPerformance;
      this._deleteWithInstance = value.deleteWithInstance;
      this._diskId = value.diskId;
      this._diskSize = value.diskSize;
      this._diskType = value.diskType;
      this._encrypt = value.encrypt;
      this._kmsKeyId = value.kmsKeyId;
      this._snapshotId = value.snapshotId;
      this._throughputPerformance = value.throughputPerformance;
    }
  }

  // burst_performance - computed: false, optional: true, required: false
  private _burstPerformance?: boolean | cdktf.IResolvable; 
  public get burstPerformance() {
    return this.getBooleanAttribute('burst_performance');
  }
  public set burstPerformance(value: boolean | cdktf.IResolvable) {
    this._burstPerformance = value;
  }
  public resetBurstPerformance() {
    this._burstPerformance = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get burstPerformanceInput() {
    return this._burstPerformance;
  }

  // delete_with_instance - computed: false, optional: true, required: false
  private _deleteWithInstance?: boolean | cdktf.IResolvable; 
  public get deleteWithInstance() {
    return this.getBooleanAttribute('delete_with_instance');
  }
  public set deleteWithInstance(value: boolean | cdktf.IResolvable) {
    this._deleteWithInstance = value;
  }
  public resetDeleteWithInstance() {
    this._deleteWithInstance = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deleteWithInstanceInput() {
    return this._deleteWithInstance;
  }

  // disk_id - computed: true, optional: true, required: false
  private _diskId?: string; 
  public get diskId() {
    return this.getStringAttribute('disk_id');
  }
  public set diskId(value: string) {
    this._diskId = value;
  }
  public resetDiskId() {
    this._diskId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskIdInput() {
    return this._diskId;
  }

  // disk_size - computed: false, optional: true, required: false
  private _diskSize?: number; 
  public get diskSize() {
    return this.getNumberAttribute('disk_size');
  }
  public set diskSize(value: number) {
    this._diskSize = value;
  }
  public resetDiskSize() {
    this._diskSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskSizeInput() {
    return this._diskSize;
  }

  // disk_type - computed: false, optional: true, required: false
  private _diskType?: string; 
  public get diskType() {
    return this.getStringAttribute('disk_type');
  }
  public set diskType(value: string) {
    this._diskType = value;
  }
  public resetDiskType() {
    this._diskType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskTypeInput() {
    return this._diskType;
  }

  // encrypt - computed: false, optional: true, required: false
  private _encrypt?: boolean | cdktf.IResolvable; 
  public get encrypt() {
    return this.getBooleanAttribute('encrypt');
  }
  public set encrypt(value: boolean | cdktf.IResolvable) {
    this._encrypt = value;
  }
  public resetEncrypt() {
    this._encrypt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get encryptInput() {
    return this._encrypt;
  }

  // kms_key_id - computed: false, optional: true, required: false
  private _kmsKeyId?: string; 
  public get kmsKeyId() {
    return this.getStringAttribute('kms_key_id');
  }
  public set kmsKeyId(value: string) {
    this._kmsKeyId = value;
  }
  public resetKmsKeyId() {
    this._kmsKeyId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kmsKeyIdInput() {
    return this._kmsKeyId;
  }

  // snapshot_id - computed: false, optional: true, required: false
  private _snapshotId?: string; 
  public get snapshotId() {
    return this.getStringAttribute('snapshot_id');
  }
  public set snapshotId(value: string) {
    this._snapshotId = value;
  }
  public resetSnapshotId() {
    this._snapshotId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snapshotIdInput() {
    return this._snapshotId;
  }

  // throughput_performance - computed: false, optional: true, required: false
  private _throughputPerformance?: number; 
  public get throughputPerformance() {
    return this.getNumberAttribute('throughput_performance');
  }
  public set throughputPerformance(value: number) {
    this._throughputPerformance = value;
  }
  public resetThroughputPerformance() {
    this._throughputPerformance = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get throughputPerformanceInput() {
    return this._throughputPerformance;
  }
}

export class ThpcWorkspacesDataDisksList extends cdktf.ComplexList {
  public internalValue? : ThpcWorkspacesDataDisks[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ThpcWorkspacesDataDisksOutputReference {
    return new ThpcWorkspacesDataDisksOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ThpcWorkspacesEnhancedServiceAutomationService {
  /**
  * Whether to enable.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#enabled ThpcWorkspaces#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function thpcWorkspacesEnhancedServiceAutomationServiceToTerraform(struct?: ThpcWorkspacesEnhancedServiceAutomationServiceOutputReference | ThpcWorkspacesEnhancedServiceAutomationService): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function thpcWorkspacesEnhancedServiceAutomationServiceToHclTerraform(struct?: ThpcWorkspacesEnhancedServiceAutomationServiceOutputReference | ThpcWorkspacesEnhancedServiceAutomationService): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesEnhancedServiceAutomationServiceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): ThpcWorkspacesEnhancedServiceAutomationService | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesEnhancedServiceAutomationService | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._enabled = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface ThpcWorkspacesEnhancedServiceMonitorService {
  /**
  * Whether to enable.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#enabled ThpcWorkspaces#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function thpcWorkspacesEnhancedServiceMonitorServiceToTerraform(struct?: ThpcWorkspacesEnhancedServiceMonitorServiceOutputReference | ThpcWorkspacesEnhancedServiceMonitorService): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function thpcWorkspacesEnhancedServiceMonitorServiceToHclTerraform(struct?: ThpcWorkspacesEnhancedServiceMonitorServiceOutputReference | ThpcWorkspacesEnhancedServiceMonitorService): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesEnhancedServiceMonitorServiceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): ThpcWorkspacesEnhancedServiceMonitorService | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesEnhancedServiceMonitorService | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._enabled = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface ThpcWorkspacesEnhancedServiceSecurityService {
  /**
  * Whether to enable.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#enabled ThpcWorkspaces#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function thpcWorkspacesEnhancedServiceSecurityServiceToTerraform(struct?: ThpcWorkspacesEnhancedServiceSecurityServiceOutputReference | ThpcWorkspacesEnhancedServiceSecurityService): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function thpcWorkspacesEnhancedServiceSecurityServiceToHclTerraform(struct?: ThpcWorkspacesEnhancedServiceSecurityServiceOutputReference | ThpcWorkspacesEnhancedServiceSecurityService): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesEnhancedServiceSecurityServiceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): ThpcWorkspacesEnhancedServiceSecurityService | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesEnhancedServiceSecurityService | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._enabled = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface ThpcWorkspacesEnhancedService {
  /**
  * automation_service block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#automation_service ThpcWorkspaces#automation_service}
  */
  readonly automationService?: ThpcWorkspacesEnhancedServiceAutomationService;
  /**
  * monitor_service block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#monitor_service ThpcWorkspaces#monitor_service}
  */
  readonly monitorService?: ThpcWorkspacesEnhancedServiceMonitorService;
  /**
  * security_service block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#security_service ThpcWorkspaces#security_service}
  */
  readonly securityService?: ThpcWorkspacesEnhancedServiceSecurityService;
}

export function thpcWorkspacesEnhancedServiceToTerraform(struct?: ThpcWorkspacesEnhancedServiceOutputReference | ThpcWorkspacesEnhancedService): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    automation_service: thpcWorkspacesEnhancedServiceAutomationServiceToTerraform(struct!.automationService),
    monitor_service: thpcWorkspacesEnhancedServiceMonitorServiceToTerraform(struct!.monitorService),
    security_service: thpcWorkspacesEnhancedServiceSecurityServiceToTerraform(struct!.securityService),
  }
}


export function thpcWorkspacesEnhancedServiceToHclTerraform(struct?: ThpcWorkspacesEnhancedServiceOutputReference | ThpcWorkspacesEnhancedService): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    automation_service: {
      value: thpcWorkspacesEnhancedServiceAutomationServiceToHclTerraform(struct!.automationService),
      isBlock: true,
      type: "list",
      storageClassType: "ThpcWorkspacesEnhancedServiceAutomationServiceList",
    },
    monitor_service: {
      value: thpcWorkspacesEnhancedServiceMonitorServiceToHclTerraform(struct!.monitorService),
      isBlock: true,
      type: "list",
      storageClassType: "ThpcWorkspacesEnhancedServiceMonitorServiceList",
    },
    security_service: {
      value: thpcWorkspacesEnhancedServiceSecurityServiceToHclTerraform(struct!.securityService),
      isBlock: true,
      type: "list",
      storageClassType: "ThpcWorkspacesEnhancedServiceSecurityServiceList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesEnhancedServiceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): ThpcWorkspacesEnhancedService | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._automationService?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.automationService = this._automationService?.internalValue;
    }
    if (this._monitorService?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitorService = this._monitorService?.internalValue;
    }
    if (this._securityService?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.securityService = this._securityService?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesEnhancedService | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._automationService.internalValue = undefined;
      this._monitorService.internalValue = undefined;
      this._securityService.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._automationService.internalValue = value.automationService;
      this._monitorService.internalValue = value.monitorService;
      this._securityService.internalValue = value.securityService;
    }
  }

  // automation_service - computed: false, optional: true, required: false
  private _automationService = new ThpcWorkspacesEnhancedServiceAutomationServiceOutputReference(this, "automation_service");
  public get automationService() {
    return this._automationService;
  }
  public putAutomationService(value: ThpcWorkspacesEnhancedServiceAutomationService) {
    this._automationService.internalValue = value;
  }
  public resetAutomationService() {
    this._automationService.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get automationServiceInput() {
    return this._automationService.internalValue;
  }

  // monitor_service - computed: false, optional: true, required: false
  private _monitorService = new ThpcWorkspacesEnhancedServiceMonitorServiceOutputReference(this, "monitor_service");
  public get monitorService() {
    return this._monitorService;
  }
  public putMonitorService(value: ThpcWorkspacesEnhancedServiceMonitorService) {
    this._monitorService.internalValue = value;
  }
  public resetMonitorService() {
    this._monitorService.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitorServiceInput() {
    return this._monitorService.internalValue;
  }

  // security_service - computed: false, optional: true, required: false
  private _securityService = new ThpcWorkspacesEnhancedServiceSecurityServiceOutputReference(this, "security_service");
  public get securityService() {
    return this._securityService;
  }
  public putSecurityService(value: ThpcWorkspacesEnhancedServiceSecurityService) {
    this._securityService.internalValue = value;
  }
  public resetSecurityService() {
    this._securityService.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get securityServiceInput() {
    return this._securityService.internalValue;
  }
}
export interface ThpcWorkspacesInternetAccessible {
  /**
  * Bandwidth package id. if user is standard user, then the bandwidth_package_id is needed, or default has bandwidth_package_id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#bandwidth_package_id ThpcWorkspaces#bandwidth_package_id}
  */
  readonly bandwidthPackageId?: string;
  /**
  * Internet charge type of the instance, Valid values are `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `BANDWIDTH_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. If not set, internet charge type are consistent with the cvm charge type by default. This value takes NO Effect when changing and does not need to be set when `allocate_public_ip` is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#internet_charge_type ThpcWorkspaces#internet_charge_type}
  */
  readonly internetChargeType?: string;
  /**
  * Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second). This value does not need to be set when `allocate_public_ip` is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#internet_max_bandwidth_out ThpcWorkspaces#internet_max_bandwidth_out}
  */
  readonly internetMaxBandwidthOut?: number;
  /**
  * Associate a public IP address with an instance in a VPC or Classic. Boolean value, Default is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#public_ip_assigned ThpcWorkspaces#public_ip_assigned}
  */
  readonly publicIpAssigned?: boolean | cdktf.IResolvable;
}

export function thpcWorkspacesInternetAccessibleToTerraform(struct?: ThpcWorkspacesInternetAccessibleOutputReference | ThpcWorkspacesInternetAccessible): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bandwidth_package_id: cdktf.stringToTerraform(struct!.bandwidthPackageId),
    internet_charge_type: cdktf.stringToTerraform(struct!.internetChargeType),
    internet_max_bandwidth_out: cdktf.numberToTerraform(struct!.internetMaxBandwidthOut),
    public_ip_assigned: cdktf.booleanToTerraform(struct!.publicIpAssigned),
  }
}


export function thpcWorkspacesInternetAccessibleToHclTerraform(struct?: ThpcWorkspacesInternetAccessibleOutputReference | ThpcWorkspacesInternetAccessible): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bandwidth_package_id: {
      value: cdktf.stringToHclTerraform(struct!.bandwidthPackageId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    internet_charge_type: {
      value: cdktf.stringToHclTerraform(struct!.internetChargeType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    internet_max_bandwidth_out: {
      value: cdktf.numberToHclTerraform(struct!.internetMaxBandwidthOut),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    public_ip_assigned: {
      value: cdktf.booleanToHclTerraform(struct!.publicIpAssigned),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesInternetAccessibleOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): ThpcWorkspacesInternetAccessible | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bandwidthPackageId !== undefined) {
      hasAnyValues = true;
      internalValueResult.bandwidthPackageId = this._bandwidthPackageId;
    }
    if (this._internetChargeType !== undefined) {
      hasAnyValues = true;
      internalValueResult.internetChargeType = this._internetChargeType;
    }
    if (this._internetMaxBandwidthOut !== undefined) {
      hasAnyValues = true;
      internalValueResult.internetMaxBandwidthOut = this._internetMaxBandwidthOut;
    }
    if (this._publicIpAssigned !== undefined) {
      hasAnyValues = true;
      internalValueResult.publicIpAssigned = this._publicIpAssigned;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesInternetAccessible | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._bandwidthPackageId = undefined;
      this._internetChargeType = undefined;
      this._internetMaxBandwidthOut = undefined;
      this._publicIpAssigned = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._bandwidthPackageId = value.bandwidthPackageId;
      this._internetChargeType = value.internetChargeType;
      this._internetMaxBandwidthOut = value.internetMaxBandwidthOut;
      this._publicIpAssigned = value.publicIpAssigned;
    }
  }

  // bandwidth_package_id - computed: false, optional: true, required: false
  private _bandwidthPackageId?: string; 
  public get bandwidthPackageId() {
    return this.getStringAttribute('bandwidth_package_id');
  }
  public set bandwidthPackageId(value: string) {
    this._bandwidthPackageId = value;
  }
  public resetBandwidthPackageId() {
    this._bandwidthPackageId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bandwidthPackageIdInput() {
    return this._bandwidthPackageId;
  }

  // internet_charge_type - computed: false, optional: true, required: false
  private _internetChargeType?: string; 
  public get internetChargeType() {
    return this.getStringAttribute('internet_charge_type');
  }
  public set internetChargeType(value: string) {
    this._internetChargeType = value;
  }
  public resetInternetChargeType() {
    this._internetChargeType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get internetChargeTypeInput() {
    return this._internetChargeType;
  }

  // internet_max_bandwidth_out - computed: true, optional: true, required: false
  private _internetMaxBandwidthOut?: number; 
  public get internetMaxBandwidthOut() {
    return this.getNumberAttribute('internet_max_bandwidth_out');
  }
  public set internetMaxBandwidthOut(value: number) {
    this._internetMaxBandwidthOut = value;
  }
  public resetInternetMaxBandwidthOut() {
    this._internetMaxBandwidthOut = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get internetMaxBandwidthOutInput() {
    return this._internetMaxBandwidthOut;
  }

  // public_ip_assigned - computed: true, optional: true, required: false
  private _publicIpAssigned?: boolean | cdktf.IResolvable; 
  public get publicIpAssigned() {
    return this.getBooleanAttribute('public_ip_assigned');
  }
  public set publicIpAssigned(value: boolean | cdktf.IResolvable) {
    this._publicIpAssigned = value;
  }
  public resetPublicIpAssigned() {
    this._publicIpAssigned = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get publicIpAssignedInput() {
    return this._publicIpAssigned;
  }
}
export interface ThpcWorkspacesLoginSettings {
  /**
  * The key pair to use for the instance, it looks like `skey-16jig7tx`. Modifying will cause the instance reset.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#key_ids ThpcWorkspaces#key_ids}
  */
  readonly keyIds?: string[];
  /**
  * Password for the instance. In order for the new password to take effect, the instance will be restarted after the password change. Modifying will cause the instance reset.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#password ThpcWorkspaces#password}
  */
  readonly password?: string;
}

export function thpcWorkspacesLoginSettingsToTerraform(struct?: ThpcWorkspacesLoginSettingsOutputReference | ThpcWorkspacesLoginSettings): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.keyIds),
    password: cdktf.stringToTerraform(struct!.password),
  }
}


export function thpcWorkspacesLoginSettingsToHclTerraform(struct?: ThpcWorkspacesLoginSettingsOutputReference | ThpcWorkspacesLoginSettings): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key_ids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.keyIds),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesLoginSettingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): ThpcWorkspacesLoginSettings | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._keyIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyIds = this._keyIds;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesLoginSettings | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._keyIds = undefined;
      this._password = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._keyIds = value.keyIds;
      this._password = value.password;
    }
  }

  // key_ids - computed: false, optional: true, required: false
  private _keyIds?: string[]; 
  public get keyIds() {
    return cdktf.Fn.tolist(this.getListAttribute('key_ids'));
  }
  public set keyIds(value: string[]) {
    this._keyIds = value;
  }
  public resetKeyIds() {
    this._keyIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyIdsInput() {
    return this._keyIds;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }
}
export interface ThpcWorkspacesPlacement {
  /**
  * The project the instance belongs to, default to 0.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#project_id ThpcWorkspaces#project_id}
  */
  readonly projectId?: number;
  /**
  * The available zone for the CVM instance.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#zone ThpcWorkspaces#zone}
  */
  readonly zone: string;
}

export function thpcWorkspacesPlacementToTerraform(struct?: ThpcWorkspacesPlacementOutputReference | ThpcWorkspacesPlacement): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    project_id: cdktf.numberToTerraform(struct!.projectId),
    zone: cdktf.stringToTerraform(struct!.zone),
  }
}


export function thpcWorkspacesPlacementToHclTerraform(struct?: ThpcWorkspacesPlacementOutputReference | ThpcWorkspacesPlacement): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    project_id: {
      value: cdktf.numberToHclTerraform(struct!.projectId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    zone: {
      value: cdktf.stringToHclTerraform(struct!.zone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesPlacementOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): ThpcWorkspacesPlacement | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._projectId !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectId = this._projectId;
    }
    if (this._zone !== undefined) {
      hasAnyValues = true;
      internalValueResult.zone = this._zone;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesPlacement | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._projectId = undefined;
      this._zone = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._projectId = value.projectId;
      this._zone = value.zone;
    }
  }

  // project_id - computed: false, optional: true, required: false
  private _projectId?: number; 
  public get projectId() {
    return this.getNumberAttribute('project_id');
  }
  public set projectId(value: number) {
    this._projectId = value;
  }
  public resetProjectId() {
    this._projectId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectIdInput() {
    return this._projectId;
  }

  // zone - computed: false, optional: false, required: true
  private _zone?: string; 
  public get zone() {
    return this.getStringAttribute('zone');
  }
  public set zone(value: string) {
    this._zone = value;
  }
  // Temporarily expose input value. Use with caution.
  public get zoneInput() {
    return this._zone;
  }
}
export interface ThpcWorkspacesSpaceChargePrepaid {
  /**
  * The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`, `48`, `60`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#period ThpcWorkspaces#period}
  */
  readonly period?: number;
  /**
  * Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`: notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`: notify upon expiration but do not renew automatically, `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`. If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`, the instance will be automatically renewed on a monthly basis if the account balance is sufficient. NOTE: it only works when instance_charge_type is set to `PREPAID`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#renew_flag ThpcWorkspaces#renew_flag}
  */
  readonly renewFlag?: string;
}

export function thpcWorkspacesSpaceChargePrepaidToTerraform(struct?: ThpcWorkspacesSpaceChargePrepaidOutputReference | ThpcWorkspacesSpaceChargePrepaid): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    period: cdktf.numberToTerraform(struct!.period),
    renew_flag: cdktf.stringToTerraform(struct!.renewFlag),
  }
}


export function thpcWorkspacesSpaceChargePrepaidToHclTerraform(struct?: ThpcWorkspacesSpaceChargePrepaidOutputReference | ThpcWorkspacesSpaceChargePrepaid): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    period: {
      value: cdktf.numberToHclTerraform(struct!.period),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    renew_flag: {
      value: cdktf.stringToHclTerraform(struct!.renewFlag),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesSpaceChargePrepaidOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): ThpcWorkspacesSpaceChargePrepaid | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._period !== undefined) {
      hasAnyValues = true;
      internalValueResult.period = this._period;
    }
    if (this._renewFlag !== undefined) {
      hasAnyValues = true;
      internalValueResult.renewFlag = this._renewFlag;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesSpaceChargePrepaid | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._period = undefined;
      this._renewFlag = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._period = value.period;
      this._renewFlag = value.renewFlag;
    }
  }

  // period - computed: false, optional: true, required: false
  private _period?: number; 
  public get period() {
    return this.getNumberAttribute('period');
  }
  public set period(value: number) {
    this._period = value;
  }
  public resetPeriod() {
    this._period = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get periodInput() {
    return this._period;
  }

  // renew_flag - computed: false, optional: true, required: false
  private _renewFlag?: string; 
  public get renewFlag() {
    return this.getStringAttribute('renew_flag');
  }
  public set renewFlag(value: string) {
    this._renewFlag = value;
  }
  public resetRenewFlag() {
    this._renewFlag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get renewFlagInput() {
    return this._renewFlag;
  }
}
export interface ThpcWorkspacesSystemDisk {
  /**
  * Size of the system disk. unit is GB, Default is 50GB.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#disk_size ThpcWorkspaces#disk_size}
  */
  readonly diskSize?: number;
  /**
  * System disk type. For more information on limits of system disk types, see [Storage Overview](https://intl.cloud.tencent.com/document/product/213/4952). Valid values: `LOCAL_BASIC`: local disk, `LOCAL_SSD`: local SSD disk, `CLOUD_BASIC`: cloud disk, `CLOUD_SSD`: cloud SSD disk, `CLOUD_PREMIUM`: Premium Cloud Storage, `CLOUD_BSSD`: Basic SSD, `CLOUD_HSSD`: Enhanced SSD, `CLOUD_TSSD`: Tremendous SSD. NOTE: If modified, the instance may force stop.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#disk_type ThpcWorkspaces#disk_type}
  */
  readonly diskType?: string;
}

export function thpcWorkspacesSystemDiskToTerraform(struct?: ThpcWorkspacesSystemDiskOutputReference | ThpcWorkspacesSystemDisk): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    disk_size: cdktf.numberToTerraform(struct!.diskSize),
    disk_type: cdktf.stringToTerraform(struct!.diskType),
  }
}


export function thpcWorkspacesSystemDiskToHclTerraform(struct?: ThpcWorkspacesSystemDiskOutputReference | ThpcWorkspacesSystemDisk): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    disk_size: {
      value: cdktf.numberToHclTerraform(struct!.diskSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    disk_type: {
      value: cdktf.stringToHclTerraform(struct!.diskType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesSystemDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): ThpcWorkspacesSystemDisk | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._diskSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskSize = this._diskSize;
    }
    if (this._diskType !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskType = this._diskType;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesSystemDisk | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._diskSize = undefined;
      this._diskType = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._diskSize = value.diskSize;
      this._diskType = value.diskType;
    }
  }

  // disk_id - computed: true, optional: false, required: false
  public get diskId() {
    return this.getStringAttribute('disk_id');
  }

  // disk_size - computed: true, optional: true, required: false
  private _diskSize?: number; 
  public get diskSize() {
    return this.getNumberAttribute('disk_size');
  }
  public set diskSize(value: number) {
    this._diskSize = value;
  }
  public resetDiskSize() {
    this._diskSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskSizeInput() {
    return this._diskSize;
  }

  // disk_type - computed: false, optional: true, required: false
  private _diskType?: string; 
  public get diskType() {
    return this.getStringAttribute('disk_type');
  }
  public set diskType(value: string) {
    this._diskType = value;
  }
  public resetDiskType() {
    this._diskType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskTypeInput() {
    return this._diskType;
  }
}
export interface ThpcWorkspacesTagSpecificationTags {
  /**
  * Tag key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#key ThpcWorkspaces#key}
  */
  readonly key: string;
  /**
  * Tag value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#value ThpcWorkspaces#value}
  */
  readonly value: string;
}

export function thpcWorkspacesTagSpecificationTagsToTerraform(struct?: ThpcWorkspacesTagSpecificationTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function thpcWorkspacesTagSpecificationTagsToHclTerraform(struct?: ThpcWorkspacesTagSpecificationTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesTagSpecificationTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ThpcWorkspacesTagSpecificationTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesTagSpecificationTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._value = value.value;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class ThpcWorkspacesTagSpecificationTagsList extends cdktf.ComplexList {
  public internalValue? : ThpcWorkspacesTagSpecificationTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ThpcWorkspacesTagSpecificationTagsOutputReference {
    return new ThpcWorkspacesTagSpecificationTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ThpcWorkspacesTagSpecification {
  /**
  * tags block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#tags ThpcWorkspaces#tags}
  */
  readonly tags: ThpcWorkspacesTagSpecificationTags[] | cdktf.IResolvable;
}

export function thpcWorkspacesTagSpecificationToTerraform(struct?: ThpcWorkspacesTagSpecification | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    tags: cdktf.listMapper(thpcWorkspacesTagSpecificationTagsToTerraform, true)(struct!.tags),
  }
}


export function thpcWorkspacesTagSpecificationToHclTerraform(struct?: ThpcWorkspacesTagSpecification | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    tags: {
      value: cdktf.listMapperHcl(thpcWorkspacesTagSpecificationTagsToHclTerraform, true)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "ThpcWorkspacesTagSpecificationTagsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesTagSpecificationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): ThpcWorkspacesTagSpecification | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesTagSpecification | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._tags.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._tags.internalValue = value.tags;
    }
  }

  // tags - computed: false, optional: false, required: true
  private _tags = new ThpcWorkspacesTagSpecificationTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: ThpcWorkspacesTagSpecificationTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }
}

export class ThpcWorkspacesTagSpecificationList extends cdktf.ComplexList {
  public internalValue? : ThpcWorkspacesTagSpecification[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): ThpcWorkspacesTagSpecificationOutputReference {
    return new ThpcWorkspacesTagSpecificationOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface ThpcWorkspacesVirtualPrivateCloud {
  /**
  * Is it used as a public network gateway.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#as_vpc_gateway ThpcWorkspaces#as_vpc_gateway}
  */
  readonly asVpcGateway?: boolean | cdktf.IResolvable;
  /**
  * IPV6 address count.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#ipv6_address_count ThpcWorkspaces#ipv6_address_count}
  */
  readonly ipv6AddressCount?: number;
  /**
  * Array of private ip address.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#private_ip_addresses ThpcWorkspaces#private_ip_addresses}
  */
  readonly privateIpAddresses?: string[];
  /**
  * The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#subnet_id ThpcWorkspaces#subnet_id}
  */
  readonly subnetId: string;
  /**
  * The ID of a VPC network. If you want to create instances in a VPC network, this parameter must be set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#vpc_id ThpcWorkspaces#vpc_id}
  */
  readonly vpcId: string;
}

export function thpcWorkspacesVirtualPrivateCloudToTerraform(struct?: ThpcWorkspacesVirtualPrivateCloudOutputReference | ThpcWorkspacesVirtualPrivateCloud): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    as_vpc_gateway: cdktf.booleanToTerraform(struct!.asVpcGateway),
    ipv6_address_count: cdktf.numberToTerraform(struct!.ipv6AddressCount),
    private_ip_addresses: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.privateIpAddresses),
    subnet_id: cdktf.stringToTerraform(struct!.subnetId),
    vpc_id: cdktf.stringToTerraform(struct!.vpcId),
  }
}


export function thpcWorkspacesVirtualPrivateCloudToHclTerraform(struct?: ThpcWorkspacesVirtualPrivateCloudOutputReference | ThpcWorkspacesVirtualPrivateCloud): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    as_vpc_gateway: {
      value: cdktf.booleanToHclTerraform(struct!.asVpcGateway),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    ipv6_address_count: {
      value: cdktf.numberToHclTerraform(struct!.ipv6AddressCount),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    private_ip_addresses: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.privateIpAddresses),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    subnet_id: {
      value: cdktf.stringToHclTerraform(struct!.subnetId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vpc_id: {
      value: cdktf.stringToHclTerraform(struct!.vpcId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class ThpcWorkspacesVirtualPrivateCloudOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): ThpcWorkspacesVirtualPrivateCloud | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._asVpcGateway !== undefined) {
      hasAnyValues = true;
      internalValueResult.asVpcGateway = this._asVpcGateway;
    }
    if (this._ipv6AddressCount !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipv6AddressCount = this._ipv6AddressCount;
    }
    if (this._privateIpAddresses !== undefined) {
      hasAnyValues = true;
      internalValueResult.privateIpAddresses = this._privateIpAddresses;
    }
    if (this._subnetId !== undefined) {
      hasAnyValues = true;
      internalValueResult.subnetId = this._subnetId;
    }
    if (this._vpcId !== undefined) {
      hasAnyValues = true;
      internalValueResult.vpcId = this._vpcId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: ThpcWorkspacesVirtualPrivateCloud | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._asVpcGateway = undefined;
      this._ipv6AddressCount = undefined;
      this._privateIpAddresses = undefined;
      this._subnetId = undefined;
      this._vpcId = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._asVpcGateway = value.asVpcGateway;
      this._ipv6AddressCount = value.ipv6AddressCount;
      this._privateIpAddresses = value.privateIpAddresses;
      this._subnetId = value.subnetId;
      this._vpcId = value.vpcId;
    }
  }

  // as_vpc_gateway - computed: false, optional: true, required: false
  private _asVpcGateway?: boolean | cdktf.IResolvable; 
  public get asVpcGateway() {
    return this.getBooleanAttribute('as_vpc_gateway');
  }
  public set asVpcGateway(value: boolean | cdktf.IResolvable) {
    this._asVpcGateway = value;
  }
  public resetAsVpcGateway() {
    this._asVpcGateway = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asVpcGatewayInput() {
    return this._asVpcGateway;
  }

  // ipv6_address_count - computed: false, optional: true, required: false
  private _ipv6AddressCount?: number; 
  public get ipv6AddressCount() {
    return this.getNumberAttribute('ipv6_address_count');
  }
  public set ipv6AddressCount(value: number) {
    this._ipv6AddressCount = value;
  }
  public resetIpv6AddressCount() {
    this._ipv6AddressCount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipv6AddressCountInput() {
    return this._ipv6AddressCount;
  }

  // private_ip_addresses - computed: true, optional: true, required: false
  private _privateIpAddresses?: string[]; 
  public get privateIpAddresses() {
    return cdktf.Fn.tolist(this.getListAttribute('private_ip_addresses'));
  }
  public set privateIpAddresses(value: string[]) {
    this._privateIpAddresses = value;
  }
  public resetPrivateIpAddresses() {
    this._privateIpAddresses = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privateIpAddressesInput() {
    return this._privateIpAddresses;
  }

  // subnet_id - computed: false, optional: false, required: true
  private _subnetId?: string; 
  public get subnetId() {
    return this.getStringAttribute('subnet_id');
  }
  public set subnetId(value: string) {
    this._subnetId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get subnetIdInput() {
    return this._subnetId;
  }

  // vpc_id - computed: false, optional: false, required: true
  private _vpcId?: string; 
  public get vpcId() {
    return this.getStringAttribute('vpc_id');
  }
  public set vpcId(value: string) {
    this._vpcId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get vpcIdInput() {
    return this._vpcId;
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces tencentcloud_thpc_workspaces}
*/
export class ThpcWorkspaces extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "tencentcloud_thpc_workspaces";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a ThpcWorkspaces resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the ThpcWorkspaces to import
  * @param importFromId The id of the existing ThpcWorkspaces that should be imported. Refer to the {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the ThpcWorkspaces to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "tencentcloud_thpc_workspaces", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/thpc_workspaces tencentcloud_thpc_workspaces} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options ThpcWorkspacesConfig = {}
  */
  public constructor(scope: Construct, id: string, config: ThpcWorkspacesConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'tencentcloud_thpc_workspaces',
      terraformGeneratorMetadata: {
        providerName: 'tencentcloud',
        providerVersion: '1.82.32'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._camRoleName = config.camRoleName;
    this._clientToken = config.clientToken;
    this._disasterRecoverGroupId = config.disasterRecoverGroupId;
    this._hostName = config.hostName;
    this._hpcClusterId = config.hpcClusterId;
    this._id = config.id;
    this._imageId = config.imageId;
    this._securityGroupIds = config.securityGroupIds;
    this._spaceChargeType = config.spaceChargeType;
    this._spaceName = config.spaceName;
    this._spaceType = config.spaceType;
    this._userData = config.userData;
    this._dataDisks.internalValue = config.dataDisks;
    this._enhancedService.internalValue = config.enhancedService;
    this._internetAccessible.internalValue = config.internetAccessible;
    this._loginSettings.internalValue = config.loginSettings;
    this._placement.internalValue = config.placement;
    this._spaceChargePrepaid.internalValue = config.spaceChargePrepaid;
    this._systemDisk.internalValue = config.systemDisk;
    this._tagSpecification.internalValue = config.tagSpecification;
    this._virtualPrivateCloud.internalValue = config.virtualPrivateCloud;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // cam_role_name - computed: false, optional: true, required: false
  private _camRoleName?: string; 
  public get camRoleName() {
    return this.getStringAttribute('cam_role_name');
  }
  public set camRoleName(value: string) {
    this._camRoleName = value;
  }
  public resetCamRoleName() {
    this._camRoleName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get camRoleNameInput() {
    return this._camRoleName;
  }

  // client_token - computed: false, optional: true, required: false
  private _clientToken?: string; 
  public get clientToken() {
    return this.getStringAttribute('client_token');
  }
  public set clientToken(value: string) {
    this._clientToken = value;
  }
  public resetClientToken() {
    this._clientToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientTokenInput() {
    return this._clientToken;
  }

  // disaster_recover_group_id - computed: false, optional: true, required: false
  private _disasterRecoverGroupId?: string; 
  public get disasterRecoverGroupId() {
    return this.getStringAttribute('disaster_recover_group_id');
  }
  public set disasterRecoverGroupId(value: string) {
    this._disasterRecoverGroupId = value;
  }
  public resetDisasterRecoverGroupId() {
    this._disasterRecoverGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disasterRecoverGroupIdInput() {
    return this._disasterRecoverGroupId;
  }

  // host_name - computed: false, optional: true, required: false
  private _hostName?: string; 
  public get hostName() {
    return this.getStringAttribute('host_name');
  }
  public set hostName(value: string) {
    this._hostName = value;
  }
  public resetHostName() {
    this._hostName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostNameInput() {
    return this._hostName;
  }

  // hpc_cluster_id - computed: false, optional: true, required: false
  private _hpcClusterId?: string; 
  public get hpcClusterId() {
    return this.getStringAttribute('hpc_cluster_id');
  }
  public set hpcClusterId(value: string) {
    this._hpcClusterId = value;
  }
  public resetHpcClusterId() {
    this._hpcClusterId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hpcClusterIdInput() {
    return this._hpcClusterId;
  }

  // id - computed: true, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // image_id - computed: false, optional: true, required: false
  private _imageId?: string; 
  public get imageId() {
    return this.getStringAttribute('image_id');
  }
  public set imageId(value: string) {
    this._imageId = value;
  }
  public resetImageId() {
    this._imageId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageIdInput() {
    return this._imageId;
  }

  // resource_id - computed: true, optional: false, required: false
  public get resourceId() {
    return this.getStringAttribute('resource_id');
  }

  // security_group_ids - computed: true, optional: true, required: false
  private _securityGroupIds?: string[]; 
  public get securityGroupIds() {
    return cdktf.Fn.tolist(this.getListAttribute('security_group_ids'));
  }
  public set securityGroupIds(value: string[]) {
    this._securityGroupIds = value;
  }
  public resetSecurityGroupIds() {
    this._securityGroupIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get securityGroupIdsInput() {
    return this._securityGroupIds;
  }

  // space_charge_type - computed: false, optional: true, required: false
  private _spaceChargeType?: string; 
  public get spaceChargeType() {
    return this.getStringAttribute('space_charge_type');
  }
  public set spaceChargeType(value: string) {
    this._spaceChargeType = value;
  }
  public resetSpaceChargeType() {
    this._spaceChargeType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get spaceChargeTypeInput() {
    return this._spaceChargeType;
  }

  // space_name - computed: true, optional: true, required: false
  private _spaceName?: string; 
  public get spaceName() {
    return this.getStringAttribute('space_name');
  }
  public set spaceName(value: string) {
    this._spaceName = value;
  }
  public resetSpaceName() {
    this._spaceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get spaceNameInput() {
    return this._spaceName;
  }

  // space_type - computed: false, optional: true, required: false
  private _spaceType?: string; 
  public get spaceType() {
    return this.getStringAttribute('space_type');
  }
  public set spaceType(value: string) {
    this._spaceType = value;
  }
  public resetSpaceType() {
    this._spaceType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get spaceTypeInput() {
    return this._spaceType;
  }

  // user_data - computed: false, optional: true, required: false
  private _userData?: string; 
  public get userData() {
    return this.getStringAttribute('user_data');
  }
  public set userData(value: string) {
    this._userData = value;
  }
  public resetUserData() {
    this._userData = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDataInput() {
    return this._userData;
  }

  // data_disks - computed: false, optional: true, required: false
  private _dataDisks = new ThpcWorkspacesDataDisksList(this, "data_disks", false);
  public get dataDisks() {
    return this._dataDisks;
  }
  public putDataDisks(value: ThpcWorkspacesDataDisks[] | cdktf.IResolvable) {
    this._dataDisks.internalValue = value;
  }
  public resetDataDisks() {
    this._dataDisks.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataDisksInput() {
    return this._dataDisks.internalValue;
  }

  // enhanced_service - computed: false, optional: true, required: false
  private _enhancedService = new ThpcWorkspacesEnhancedServiceOutputReference(this, "enhanced_service");
  public get enhancedService() {
    return this._enhancedService;
  }
  public putEnhancedService(value: ThpcWorkspacesEnhancedService) {
    this._enhancedService.internalValue = value;
  }
  public resetEnhancedService() {
    this._enhancedService.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enhancedServiceInput() {
    return this._enhancedService.internalValue;
  }

  // internet_accessible - computed: false, optional: true, required: false
  private _internetAccessible = new ThpcWorkspacesInternetAccessibleOutputReference(this, "internet_accessible");
  public get internetAccessible() {
    return this._internetAccessible;
  }
  public putInternetAccessible(value: ThpcWorkspacesInternetAccessible) {
    this._internetAccessible.internalValue = value;
  }
  public resetInternetAccessible() {
    this._internetAccessible.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get internetAccessibleInput() {
    return this._internetAccessible.internalValue;
  }

  // login_settings - computed: false, optional: true, required: false
  private _loginSettings = new ThpcWorkspacesLoginSettingsOutputReference(this, "login_settings");
  public get loginSettings() {
    return this._loginSettings;
  }
  public putLoginSettings(value: ThpcWorkspacesLoginSettings) {
    this._loginSettings.internalValue = value;
  }
  public resetLoginSettings() {
    this._loginSettings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loginSettingsInput() {
    return this._loginSettings.internalValue;
  }

  // placement - computed: false, optional: true, required: false
  private _placement = new ThpcWorkspacesPlacementOutputReference(this, "placement");
  public get placement() {
    return this._placement;
  }
  public putPlacement(value: ThpcWorkspacesPlacement) {
    this._placement.internalValue = value;
  }
  public resetPlacement() {
    this._placement.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get placementInput() {
    return this._placement.internalValue;
  }

  // space_charge_prepaid - computed: false, optional: true, required: false
  private _spaceChargePrepaid = new ThpcWorkspacesSpaceChargePrepaidOutputReference(this, "space_charge_prepaid");
  public get spaceChargePrepaid() {
    return this._spaceChargePrepaid;
  }
  public putSpaceChargePrepaid(value: ThpcWorkspacesSpaceChargePrepaid) {
    this._spaceChargePrepaid.internalValue = value;
  }
  public resetSpaceChargePrepaid() {
    this._spaceChargePrepaid.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get spaceChargePrepaidInput() {
    return this._spaceChargePrepaid.internalValue;
  }

  // system_disk - computed: false, optional: true, required: false
  private _systemDisk = new ThpcWorkspacesSystemDiskOutputReference(this, "system_disk");
  public get systemDisk() {
    return this._systemDisk;
  }
  public putSystemDisk(value: ThpcWorkspacesSystemDisk) {
    this._systemDisk.internalValue = value;
  }
  public resetSystemDisk() {
    this._systemDisk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get systemDiskInput() {
    return this._systemDisk.internalValue;
  }

  // tag_specification - computed: false, optional: true, required: false
  private _tagSpecification = new ThpcWorkspacesTagSpecificationList(this, "tag_specification", false);
  public get tagSpecification() {
    return this._tagSpecification;
  }
  public putTagSpecification(value: ThpcWorkspacesTagSpecification[] | cdktf.IResolvable) {
    this._tagSpecification.internalValue = value;
  }
  public resetTagSpecification() {
    this._tagSpecification.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagSpecificationInput() {
    return this._tagSpecification.internalValue;
  }

  // virtual_private_cloud - computed: false, optional: true, required: false
  private _virtualPrivateCloud = new ThpcWorkspacesVirtualPrivateCloudOutputReference(this, "virtual_private_cloud");
  public get virtualPrivateCloud() {
    return this._virtualPrivateCloud;
  }
  public putVirtualPrivateCloud(value: ThpcWorkspacesVirtualPrivateCloud) {
    this._virtualPrivateCloud.internalValue = value;
  }
  public resetVirtualPrivateCloud() {
    this._virtualPrivateCloud.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get virtualPrivateCloudInput() {
    return this._virtualPrivateCloud.internalValue;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      cam_role_name: cdktf.stringToTerraform(this._camRoleName),
      client_token: cdktf.stringToTerraform(this._clientToken),
      disaster_recover_group_id: cdktf.stringToTerraform(this._disasterRecoverGroupId),
      host_name: cdktf.stringToTerraform(this._hostName),
      hpc_cluster_id: cdktf.stringToTerraform(this._hpcClusterId),
      id: cdktf.stringToTerraform(this._id),
      image_id: cdktf.stringToTerraform(this._imageId),
      security_group_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(this._securityGroupIds),
      space_charge_type: cdktf.stringToTerraform(this._spaceChargeType),
      space_name: cdktf.stringToTerraform(this._spaceName),
      space_type: cdktf.stringToTerraform(this._spaceType),
      user_data: cdktf.stringToTerraform(this._userData),
      data_disks: cdktf.listMapper(thpcWorkspacesDataDisksToTerraform, true)(this._dataDisks.internalValue),
      enhanced_service: thpcWorkspacesEnhancedServiceToTerraform(this._enhancedService.internalValue),
      internet_accessible: thpcWorkspacesInternetAccessibleToTerraform(this._internetAccessible.internalValue),
      login_settings: thpcWorkspacesLoginSettingsToTerraform(this._loginSettings.internalValue),
      placement: thpcWorkspacesPlacementToTerraform(this._placement.internalValue),
      space_charge_prepaid: thpcWorkspacesSpaceChargePrepaidToTerraform(this._spaceChargePrepaid.internalValue),
      system_disk: thpcWorkspacesSystemDiskToTerraform(this._systemDisk.internalValue),
      tag_specification: cdktf.listMapper(thpcWorkspacesTagSpecificationToTerraform, true)(this._tagSpecification.internalValue),
      virtual_private_cloud: thpcWorkspacesVirtualPrivateCloudToTerraform(this._virtualPrivateCloud.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      cam_role_name: {
        value: cdktf.stringToHclTerraform(this._camRoleName),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      client_token: {
        value: cdktf.stringToHclTerraform(this._clientToken),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      disaster_recover_group_id: {
        value: cdktf.stringToHclTerraform(this._disasterRecoverGroupId),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      host_name: {
        value: cdktf.stringToHclTerraform(this._hostName),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      hpc_cluster_id: {
        value: cdktf.stringToHclTerraform(this._hpcClusterId),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      id: {
        value: cdktf.stringToHclTerraform(this._id),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      image_id: {
        value: cdktf.stringToHclTerraform(this._imageId),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      security_group_ids: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._securityGroupIds),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      space_charge_type: {
        value: cdktf.stringToHclTerraform(this._spaceChargeType),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      space_name: {
        value: cdktf.stringToHclTerraform(this._spaceName),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      space_type: {
        value: cdktf.stringToHclTerraform(this._spaceType),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      user_data: {
        value: cdktf.stringToHclTerraform(this._userData),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      data_disks: {
        value: cdktf.listMapperHcl(thpcWorkspacesDataDisksToHclTerraform, true)(this._dataDisks.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "ThpcWorkspacesDataDisksList",
      },
      enhanced_service: {
        value: thpcWorkspacesEnhancedServiceToHclTerraform(this._enhancedService.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "ThpcWorkspacesEnhancedServiceList",
      },
      internet_accessible: {
        value: thpcWorkspacesInternetAccessibleToHclTerraform(this._internetAccessible.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "ThpcWorkspacesInternetAccessibleList",
      },
      login_settings: {
        value: thpcWorkspacesLoginSettingsToHclTerraform(this._loginSettings.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "ThpcWorkspacesLoginSettingsList",
      },
      placement: {
        value: thpcWorkspacesPlacementToHclTerraform(this._placement.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "ThpcWorkspacesPlacementList",
      },
      space_charge_prepaid: {
        value: thpcWorkspacesSpaceChargePrepaidToHclTerraform(this._spaceChargePrepaid.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "ThpcWorkspacesSpaceChargePrepaidList",
      },
      system_disk: {
        value: thpcWorkspacesSystemDiskToHclTerraform(this._systemDisk.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "ThpcWorkspacesSystemDiskList",
      },
      tag_specification: {
        value: cdktf.listMapperHcl(thpcWorkspacesTagSpecificationToHclTerraform, true)(this._tagSpecification.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "ThpcWorkspacesTagSpecificationList",
      },
      virtual_private_cloud: {
        value: thpcWorkspacesVirtualPrivateCloudToHclTerraform(this._virtualPrivateCloud.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "ThpcWorkspacesVirtualPrivateCloudList",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
