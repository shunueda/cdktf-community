import * as cdktf from 'cdktf';
export interface CkafkaDatahubTaskSourceResourceClickHouseParamDropCls {
  /**
  * cls LogSet id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_log_set CkafkaDatahubTask#drop_cls_log_set}
  */
  readonly dropClsLogSet?: string;
  /**
  * cls account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_owneruin CkafkaDatahubTask#drop_cls_owneruin}
  */
  readonly dropClsOwneruin?: string;
  /**
  * cls region.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_region CkafkaDatahubTask#drop_cls_region}
  */
  readonly dropClsRegion?: string;
  /**
  * cls topicId.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_topic_id CkafkaDatahubTask#drop_cls_topic_id}
  */
  readonly dropClsTopicId?: string;
  /**
  * Whether to deliver to cls.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message_to_cls CkafkaDatahubTask#drop_invalid_message_to_cls}
  */
  readonly dropInvalidMessageToCls?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskSourceResourceClickHouseParamDropClsToTerraform(struct?: CkafkaDatahubTaskSourceResourceClickHouseParamDropClsOutputReference | CkafkaDatahubTaskSourceResourceClickHouseParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    drop_cls_log_set: cdktf.stringToTerraform(struct!.dropClsLogSet),
    drop_cls_owneruin: cdktf.stringToTerraform(struct!.dropClsOwneruin),
    drop_cls_region: cdktf.stringToTerraform(struct!.dropClsRegion),
    drop_cls_topic_id: cdktf.stringToTerraform(struct!.dropClsTopicId),
    drop_invalid_message_to_cls: cdktf.booleanToTerraform(struct!.dropInvalidMessageToCls),
  }
}


export function ckafkaDatahubTaskSourceResourceClickHouseParamDropClsToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceClickHouseParamDropClsOutputReference | CkafkaDatahubTaskSourceResourceClickHouseParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    drop_cls_log_set: {
      value: cdktf.stringToHclTerraform(struct!.dropClsLogSet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_owneruin: {
      value: cdktf.stringToHclTerraform(struct!.dropClsOwneruin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_region: {
      value: cdktf.stringToHclTerraform(struct!.dropClsRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_topic_id: {
      value: cdktf.stringToHclTerraform(struct!.dropClsTopicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message_to_cls: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessageToCls),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceClickHouseParamDropClsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceClickHouseParamDropCls | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dropClsLogSet !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsLogSet = this._dropClsLogSet;
    }
    if (this._dropClsOwneruin !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsOwneruin = this._dropClsOwneruin;
    }
    if (this._dropClsRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsRegion = this._dropClsRegion;
    }
    if (this._dropClsTopicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsTopicId = this._dropClsTopicId;
    }
    if (this._dropInvalidMessageToCls !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessageToCls = this._dropInvalidMessageToCls;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceClickHouseParamDropCls | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dropClsLogSet = undefined;
      this._dropClsOwneruin = undefined;
      this._dropClsRegion = undefined;
      this._dropClsTopicId = undefined;
      this._dropInvalidMessageToCls = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dropClsLogSet = value.dropClsLogSet;
      this._dropClsOwneruin = value.dropClsOwneruin;
      this._dropClsRegion = value.dropClsRegion;
      this._dropClsTopicId = value.dropClsTopicId;
      this._dropInvalidMessageToCls = value.dropInvalidMessageToCls;
    }
  }

  // drop_cls_log_set - computed: false, optional: true, required: false
  private _dropClsLogSet?: string; 
  public get dropClsLogSet() {
    return this.getStringAttribute('drop_cls_log_set');
  }
  public set dropClsLogSet(value: string) {
    this._dropClsLogSet = value;
  }
  public resetDropClsLogSet() {
    this._dropClsLogSet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsLogSetInput() {
    return this._dropClsLogSet;
  }

  // drop_cls_owneruin - computed: false, optional: true, required: false
  private _dropClsOwneruin?: string; 
  public get dropClsOwneruin() {
    return this.getStringAttribute('drop_cls_owneruin');
  }
  public set dropClsOwneruin(value: string) {
    this._dropClsOwneruin = value;
  }
  public resetDropClsOwneruin() {
    this._dropClsOwneruin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsOwneruinInput() {
    return this._dropClsOwneruin;
  }

  // drop_cls_region - computed: false, optional: true, required: false
  private _dropClsRegion?: string; 
  public get dropClsRegion() {
    return this.getStringAttribute('drop_cls_region');
  }
  public set dropClsRegion(value: string) {
    this._dropClsRegion = value;
  }
  public resetDropClsRegion() {
    this._dropClsRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsRegionInput() {
    return this._dropClsRegion;
  }

  // drop_cls_topic_id - computed: false, optional: true, required: false
  private _dropClsTopicId?: string; 
  public get dropClsTopicId() {
    return this.getStringAttribute('drop_cls_topic_id');
  }
  public set dropClsTopicId(value: string) {
    this._dropClsTopicId = value;
  }
  public resetDropClsTopicId() {
    this._dropClsTopicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsTopicIdInput() {
    return this._dropClsTopicId;
  }

  // drop_invalid_message_to_cls - computed: false, optional: true, required: false
  private _dropInvalidMessageToCls?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessageToCls() {
    return this.getBooleanAttribute('drop_invalid_message_to_cls');
  }
  public set dropInvalidMessageToCls(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessageToCls = value;
  }
  public resetDropInvalidMessageToCls() {
    this._dropInvalidMessageToCls = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageToClsInput() {
    return this._dropInvalidMessageToCls;
  }
}
export interface CkafkaDatahubTaskSourceResourceClickHouseParamSchema {
  /**
  * Whether the column item is allowed to be empty.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#allow_null CkafkaDatahubTask#allow_null}
  */
  readonly allowNull: boolean | cdktf.IResolvable;
  /**
  * column name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#column_name CkafkaDatahubTask#column_name}
  */
  readonly columnName: string;
  /**
  * The json Key name corresponding to this column.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#json_key CkafkaDatahubTask#json_key}
  */
  readonly jsonKey: string;
  /**
  * type of table column.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
}

export function ckafkaDatahubTaskSourceResourceClickHouseParamSchemaToTerraform(struct?: CkafkaDatahubTaskSourceResourceClickHouseParamSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_null: cdktf.booleanToTerraform(struct!.allowNull),
    column_name: cdktf.stringToTerraform(struct!.columnName),
    json_key: cdktf.stringToTerraform(struct!.jsonKey),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function ckafkaDatahubTaskSourceResourceClickHouseParamSchemaToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceClickHouseParamSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_null: {
      value: cdktf.booleanToHclTerraform(struct!.allowNull),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    column_name: {
      value: cdktf.stringToHclTerraform(struct!.columnName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    json_key: {
      value: cdktf.stringToHclTerraform(struct!.jsonKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceClickHouseParamSchemaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceClickHouseParamSchema | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowNull !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowNull = this._allowNull;
    }
    if (this._columnName !== undefined) {
      hasAnyValues = true;
      internalValueResult.columnName = this._columnName;
    }
    if (this._jsonKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonKey = this._jsonKey;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceClickHouseParamSchema | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowNull = undefined;
      this._columnName = undefined;
      this._jsonKey = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowNull = value.allowNull;
      this._columnName = value.columnName;
      this._jsonKey = value.jsonKey;
      this._type = value.type;
    }
  }

  // allow_null - computed: false, optional: false, required: true
  private _allowNull?: boolean | cdktf.IResolvable; 
  public get allowNull() {
    return this.getBooleanAttribute('allow_null');
  }
  public set allowNull(value: boolean | cdktf.IResolvable) {
    this._allowNull = value;
  }
  // Temporarily expose input value. Use with caution.
  public get allowNullInput() {
    return this._allowNull;
  }

  // column_name - computed: false, optional: false, required: true
  private _columnName?: string; 
  public get columnName() {
    return this.getStringAttribute('column_name');
  }
  public set columnName(value: string) {
    this._columnName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get columnNameInput() {
    return this._columnName;
  }

  // json_key - computed: false, optional: false, required: true
  private _jsonKey?: string; 
  public get jsonKey() {
    return this.getStringAttribute('json_key');
  }
  public set jsonKey(value: string) {
    this._jsonKey = value;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonKeyInput() {
    return this._jsonKey;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}

export class CkafkaDatahubTaskSourceResourceClickHouseParamSchemaList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskSourceResourceClickHouseParamSchema[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskSourceResourceClickHouseParamSchemaOutputReference {
    return new CkafkaDatahubTaskSourceResourceClickHouseParamSchemaOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskSourceResourceClickHouseParam {
  /**
  * ClickHouse cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#cluster CkafkaDatahubTask#cluster}
  */
  readonly cluster: string;
  /**
  * ClickHouse database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * Whether ClickHouse discards the message that fails to parse, the default is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message CkafkaDatahubTask#drop_invalid_message}
  */
  readonly dropInvalidMessage?: boolean | cdktf.IResolvable;
  /**
  * ClickHouse ip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ip CkafkaDatahubTask#ip}
  */
  readonly ip?: string;
  /**
  * ClickHouse passwd.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#password CkafkaDatahubTask#password}
  */
  readonly password?: string;
  /**
  * ClickHouse port.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#port CkafkaDatahubTask#port}
  */
  readonly port?: number;
  /**
  * resource id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt?: boolean | cdktf.IResolvable;
  /**
  * instance vip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#service_vip CkafkaDatahubTask#service_vip}
  */
  readonly serviceVip?: string;
  /**
  * ClickHouse table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch; selfBuilt: ``.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type?: string;
  /**
  * instance vpc id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#uniq_vpc_id CkafkaDatahubTask#uniq_vpc_id}
  */
  readonly uniqVpcId?: string;
  /**
  * ClickHouse user name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#user_name CkafkaDatahubTask#user_name}
  */
  readonly userName?: string;
  /**
  * drop_cls block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls CkafkaDatahubTask#drop_cls}
  */
  readonly dropCls?: CkafkaDatahubTaskSourceResourceClickHouseParamDropCls;
  /**
  * schema block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#schema CkafkaDatahubTask#schema}
  */
  readonly schema: CkafkaDatahubTaskSourceResourceClickHouseParamSchema[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskSourceResourceClickHouseParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceClickHouseParamOutputReference | CkafkaDatahubTaskSourceResourceClickHouseParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster: cdktf.stringToTerraform(struct!.cluster),
    database: cdktf.stringToTerraform(struct!.database),
    drop_invalid_message: cdktf.booleanToTerraform(struct!.dropInvalidMessage),
    ip: cdktf.stringToTerraform(struct!.ip),
    password: cdktf.stringToTerraform(struct!.password),
    port: cdktf.numberToTerraform(struct!.port),
    resource: cdktf.stringToTerraform(struct!.resource),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    service_vip: cdktf.stringToTerraform(struct!.serviceVip),
    table: cdktf.stringToTerraform(struct!.table),
    type: cdktf.stringToTerraform(struct!.type),
    uniq_vpc_id: cdktf.stringToTerraform(struct!.uniqVpcId),
    user_name: cdktf.stringToTerraform(struct!.userName),
    drop_cls: ckafkaDatahubTaskSourceResourceClickHouseParamDropClsToTerraform(struct!.dropCls),
    schema: cdktf.listMapper(ckafkaDatahubTaskSourceResourceClickHouseParamSchemaToTerraform, true)(struct!.schema),
  }
}


export function ckafkaDatahubTaskSourceResourceClickHouseParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceClickHouseParamOutputReference | CkafkaDatahubTaskSourceResourceClickHouseParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster: {
      value: cdktf.stringToHclTerraform(struct!.cluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    service_vip: {
      value: cdktf.stringToHclTerraform(struct!.serviceVip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uniq_vpc_id: {
      value: cdktf.stringToHclTerraform(struct!.uniqVpcId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_name: {
      value: cdktf.stringToHclTerraform(struct!.userName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls: {
      value: ckafkaDatahubTaskSourceResourceClickHouseParamDropClsToHclTerraform(struct!.dropCls),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceClickHouseParamDropClsList",
    },
    schema: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskSourceResourceClickHouseParamSchemaToHclTerraform, true)(struct!.schema),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceClickHouseParamSchemaList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceClickHouseParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceClickHouseParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.cluster = this._cluster;
    }
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._dropInvalidMessage !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessage = this._dropInvalidMessage;
    }
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._serviceVip !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceVip = this._serviceVip;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._uniqVpcId !== undefined) {
      hasAnyValues = true;
      internalValueResult.uniqVpcId = this._uniqVpcId;
    }
    if (this._userName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userName = this._userName;
    }
    if (this._dropCls?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropCls = this._dropCls?.internalValue;
    }
    if (this._schema?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.schema = this._schema?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceClickHouseParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._cluster = undefined;
      this._database = undefined;
      this._dropInvalidMessage = undefined;
      this._ip = undefined;
      this._password = undefined;
      this._port = undefined;
      this._resource = undefined;
      this._selfBuilt = undefined;
      this._serviceVip = undefined;
      this._table = undefined;
      this._type = undefined;
      this._uniqVpcId = undefined;
      this._userName = undefined;
      this._dropCls.internalValue = undefined;
      this._schema.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._cluster = value.cluster;
      this._database = value.database;
      this._dropInvalidMessage = value.dropInvalidMessage;
      this._ip = value.ip;
      this._password = value.password;
      this._port = value.port;
      this._resource = value.resource;
      this._selfBuilt = value.selfBuilt;
      this._serviceVip = value.serviceVip;
      this._table = value.table;
      this._type = value.type;
      this._uniqVpcId = value.uniqVpcId;
      this._userName = value.userName;
      this._dropCls.internalValue = value.dropCls;
      this._schema.internalValue = value.schema;
    }
  }

  // cluster - computed: false, optional: false, required: true
  private _cluster?: string; 
  public get cluster() {
    return this.getStringAttribute('cluster');
  }
  public set cluster(value: string) {
    this._cluster = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterInput() {
    return this._cluster;
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // drop_invalid_message - computed: false, optional: true, required: false
  private _dropInvalidMessage?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessage() {
    return this.getBooleanAttribute('drop_invalid_message');
  }
  public set dropInvalidMessage(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessage = value;
  }
  public resetDropInvalidMessage() {
    this._dropInvalidMessage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageInput() {
    return this._dropInvalidMessage;
  }

  // ip - computed: false, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // self_built - computed: false, optional: true, required: false
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  public resetSelfBuilt() {
    this._selfBuilt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // service_vip - computed: false, optional: true, required: false
  private _serviceVip?: string; 
  public get serviceVip() {
    return this.getStringAttribute('service_vip');
  }
  public set serviceVip(value: string) {
    this._serviceVip = value;
  }
  public resetServiceVip() {
    this._serviceVip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceVipInput() {
    return this._serviceVip;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // uniq_vpc_id - computed: false, optional: true, required: false
  private _uniqVpcId?: string; 
  public get uniqVpcId() {
    return this.getStringAttribute('uniq_vpc_id');
  }
  public set uniqVpcId(value: string) {
    this._uniqVpcId = value;
  }
  public resetUniqVpcId() {
    this._uniqVpcId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uniqVpcIdInput() {
    return this._uniqVpcId;
  }

  // user_name - computed: false, optional: true, required: false
  private _userName?: string; 
  public get userName() {
    return this.getStringAttribute('user_name');
  }
  public set userName(value: string) {
    this._userName = value;
  }
  public resetUserName() {
    this._userName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userNameInput() {
    return this._userName;
  }

  // drop_cls - computed: false, optional: true, required: false
  private _dropCls = new CkafkaDatahubTaskSourceResourceClickHouseParamDropClsOutputReference(this, "drop_cls");
  public get dropCls() {
    return this._dropCls;
  }
  public putDropCls(value: CkafkaDatahubTaskSourceResourceClickHouseParamDropCls) {
    this._dropCls.internalValue = value;
  }
  public resetDropCls() {
    this._dropCls.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsInput() {
    return this._dropCls.internalValue;
  }

  // schema - computed: false, optional: false, required: true
  private _schema = new CkafkaDatahubTaskSourceResourceClickHouseParamSchemaList(this, "schema", false);
  public get schema() {
    return this._schema;
  }
  public putSchema(value: CkafkaDatahubTaskSourceResourceClickHouseParamSchema[] | cdktf.IResolvable) {
    this._schema.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaInput() {
    return this._schema.internalValue;
  }
}
export interface CkafkaDatahubTaskSourceResourceClsParam {
  /**
  * Required when Decode Json is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#content_key CkafkaDatahubTask#content_key}
  */
  readonly contentKey?: string;
  /**
  * Whether the produced information is in json format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#decode_json CkafkaDatahubTask#decode_json}
  */
  readonly decodeJson: boolean | cdktf.IResolvable;
  /**
  * LogSet id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#log_set CkafkaDatahubTask#log_set}
  */
  readonly logSet?: string;
  /**
  * cls id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#time_field CkafkaDatahubTask#time_field}
  */
  readonly timeField?: string;
}

export function ckafkaDatahubTaskSourceResourceClsParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceClsParamOutputReference | CkafkaDatahubTaskSourceResourceClsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    content_key: cdktf.stringToTerraform(struct!.contentKey),
    decode_json: cdktf.booleanToTerraform(struct!.decodeJson),
    log_set: cdktf.stringToTerraform(struct!.logSet),
    resource: cdktf.stringToTerraform(struct!.resource),
    time_field: cdktf.stringToTerraform(struct!.timeField),
  }
}


export function ckafkaDatahubTaskSourceResourceClsParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceClsParamOutputReference | CkafkaDatahubTaskSourceResourceClsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    content_key: {
      value: cdktf.stringToHclTerraform(struct!.contentKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    decode_json: {
      value: cdktf.booleanToHclTerraform(struct!.decodeJson),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    log_set: {
      value: cdktf.stringToHclTerraform(struct!.logSet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_field: {
      value: cdktf.stringToHclTerraform(struct!.timeField),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceClsParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceClsParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._contentKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.contentKey = this._contentKey;
    }
    if (this._decodeJson !== undefined) {
      hasAnyValues = true;
      internalValueResult.decodeJson = this._decodeJson;
    }
    if (this._logSet !== undefined) {
      hasAnyValues = true;
      internalValueResult.logSet = this._logSet;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._timeField !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeField = this._timeField;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceClsParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._contentKey = undefined;
      this._decodeJson = undefined;
      this._logSet = undefined;
      this._resource = undefined;
      this._timeField = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._contentKey = value.contentKey;
      this._decodeJson = value.decodeJson;
      this._logSet = value.logSet;
      this._resource = value.resource;
      this._timeField = value.timeField;
    }
  }

  // content_key - computed: false, optional: true, required: false
  private _contentKey?: string; 
  public get contentKey() {
    return this.getStringAttribute('content_key');
  }
  public set contentKey(value: string) {
    this._contentKey = value;
  }
  public resetContentKey() {
    this._contentKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contentKeyInput() {
    return this._contentKey;
  }

  // decode_json - computed: false, optional: false, required: true
  private _decodeJson?: boolean | cdktf.IResolvable; 
  public get decodeJson() {
    return this.getBooleanAttribute('decode_json');
  }
  public set decodeJson(value: boolean | cdktf.IResolvable) {
    this._decodeJson = value;
  }
  // Temporarily expose input value. Use with caution.
  public get decodeJsonInput() {
    return this._decodeJson;
  }

  // log_set - computed: false, optional: true, required: false
  private _logSet?: string; 
  public get logSet() {
    return this.getStringAttribute('log_set');
  }
  public set logSet(value: string) {
    this._logSet = value;
  }
  public resetLogSet() {
    this._logSet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logSetInput() {
    return this._logSet;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // time_field - computed: false, optional: true, required: false
  private _timeField?: string; 
  public get timeField() {
    return this.getStringAttribute('time_field');
  }
  public set timeField(value: string) {
    this._timeField = value;
  }
  public resetTimeField() {
    this._timeField = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeFieldInput() {
    return this._timeField;
  }
}
export interface CkafkaDatahubTaskSourceResourceCosParam {
  /**
  * The size of aggregated messages MB.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#aggregate_batch_size CkafkaDatahubTask#aggregate_batch_size}
  */
  readonly aggregateBatchSize?: number;
  /**
  * time interval.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#aggregate_interval CkafkaDatahubTask#aggregate_interval}
  */
  readonly aggregateInterval?: number;
  /**
  * cos bucket name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#bucket_name CkafkaDatahubTask#bucket_name}
  */
  readonly bucketName: string;
  /**
  * Partition format formatted according to strptime time.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#directory_time_format CkafkaDatahubTask#directory_time_format}
  */
  readonly directoryTimeFormat?: string;
  /**
  * The file format after message aggregation csv|json.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#format_output_type CkafkaDatahubTask#format_output_type}
  */
  readonly formatOutputType?: string;
  /**
  * ObjectKey.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#object_key CkafkaDatahubTask#object_key}
  */
  readonly objectKey?: string;
  /**
  * Dumped object directory prefix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#object_key_prefix CkafkaDatahubTask#object_key_prefix}
  */
  readonly objectKeyPrefix?: string;
  /**
  * region code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#region CkafkaDatahubTask#region}
  */
  readonly region: string;
}

export function ckafkaDatahubTaskSourceResourceCosParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceCosParamOutputReference | CkafkaDatahubTaskSourceResourceCosParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aggregate_batch_size: cdktf.numberToTerraform(struct!.aggregateBatchSize),
    aggregate_interval: cdktf.numberToTerraform(struct!.aggregateInterval),
    bucket_name: cdktf.stringToTerraform(struct!.bucketName),
    directory_time_format: cdktf.stringToTerraform(struct!.directoryTimeFormat),
    format_output_type: cdktf.stringToTerraform(struct!.formatOutputType),
    object_key: cdktf.stringToTerraform(struct!.objectKey),
    object_key_prefix: cdktf.stringToTerraform(struct!.objectKeyPrefix),
    region: cdktf.stringToTerraform(struct!.region),
  }
}


export function ckafkaDatahubTaskSourceResourceCosParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceCosParamOutputReference | CkafkaDatahubTaskSourceResourceCosParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aggregate_batch_size: {
      value: cdktf.numberToHclTerraform(struct!.aggregateBatchSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    aggregate_interval: {
      value: cdktf.numberToHclTerraform(struct!.aggregateInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    bucket_name: {
      value: cdktf.stringToHclTerraform(struct!.bucketName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    directory_time_format: {
      value: cdktf.stringToHclTerraform(struct!.directoryTimeFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    format_output_type: {
      value: cdktf.stringToHclTerraform(struct!.formatOutputType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    object_key: {
      value: cdktf.stringToHclTerraform(struct!.objectKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    object_key_prefix: {
      value: cdktf.stringToHclTerraform(struct!.objectKeyPrefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceCosParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceCosParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._aggregateBatchSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregateBatchSize = this._aggregateBatchSize;
    }
    if (this._aggregateInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregateInterval = this._aggregateInterval;
    }
    if (this._bucketName !== undefined) {
      hasAnyValues = true;
      internalValueResult.bucketName = this._bucketName;
    }
    if (this._directoryTimeFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.directoryTimeFormat = this._directoryTimeFormat;
    }
    if (this._formatOutputType !== undefined) {
      hasAnyValues = true;
      internalValueResult.formatOutputType = this._formatOutputType;
    }
    if (this._objectKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.objectKey = this._objectKey;
    }
    if (this._objectKeyPrefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.objectKeyPrefix = this._objectKeyPrefix;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceCosParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._aggregateBatchSize = undefined;
      this._aggregateInterval = undefined;
      this._bucketName = undefined;
      this._directoryTimeFormat = undefined;
      this._formatOutputType = undefined;
      this._objectKey = undefined;
      this._objectKeyPrefix = undefined;
      this._region = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._aggregateBatchSize = value.aggregateBatchSize;
      this._aggregateInterval = value.aggregateInterval;
      this._bucketName = value.bucketName;
      this._directoryTimeFormat = value.directoryTimeFormat;
      this._formatOutputType = value.formatOutputType;
      this._objectKey = value.objectKey;
      this._objectKeyPrefix = value.objectKeyPrefix;
      this._region = value.region;
    }
  }

  // aggregate_batch_size - computed: false, optional: true, required: false
  private _aggregateBatchSize?: number; 
  public get aggregateBatchSize() {
    return this.getNumberAttribute('aggregate_batch_size');
  }
  public set aggregateBatchSize(value: number) {
    this._aggregateBatchSize = value;
  }
  public resetAggregateBatchSize() {
    this._aggregateBatchSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregateBatchSizeInput() {
    return this._aggregateBatchSize;
  }

  // aggregate_interval - computed: false, optional: true, required: false
  private _aggregateInterval?: number; 
  public get aggregateInterval() {
    return this.getNumberAttribute('aggregate_interval');
  }
  public set aggregateInterval(value: number) {
    this._aggregateInterval = value;
  }
  public resetAggregateInterval() {
    this._aggregateInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregateIntervalInput() {
    return this._aggregateInterval;
  }

  // bucket_name - computed: false, optional: false, required: true
  private _bucketName?: string; 
  public get bucketName() {
    return this.getStringAttribute('bucket_name');
  }
  public set bucketName(value: string) {
    this._bucketName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bucketNameInput() {
    return this._bucketName;
  }

  // directory_time_format - computed: false, optional: true, required: false
  private _directoryTimeFormat?: string; 
  public get directoryTimeFormat() {
    return this.getStringAttribute('directory_time_format');
  }
  public set directoryTimeFormat(value: string) {
    this._directoryTimeFormat = value;
  }
  public resetDirectoryTimeFormat() {
    this._directoryTimeFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directoryTimeFormatInput() {
    return this._directoryTimeFormat;
  }

  // format_output_type - computed: false, optional: true, required: false
  private _formatOutputType?: string; 
  public get formatOutputType() {
    return this.getStringAttribute('format_output_type');
  }
  public set formatOutputType(value: string) {
    this._formatOutputType = value;
  }
  public resetFormatOutputType() {
    this._formatOutputType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatOutputTypeInput() {
    return this._formatOutputType;
  }

  // object_key - computed: false, optional: true, required: false
  private _objectKey?: string; 
  public get objectKey() {
    return this.getStringAttribute('object_key');
  }
  public set objectKey(value: string) {
    this._objectKey = value;
  }
  public resetObjectKey() {
    this._objectKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get objectKeyInput() {
    return this._objectKey;
  }

  // object_key_prefix - computed: false, optional: true, required: false
  private _objectKeyPrefix?: string; 
  public get objectKeyPrefix() {
    return this.getStringAttribute('object_key_prefix');
  }
  public set objectKeyPrefix(value: string) {
    this._objectKeyPrefix = value;
  }
  public resetObjectKeyPrefix() {
    this._objectKeyPrefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get objectKeyPrefixInput() {
    return this._objectKeyPrefix;
  }

  // region - computed: false, optional: false, required: true
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }
}
export interface CkafkaDatahubTaskSourceResourceCtsdbParam {
  /**
  * Ctsdb metric.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ctsdb_metric CkafkaDatahubTask#ctsdb_metric}
  */
  readonly ctsdbMetric?: string;
  /**
  * resource id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource?: string;
}

export function ckafkaDatahubTaskSourceResourceCtsdbParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceCtsdbParamOutputReference | CkafkaDatahubTaskSourceResourceCtsdbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ctsdb_metric: cdktf.stringToTerraform(struct!.ctsdbMetric),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function ckafkaDatahubTaskSourceResourceCtsdbParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceCtsdbParamOutputReference | CkafkaDatahubTaskSourceResourceCtsdbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ctsdb_metric: {
      value: cdktf.stringToHclTerraform(struct!.ctsdbMetric),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceCtsdbParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceCtsdbParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._ctsdbMetric !== undefined) {
      hasAnyValues = true;
      internalValueResult.ctsdbMetric = this._ctsdbMetric;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceCtsdbParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._ctsdbMetric = undefined;
      this._resource = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._ctsdbMetric = value.ctsdbMetric;
      this._resource = value.resource;
    }
  }

  // ctsdb_metric - computed: false, optional: true, required: false
  private _ctsdbMetric?: string; 
  public get ctsdbMetric() {
    return this.getStringAttribute('ctsdb_metric');
  }
  public set ctsdbMetric(value: string) {
    this._ctsdbMetric = value;
  }
  public resetCtsdbMetric() {
    this._ctsdbMetric = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ctsdbMetricInput() {
    return this._ctsdbMetric;
  }

  // resource - computed: false, optional: true, required: false
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  public resetResource() {
    this._resource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface CkafkaDatahubTaskSourceResourceDtsParam {
  /**
  * Dts consumer group Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#group_id CkafkaDatahubTask#group_id}
  */
  readonly groupId?: string;
  /**
  * Dts consumer group passwd.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#group_password CkafkaDatahubTask#group_password}
  */
  readonly groupPassword?: string;
  /**
  * Dts account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#group_user CkafkaDatahubTask#group_user}
  */
  readonly groupUser?: string;
  /**
  * Dts connection ip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ip CkafkaDatahubTask#ip}
  */
  readonly ip?: string;
  /**
  * Dts connection port.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#port CkafkaDatahubTask#port}
  */
  readonly port?: number;
  /**
  * Dts instance Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Dts topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic?: string;
  /**
  * False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#tran_sql CkafkaDatahubTask#tran_sql}
  */
  readonly tranSql?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskSourceResourceDtsParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceDtsParamOutputReference | CkafkaDatahubTaskSourceResourceDtsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    group_id: cdktf.stringToTerraform(struct!.groupId),
    group_password: cdktf.stringToTerraform(struct!.groupPassword),
    group_user: cdktf.stringToTerraform(struct!.groupUser),
    ip: cdktf.stringToTerraform(struct!.ip),
    port: cdktf.numberToTerraform(struct!.port),
    resource: cdktf.stringToTerraform(struct!.resource),
    topic: cdktf.stringToTerraform(struct!.topic),
    tran_sql: cdktf.booleanToTerraform(struct!.tranSql),
  }
}


export function ckafkaDatahubTaskSourceResourceDtsParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceDtsParamOutputReference | CkafkaDatahubTaskSourceResourceDtsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    group_id: {
      value: cdktf.stringToHclTerraform(struct!.groupId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    group_password: {
      value: cdktf.stringToHclTerraform(struct!.groupPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    group_user: {
      value: cdktf.stringToHclTerraform(struct!.groupUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tran_sql: {
      value: cdktf.booleanToHclTerraform(struct!.tranSql),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceDtsParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceDtsParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._groupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupId = this._groupId;
    }
    if (this._groupPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupPassword = this._groupPassword;
    }
    if (this._groupUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupUser = this._groupUser;
    }
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._tranSql !== undefined) {
      hasAnyValues = true;
      internalValueResult.tranSql = this._tranSql;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceDtsParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._groupId = undefined;
      this._groupPassword = undefined;
      this._groupUser = undefined;
      this._ip = undefined;
      this._port = undefined;
      this._resource = undefined;
      this._topic = undefined;
      this._tranSql = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._groupId = value.groupId;
      this._groupPassword = value.groupPassword;
      this._groupUser = value.groupUser;
      this._ip = value.ip;
      this._port = value.port;
      this._resource = value.resource;
      this._topic = value.topic;
      this._tranSql = value.tranSql;
    }
  }

  // group_id - computed: false, optional: true, required: false
  private _groupId?: string; 
  public get groupId() {
    return this.getStringAttribute('group_id');
  }
  public set groupId(value: string) {
    this._groupId = value;
  }
  public resetGroupId() {
    this._groupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupIdInput() {
    return this._groupId;
  }

  // group_password - computed: false, optional: true, required: false
  private _groupPassword?: string; 
  public get groupPassword() {
    return this.getStringAttribute('group_password');
  }
  public set groupPassword(value: string) {
    this._groupPassword = value;
  }
  public resetGroupPassword() {
    this._groupPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupPasswordInput() {
    return this._groupPassword;
  }

  // group_user - computed: false, optional: true, required: false
  private _groupUser?: string; 
  public get groupUser() {
    return this.getStringAttribute('group_user');
  }
  public set groupUser(value: string) {
    this._groupUser = value;
  }
  public resetGroupUser() {
    this._groupUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupUserInput() {
    return this._groupUser;
  }

  // ip - computed: false, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // tran_sql - computed: false, optional: true, required: false
  private _tranSql?: boolean | cdktf.IResolvable; 
  public get tranSql() {
    return this.getBooleanAttribute('tran_sql');
  }
  public set tranSql(value: boolean | cdktf.IResolvable) {
    this._tranSql = value;
  }
  public resetTranSql() {
    this._tranSql = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tranSqlInput() {
    return this._tranSql;
  }
}
export interface CkafkaDatahubTaskSourceResourceEsParamDropCls {
  /**
  * cls log set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_log_set CkafkaDatahubTask#drop_cls_log_set}
  */
  readonly dropClsLogSet?: string;
  /**
  * Delivery account of cls.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_owneruin CkafkaDatahubTask#drop_cls_owneruin}
  */
  readonly dropClsOwneruin?: string;
  /**
  * The region where the cls is delivered.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_region CkafkaDatahubTask#drop_cls_region}
  */
  readonly dropClsRegion?: string;
  /**
  * topic of cls.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_topic_id CkafkaDatahubTask#drop_cls_topic_id}
  */
  readonly dropClsTopicId?: string;
  /**
  * Whether to deliver to cls.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message_to_cls CkafkaDatahubTask#drop_invalid_message_to_cls}
  */
  readonly dropInvalidMessageToCls?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskSourceResourceEsParamDropClsToTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamDropClsOutputReference | CkafkaDatahubTaskSourceResourceEsParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    drop_cls_log_set: cdktf.stringToTerraform(struct!.dropClsLogSet),
    drop_cls_owneruin: cdktf.stringToTerraform(struct!.dropClsOwneruin),
    drop_cls_region: cdktf.stringToTerraform(struct!.dropClsRegion),
    drop_cls_topic_id: cdktf.stringToTerraform(struct!.dropClsTopicId),
    drop_invalid_message_to_cls: cdktf.booleanToTerraform(struct!.dropInvalidMessageToCls),
  }
}


export function ckafkaDatahubTaskSourceResourceEsParamDropClsToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamDropClsOutputReference | CkafkaDatahubTaskSourceResourceEsParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    drop_cls_log_set: {
      value: cdktf.stringToHclTerraform(struct!.dropClsLogSet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_owneruin: {
      value: cdktf.stringToHclTerraform(struct!.dropClsOwneruin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_region: {
      value: cdktf.stringToHclTerraform(struct!.dropClsRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_topic_id: {
      value: cdktf.stringToHclTerraform(struct!.dropClsTopicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message_to_cls: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessageToCls),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceEsParamDropClsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceEsParamDropCls | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dropClsLogSet !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsLogSet = this._dropClsLogSet;
    }
    if (this._dropClsOwneruin !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsOwneruin = this._dropClsOwneruin;
    }
    if (this._dropClsRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsRegion = this._dropClsRegion;
    }
    if (this._dropClsTopicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsTopicId = this._dropClsTopicId;
    }
    if (this._dropInvalidMessageToCls !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessageToCls = this._dropInvalidMessageToCls;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceEsParamDropCls | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dropClsLogSet = undefined;
      this._dropClsOwneruin = undefined;
      this._dropClsRegion = undefined;
      this._dropClsTopicId = undefined;
      this._dropInvalidMessageToCls = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dropClsLogSet = value.dropClsLogSet;
      this._dropClsOwneruin = value.dropClsOwneruin;
      this._dropClsRegion = value.dropClsRegion;
      this._dropClsTopicId = value.dropClsTopicId;
      this._dropInvalidMessageToCls = value.dropInvalidMessageToCls;
    }
  }

  // drop_cls_log_set - computed: false, optional: true, required: false
  private _dropClsLogSet?: string; 
  public get dropClsLogSet() {
    return this.getStringAttribute('drop_cls_log_set');
  }
  public set dropClsLogSet(value: string) {
    this._dropClsLogSet = value;
  }
  public resetDropClsLogSet() {
    this._dropClsLogSet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsLogSetInput() {
    return this._dropClsLogSet;
  }

  // drop_cls_owneruin - computed: false, optional: true, required: false
  private _dropClsOwneruin?: string; 
  public get dropClsOwneruin() {
    return this.getStringAttribute('drop_cls_owneruin');
  }
  public set dropClsOwneruin(value: string) {
    this._dropClsOwneruin = value;
  }
  public resetDropClsOwneruin() {
    this._dropClsOwneruin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsOwneruinInput() {
    return this._dropClsOwneruin;
  }

  // drop_cls_region - computed: false, optional: true, required: false
  private _dropClsRegion?: string; 
  public get dropClsRegion() {
    return this.getStringAttribute('drop_cls_region');
  }
  public set dropClsRegion(value: string) {
    this._dropClsRegion = value;
  }
  public resetDropClsRegion() {
    this._dropClsRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsRegionInput() {
    return this._dropClsRegion;
  }

  // drop_cls_topic_id - computed: false, optional: true, required: false
  private _dropClsTopicId?: string; 
  public get dropClsTopicId() {
    return this.getStringAttribute('drop_cls_topic_id');
  }
  public set dropClsTopicId(value: string) {
    this._dropClsTopicId = value;
  }
  public resetDropClsTopicId() {
    this._dropClsTopicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsTopicIdInput() {
    return this._dropClsTopicId;
  }

  // drop_invalid_message_to_cls - computed: false, optional: true, required: false
  private _dropInvalidMessageToCls?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessageToCls() {
    return this.getBooleanAttribute('drop_invalid_message_to_cls');
  }
  public set dropInvalidMessageToCls(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessageToCls = value;
  }
  public resetDropInvalidMessageToCls() {
    this._dropInvalidMessageToCls = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageToClsInput() {
    return this._dropInvalidMessageToCls;
  }
}
export interface CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappings {
  /**
  * database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * Table name, multiple tables, separated by (commas).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * Topic name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic: string;
  /**
  * Topic ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId: string;
}

export function ckafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingsToTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    table: cdktf.stringToTerraform(struct!.table),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
  }
}


export function ckafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingsToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._database = undefined;
      this._table = undefined;
      this._topic = undefined;
      this._topicId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._database = value.database;
      this._table = value.table;
      this._topic = value.topic;
      this._topicId = value.topicId;
    }
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // topic - computed: false, optional: false, required: true
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: false, required: true
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }
}

export class CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingsList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappings[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingsOutputReference {
    return new CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParam {
  /**
  * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * Enable the fault-tolerant instance and enable the dead-letter queue.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#enable_toleration CkafkaDatahubTask#enable_toleration}
  */
  readonly enableToleration?: boolean | cdktf.IResolvable;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, initial position earliest, latest position latest, time point position timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * Partition num.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#partition_num CkafkaDatahubTask#partition_num}
  */
  readonly partitionNum?: number;
  /**
  * Qps limit.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#qps_limit CkafkaDatahubTask#qps_limit}
  */
  readonly qpsLimit?: number;
  /**
  * resource id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * resource id name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource_name CkafkaDatahubTask#resource_name}
  */
  readonly resourceName?: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt: boolean | cdktf.IResolvable;
  /**
  * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * Topic name, multiple separated by `,`.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic?: string;
  /**
  * Topic Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
  /**
  * Distribute to multiple topics switch, the default is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_table_mapping CkafkaDatahubTask#use_table_mapping}
  */
  readonly useTableMapping?: boolean | cdktf.IResolvable;
  /**
  * Zone ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#zone_id CkafkaDatahubTask#zone_id}
  */
  readonly zoneId?: number;
  /**
  * table_mappings block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table_mappings CkafkaDatahubTask#table_mappings}
  */
  readonly tableMappings?: CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappings[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamOutputReference | CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    enable_toleration: cdktf.booleanToTerraform(struct!.enableToleration),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    partition_num: cdktf.numberToTerraform(struct!.partitionNum),
    qps_limit: cdktf.numberToTerraform(struct!.qpsLimit),
    resource: cdktf.stringToTerraform(struct!.resource),
    resource_name: cdktf.stringToTerraform(struct!.resourceName),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
    use_table_mapping: cdktf.booleanToTerraform(struct!.useTableMapping),
    zone_id: cdktf.numberToTerraform(struct!.zoneId),
    table_mappings: cdktf.listMapper(ckafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingsToTerraform, true)(struct!.tableMappings),
  }
}


export function ckafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamOutputReference | CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enable_toleration: {
      value: cdktf.booleanToHclTerraform(struct!.enableToleration),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition_num: {
      value: cdktf.numberToHclTerraform(struct!.partitionNum),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    qps_limit: {
      value: cdktf.numberToHclTerraform(struct!.qpsLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_name: {
      value: cdktf.stringToHclTerraform(struct!.resourceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_table_mapping: {
      value: cdktf.booleanToHclTerraform(struct!.useTableMapping),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    zone_id: {
      value: cdktf.numberToHclTerraform(struct!.zoneId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    table_mappings: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingsToHclTerraform, true)(struct!.tableMappings),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._enableToleration !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableToleration = this._enableToleration;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._partitionNum !== undefined) {
      hasAnyValues = true;
      internalValueResult.partitionNum = this._partitionNum;
    }
    if (this._qpsLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.qpsLimit = this._qpsLimit;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._resourceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceName = this._resourceName;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    if (this._useTableMapping !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTableMapping = this._useTableMapping;
    }
    if (this._zoneId !== undefined) {
      hasAnyValues = true;
      internalValueResult.zoneId = this._zoneId;
    }
    if (this._tableMappings?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableMappings = this._tableMappings?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._enableToleration = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._partitionNum = undefined;
      this._qpsLimit = undefined;
      this._resource = undefined;
      this._resourceName = undefined;
      this._selfBuilt = undefined;
      this._startTime = undefined;
      this._topic = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
      this._useTableMapping = undefined;
      this._zoneId = undefined;
      this._tableMappings.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._enableToleration = value.enableToleration;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._partitionNum = value.partitionNum;
      this._qpsLimit = value.qpsLimit;
      this._resource = value.resource;
      this._resourceName = value.resourceName;
      this._selfBuilt = value.selfBuilt;
      this._startTime = value.startTime;
      this._topic = value.topic;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
      this._useTableMapping = value.useTableMapping;
      this._zoneId = value.zoneId;
      this._tableMappings.internalValue = value.tableMappings;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // enable_toleration - computed: false, optional: true, required: false
  private _enableToleration?: boolean | cdktf.IResolvable; 
  public get enableToleration() {
    return this.getBooleanAttribute('enable_toleration');
  }
  public set enableToleration(value: boolean | cdktf.IResolvable) {
    this._enableToleration = value;
  }
  public resetEnableToleration() {
    this._enableToleration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableTolerationInput() {
    return this._enableToleration;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // partition_num - computed: false, optional: true, required: false
  private _partitionNum?: number; 
  public get partitionNum() {
    return this.getNumberAttribute('partition_num');
  }
  public set partitionNum(value: number) {
    this._partitionNum = value;
  }
  public resetPartitionNum() {
    this._partitionNum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionNumInput() {
    return this._partitionNum;
  }

  // qps_limit - computed: false, optional: true, required: false
  private _qpsLimit?: number; 
  public get qpsLimit() {
    return this.getNumberAttribute('qps_limit');
  }
  public set qpsLimit(value: number) {
    this._qpsLimit = value;
  }
  public resetQpsLimit() {
    this._qpsLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qpsLimitInput() {
    return this._qpsLimit;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // resource_name - computed: false, optional: true, required: false
  private _resourceName?: string; 
  public get resourceName() {
    return this.getStringAttribute('resource_name');
  }
  public set resourceName(value: string) {
    this._resourceName = value;
  }
  public resetResourceName() {
    this._resourceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceNameInput() {
    return this._resourceName;
  }

  // self_built - computed: false, optional: false, required: true
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }

  // use_table_mapping - computed: false, optional: true, required: false
  private _useTableMapping?: boolean | cdktf.IResolvable; 
  public get useTableMapping() {
    return this.getBooleanAttribute('use_table_mapping');
  }
  public set useTableMapping(value: boolean | cdktf.IResolvable) {
    this._useTableMapping = value;
  }
  public resetUseTableMapping() {
    this._useTableMapping = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTableMappingInput() {
    return this._useTableMapping;
  }

  // zone_id - computed: false, optional: true, required: false
  private _zoneId?: number; 
  public get zoneId() {
    return this.getNumberAttribute('zone_id');
  }
  public set zoneId(value: number) {
    this._zoneId = value;
  }
  public resetZoneId() {
    this._zoneId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get zoneIdInput() {
    return this._zoneId;
  }

  // table_mappings - computed: false, optional: true, required: false
  private _tableMappings = new CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappingsList(this, "table_mappings", false);
  public get tableMappings() {
    return this._tableMappings;
  }
  public putTableMappings(value: CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamTableMappings[] | cdktf.IResolvable) {
    this._tableMappings.internalValue = value;
  }
  public resetTableMappings() {
    this._tableMappings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableMappingsInput() {
    return this._tableMappings.internalValue;
  }
}
export interface CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParam {
  /**
  * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, initial position earliest, latest position latest, time point position timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * The topic name of the topic sold separately.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * TopicId.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskSourceResourceEsParamDropDlqTopicParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParamOutputReference | CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    resource: cdktf.stringToTerraform(struct!.resource),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
  }
}


export function ckafkaDatahubTaskSourceResourceEsParamDropDlqTopicParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParamOutputReference | CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._resource = undefined;
      this._startTime = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._resource = value.resource;
      this._startTime = value.startTime;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic_id - computed: false, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }
}
export interface CkafkaDatahubTaskSourceResourceEsParamDropDlq {
  /**
  * dlq type, CKAFKA|TOPIC.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#dlq_type CkafkaDatahubTask#dlq_type}
  */
  readonly dlqType?: string;
  /**
  * retry times.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#max_retry_attempts CkafkaDatahubTask#max_retry_attempts}
  */
  readonly maxRetryAttempts?: number;
  /**
  * retry interval.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#retry_interval CkafkaDatahubTask#retry_interval}
  */
  readonly retryInterval?: number;
  /**
  * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
  /**
  * kafka_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#kafka_param CkafkaDatahubTask#kafka_param}
  */
  readonly kafkaParam?: CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParam;
  /**
  * topic_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_param CkafkaDatahubTask#topic_param}
  */
  readonly topicParam?: CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParam;
}

export function ckafkaDatahubTaskSourceResourceEsParamDropDlqToTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamDropDlqOutputReference | CkafkaDatahubTaskSourceResourceEsParamDropDlq): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dlq_type: cdktf.stringToTerraform(struct!.dlqType),
    max_retry_attempts: cdktf.numberToTerraform(struct!.maxRetryAttempts),
    retry_interval: cdktf.numberToTerraform(struct!.retryInterval),
    type: cdktf.stringToTerraform(struct!.type),
    kafka_param: ckafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamToTerraform(struct!.kafkaParam),
    topic_param: ckafkaDatahubTaskSourceResourceEsParamDropDlqTopicParamToTerraform(struct!.topicParam),
  }
}


export function ckafkaDatahubTaskSourceResourceEsParamDropDlqToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamDropDlqOutputReference | CkafkaDatahubTaskSourceResourceEsParamDropDlq): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dlq_type: {
      value: cdktf.stringToHclTerraform(struct!.dlqType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_retry_attempts: {
      value: cdktf.numberToHclTerraform(struct!.maxRetryAttempts),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    retry_interval: {
      value: cdktf.numberToHclTerraform(struct!.retryInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kafka_param: {
      value: ckafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamToHclTerraform(struct!.kafkaParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamList",
    },
    topic_param: {
      value: ckafkaDatahubTaskSourceResourceEsParamDropDlqTopicParamToHclTerraform(struct!.topicParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParamList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceEsParamDropDlqOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceEsParamDropDlq | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dlqType !== undefined) {
      hasAnyValues = true;
      internalValueResult.dlqType = this._dlqType;
    }
    if (this._maxRetryAttempts !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxRetryAttempts = this._maxRetryAttempts;
    }
    if (this._retryInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.retryInterval = this._retryInterval;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._kafkaParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kafkaParam = this._kafkaParam?.internalValue;
    }
    if (this._topicParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicParam = this._topicParam?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceEsParamDropDlq | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dlqType = undefined;
      this._maxRetryAttempts = undefined;
      this._retryInterval = undefined;
      this._type = undefined;
      this._kafkaParam.internalValue = undefined;
      this._topicParam.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dlqType = value.dlqType;
      this._maxRetryAttempts = value.maxRetryAttempts;
      this._retryInterval = value.retryInterval;
      this._type = value.type;
      this._kafkaParam.internalValue = value.kafkaParam;
      this._topicParam.internalValue = value.topicParam;
    }
  }

  // dlq_type - computed: false, optional: true, required: false
  private _dlqType?: string; 
  public get dlqType() {
    return this.getStringAttribute('dlq_type');
  }
  public set dlqType(value: string) {
    this._dlqType = value;
  }
  public resetDlqType() {
    this._dlqType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dlqTypeInput() {
    return this._dlqType;
  }

  // max_retry_attempts - computed: false, optional: true, required: false
  private _maxRetryAttempts?: number; 
  public get maxRetryAttempts() {
    return this.getNumberAttribute('max_retry_attempts');
  }
  public set maxRetryAttempts(value: number) {
    this._maxRetryAttempts = value;
  }
  public resetMaxRetryAttempts() {
    this._maxRetryAttempts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxRetryAttemptsInput() {
    return this._maxRetryAttempts;
  }

  // retry_interval - computed: false, optional: true, required: false
  private _retryInterval?: number; 
  public get retryInterval() {
    return this.getNumberAttribute('retry_interval');
  }
  public set retryInterval(value: number) {
    this._retryInterval = value;
  }
  public resetRetryInterval() {
    this._retryInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get retryIntervalInput() {
    return this._retryInterval;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // kafka_param - computed: false, optional: true, required: false
  private _kafkaParam = new CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParamOutputReference(this, "kafka_param");
  public get kafkaParam() {
    return this._kafkaParam;
  }
  public putKafkaParam(value: CkafkaDatahubTaskSourceResourceEsParamDropDlqKafkaParam) {
    this._kafkaParam.internalValue = value;
  }
  public resetKafkaParam() {
    this._kafkaParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kafkaParamInput() {
    return this._kafkaParam.internalValue;
  }

  // topic_param - computed: false, optional: true, required: false
  private _topicParam = new CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParamOutputReference(this, "topic_param");
  public get topicParam() {
    return this._topicParam;
  }
  public putTopicParam(value: CkafkaDatahubTaskSourceResourceEsParamDropDlqTopicParam) {
    this._topicParam.internalValue = value;
  }
  public resetTopicParam() {
    this._topicParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicParamInput() {
    return this._topicParam.internalValue;
  }
}
export interface CkafkaDatahubTaskSourceResourceEsParam {
  /**
  * key for data in non-json format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#content_key CkafkaDatahubTask#content_key}
  */
  readonly contentKey?: string;
  /**
  * When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database_primary_key CkafkaDatahubTask#database_primary_key}
  */
  readonly databasePrimaryKey?: string;
  /**
  * Es date suffix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#date_format CkafkaDatahubTask#date_format}
  */
  readonly dateFormat?: string;
  /**
  * The field name of the document ID value dumped into Es.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#document_id_field CkafkaDatahubTask#document_id_field}
  */
  readonly documentIdField?: string;
  /**
  * Whether Es discards messages in non-json format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_json_message CkafkaDatahubTask#drop_invalid_json_message}
  */
  readonly dropInvalidJsonMessage?: boolean | cdktf.IResolvable;
  /**
  * Whether Es discards the message of parsing failure.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message CkafkaDatahubTask#drop_invalid_message}
  */
  readonly dropInvalidMessage?: boolean | cdktf.IResolvable;
  /**
  * Es index name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#index CkafkaDatahubTask#index}
  */
  readonly index?: string;
  /**
  * Es custom index name type, STRING, JSONPATH, the default is STRING.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#index_type CkafkaDatahubTask#index_type}
  */
  readonly indexType?: string;
  /**
  * Es Password.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#password CkafkaDatahubTask#password}
  */
  readonly password?: string;
  /**
  * Es connection port.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#port CkafkaDatahubTask#port}
  */
  readonly port?: number;
  /**
  * Resource.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt?: boolean | cdktf.IResolvable;
  /**
  * instance vip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#service_vip CkafkaDatahubTask#service_vip}
  */
  readonly serviceVip?: string;
  /**
  * instance vpc id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#uniq_vpc_id CkafkaDatahubTask#uniq_vpc_id}
  */
  readonly uniqVpcId?: string;
  /**
  * Es UserName.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#user_name CkafkaDatahubTask#user_name}
  */
  readonly userName?: string;
  /**
  * drop_cls block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls CkafkaDatahubTask#drop_cls}
  */
  readonly dropCls?: CkafkaDatahubTaskSourceResourceEsParamDropCls;
  /**
  * drop_dlq block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_dlq CkafkaDatahubTask#drop_dlq}
  */
  readonly dropDlq?: CkafkaDatahubTaskSourceResourceEsParamDropDlq;
}

export function ckafkaDatahubTaskSourceResourceEsParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamOutputReference | CkafkaDatahubTaskSourceResourceEsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    content_key: cdktf.stringToTerraform(struct!.contentKey),
    database_primary_key: cdktf.stringToTerraform(struct!.databasePrimaryKey),
    date_format: cdktf.stringToTerraform(struct!.dateFormat),
    document_id_field: cdktf.stringToTerraform(struct!.documentIdField),
    drop_invalid_json_message: cdktf.booleanToTerraform(struct!.dropInvalidJsonMessage),
    drop_invalid_message: cdktf.booleanToTerraform(struct!.dropInvalidMessage),
    index: cdktf.stringToTerraform(struct!.index),
    index_type: cdktf.stringToTerraform(struct!.indexType),
    password: cdktf.stringToTerraform(struct!.password),
    port: cdktf.numberToTerraform(struct!.port),
    resource: cdktf.stringToTerraform(struct!.resource),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    service_vip: cdktf.stringToTerraform(struct!.serviceVip),
    uniq_vpc_id: cdktf.stringToTerraform(struct!.uniqVpcId),
    user_name: cdktf.stringToTerraform(struct!.userName),
    drop_cls: ckafkaDatahubTaskSourceResourceEsParamDropClsToTerraform(struct!.dropCls),
    drop_dlq: ckafkaDatahubTaskSourceResourceEsParamDropDlqToTerraform(struct!.dropDlq),
  }
}


export function ckafkaDatahubTaskSourceResourceEsParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceEsParamOutputReference | CkafkaDatahubTaskSourceResourceEsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    content_key: {
      value: cdktf.stringToHclTerraform(struct!.contentKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    database_primary_key: {
      value: cdktf.stringToHclTerraform(struct!.databasePrimaryKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    date_format: {
      value: cdktf.stringToHclTerraform(struct!.dateFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    document_id_field: {
      value: cdktf.stringToHclTerraform(struct!.documentIdField),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_json_message: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidJsonMessage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    drop_invalid_message: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    index: {
      value: cdktf.stringToHclTerraform(struct!.index),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    index_type: {
      value: cdktf.stringToHclTerraform(struct!.indexType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    service_vip: {
      value: cdktf.stringToHclTerraform(struct!.serviceVip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uniq_vpc_id: {
      value: cdktf.stringToHclTerraform(struct!.uniqVpcId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_name: {
      value: cdktf.stringToHclTerraform(struct!.userName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls: {
      value: ckafkaDatahubTaskSourceResourceEsParamDropClsToHclTerraform(struct!.dropCls),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceEsParamDropClsList",
    },
    drop_dlq: {
      value: ckafkaDatahubTaskSourceResourceEsParamDropDlqToHclTerraform(struct!.dropDlq),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceEsParamDropDlqList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceEsParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceEsParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._contentKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.contentKey = this._contentKey;
    }
    if (this._databasePrimaryKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.databasePrimaryKey = this._databasePrimaryKey;
    }
    if (this._dateFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.dateFormat = this._dateFormat;
    }
    if (this._documentIdField !== undefined) {
      hasAnyValues = true;
      internalValueResult.documentIdField = this._documentIdField;
    }
    if (this._dropInvalidJsonMessage !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidJsonMessage = this._dropInvalidJsonMessage;
    }
    if (this._dropInvalidMessage !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessage = this._dropInvalidMessage;
    }
    if (this._index !== undefined) {
      hasAnyValues = true;
      internalValueResult.index = this._index;
    }
    if (this._indexType !== undefined) {
      hasAnyValues = true;
      internalValueResult.indexType = this._indexType;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._serviceVip !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceVip = this._serviceVip;
    }
    if (this._uniqVpcId !== undefined) {
      hasAnyValues = true;
      internalValueResult.uniqVpcId = this._uniqVpcId;
    }
    if (this._userName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userName = this._userName;
    }
    if (this._dropCls?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropCls = this._dropCls?.internalValue;
    }
    if (this._dropDlq?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropDlq = this._dropDlq?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceEsParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._contentKey = undefined;
      this._databasePrimaryKey = undefined;
      this._dateFormat = undefined;
      this._documentIdField = undefined;
      this._dropInvalidJsonMessage = undefined;
      this._dropInvalidMessage = undefined;
      this._index = undefined;
      this._indexType = undefined;
      this._password = undefined;
      this._port = undefined;
      this._resource = undefined;
      this._selfBuilt = undefined;
      this._serviceVip = undefined;
      this._uniqVpcId = undefined;
      this._userName = undefined;
      this._dropCls.internalValue = undefined;
      this._dropDlq.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._contentKey = value.contentKey;
      this._databasePrimaryKey = value.databasePrimaryKey;
      this._dateFormat = value.dateFormat;
      this._documentIdField = value.documentIdField;
      this._dropInvalidJsonMessage = value.dropInvalidJsonMessage;
      this._dropInvalidMessage = value.dropInvalidMessage;
      this._index = value.index;
      this._indexType = value.indexType;
      this._password = value.password;
      this._port = value.port;
      this._resource = value.resource;
      this._selfBuilt = value.selfBuilt;
      this._serviceVip = value.serviceVip;
      this._uniqVpcId = value.uniqVpcId;
      this._userName = value.userName;
      this._dropCls.internalValue = value.dropCls;
      this._dropDlq.internalValue = value.dropDlq;
    }
  }

  // content_key - computed: false, optional: true, required: false
  private _contentKey?: string; 
  public get contentKey() {
    return this.getStringAttribute('content_key');
  }
  public set contentKey(value: string) {
    this._contentKey = value;
  }
  public resetContentKey() {
    this._contentKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contentKeyInput() {
    return this._contentKey;
  }

  // database_primary_key - computed: false, optional: true, required: false
  private _databasePrimaryKey?: string; 
  public get databasePrimaryKey() {
    return this.getStringAttribute('database_primary_key');
  }
  public set databasePrimaryKey(value: string) {
    this._databasePrimaryKey = value;
  }
  public resetDatabasePrimaryKey() {
    this._databasePrimaryKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get databasePrimaryKeyInput() {
    return this._databasePrimaryKey;
  }

  // date_format - computed: false, optional: true, required: false
  private _dateFormat?: string; 
  public get dateFormat() {
    return this.getStringAttribute('date_format');
  }
  public set dateFormat(value: string) {
    this._dateFormat = value;
  }
  public resetDateFormat() {
    this._dateFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dateFormatInput() {
    return this._dateFormat;
  }

  // document_id_field - computed: false, optional: true, required: false
  private _documentIdField?: string; 
  public get documentIdField() {
    return this.getStringAttribute('document_id_field');
  }
  public set documentIdField(value: string) {
    this._documentIdField = value;
  }
  public resetDocumentIdField() {
    this._documentIdField = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get documentIdFieldInput() {
    return this._documentIdField;
  }

  // drop_invalid_json_message - computed: false, optional: true, required: false
  private _dropInvalidJsonMessage?: boolean | cdktf.IResolvable; 
  public get dropInvalidJsonMessage() {
    return this.getBooleanAttribute('drop_invalid_json_message');
  }
  public set dropInvalidJsonMessage(value: boolean | cdktf.IResolvable) {
    this._dropInvalidJsonMessage = value;
  }
  public resetDropInvalidJsonMessage() {
    this._dropInvalidJsonMessage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidJsonMessageInput() {
    return this._dropInvalidJsonMessage;
  }

  // drop_invalid_message - computed: false, optional: true, required: false
  private _dropInvalidMessage?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessage() {
    return this.getBooleanAttribute('drop_invalid_message');
  }
  public set dropInvalidMessage(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessage = value;
  }
  public resetDropInvalidMessage() {
    this._dropInvalidMessage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageInput() {
    return this._dropInvalidMessage;
  }

  // index - computed: false, optional: true, required: false
  private _index?: string; 
  public get index() {
    return this.getStringAttribute('index');
  }
  public set index(value: string) {
    this._index = value;
  }
  public resetIndex() {
    this._index = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get indexInput() {
    return this._index;
  }

  // index_type - computed: false, optional: true, required: false
  private _indexType?: string; 
  public get indexType() {
    return this.getStringAttribute('index_type');
  }
  public set indexType(value: string) {
    this._indexType = value;
  }
  public resetIndexType() {
    this._indexType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get indexTypeInput() {
    return this._indexType;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // self_built - computed: false, optional: true, required: false
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  public resetSelfBuilt() {
    this._selfBuilt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // service_vip - computed: false, optional: true, required: false
  private _serviceVip?: string; 
  public get serviceVip() {
    return this.getStringAttribute('service_vip');
  }
  public set serviceVip(value: string) {
    this._serviceVip = value;
  }
  public resetServiceVip() {
    this._serviceVip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceVipInput() {
    return this._serviceVip;
  }

  // uniq_vpc_id - computed: false, optional: true, required: false
  private _uniqVpcId?: string; 
  public get uniqVpcId() {
    return this.getStringAttribute('uniq_vpc_id');
  }
  public set uniqVpcId(value: string) {
    this._uniqVpcId = value;
  }
  public resetUniqVpcId() {
    this._uniqVpcId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uniqVpcIdInput() {
    return this._uniqVpcId;
  }

  // user_name - computed: false, optional: true, required: false
  private _userName?: string; 
  public get userName() {
    return this.getStringAttribute('user_name');
  }
  public set userName(value: string) {
    this._userName = value;
  }
  public resetUserName() {
    this._userName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userNameInput() {
    return this._userName;
  }

  // drop_cls - computed: false, optional: true, required: false
  private _dropCls = new CkafkaDatahubTaskSourceResourceEsParamDropClsOutputReference(this, "drop_cls");
  public get dropCls() {
    return this._dropCls;
  }
  public putDropCls(value: CkafkaDatahubTaskSourceResourceEsParamDropCls) {
    this._dropCls.internalValue = value;
  }
  public resetDropCls() {
    this._dropCls.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsInput() {
    return this._dropCls.internalValue;
  }

  // drop_dlq - computed: false, optional: true, required: false
  private _dropDlq = new CkafkaDatahubTaskSourceResourceEsParamDropDlqOutputReference(this, "drop_dlq");
  public get dropDlq() {
    return this._dropDlq;
  }
  public putDropDlq(value: CkafkaDatahubTaskSourceResourceEsParamDropDlq) {
    this._dropDlq.internalValue = value;
  }
  public resetDropDlq() {
    this._dropDlq.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropDlqInput() {
    return this._dropDlq.internalValue;
  }
}
export interface CkafkaDatahubTaskSourceResourceEventBusParam {
  /**
  * SCF function name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#function_name CkafkaDatahubTask#function_name}
  */
  readonly functionName?: string;
  /**
  * SCF namespace.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#namespace CkafkaDatahubTask#namespace}
  */
  readonly namespace?: string;
  /**
  * SCF version and alias.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#qualifier CkafkaDatahubTask#qualifier}
  */
  readonly qualifier?: string;
  /**
  * instance id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt: boolean | cdktf.IResolvable;
  /**
  * resource type, EB_COS/EB_ES/EB_CLS.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
}

export function ckafkaDatahubTaskSourceResourceEventBusParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceEventBusParamOutputReference | CkafkaDatahubTaskSourceResourceEventBusParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    function_name: cdktf.stringToTerraform(struct!.functionName),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    qualifier: cdktf.stringToTerraform(struct!.qualifier),
    resource: cdktf.stringToTerraform(struct!.resource),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function ckafkaDatahubTaskSourceResourceEventBusParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceEventBusParamOutputReference | CkafkaDatahubTaskSourceResourceEventBusParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    function_name: {
      value: cdktf.stringToHclTerraform(struct!.functionName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    qualifier: {
      value: cdktf.stringToHclTerraform(struct!.qualifier),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceEventBusParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceEventBusParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._functionName !== undefined) {
      hasAnyValues = true;
      internalValueResult.functionName = this._functionName;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._qualifier !== undefined) {
      hasAnyValues = true;
      internalValueResult.qualifier = this._qualifier;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceEventBusParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._functionName = undefined;
      this._namespace = undefined;
      this._qualifier = undefined;
      this._resource = undefined;
      this._selfBuilt = undefined;
      this._type = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._functionName = value.functionName;
      this._namespace = value.namespace;
      this._qualifier = value.qualifier;
      this._resource = value.resource;
      this._selfBuilt = value.selfBuilt;
      this._type = value.type;
    }
  }

  // function_name - computed: false, optional: true, required: false
  private _functionName?: string; 
  public get functionName() {
    return this.getStringAttribute('function_name');
  }
  public set functionName(value: string) {
    this._functionName = value;
  }
  public resetFunctionName() {
    this._functionName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get functionNameInput() {
    return this._functionName;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // qualifier - computed: false, optional: true, required: false
  private _qualifier?: string; 
  public get qualifier() {
    return this.getStringAttribute('qualifier');
  }
  public set qualifier(value: string) {
    this._qualifier = value;
  }
  public resetQualifier() {
    this._qualifier = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qualifierInput() {
    return this._qualifier;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // self_built - computed: false, optional: false, required: true
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface CkafkaDatahubTaskSourceResourceKafkaParamTableMappings {
  /**
  * database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * table name,use, to separate.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * Topic name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic: string;
  /**
  * Topic ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId: string;
}

export function ckafkaDatahubTaskSourceResourceKafkaParamTableMappingsToTerraform(struct?: CkafkaDatahubTaskSourceResourceKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    table: cdktf.stringToTerraform(struct!.table),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
  }
}


export function ckafkaDatahubTaskSourceResourceKafkaParamTableMappingsToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceKafkaParamTableMappingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceKafkaParamTableMappings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceKafkaParamTableMappings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._database = undefined;
      this._table = undefined;
      this._topic = undefined;
      this._topicId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._database = value.database;
      this._table = value.table;
      this._topic = value.topic;
      this._topicId = value.topicId;
    }
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // topic - computed: false, optional: false, required: true
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: false, required: true
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }
}

export class CkafkaDatahubTaskSourceResourceKafkaParamTableMappingsList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskSourceResourceKafkaParamTableMappings[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskSourceResourceKafkaParamTableMappingsOutputReference {
    return new CkafkaDatahubTaskSourceResourceKafkaParamTableMappingsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskSourceResourceKafkaParam {
  /**
  * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * enable dead letter queue.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#enable_toleration CkafkaDatahubTask#enable_toleration}
  */
  readonly enableToleration?: boolean | cdktf.IResolvable;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * the partition num of the topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#partition_num CkafkaDatahubTask#partition_num}
  */
  readonly partitionNum?: number;
  /**
  * Qps(query per seconds) limit.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#qps_limit CkafkaDatahubTask#qps_limit}
  */
  readonly qpsLimit?: number;
  /**
  * instance resource.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * instance name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource_name CkafkaDatahubTask#resource_name}
  */
  readonly resourceName?: string;
  /**
  * whether the cluster is built by yourself instead of cloud product.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt: boolean | cdktf.IResolvable;
  /**
  * when Offset type timestamp is required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * Topic name, use `,` when more than 1 topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic?: string;
  /**
  * Topic id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
  /**
  * whether to use multi table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_table_mapping CkafkaDatahubTask#use_table_mapping}
  */
  readonly useTableMapping?: boolean | cdktf.IResolvable;
  /**
  * Zone ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#zone_id CkafkaDatahubTask#zone_id}
  */
  readonly zoneId?: number;
  /**
  * table_mappings block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table_mappings CkafkaDatahubTask#table_mappings}
  */
  readonly tableMappings?: CkafkaDatahubTaskSourceResourceKafkaParamTableMappings[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskSourceResourceKafkaParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceKafkaParamOutputReference | CkafkaDatahubTaskSourceResourceKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    enable_toleration: cdktf.booleanToTerraform(struct!.enableToleration),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    partition_num: cdktf.numberToTerraform(struct!.partitionNum),
    qps_limit: cdktf.numberToTerraform(struct!.qpsLimit),
    resource: cdktf.stringToTerraform(struct!.resource),
    resource_name: cdktf.stringToTerraform(struct!.resourceName),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
    use_table_mapping: cdktf.booleanToTerraform(struct!.useTableMapping),
    zone_id: cdktf.numberToTerraform(struct!.zoneId),
    table_mappings: cdktf.listMapper(ckafkaDatahubTaskSourceResourceKafkaParamTableMappingsToTerraform, true)(struct!.tableMappings),
  }
}


export function ckafkaDatahubTaskSourceResourceKafkaParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceKafkaParamOutputReference | CkafkaDatahubTaskSourceResourceKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enable_toleration: {
      value: cdktf.booleanToHclTerraform(struct!.enableToleration),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition_num: {
      value: cdktf.numberToHclTerraform(struct!.partitionNum),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    qps_limit: {
      value: cdktf.numberToHclTerraform(struct!.qpsLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_name: {
      value: cdktf.stringToHclTerraform(struct!.resourceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_table_mapping: {
      value: cdktf.booleanToHclTerraform(struct!.useTableMapping),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    zone_id: {
      value: cdktf.numberToHclTerraform(struct!.zoneId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    table_mappings: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskSourceResourceKafkaParamTableMappingsToHclTerraform, true)(struct!.tableMappings),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceKafkaParamTableMappingsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceKafkaParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceKafkaParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._enableToleration !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableToleration = this._enableToleration;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._partitionNum !== undefined) {
      hasAnyValues = true;
      internalValueResult.partitionNum = this._partitionNum;
    }
    if (this._qpsLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.qpsLimit = this._qpsLimit;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._resourceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceName = this._resourceName;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    if (this._useTableMapping !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTableMapping = this._useTableMapping;
    }
    if (this._zoneId !== undefined) {
      hasAnyValues = true;
      internalValueResult.zoneId = this._zoneId;
    }
    if (this._tableMappings?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableMappings = this._tableMappings?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceKafkaParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._enableToleration = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._partitionNum = undefined;
      this._qpsLimit = undefined;
      this._resource = undefined;
      this._resourceName = undefined;
      this._selfBuilt = undefined;
      this._startTime = undefined;
      this._topic = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
      this._useTableMapping = undefined;
      this._zoneId = undefined;
      this._tableMappings.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._enableToleration = value.enableToleration;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._partitionNum = value.partitionNum;
      this._qpsLimit = value.qpsLimit;
      this._resource = value.resource;
      this._resourceName = value.resourceName;
      this._selfBuilt = value.selfBuilt;
      this._startTime = value.startTime;
      this._topic = value.topic;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
      this._useTableMapping = value.useTableMapping;
      this._zoneId = value.zoneId;
      this._tableMappings.internalValue = value.tableMappings;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // enable_toleration - computed: false, optional: true, required: false
  private _enableToleration?: boolean | cdktf.IResolvable; 
  public get enableToleration() {
    return this.getBooleanAttribute('enable_toleration');
  }
  public set enableToleration(value: boolean | cdktf.IResolvable) {
    this._enableToleration = value;
  }
  public resetEnableToleration() {
    this._enableToleration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableTolerationInput() {
    return this._enableToleration;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // partition_num - computed: false, optional: true, required: false
  private _partitionNum?: number; 
  public get partitionNum() {
    return this.getNumberAttribute('partition_num');
  }
  public set partitionNum(value: number) {
    this._partitionNum = value;
  }
  public resetPartitionNum() {
    this._partitionNum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionNumInput() {
    return this._partitionNum;
  }

  // qps_limit - computed: false, optional: true, required: false
  private _qpsLimit?: number; 
  public get qpsLimit() {
    return this.getNumberAttribute('qps_limit');
  }
  public set qpsLimit(value: number) {
    this._qpsLimit = value;
  }
  public resetQpsLimit() {
    this._qpsLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qpsLimitInput() {
    return this._qpsLimit;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // resource_name - computed: false, optional: true, required: false
  private _resourceName?: string; 
  public get resourceName() {
    return this.getStringAttribute('resource_name');
  }
  public set resourceName(value: string) {
    this._resourceName = value;
  }
  public resetResourceName() {
    this._resourceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceNameInput() {
    return this._resourceName;
  }

  // self_built - computed: false, optional: false, required: true
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }

  // use_table_mapping - computed: false, optional: true, required: false
  private _useTableMapping?: boolean | cdktf.IResolvable; 
  public get useTableMapping() {
    return this.getBooleanAttribute('use_table_mapping');
  }
  public set useTableMapping(value: boolean | cdktf.IResolvable) {
    this._useTableMapping = value;
  }
  public resetUseTableMapping() {
    this._useTableMapping = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTableMappingInput() {
    return this._useTableMapping;
  }

  // zone_id - computed: false, optional: true, required: false
  private _zoneId?: number; 
  public get zoneId() {
    return this.getNumberAttribute('zone_id');
  }
  public set zoneId(value: number) {
    this._zoneId = value;
  }
  public resetZoneId() {
    this._zoneId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get zoneIdInput() {
    return this._zoneId;
  }

  // table_mappings - computed: false, optional: true, required: false
  private _tableMappings = new CkafkaDatahubTaskSourceResourceKafkaParamTableMappingsList(this, "table_mappings", false);
  public get tableMappings() {
    return this._tableMappings;
  }
  public putTableMappings(value: CkafkaDatahubTaskSourceResourceKafkaParamTableMappings[] | cdktf.IResolvable) {
    this._tableMappings.internalValue = value;
  }
  public resetTableMappings() {
    this._tableMappings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableMappingsInput() {
    return this._tableMappings.internalValue;
  }
}
export interface CkafkaDatahubTaskSourceResourceMariaDbParam {
  /**
  * MariaDB database name, * for all database.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#include_content_changes CkafkaDatahubTask#include_content_changes}
  */
  readonly includeContentChanges?: string;
  /**
  * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#include_query CkafkaDatahubTask#include_query}
  */
  readonly includeQuery?: boolean | cdktf.IResolvable;
  /**
  * When the Table input is a prefix, the value of this item is true, otherwise it is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#is_table_prefix CkafkaDatahubTask#is_table_prefix}
  */
  readonly isTablePrefix?: boolean | cdktf.IResolvable;
  /**
  * Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#key_columns CkafkaDatahubTask#key_columns}
  */
  readonly keyColumns?: string;
  /**
  * output format, DEFAULT, CANAL_1, CANAL_2.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#output_format CkafkaDatahubTask#output_format}
  */
  readonly outputFormat?: string;
  /**
  * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#record_with_schema CkafkaDatahubTask#record_with_schema}
  */
  readonly recordWithSchema?: boolean | cdktf.IResolvable;
  /**
  * MariaDB connection Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * schema_only|initial, default initial.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#snapshot_mode CkafkaDatahubTask#snapshot_mode}
  */
  readonly snapshotMode?: string;
  /**
  * MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
}

export function ckafkaDatahubTaskSourceResourceMariaDbParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceMariaDbParamOutputReference | CkafkaDatahubTaskSourceResourceMariaDbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    include_content_changes: cdktf.stringToTerraform(struct!.includeContentChanges),
    include_query: cdktf.booleanToTerraform(struct!.includeQuery),
    is_table_prefix: cdktf.booleanToTerraform(struct!.isTablePrefix),
    key_columns: cdktf.stringToTerraform(struct!.keyColumns),
    output_format: cdktf.stringToTerraform(struct!.outputFormat),
    record_with_schema: cdktf.booleanToTerraform(struct!.recordWithSchema),
    resource: cdktf.stringToTerraform(struct!.resource),
    snapshot_mode: cdktf.stringToTerraform(struct!.snapshotMode),
    table: cdktf.stringToTerraform(struct!.table),
  }
}


export function ckafkaDatahubTaskSourceResourceMariaDbParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceMariaDbParamOutputReference | CkafkaDatahubTaskSourceResourceMariaDbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    include_content_changes: {
      value: cdktf.stringToHclTerraform(struct!.includeContentChanges),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    include_query: {
      value: cdktf.booleanToHclTerraform(struct!.includeQuery),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_table_prefix: {
      value: cdktf.booleanToHclTerraform(struct!.isTablePrefix),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    key_columns: {
      value: cdktf.stringToHclTerraform(struct!.keyColumns),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    output_format: {
      value: cdktf.stringToHclTerraform(struct!.outputFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    record_with_schema: {
      value: cdktf.booleanToHclTerraform(struct!.recordWithSchema),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snapshot_mode: {
      value: cdktf.stringToHclTerraform(struct!.snapshotMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceMariaDbParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceMariaDbParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._includeContentChanges !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeContentChanges = this._includeContentChanges;
    }
    if (this._includeQuery !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeQuery = this._includeQuery;
    }
    if (this._isTablePrefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.isTablePrefix = this._isTablePrefix;
    }
    if (this._keyColumns !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyColumns = this._keyColumns;
    }
    if (this._outputFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.outputFormat = this._outputFormat;
    }
    if (this._recordWithSchema !== undefined) {
      hasAnyValues = true;
      internalValueResult.recordWithSchema = this._recordWithSchema;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._snapshotMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.snapshotMode = this._snapshotMode;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceMariaDbParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._database = undefined;
      this._includeContentChanges = undefined;
      this._includeQuery = undefined;
      this._isTablePrefix = undefined;
      this._keyColumns = undefined;
      this._outputFormat = undefined;
      this._recordWithSchema = undefined;
      this._resource = undefined;
      this._snapshotMode = undefined;
      this._table = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._database = value.database;
      this._includeContentChanges = value.includeContentChanges;
      this._includeQuery = value.includeQuery;
      this._isTablePrefix = value.isTablePrefix;
      this._keyColumns = value.keyColumns;
      this._outputFormat = value.outputFormat;
      this._recordWithSchema = value.recordWithSchema;
      this._resource = value.resource;
      this._snapshotMode = value.snapshotMode;
      this._table = value.table;
    }
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // include_content_changes - computed: false, optional: true, required: false
  private _includeContentChanges?: string; 
  public get includeContentChanges() {
    return this.getStringAttribute('include_content_changes');
  }
  public set includeContentChanges(value: string) {
    this._includeContentChanges = value;
  }
  public resetIncludeContentChanges() {
    this._includeContentChanges = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeContentChangesInput() {
    return this._includeContentChanges;
  }

  // include_query - computed: false, optional: true, required: false
  private _includeQuery?: boolean | cdktf.IResolvable; 
  public get includeQuery() {
    return this.getBooleanAttribute('include_query');
  }
  public set includeQuery(value: boolean | cdktf.IResolvable) {
    this._includeQuery = value;
  }
  public resetIncludeQuery() {
    this._includeQuery = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeQueryInput() {
    return this._includeQuery;
  }

  // is_table_prefix - computed: false, optional: true, required: false
  private _isTablePrefix?: boolean | cdktf.IResolvable; 
  public get isTablePrefix() {
    return this.getBooleanAttribute('is_table_prefix');
  }
  public set isTablePrefix(value: boolean | cdktf.IResolvable) {
    this._isTablePrefix = value;
  }
  public resetIsTablePrefix() {
    this._isTablePrefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isTablePrefixInput() {
    return this._isTablePrefix;
  }

  // key_columns - computed: false, optional: true, required: false
  private _keyColumns?: string; 
  public get keyColumns() {
    return this.getStringAttribute('key_columns');
  }
  public set keyColumns(value: string) {
    this._keyColumns = value;
  }
  public resetKeyColumns() {
    this._keyColumns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyColumnsInput() {
    return this._keyColumns;
  }

  // output_format - computed: false, optional: true, required: false
  private _outputFormat?: string; 
  public get outputFormat() {
    return this.getStringAttribute('output_format');
  }
  public set outputFormat(value: string) {
    this._outputFormat = value;
  }
  public resetOutputFormat() {
    this._outputFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get outputFormatInput() {
    return this._outputFormat;
  }

  // record_with_schema - computed: false, optional: true, required: false
  private _recordWithSchema?: boolean | cdktf.IResolvable; 
  public get recordWithSchema() {
    return this.getBooleanAttribute('record_with_schema');
  }
  public set recordWithSchema(value: boolean | cdktf.IResolvable) {
    this._recordWithSchema = value;
  }
  public resetRecordWithSchema() {
    this._recordWithSchema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recordWithSchemaInput() {
    return this._recordWithSchema;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // snapshot_mode - computed: false, optional: true, required: false
  private _snapshotMode?: string; 
  public get snapshotMode() {
    return this.getStringAttribute('snapshot_mode');
  }
  public set snapshotMode(value: string) {
    this._snapshotMode = value;
  }
  public resetSnapshotMode() {
    this._snapshotMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snapshotModeInput() {
    return this._snapshotMode;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }
}
export interface CkafkaDatahubTaskSourceResourceMongoDbParam {
  /**
  * MongoDB collection.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#collection CkafkaDatahubTask#collection}
  */
  readonly collection: string;
  /**
  * Whether to copy the stock data, the default parameter is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#copy_existing CkafkaDatahubTask#copy_existing}
  */
  readonly copyExisting: boolean | cdktf.IResolvable;
  /**
  * MongoDB database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * Mongo DB connection ip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ip CkafkaDatahubTask#ip}
  */
  readonly ip?: string;
  /**
  * Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#listening_event CkafkaDatahubTask#listening_event}
  */
  readonly listeningEvent?: string;
  /**
  * MongoDB database password.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#password CkafkaDatahubTask#password}
  */
  readonly password?: string;
  /**
  * aggregation pipeline.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#pipeline CkafkaDatahubTask#pipeline}
  */
  readonly pipeline?: string;
  /**
  * MongoDB connection port.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#port CkafkaDatahubTask#port}
  */
  readonly port?: number;
  /**
  * Master-slave priority, default master node.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#read_preference CkafkaDatahubTask#read_preference}
  */
  readonly readPreference?: string;
  /**
  * resource id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt?: boolean | cdktf.IResolvable;
  /**
  * MongoDB database user name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#user_name CkafkaDatahubTask#user_name}
  */
  readonly userName?: string;
}

export function ckafkaDatahubTaskSourceResourceMongoDbParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceMongoDbParamOutputReference | CkafkaDatahubTaskSourceResourceMongoDbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collection: cdktf.stringToTerraform(struct!.collection),
    copy_existing: cdktf.booleanToTerraform(struct!.copyExisting),
    database: cdktf.stringToTerraform(struct!.database),
    ip: cdktf.stringToTerraform(struct!.ip),
    listening_event: cdktf.stringToTerraform(struct!.listeningEvent),
    password: cdktf.stringToTerraform(struct!.password),
    pipeline: cdktf.stringToTerraform(struct!.pipeline),
    port: cdktf.numberToTerraform(struct!.port),
    read_preference: cdktf.stringToTerraform(struct!.readPreference),
    resource: cdktf.stringToTerraform(struct!.resource),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    user_name: cdktf.stringToTerraform(struct!.userName),
  }
}


export function ckafkaDatahubTaskSourceResourceMongoDbParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceMongoDbParamOutputReference | CkafkaDatahubTaskSourceResourceMongoDbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collection: {
      value: cdktf.stringToHclTerraform(struct!.collection),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    copy_existing: {
      value: cdktf.booleanToHclTerraform(struct!.copyExisting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    listening_event: {
      value: cdktf.stringToHclTerraform(struct!.listeningEvent),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pipeline: {
      value: cdktf.stringToHclTerraform(struct!.pipeline),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    read_preference: {
      value: cdktf.stringToHclTerraform(struct!.readPreference),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    user_name: {
      value: cdktf.stringToHclTerraform(struct!.userName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceMongoDbParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceMongoDbParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collection !== undefined) {
      hasAnyValues = true;
      internalValueResult.collection = this._collection;
    }
    if (this._copyExisting !== undefined) {
      hasAnyValues = true;
      internalValueResult.copyExisting = this._copyExisting;
    }
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    if (this._listeningEvent !== undefined) {
      hasAnyValues = true;
      internalValueResult.listeningEvent = this._listeningEvent;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._pipeline !== undefined) {
      hasAnyValues = true;
      internalValueResult.pipeline = this._pipeline;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._readPreference !== undefined) {
      hasAnyValues = true;
      internalValueResult.readPreference = this._readPreference;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._userName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userName = this._userName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceMongoDbParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._collection = undefined;
      this._copyExisting = undefined;
      this._database = undefined;
      this._ip = undefined;
      this._listeningEvent = undefined;
      this._password = undefined;
      this._pipeline = undefined;
      this._port = undefined;
      this._readPreference = undefined;
      this._resource = undefined;
      this._selfBuilt = undefined;
      this._userName = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._collection = value.collection;
      this._copyExisting = value.copyExisting;
      this._database = value.database;
      this._ip = value.ip;
      this._listeningEvent = value.listeningEvent;
      this._password = value.password;
      this._pipeline = value.pipeline;
      this._port = value.port;
      this._readPreference = value.readPreference;
      this._resource = value.resource;
      this._selfBuilt = value.selfBuilt;
      this._userName = value.userName;
    }
  }

  // collection - computed: false, optional: false, required: true
  private _collection?: string; 
  public get collection() {
    return this.getStringAttribute('collection');
  }
  public set collection(value: string) {
    this._collection = value;
  }
  // Temporarily expose input value. Use with caution.
  public get collectionInput() {
    return this._collection;
  }

  // copy_existing - computed: false, optional: false, required: true
  private _copyExisting?: boolean | cdktf.IResolvable; 
  public get copyExisting() {
    return this.getBooleanAttribute('copy_existing');
  }
  public set copyExisting(value: boolean | cdktf.IResolvable) {
    this._copyExisting = value;
  }
  // Temporarily expose input value. Use with caution.
  public get copyExistingInput() {
    return this._copyExisting;
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // ip - computed: false, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }

  // listening_event - computed: false, optional: true, required: false
  private _listeningEvent?: string; 
  public get listeningEvent() {
    return this.getStringAttribute('listening_event');
  }
  public set listeningEvent(value: string) {
    this._listeningEvent = value;
  }
  public resetListeningEvent() {
    this._listeningEvent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get listeningEventInput() {
    return this._listeningEvent;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // pipeline - computed: false, optional: true, required: false
  private _pipeline?: string; 
  public get pipeline() {
    return this.getStringAttribute('pipeline');
  }
  public set pipeline(value: string) {
    this._pipeline = value;
  }
  public resetPipeline() {
    this._pipeline = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pipelineInput() {
    return this._pipeline;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // read_preference - computed: false, optional: true, required: false
  private _readPreference?: string; 
  public get readPreference() {
    return this.getStringAttribute('read_preference');
  }
  public set readPreference(value: string) {
    this._readPreference = value;
  }
  public resetReadPreference() {
    this._readPreference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readPreferenceInput() {
    return this._readPreference;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // self_built - computed: false, optional: true, required: false
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  public resetSelfBuilt() {
    this._selfBuilt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // user_name - computed: false, optional: true, required: false
  private _userName?: string; 
  public get userName() {
    return this.getStringAttribute('user_name');
  }
  public set userName(value: string) {
    this._userName = value;
  }
  public resetUserName() {
    this._userName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userNameInput() {
    return this._userName;
  }
}
export interface CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMapping {
  /**
  * Whether the message is allowed to be empty.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#allow_null CkafkaDatahubTask#allow_null}
  */
  readonly allowNull?: boolean | cdktf.IResolvable;
  /**
  * Whether it is an auto-increment column.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#auto_increment CkafkaDatahubTask#auto_increment}
  */
  readonly autoIncrement?: boolean | cdktf.IResolvable;
  /**
  * Corresponding mapping column name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#column_name CkafkaDatahubTask#column_name}
  */
  readonly columnName?: string;
  /**
  * current column size.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#column_size CkafkaDatahubTask#column_size}
  */
  readonly columnSize?: string;
  /**
  * current column precision.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#decimal_digits CkafkaDatahubTask#decimal_digits}
  */
  readonly decimalDigits?: string;
  /**
  * Database table default parameters.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#default_value CkafkaDatahubTask#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Database table extra fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#extra_info CkafkaDatahubTask#extra_info}
  */
  readonly extraInfo?: string;
  /**
  * The key name of the message.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#json_key CkafkaDatahubTask#json_key}
  */
  readonly jsonKey?: string;
  /**
  * message type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type?: string;
}

export function ckafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingToTerraform(struct?: CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMapping | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_null: cdktf.booleanToTerraform(struct!.allowNull),
    auto_increment: cdktf.booleanToTerraform(struct!.autoIncrement),
    column_name: cdktf.stringToTerraform(struct!.columnName),
    column_size: cdktf.stringToTerraform(struct!.columnSize),
    decimal_digits: cdktf.stringToTerraform(struct!.decimalDigits),
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    extra_info: cdktf.stringToTerraform(struct!.extraInfo),
    json_key: cdktf.stringToTerraform(struct!.jsonKey),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function ckafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMapping | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_null: {
      value: cdktf.booleanToHclTerraform(struct!.allowNull),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    auto_increment: {
      value: cdktf.booleanToHclTerraform(struct!.autoIncrement),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    column_name: {
      value: cdktf.stringToHclTerraform(struct!.columnName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    column_size: {
      value: cdktf.stringToHclTerraform(struct!.columnSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    decimal_digits: {
      value: cdktf.stringToHclTerraform(struct!.decimalDigits),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    extra_info: {
      value: cdktf.stringToHclTerraform(struct!.extraInfo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    json_key: {
      value: cdktf.stringToHclTerraform(struct!.jsonKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMapping | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowNull !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowNull = this._allowNull;
    }
    if (this._autoIncrement !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoIncrement = this._autoIncrement;
    }
    if (this._columnName !== undefined) {
      hasAnyValues = true;
      internalValueResult.columnName = this._columnName;
    }
    if (this._columnSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.columnSize = this._columnSize;
    }
    if (this._decimalDigits !== undefined) {
      hasAnyValues = true;
      internalValueResult.decimalDigits = this._decimalDigits;
    }
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._extraInfo !== undefined) {
      hasAnyValues = true;
      internalValueResult.extraInfo = this._extraInfo;
    }
    if (this._jsonKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonKey = this._jsonKey;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMapping | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowNull = undefined;
      this._autoIncrement = undefined;
      this._columnName = undefined;
      this._columnSize = undefined;
      this._decimalDigits = undefined;
      this._defaultValue = undefined;
      this._extraInfo = undefined;
      this._jsonKey = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowNull = value.allowNull;
      this._autoIncrement = value.autoIncrement;
      this._columnName = value.columnName;
      this._columnSize = value.columnSize;
      this._decimalDigits = value.decimalDigits;
      this._defaultValue = value.defaultValue;
      this._extraInfo = value.extraInfo;
      this._jsonKey = value.jsonKey;
      this._type = value.type;
    }
  }

  // allow_null - computed: false, optional: true, required: false
  private _allowNull?: boolean | cdktf.IResolvable; 
  public get allowNull() {
    return this.getBooleanAttribute('allow_null');
  }
  public set allowNull(value: boolean | cdktf.IResolvable) {
    this._allowNull = value;
  }
  public resetAllowNull() {
    this._allowNull = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowNullInput() {
    return this._allowNull;
  }

  // auto_increment - computed: false, optional: true, required: false
  private _autoIncrement?: boolean | cdktf.IResolvable; 
  public get autoIncrement() {
    return this.getBooleanAttribute('auto_increment');
  }
  public set autoIncrement(value: boolean | cdktf.IResolvable) {
    this._autoIncrement = value;
  }
  public resetAutoIncrement() {
    this._autoIncrement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoIncrementInput() {
    return this._autoIncrement;
  }

  // column_name - computed: false, optional: true, required: false
  private _columnName?: string; 
  public get columnName() {
    return this.getStringAttribute('column_name');
  }
  public set columnName(value: string) {
    this._columnName = value;
  }
  public resetColumnName() {
    this._columnName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get columnNameInput() {
    return this._columnName;
  }

  // column_size - computed: false, optional: true, required: false
  private _columnSize?: string; 
  public get columnSize() {
    return this.getStringAttribute('column_size');
  }
  public set columnSize(value: string) {
    this._columnSize = value;
  }
  public resetColumnSize() {
    this._columnSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get columnSizeInput() {
    return this._columnSize;
  }

  // decimal_digits - computed: false, optional: true, required: false
  private _decimalDigits?: string; 
  public get decimalDigits() {
    return this.getStringAttribute('decimal_digits');
  }
  public set decimalDigits(value: string) {
    this._decimalDigits = value;
  }
  public resetDecimalDigits() {
    this._decimalDigits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decimalDigitsInput() {
    return this._decimalDigits;
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // extra_info - computed: false, optional: true, required: false
  private _extraInfo?: string; 
  public get extraInfo() {
    return this.getStringAttribute('extra_info');
  }
  public set extraInfo(value: string) {
    this._extraInfo = value;
  }
  public resetExtraInfo() {
    this._extraInfo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extraInfoInput() {
    return this._extraInfo;
  }

  // json_key - computed: false, optional: true, required: false
  private _jsonKey?: string; 
  public get jsonKey() {
    return this.getStringAttribute('json_key');
  }
  public set jsonKey(value: string) {
    this._jsonKey = value;
  }
  public resetJsonKey() {
    this._jsonKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonKeyInput() {
    return this._jsonKey;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}

export class CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMapping[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutputReference {
    return new CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskSourceResourceMySqlParamDropCls {
  /**
  * cls LogSet id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_log_set CkafkaDatahubTask#drop_cls_log_set}
  */
  readonly dropClsLogSet?: string;
  /**
  * account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_owneruin CkafkaDatahubTask#drop_cls_owneruin}
  */
  readonly dropClsOwneruin?: string;
  /**
  * The region where the cls is delivered.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_region CkafkaDatahubTask#drop_cls_region}
  */
  readonly dropClsRegion?: string;
  /**
  * cls topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_topic_id CkafkaDatahubTask#drop_cls_topic_id}
  */
  readonly dropClsTopicId?: string;
  /**
  * Whether to deliver to cls.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message_to_cls CkafkaDatahubTask#drop_invalid_message_to_cls}
  */
  readonly dropInvalidMessageToCls?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskSourceResourceMySqlParamDropClsToTerraform(struct?: CkafkaDatahubTaskSourceResourceMySqlParamDropClsOutputReference | CkafkaDatahubTaskSourceResourceMySqlParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    drop_cls_log_set: cdktf.stringToTerraform(struct!.dropClsLogSet),
    drop_cls_owneruin: cdktf.stringToTerraform(struct!.dropClsOwneruin),
    drop_cls_region: cdktf.stringToTerraform(struct!.dropClsRegion),
    drop_cls_topic_id: cdktf.stringToTerraform(struct!.dropClsTopicId),
    drop_invalid_message_to_cls: cdktf.booleanToTerraform(struct!.dropInvalidMessageToCls),
  }
}


export function ckafkaDatahubTaskSourceResourceMySqlParamDropClsToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceMySqlParamDropClsOutputReference | CkafkaDatahubTaskSourceResourceMySqlParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    drop_cls_log_set: {
      value: cdktf.stringToHclTerraform(struct!.dropClsLogSet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_owneruin: {
      value: cdktf.stringToHclTerraform(struct!.dropClsOwneruin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_region: {
      value: cdktf.stringToHclTerraform(struct!.dropClsRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_topic_id: {
      value: cdktf.stringToHclTerraform(struct!.dropClsTopicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message_to_cls: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessageToCls),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceMySqlParamDropClsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceMySqlParamDropCls | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dropClsLogSet !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsLogSet = this._dropClsLogSet;
    }
    if (this._dropClsOwneruin !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsOwneruin = this._dropClsOwneruin;
    }
    if (this._dropClsRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsRegion = this._dropClsRegion;
    }
    if (this._dropClsTopicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsTopicId = this._dropClsTopicId;
    }
    if (this._dropInvalidMessageToCls !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessageToCls = this._dropInvalidMessageToCls;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceMySqlParamDropCls | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dropClsLogSet = undefined;
      this._dropClsOwneruin = undefined;
      this._dropClsRegion = undefined;
      this._dropClsTopicId = undefined;
      this._dropInvalidMessageToCls = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dropClsLogSet = value.dropClsLogSet;
      this._dropClsOwneruin = value.dropClsOwneruin;
      this._dropClsRegion = value.dropClsRegion;
      this._dropClsTopicId = value.dropClsTopicId;
      this._dropInvalidMessageToCls = value.dropInvalidMessageToCls;
    }
  }

  // drop_cls_log_set - computed: false, optional: true, required: false
  private _dropClsLogSet?: string; 
  public get dropClsLogSet() {
    return this.getStringAttribute('drop_cls_log_set');
  }
  public set dropClsLogSet(value: string) {
    this._dropClsLogSet = value;
  }
  public resetDropClsLogSet() {
    this._dropClsLogSet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsLogSetInput() {
    return this._dropClsLogSet;
  }

  // drop_cls_owneruin - computed: false, optional: true, required: false
  private _dropClsOwneruin?: string; 
  public get dropClsOwneruin() {
    return this.getStringAttribute('drop_cls_owneruin');
  }
  public set dropClsOwneruin(value: string) {
    this._dropClsOwneruin = value;
  }
  public resetDropClsOwneruin() {
    this._dropClsOwneruin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsOwneruinInput() {
    return this._dropClsOwneruin;
  }

  // drop_cls_region - computed: false, optional: true, required: false
  private _dropClsRegion?: string; 
  public get dropClsRegion() {
    return this.getStringAttribute('drop_cls_region');
  }
  public set dropClsRegion(value: string) {
    this._dropClsRegion = value;
  }
  public resetDropClsRegion() {
    this._dropClsRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsRegionInput() {
    return this._dropClsRegion;
  }

  // drop_cls_topic_id - computed: false, optional: true, required: false
  private _dropClsTopicId?: string; 
  public get dropClsTopicId() {
    return this.getStringAttribute('drop_cls_topic_id');
  }
  public set dropClsTopicId(value: string) {
    this._dropClsTopicId = value;
  }
  public resetDropClsTopicId() {
    this._dropClsTopicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsTopicIdInput() {
    return this._dropClsTopicId;
  }

  // drop_invalid_message_to_cls - computed: false, optional: true, required: false
  private _dropInvalidMessageToCls?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessageToCls() {
    return this.getBooleanAttribute('drop_invalid_message_to_cls');
  }
  public set dropInvalidMessageToCls(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessageToCls = value;
  }
  public resetDropInvalidMessageToCls() {
    this._dropInvalidMessageToCls = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageToClsInput() {
    return this._dropInvalidMessageToCls;
  }
}
export interface CkafkaDatahubTaskSourceResourceMySqlParam {
  /**
  * The name of the column to be monitored.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_source_increment_column CkafkaDatahubTask#data_source_increment_column}
  */
  readonly dataSourceIncrementColumn?: string;
  /**
  * TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type&#39;.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_source_increment_mode CkafkaDatahubTask#data_source_increment_mode}
  */
  readonly dataSourceIncrementMode?: string;
  /**
  * TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_source_monitor_mode CkafkaDatahubTask#data_source_monitor_mode}
  */
  readonly dataSourceMonitorMode?: string;
  /**
  * When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_source_monitor_resource CkafkaDatahubTask#data_source_monitor_resource}
  */
  readonly dataSourceMonitorResource?: string;
  /**
  * HEAD means copy stock + incremental data, TAIL means copy only incremental data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_source_start_from CkafkaDatahubTask#data_source_start_from}
  */
  readonly dataSourceStartFrom?: string;
  /**
  * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_insert_mode CkafkaDatahubTask#data_target_insert_mode}
  */
  readonly dataTargetInsertMode?: string;
  /**
  * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_primary_key_field CkafkaDatahubTask#data_target_primary_key_field}
  */
  readonly dataTargetPrimaryKeyField?: string;
  /**
  * MySQL database name, * is the whole database.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ddl_topic CkafkaDatahubTask#ddl_topic}
  */
  readonly ddlTopic?: string;
  /**
  * Whether to discard messages that fail to parse, the default is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message CkafkaDatahubTask#drop_invalid_message}
  */
  readonly dropInvalidMessage?: boolean | cdktf.IResolvable;
  /**
  * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#include_content_changes CkafkaDatahubTask#include_content_changes}
  */
  readonly includeContentChanges?: string;
  /**
  * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#include_query CkafkaDatahubTask#include_query}
  */
  readonly includeQuery?: boolean | cdktf.IResolvable;
  /**
  * When the Table input is a prefix, the value of this item is true, otherwise it is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#is_table_prefix CkafkaDatahubTask#is_table_prefix}
  */
  readonly isTablePrefix?: boolean | cdktf.IResolvable;
  /**
  * Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#is_table_regular CkafkaDatahubTask#is_table_regular}
  */
  readonly isTableRegular?: boolean | cdktf.IResolvable;
  /**
  * Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#key_columns CkafkaDatahubTask#key_columns}
  */
  readonly keyColumns?: string;
  /**
  * output format, DEFAULT, CANAL_1, CANAL_2.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#output_format CkafkaDatahubTask#output_format}
  */
  readonly outputFormat?: string;
  /**
  * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#record_with_schema CkafkaDatahubTask#record_with_schema}
  */
  readonly recordWithSchema?: boolean | cdktf.IResolvable;
  /**
  * MySQL connection Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * database name of signal table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#signal_database CkafkaDatahubTask#signal_database}
  */
  readonly signalDatabase?: string;
  /**
  * whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#snapshot_mode CkafkaDatahubTask#snapshot_mode}
  */
  readonly snapshotMode?: string;
  /**
  * The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * Regular expression for routing events to specific topics, defaults to (.*).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_regex CkafkaDatahubTask#topic_regex}
  */
  readonly topicRegex?: string;
  /**
  * TopicRegex, $1, $2.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_replacement CkafkaDatahubTask#topic_replacement}
  */
  readonly topicReplacement?: string;
  /**
  * data_target_record_mapping block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_record_mapping CkafkaDatahubTask#data_target_record_mapping}
  */
  readonly dataTargetRecordMapping?: CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMapping[] | cdktf.IResolvable;
  /**
  * drop_cls block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls CkafkaDatahubTask#drop_cls}
  */
  readonly dropCls?: CkafkaDatahubTaskSourceResourceMySqlParamDropCls;
}

export function ckafkaDatahubTaskSourceResourceMySqlParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceMySqlParamOutputReference | CkafkaDatahubTaskSourceResourceMySqlParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    data_source_increment_column: cdktf.stringToTerraform(struct!.dataSourceIncrementColumn),
    data_source_increment_mode: cdktf.stringToTerraform(struct!.dataSourceIncrementMode),
    data_source_monitor_mode: cdktf.stringToTerraform(struct!.dataSourceMonitorMode),
    data_source_monitor_resource: cdktf.stringToTerraform(struct!.dataSourceMonitorResource),
    data_source_start_from: cdktf.stringToTerraform(struct!.dataSourceStartFrom),
    data_target_insert_mode: cdktf.stringToTerraform(struct!.dataTargetInsertMode),
    data_target_primary_key_field: cdktf.stringToTerraform(struct!.dataTargetPrimaryKeyField),
    database: cdktf.stringToTerraform(struct!.database),
    ddl_topic: cdktf.stringToTerraform(struct!.ddlTopic),
    drop_invalid_message: cdktf.booleanToTerraform(struct!.dropInvalidMessage),
    include_content_changes: cdktf.stringToTerraform(struct!.includeContentChanges),
    include_query: cdktf.booleanToTerraform(struct!.includeQuery),
    is_table_prefix: cdktf.booleanToTerraform(struct!.isTablePrefix),
    is_table_regular: cdktf.booleanToTerraform(struct!.isTableRegular),
    key_columns: cdktf.stringToTerraform(struct!.keyColumns),
    output_format: cdktf.stringToTerraform(struct!.outputFormat),
    record_with_schema: cdktf.booleanToTerraform(struct!.recordWithSchema),
    resource: cdktf.stringToTerraform(struct!.resource),
    signal_database: cdktf.stringToTerraform(struct!.signalDatabase),
    snapshot_mode: cdktf.stringToTerraform(struct!.snapshotMode),
    table: cdktf.stringToTerraform(struct!.table),
    topic_regex: cdktf.stringToTerraform(struct!.topicRegex),
    topic_replacement: cdktf.stringToTerraform(struct!.topicReplacement),
    data_target_record_mapping: cdktf.listMapper(ckafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingToTerraform, true)(struct!.dataTargetRecordMapping),
    drop_cls: ckafkaDatahubTaskSourceResourceMySqlParamDropClsToTerraform(struct!.dropCls),
  }
}


export function ckafkaDatahubTaskSourceResourceMySqlParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceMySqlParamOutputReference | CkafkaDatahubTaskSourceResourceMySqlParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    data_source_increment_column: {
      value: cdktf.stringToHclTerraform(struct!.dataSourceIncrementColumn),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_source_increment_mode: {
      value: cdktf.stringToHclTerraform(struct!.dataSourceIncrementMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_source_monitor_mode: {
      value: cdktf.stringToHclTerraform(struct!.dataSourceMonitorMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_source_monitor_resource: {
      value: cdktf.stringToHclTerraform(struct!.dataSourceMonitorResource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_source_start_from: {
      value: cdktf.stringToHclTerraform(struct!.dataSourceStartFrom),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_insert_mode: {
      value: cdktf.stringToHclTerraform(struct!.dataTargetInsertMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_primary_key_field: {
      value: cdktf.stringToHclTerraform(struct!.dataTargetPrimaryKeyField),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ddl_topic: {
      value: cdktf.stringToHclTerraform(struct!.ddlTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    include_content_changes: {
      value: cdktf.stringToHclTerraform(struct!.includeContentChanges),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    include_query: {
      value: cdktf.booleanToHclTerraform(struct!.includeQuery),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_table_prefix: {
      value: cdktf.booleanToHclTerraform(struct!.isTablePrefix),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_table_regular: {
      value: cdktf.booleanToHclTerraform(struct!.isTableRegular),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    key_columns: {
      value: cdktf.stringToHclTerraform(struct!.keyColumns),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    output_format: {
      value: cdktf.stringToHclTerraform(struct!.outputFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    record_with_schema: {
      value: cdktf.booleanToHclTerraform(struct!.recordWithSchema),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signal_database: {
      value: cdktf.stringToHclTerraform(struct!.signalDatabase),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snapshot_mode: {
      value: cdktf.stringToHclTerraform(struct!.snapshotMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_regex: {
      value: cdktf.stringToHclTerraform(struct!.topicRegex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_replacement: {
      value: cdktf.stringToHclTerraform(struct!.topicReplacement),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_record_mapping: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingToHclTerraform, true)(struct!.dataTargetRecordMapping),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingList",
    },
    drop_cls: {
      value: ckafkaDatahubTaskSourceResourceMySqlParamDropClsToHclTerraform(struct!.dropCls),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceMySqlParamDropClsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceMySqlParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceMySqlParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dataSourceIncrementColumn !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceIncrementColumn = this._dataSourceIncrementColumn;
    }
    if (this._dataSourceIncrementMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceIncrementMode = this._dataSourceIncrementMode;
    }
    if (this._dataSourceMonitorMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceMonitorMode = this._dataSourceMonitorMode;
    }
    if (this._dataSourceMonitorResource !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceMonitorResource = this._dataSourceMonitorResource;
    }
    if (this._dataSourceStartFrom !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceStartFrom = this._dataSourceStartFrom;
    }
    if (this._dataTargetInsertMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetInsertMode = this._dataTargetInsertMode;
    }
    if (this._dataTargetPrimaryKeyField !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetPrimaryKeyField = this._dataTargetPrimaryKeyField;
    }
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._ddlTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.ddlTopic = this._ddlTopic;
    }
    if (this._dropInvalidMessage !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessage = this._dropInvalidMessage;
    }
    if (this._includeContentChanges !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeContentChanges = this._includeContentChanges;
    }
    if (this._includeQuery !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeQuery = this._includeQuery;
    }
    if (this._isTablePrefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.isTablePrefix = this._isTablePrefix;
    }
    if (this._isTableRegular !== undefined) {
      hasAnyValues = true;
      internalValueResult.isTableRegular = this._isTableRegular;
    }
    if (this._keyColumns !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyColumns = this._keyColumns;
    }
    if (this._outputFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.outputFormat = this._outputFormat;
    }
    if (this._recordWithSchema !== undefined) {
      hasAnyValues = true;
      internalValueResult.recordWithSchema = this._recordWithSchema;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._signalDatabase !== undefined) {
      hasAnyValues = true;
      internalValueResult.signalDatabase = this._signalDatabase;
    }
    if (this._snapshotMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.snapshotMode = this._snapshotMode;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._topicRegex !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicRegex = this._topicRegex;
    }
    if (this._topicReplacement !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicReplacement = this._topicReplacement;
    }
    if (this._dataTargetRecordMapping?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetRecordMapping = this._dataTargetRecordMapping?.internalValue;
    }
    if (this._dropCls?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropCls = this._dropCls?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceMySqlParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dataSourceIncrementColumn = undefined;
      this._dataSourceIncrementMode = undefined;
      this._dataSourceMonitorMode = undefined;
      this._dataSourceMonitorResource = undefined;
      this._dataSourceStartFrom = undefined;
      this._dataTargetInsertMode = undefined;
      this._dataTargetPrimaryKeyField = undefined;
      this._database = undefined;
      this._ddlTopic = undefined;
      this._dropInvalidMessage = undefined;
      this._includeContentChanges = undefined;
      this._includeQuery = undefined;
      this._isTablePrefix = undefined;
      this._isTableRegular = undefined;
      this._keyColumns = undefined;
      this._outputFormat = undefined;
      this._recordWithSchema = undefined;
      this._resource = undefined;
      this._signalDatabase = undefined;
      this._snapshotMode = undefined;
      this._table = undefined;
      this._topicRegex = undefined;
      this._topicReplacement = undefined;
      this._dataTargetRecordMapping.internalValue = undefined;
      this._dropCls.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dataSourceIncrementColumn = value.dataSourceIncrementColumn;
      this._dataSourceIncrementMode = value.dataSourceIncrementMode;
      this._dataSourceMonitorMode = value.dataSourceMonitorMode;
      this._dataSourceMonitorResource = value.dataSourceMonitorResource;
      this._dataSourceStartFrom = value.dataSourceStartFrom;
      this._dataTargetInsertMode = value.dataTargetInsertMode;
      this._dataTargetPrimaryKeyField = value.dataTargetPrimaryKeyField;
      this._database = value.database;
      this._ddlTopic = value.ddlTopic;
      this._dropInvalidMessage = value.dropInvalidMessage;
      this._includeContentChanges = value.includeContentChanges;
      this._includeQuery = value.includeQuery;
      this._isTablePrefix = value.isTablePrefix;
      this._isTableRegular = value.isTableRegular;
      this._keyColumns = value.keyColumns;
      this._outputFormat = value.outputFormat;
      this._recordWithSchema = value.recordWithSchema;
      this._resource = value.resource;
      this._signalDatabase = value.signalDatabase;
      this._snapshotMode = value.snapshotMode;
      this._table = value.table;
      this._topicRegex = value.topicRegex;
      this._topicReplacement = value.topicReplacement;
      this._dataTargetRecordMapping.internalValue = value.dataTargetRecordMapping;
      this._dropCls.internalValue = value.dropCls;
    }
  }

  // data_source_increment_column - computed: false, optional: true, required: false
  private _dataSourceIncrementColumn?: string; 
  public get dataSourceIncrementColumn() {
    return this.getStringAttribute('data_source_increment_column');
  }
  public set dataSourceIncrementColumn(value: string) {
    this._dataSourceIncrementColumn = value;
  }
  public resetDataSourceIncrementColumn() {
    this._dataSourceIncrementColumn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceIncrementColumnInput() {
    return this._dataSourceIncrementColumn;
  }

  // data_source_increment_mode - computed: false, optional: true, required: false
  private _dataSourceIncrementMode?: string; 
  public get dataSourceIncrementMode() {
    return this.getStringAttribute('data_source_increment_mode');
  }
  public set dataSourceIncrementMode(value: string) {
    this._dataSourceIncrementMode = value;
  }
  public resetDataSourceIncrementMode() {
    this._dataSourceIncrementMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceIncrementModeInput() {
    return this._dataSourceIncrementMode;
  }

  // data_source_monitor_mode - computed: false, optional: true, required: false
  private _dataSourceMonitorMode?: string; 
  public get dataSourceMonitorMode() {
    return this.getStringAttribute('data_source_monitor_mode');
  }
  public set dataSourceMonitorMode(value: string) {
    this._dataSourceMonitorMode = value;
  }
  public resetDataSourceMonitorMode() {
    this._dataSourceMonitorMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceMonitorModeInput() {
    return this._dataSourceMonitorMode;
  }

  // data_source_monitor_resource - computed: false, optional: true, required: false
  private _dataSourceMonitorResource?: string; 
  public get dataSourceMonitorResource() {
    return this.getStringAttribute('data_source_monitor_resource');
  }
  public set dataSourceMonitorResource(value: string) {
    this._dataSourceMonitorResource = value;
  }
  public resetDataSourceMonitorResource() {
    this._dataSourceMonitorResource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceMonitorResourceInput() {
    return this._dataSourceMonitorResource;
  }

  // data_source_start_from - computed: false, optional: true, required: false
  private _dataSourceStartFrom?: string; 
  public get dataSourceStartFrom() {
    return this.getStringAttribute('data_source_start_from');
  }
  public set dataSourceStartFrom(value: string) {
    this._dataSourceStartFrom = value;
  }
  public resetDataSourceStartFrom() {
    this._dataSourceStartFrom = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceStartFromInput() {
    return this._dataSourceStartFrom;
  }

  // data_target_insert_mode - computed: false, optional: true, required: false
  private _dataTargetInsertMode?: string; 
  public get dataTargetInsertMode() {
    return this.getStringAttribute('data_target_insert_mode');
  }
  public set dataTargetInsertMode(value: string) {
    this._dataTargetInsertMode = value;
  }
  public resetDataTargetInsertMode() {
    this._dataTargetInsertMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetInsertModeInput() {
    return this._dataTargetInsertMode;
  }

  // data_target_primary_key_field - computed: false, optional: true, required: false
  private _dataTargetPrimaryKeyField?: string; 
  public get dataTargetPrimaryKeyField() {
    return this.getStringAttribute('data_target_primary_key_field');
  }
  public set dataTargetPrimaryKeyField(value: string) {
    this._dataTargetPrimaryKeyField = value;
  }
  public resetDataTargetPrimaryKeyField() {
    this._dataTargetPrimaryKeyField = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetPrimaryKeyFieldInput() {
    return this._dataTargetPrimaryKeyField;
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // ddl_topic - computed: false, optional: true, required: false
  private _ddlTopic?: string; 
  public get ddlTopic() {
    return this.getStringAttribute('ddl_topic');
  }
  public set ddlTopic(value: string) {
    this._ddlTopic = value;
  }
  public resetDdlTopic() {
    this._ddlTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ddlTopicInput() {
    return this._ddlTopic;
  }

  // drop_invalid_message - computed: false, optional: true, required: false
  private _dropInvalidMessage?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessage() {
    return this.getBooleanAttribute('drop_invalid_message');
  }
  public set dropInvalidMessage(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessage = value;
  }
  public resetDropInvalidMessage() {
    this._dropInvalidMessage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageInput() {
    return this._dropInvalidMessage;
  }

  // include_content_changes - computed: false, optional: true, required: false
  private _includeContentChanges?: string; 
  public get includeContentChanges() {
    return this.getStringAttribute('include_content_changes');
  }
  public set includeContentChanges(value: string) {
    this._includeContentChanges = value;
  }
  public resetIncludeContentChanges() {
    this._includeContentChanges = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeContentChangesInput() {
    return this._includeContentChanges;
  }

  // include_query - computed: false, optional: true, required: false
  private _includeQuery?: boolean | cdktf.IResolvable; 
  public get includeQuery() {
    return this.getBooleanAttribute('include_query');
  }
  public set includeQuery(value: boolean | cdktf.IResolvable) {
    this._includeQuery = value;
  }
  public resetIncludeQuery() {
    this._includeQuery = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeQueryInput() {
    return this._includeQuery;
  }

  // is_table_prefix - computed: false, optional: true, required: false
  private _isTablePrefix?: boolean | cdktf.IResolvable; 
  public get isTablePrefix() {
    return this.getBooleanAttribute('is_table_prefix');
  }
  public set isTablePrefix(value: boolean | cdktf.IResolvable) {
    this._isTablePrefix = value;
  }
  public resetIsTablePrefix() {
    this._isTablePrefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isTablePrefixInput() {
    return this._isTablePrefix;
  }

  // is_table_regular - computed: false, optional: true, required: false
  private _isTableRegular?: boolean | cdktf.IResolvable; 
  public get isTableRegular() {
    return this.getBooleanAttribute('is_table_regular');
  }
  public set isTableRegular(value: boolean | cdktf.IResolvable) {
    this._isTableRegular = value;
  }
  public resetIsTableRegular() {
    this._isTableRegular = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isTableRegularInput() {
    return this._isTableRegular;
  }

  // key_columns - computed: false, optional: true, required: false
  private _keyColumns?: string; 
  public get keyColumns() {
    return this.getStringAttribute('key_columns');
  }
  public set keyColumns(value: string) {
    this._keyColumns = value;
  }
  public resetKeyColumns() {
    this._keyColumns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyColumnsInput() {
    return this._keyColumns;
  }

  // output_format - computed: false, optional: true, required: false
  private _outputFormat?: string; 
  public get outputFormat() {
    return this.getStringAttribute('output_format');
  }
  public set outputFormat(value: string) {
    this._outputFormat = value;
  }
  public resetOutputFormat() {
    this._outputFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get outputFormatInput() {
    return this._outputFormat;
  }

  // record_with_schema - computed: false, optional: true, required: false
  private _recordWithSchema?: boolean | cdktf.IResolvable; 
  public get recordWithSchema() {
    return this.getBooleanAttribute('record_with_schema');
  }
  public set recordWithSchema(value: boolean | cdktf.IResolvable) {
    this._recordWithSchema = value;
  }
  public resetRecordWithSchema() {
    this._recordWithSchema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recordWithSchemaInput() {
    return this._recordWithSchema;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // signal_database - computed: false, optional: true, required: false
  private _signalDatabase?: string; 
  public get signalDatabase() {
    return this.getStringAttribute('signal_database');
  }
  public set signalDatabase(value: string) {
    this._signalDatabase = value;
  }
  public resetSignalDatabase() {
    this._signalDatabase = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signalDatabaseInput() {
    return this._signalDatabase;
  }

  // snapshot_mode - computed: false, optional: true, required: false
  private _snapshotMode?: string; 
  public get snapshotMode() {
    return this.getStringAttribute('snapshot_mode');
  }
  public set snapshotMode(value: string) {
    this._snapshotMode = value;
  }
  public resetSnapshotMode() {
    this._snapshotMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snapshotModeInput() {
    return this._snapshotMode;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // topic_regex - computed: false, optional: true, required: false
  private _topicRegex?: string; 
  public get topicRegex() {
    return this.getStringAttribute('topic_regex');
  }
  public set topicRegex(value: string) {
    this._topicRegex = value;
  }
  public resetTopicRegex() {
    this._topicRegex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicRegexInput() {
    return this._topicRegex;
  }

  // topic_replacement - computed: false, optional: true, required: false
  private _topicReplacement?: string; 
  public get topicReplacement() {
    return this.getStringAttribute('topic_replacement');
  }
  public set topicReplacement(value: string) {
    this._topicReplacement = value;
  }
  public resetTopicReplacement() {
    this._topicReplacement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicReplacementInput() {
    return this._topicReplacement;
  }

  // data_target_record_mapping - computed: false, optional: true, required: false
  private _dataTargetRecordMapping = new CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMappingList(this, "data_target_record_mapping", false);
  public get dataTargetRecordMapping() {
    return this._dataTargetRecordMapping;
  }
  public putDataTargetRecordMapping(value: CkafkaDatahubTaskSourceResourceMySqlParamDataTargetRecordMapping[] | cdktf.IResolvable) {
    this._dataTargetRecordMapping.internalValue = value;
  }
  public resetDataTargetRecordMapping() {
    this._dataTargetRecordMapping.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetRecordMappingInput() {
    return this._dataTargetRecordMapping.internalValue;
  }

  // drop_cls - computed: false, optional: true, required: false
  private _dropCls = new CkafkaDatahubTaskSourceResourceMySqlParamDropClsOutputReference(this, "drop_cls");
  public get dropCls() {
    return this._dropCls;
  }
  public putDropCls(value: CkafkaDatahubTaskSourceResourceMySqlParamDropCls) {
    this._dropCls.internalValue = value;
  }
  public resetDropCls() {
    this._dropCls.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsInput() {
    return this._dropCls.internalValue;
  }
}
export interface CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping {
  /**
  * Whether the message is allowed to be empty.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#allow_null CkafkaDatahubTask#allow_null}
  */
  readonly allowNull?: boolean | cdktf.IResolvable;
  /**
  * Whether it is an auto-increment column.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#auto_increment CkafkaDatahubTask#auto_increment}
  */
  readonly autoIncrement?: boolean | cdktf.IResolvable;
  /**
  * Column Name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#column_name CkafkaDatahubTask#column_name}
  */
  readonly columnName?: string;
  /**
  * current ColumnSize.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#column_size CkafkaDatahubTask#column_size}
  */
  readonly columnSize?: string;
  /**
  * current Column DecimalDigits.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#decimal_digits CkafkaDatahubTask#decimal_digits}
  */
  readonly decimalDigits?: string;
  /**
  * Database table default parameters.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#default_value CkafkaDatahubTask#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Database table extra fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#extra_info CkafkaDatahubTask#extra_info}
  */
  readonly extraInfo?: string;
  /**
  * The key name of the message.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#json_key CkafkaDatahubTask#json_key}
  */
  readonly jsonKey?: string;
  /**
  * message type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type?: string;
}

export function ckafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingToTerraform(struct?: CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_null: cdktf.booleanToTerraform(struct!.allowNull),
    auto_increment: cdktf.booleanToTerraform(struct!.autoIncrement),
    column_name: cdktf.stringToTerraform(struct!.columnName),
    column_size: cdktf.stringToTerraform(struct!.columnSize),
    decimal_digits: cdktf.stringToTerraform(struct!.decimalDigits),
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    extra_info: cdktf.stringToTerraform(struct!.extraInfo),
    json_key: cdktf.stringToTerraform(struct!.jsonKey),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function ckafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingToHclTerraform(struct?: CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_null: {
      value: cdktf.booleanToHclTerraform(struct!.allowNull),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    auto_increment: {
      value: cdktf.booleanToHclTerraform(struct!.autoIncrement),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    column_name: {
      value: cdktf.stringToHclTerraform(struct!.columnName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    column_size: {
      value: cdktf.stringToHclTerraform(struct!.columnSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    decimal_digits: {
      value: cdktf.stringToHclTerraform(struct!.decimalDigits),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    extra_info: {
      value: cdktf.stringToHclTerraform(struct!.extraInfo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    json_key: {
      value: cdktf.stringToHclTerraform(struct!.jsonKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowNull !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowNull = this._allowNull;
    }
    if (this._autoIncrement !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoIncrement = this._autoIncrement;
    }
    if (this._columnName !== undefined) {
      hasAnyValues = true;
      internalValueResult.columnName = this._columnName;
    }
    if (this._columnSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.columnSize = this._columnSize;
    }
    if (this._decimalDigits !== undefined) {
      hasAnyValues = true;
      internalValueResult.decimalDigits = this._decimalDigits;
    }
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._extraInfo !== undefined) {
      hasAnyValues = true;
      internalValueResult.extraInfo = this._extraInfo;
    }
    if (this._jsonKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonKey = this._jsonKey;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowNull = undefined;
      this._autoIncrement = undefined;
      this._columnName = undefined;
      this._columnSize = undefined;
      this._decimalDigits = undefined;
      this._defaultValue = undefined;
      this._extraInfo = undefined;
      this._jsonKey = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowNull = value.allowNull;
      this._autoIncrement = value.autoIncrement;
      this._columnName = value.columnName;
      this._columnSize = value.columnSize;
      this._decimalDigits = value.decimalDigits;
      this._defaultValue = value.defaultValue;
      this._extraInfo = value.extraInfo;
      this._jsonKey = value.jsonKey;
      this._type = value.type;
    }
  }

  // allow_null - computed: false, optional: true, required: false
  private _allowNull?: boolean | cdktf.IResolvable; 
  public get allowNull() {
    return this.getBooleanAttribute('allow_null');
  }
  public set allowNull(value: boolean | cdktf.IResolvable) {
    this._allowNull = value;
  }
  public resetAllowNull() {
    this._allowNull = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowNullInput() {
    return this._allowNull;
  }

  // auto_increment - computed: false, optional: true, required: false
  private _autoIncrement?: boolean | cdktf.IResolvable; 
  public get autoIncrement() {
    return this.getBooleanAttribute('auto_increment');
  }
  public set autoIncrement(value: boolean | cdktf.IResolvable) {
    this._autoIncrement = value;
  }
  public resetAutoIncrement() {
    this._autoIncrement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoIncrementInput() {
    return this._autoIncrement;
  }

  // column_name - computed: false, optional: true, required: false
  private _columnName?: string; 
  public get columnName() {
    return this.getStringAttribute('column_name');
  }
  public set columnName(value: string) {
    this._columnName = value;
  }
  public resetColumnName() {
    this._columnName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get columnNameInput() {
    return this._columnName;
  }

  // column_size - computed: false, optional: true, required: false
  private _columnSize?: string; 
  public get columnSize() {
    return this.getStringAttribute('column_size');
  }
  public set columnSize(value: string) {
    this._columnSize = value;
  }
  public resetColumnSize() {
    this._columnSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get columnSizeInput() {
    return this._columnSize;
  }

  // decimal_digits - computed: false, optional: true, required: false
  private _decimalDigits?: string; 
  public get decimalDigits() {
    return this.getStringAttribute('decimal_digits');
  }
  public set decimalDigits(value: string) {
    this._decimalDigits = value;
  }
  public resetDecimalDigits() {
    this._decimalDigits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decimalDigitsInput() {
    return this._decimalDigits;
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // extra_info - computed: false, optional: true, required: false
  private _extraInfo?: string; 
  public get extraInfo() {
    return this.getStringAttribute('extra_info');
  }
  public set extraInfo(value: string) {
    this._extraInfo = value;
  }
  public resetExtraInfo() {
    this._extraInfo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extraInfoInput() {
    return this._extraInfo;
  }

  // json_key - computed: false, optional: true, required: false
  private _jsonKey?: string; 
  public get jsonKey() {
    return this.getStringAttribute('json_key');
  }
  public set jsonKey(value: string) {
    this._jsonKey = value;
  }
  public resetJsonKey() {
    this._jsonKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonKeyInput() {
    return this._jsonKey;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}

export class CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutputReference {
    return new CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskSourceResourcePostgreSqlParam {
  /**
  * Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_format CkafkaDatahubTask#data_format}
  */
  readonly dataFormat?: string;
  /**
  * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_insert_mode CkafkaDatahubTask#data_target_insert_mode}
  */
  readonly dataTargetInsertMode?: string;
  /**
  * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_primary_key_field CkafkaDatahubTask#data_target_primary_key_field}
  */
  readonly dataTargetPrimaryKeyField?: string;
  /**
  * PostgreSQL database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * Whether to discard messages that fail to parse, the default is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message CkafkaDatahubTask#drop_invalid_message}
  */
  readonly dropInvalidMessage?: boolean | cdktf.IResolvable;
  /**
  * Whether the input table is a regular expression.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#is_table_regular CkafkaDatahubTask#is_table_regular}
  */
  readonly isTableRegular?: boolean | cdktf.IResolvable;
  /**
  * Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#key_columns CkafkaDatahubTask#key_columns}
  */
  readonly keyColumns?: string;
  /**
  * (decoderbufs/pgoutput), default decoderbufs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#plugin_name CkafkaDatahubTask#plugin_name}
  */
  readonly pluginName: string;
  /**
  * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#record_with_schema CkafkaDatahubTask#record_with_schema}
  */
  readonly recordWithSchema?: boolean | cdktf.IResolvable;
  /**
  * PostgreSQL connection Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * never|initial, default initial.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#snapshot_mode CkafkaDatahubTask#snapshot_mode}
  */
  readonly snapshotMode?: string;
  /**
  * PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * data_target_record_mapping block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_record_mapping CkafkaDatahubTask#data_target_record_mapping}
  */
  readonly dataTargetRecordMapping?: CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskSourceResourcePostgreSqlParamToTerraform(struct?: CkafkaDatahubTaskSourceResourcePostgreSqlParamOutputReference | CkafkaDatahubTaskSourceResourcePostgreSqlParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    data_format: cdktf.stringToTerraform(struct!.dataFormat),
    data_target_insert_mode: cdktf.stringToTerraform(struct!.dataTargetInsertMode),
    data_target_primary_key_field: cdktf.stringToTerraform(struct!.dataTargetPrimaryKeyField),
    database: cdktf.stringToTerraform(struct!.database),
    drop_invalid_message: cdktf.booleanToTerraform(struct!.dropInvalidMessage),
    is_table_regular: cdktf.booleanToTerraform(struct!.isTableRegular),
    key_columns: cdktf.stringToTerraform(struct!.keyColumns),
    plugin_name: cdktf.stringToTerraform(struct!.pluginName),
    record_with_schema: cdktf.booleanToTerraform(struct!.recordWithSchema),
    resource: cdktf.stringToTerraform(struct!.resource),
    snapshot_mode: cdktf.stringToTerraform(struct!.snapshotMode),
    table: cdktf.stringToTerraform(struct!.table),
    data_target_record_mapping: cdktf.listMapper(ckafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingToTerraform, true)(struct!.dataTargetRecordMapping),
  }
}


export function ckafkaDatahubTaskSourceResourcePostgreSqlParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourcePostgreSqlParamOutputReference | CkafkaDatahubTaskSourceResourcePostgreSqlParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    data_format: {
      value: cdktf.stringToHclTerraform(struct!.dataFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_insert_mode: {
      value: cdktf.stringToHclTerraform(struct!.dataTargetInsertMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_primary_key_field: {
      value: cdktf.stringToHclTerraform(struct!.dataTargetPrimaryKeyField),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_table_regular: {
      value: cdktf.booleanToHclTerraform(struct!.isTableRegular),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    key_columns: {
      value: cdktf.stringToHclTerraform(struct!.keyColumns),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    plugin_name: {
      value: cdktf.stringToHclTerraform(struct!.pluginName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    record_with_schema: {
      value: cdktf.booleanToHclTerraform(struct!.recordWithSchema),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snapshot_mode: {
      value: cdktf.stringToHclTerraform(struct!.snapshotMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_record_mapping: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingToHclTerraform, true)(struct!.dataTargetRecordMapping),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourcePostgreSqlParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourcePostgreSqlParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dataFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataFormat = this._dataFormat;
    }
    if (this._dataTargetInsertMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetInsertMode = this._dataTargetInsertMode;
    }
    if (this._dataTargetPrimaryKeyField !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetPrimaryKeyField = this._dataTargetPrimaryKeyField;
    }
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._dropInvalidMessage !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessage = this._dropInvalidMessage;
    }
    if (this._isTableRegular !== undefined) {
      hasAnyValues = true;
      internalValueResult.isTableRegular = this._isTableRegular;
    }
    if (this._keyColumns !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyColumns = this._keyColumns;
    }
    if (this._pluginName !== undefined) {
      hasAnyValues = true;
      internalValueResult.pluginName = this._pluginName;
    }
    if (this._recordWithSchema !== undefined) {
      hasAnyValues = true;
      internalValueResult.recordWithSchema = this._recordWithSchema;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._snapshotMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.snapshotMode = this._snapshotMode;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._dataTargetRecordMapping?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetRecordMapping = this._dataTargetRecordMapping?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourcePostgreSqlParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dataFormat = undefined;
      this._dataTargetInsertMode = undefined;
      this._dataTargetPrimaryKeyField = undefined;
      this._database = undefined;
      this._dropInvalidMessage = undefined;
      this._isTableRegular = undefined;
      this._keyColumns = undefined;
      this._pluginName = undefined;
      this._recordWithSchema = undefined;
      this._resource = undefined;
      this._snapshotMode = undefined;
      this._table = undefined;
      this._dataTargetRecordMapping.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dataFormat = value.dataFormat;
      this._dataTargetInsertMode = value.dataTargetInsertMode;
      this._dataTargetPrimaryKeyField = value.dataTargetPrimaryKeyField;
      this._database = value.database;
      this._dropInvalidMessage = value.dropInvalidMessage;
      this._isTableRegular = value.isTableRegular;
      this._keyColumns = value.keyColumns;
      this._pluginName = value.pluginName;
      this._recordWithSchema = value.recordWithSchema;
      this._resource = value.resource;
      this._snapshotMode = value.snapshotMode;
      this._table = value.table;
      this._dataTargetRecordMapping.internalValue = value.dataTargetRecordMapping;
    }
  }

  // data_format - computed: false, optional: true, required: false
  private _dataFormat?: string; 
  public get dataFormat() {
    return this.getStringAttribute('data_format');
  }
  public set dataFormat(value: string) {
    this._dataFormat = value;
  }
  public resetDataFormat() {
    this._dataFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataFormatInput() {
    return this._dataFormat;
  }

  // data_target_insert_mode - computed: false, optional: true, required: false
  private _dataTargetInsertMode?: string; 
  public get dataTargetInsertMode() {
    return this.getStringAttribute('data_target_insert_mode');
  }
  public set dataTargetInsertMode(value: string) {
    this._dataTargetInsertMode = value;
  }
  public resetDataTargetInsertMode() {
    this._dataTargetInsertMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetInsertModeInput() {
    return this._dataTargetInsertMode;
  }

  // data_target_primary_key_field - computed: false, optional: true, required: false
  private _dataTargetPrimaryKeyField?: string; 
  public get dataTargetPrimaryKeyField() {
    return this.getStringAttribute('data_target_primary_key_field');
  }
  public set dataTargetPrimaryKeyField(value: string) {
    this._dataTargetPrimaryKeyField = value;
  }
  public resetDataTargetPrimaryKeyField() {
    this._dataTargetPrimaryKeyField = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetPrimaryKeyFieldInput() {
    return this._dataTargetPrimaryKeyField;
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // drop_invalid_message - computed: false, optional: true, required: false
  private _dropInvalidMessage?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessage() {
    return this.getBooleanAttribute('drop_invalid_message');
  }
  public set dropInvalidMessage(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessage = value;
  }
  public resetDropInvalidMessage() {
    this._dropInvalidMessage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageInput() {
    return this._dropInvalidMessage;
  }

  // is_table_regular - computed: false, optional: true, required: false
  private _isTableRegular?: boolean | cdktf.IResolvable; 
  public get isTableRegular() {
    return this.getBooleanAttribute('is_table_regular');
  }
  public set isTableRegular(value: boolean | cdktf.IResolvable) {
    this._isTableRegular = value;
  }
  public resetIsTableRegular() {
    this._isTableRegular = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isTableRegularInput() {
    return this._isTableRegular;
  }

  // key_columns - computed: false, optional: true, required: false
  private _keyColumns?: string; 
  public get keyColumns() {
    return this.getStringAttribute('key_columns');
  }
  public set keyColumns(value: string) {
    this._keyColumns = value;
  }
  public resetKeyColumns() {
    this._keyColumns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyColumnsInput() {
    return this._keyColumns;
  }

  // plugin_name - computed: false, optional: false, required: true
  private _pluginName?: string; 
  public get pluginName() {
    return this.getStringAttribute('plugin_name');
  }
  public set pluginName(value: string) {
    this._pluginName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pluginNameInput() {
    return this._pluginName;
  }

  // record_with_schema - computed: false, optional: true, required: false
  private _recordWithSchema?: boolean | cdktf.IResolvable; 
  public get recordWithSchema() {
    return this.getBooleanAttribute('record_with_schema');
  }
  public set recordWithSchema(value: boolean | cdktf.IResolvable) {
    this._recordWithSchema = value;
  }
  public resetRecordWithSchema() {
    this._recordWithSchema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recordWithSchemaInput() {
    return this._recordWithSchema;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // snapshot_mode - computed: false, optional: true, required: false
  private _snapshotMode?: string; 
  public get snapshotMode() {
    return this.getStringAttribute('snapshot_mode');
  }
  public set snapshotMode(value: string) {
    this._snapshotMode = value;
  }
  public resetSnapshotMode() {
    this._snapshotMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snapshotModeInput() {
    return this._snapshotMode;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // data_target_record_mapping - computed: false, optional: true, required: false
  private _dataTargetRecordMapping = new CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMappingList(this, "data_target_record_mapping", false);
  public get dataTargetRecordMapping() {
    return this._dataTargetRecordMapping;
  }
  public putDataTargetRecordMapping(value: CkafkaDatahubTaskSourceResourcePostgreSqlParamDataTargetRecordMapping[] | cdktf.IResolvable) {
    this._dataTargetRecordMapping.internalValue = value;
  }
  public resetDataTargetRecordMapping() {
    this._dataTargetRecordMapping.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetRecordMappingInput() {
    return this._dataTargetRecordMapping.internalValue;
  }
}
export interface CkafkaDatahubTaskSourceResourceScfParam {
  /**
  * The maximum number of messages sent in each batch, the default is 1000.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#batch_size CkafkaDatahubTask#batch_size}
  */
  readonly batchSize?: number;
  /**
  * SCF function name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#function_name CkafkaDatahubTask#function_name}
  */
  readonly functionName: string;
  /**
  * The number of retries after the SCF call fails, the default is 5.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#max_retries CkafkaDatahubTask#max_retries}
  */
  readonly maxRetries?: number;
  /**
  * SCF cloud function namespace, the default is default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#namespace CkafkaDatahubTask#namespace}
  */
  readonly namespace?: string;
  /**
  * SCF cloud function version and alias, the default is DEFAULT.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#qualifier CkafkaDatahubTask#qualifier}
  */
  readonly qualifier?: string;
}

export function ckafkaDatahubTaskSourceResourceScfParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceScfParamOutputReference | CkafkaDatahubTaskSourceResourceScfParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    batch_size: cdktf.numberToTerraform(struct!.batchSize),
    function_name: cdktf.stringToTerraform(struct!.functionName),
    max_retries: cdktf.numberToTerraform(struct!.maxRetries),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    qualifier: cdktf.stringToTerraform(struct!.qualifier),
  }
}


export function ckafkaDatahubTaskSourceResourceScfParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceScfParamOutputReference | CkafkaDatahubTaskSourceResourceScfParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    batch_size: {
      value: cdktf.numberToHclTerraform(struct!.batchSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    function_name: {
      value: cdktf.stringToHclTerraform(struct!.functionName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_retries: {
      value: cdktf.numberToHclTerraform(struct!.maxRetries),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    qualifier: {
      value: cdktf.stringToHclTerraform(struct!.qualifier),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceScfParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceScfParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._batchSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.batchSize = this._batchSize;
    }
    if (this._functionName !== undefined) {
      hasAnyValues = true;
      internalValueResult.functionName = this._functionName;
    }
    if (this._maxRetries !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxRetries = this._maxRetries;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._qualifier !== undefined) {
      hasAnyValues = true;
      internalValueResult.qualifier = this._qualifier;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceScfParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._batchSize = undefined;
      this._functionName = undefined;
      this._maxRetries = undefined;
      this._namespace = undefined;
      this._qualifier = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._batchSize = value.batchSize;
      this._functionName = value.functionName;
      this._maxRetries = value.maxRetries;
      this._namespace = value.namespace;
      this._qualifier = value.qualifier;
    }
  }

  // batch_size - computed: false, optional: true, required: false
  private _batchSize?: number; 
  public get batchSize() {
    return this.getNumberAttribute('batch_size');
  }
  public set batchSize(value: number) {
    this._batchSize = value;
  }
  public resetBatchSize() {
    this._batchSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get batchSizeInput() {
    return this._batchSize;
  }

  // function_name - computed: false, optional: false, required: true
  private _functionName?: string; 
  public get functionName() {
    return this.getStringAttribute('function_name');
  }
  public set functionName(value: string) {
    this._functionName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get functionNameInput() {
    return this._functionName;
  }

  // max_retries - computed: false, optional: true, required: false
  private _maxRetries?: number; 
  public get maxRetries() {
    return this.getNumberAttribute('max_retries');
  }
  public set maxRetries(value: number) {
    this._maxRetries = value;
  }
  public resetMaxRetries() {
    this._maxRetries = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxRetriesInput() {
    return this._maxRetries;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // qualifier - computed: false, optional: true, required: false
  private _qualifier?: string; 
  public get qualifier() {
    return this.getStringAttribute('qualifier');
  }
  public set qualifier(value: string) {
    this._qualifier = value;
  }
  public resetQualifier() {
    this._qualifier = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qualifierInput() {
    return this._qualifier;
  }
}
export interface CkafkaDatahubTaskSourceResourceSqlServerParam {
  /**
  * SQLServer database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * SQLServer connection Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * schema_only|initial default initial.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#snapshot_mode CkafkaDatahubTask#snapshot_mode}
  */
  readonly snapshotMode?: string;
  /**
  * SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
}

export function ckafkaDatahubTaskSourceResourceSqlServerParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceSqlServerParamOutputReference | CkafkaDatahubTaskSourceResourceSqlServerParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    resource: cdktf.stringToTerraform(struct!.resource),
    snapshot_mode: cdktf.stringToTerraform(struct!.snapshotMode),
    table: cdktf.stringToTerraform(struct!.table),
  }
}


export function ckafkaDatahubTaskSourceResourceSqlServerParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceSqlServerParamOutputReference | CkafkaDatahubTaskSourceResourceSqlServerParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snapshot_mode: {
      value: cdktf.stringToHclTerraform(struct!.snapshotMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceSqlServerParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceSqlServerParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._snapshotMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.snapshotMode = this._snapshotMode;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceSqlServerParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._database = undefined;
      this._resource = undefined;
      this._snapshotMode = undefined;
      this._table = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._database = value.database;
      this._resource = value.resource;
      this._snapshotMode = value.snapshotMode;
      this._table = value.table;
    }
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // snapshot_mode - computed: false, optional: true, required: false
  private _snapshotMode?: string; 
  public get snapshotMode() {
    return this.getStringAttribute('snapshot_mode');
  }
  public set snapshotMode(value: string) {
    this._snapshotMode = value;
  }
  public resetSnapshotMode() {
    this._snapshotMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snapshotModeInput() {
    return this._snapshotMode;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }
}
export interface CkafkaDatahubTaskSourceResourceTdwParam {
  /**
  * Tdw bid.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#bid CkafkaDatahubTask#bid}
  */
  readonly bid: string;
  /**
  * default true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#is_domestic CkafkaDatahubTask#is_domestic}
  */
  readonly isDomestic?: boolean | cdktf.IResolvable;
  /**
  * TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#tdw_host CkafkaDatahubTask#tdw_host}
  */
  readonly tdwHost?: string;
  /**
  * TDW port, default 8099.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#tdw_port CkafkaDatahubTask#tdw_port}
  */
  readonly tdwPort?: number;
  /**
  * Tdw tid.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#tid CkafkaDatahubTask#tid}
  */
  readonly tid: string;
}

export function ckafkaDatahubTaskSourceResourceTdwParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceTdwParamOutputReference | CkafkaDatahubTaskSourceResourceTdwParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bid: cdktf.stringToTerraform(struct!.bid),
    is_domestic: cdktf.booleanToTerraform(struct!.isDomestic),
    tdw_host: cdktf.stringToTerraform(struct!.tdwHost),
    tdw_port: cdktf.numberToTerraform(struct!.tdwPort),
    tid: cdktf.stringToTerraform(struct!.tid),
  }
}


export function ckafkaDatahubTaskSourceResourceTdwParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceTdwParamOutputReference | CkafkaDatahubTaskSourceResourceTdwParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bid: {
      value: cdktf.stringToHclTerraform(struct!.bid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    is_domestic: {
      value: cdktf.booleanToHclTerraform(struct!.isDomestic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tdw_host: {
      value: cdktf.stringToHclTerraform(struct!.tdwHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tdw_port: {
      value: cdktf.numberToHclTerraform(struct!.tdwPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tid: {
      value: cdktf.stringToHclTerraform(struct!.tid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceTdwParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceTdwParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bid !== undefined) {
      hasAnyValues = true;
      internalValueResult.bid = this._bid;
    }
    if (this._isDomestic !== undefined) {
      hasAnyValues = true;
      internalValueResult.isDomestic = this._isDomestic;
    }
    if (this._tdwHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.tdwHost = this._tdwHost;
    }
    if (this._tdwPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.tdwPort = this._tdwPort;
    }
    if (this._tid !== undefined) {
      hasAnyValues = true;
      internalValueResult.tid = this._tid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceTdwParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._bid = undefined;
      this._isDomestic = undefined;
      this._tdwHost = undefined;
      this._tdwPort = undefined;
      this._tid = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._bid = value.bid;
      this._isDomestic = value.isDomestic;
      this._tdwHost = value.tdwHost;
      this._tdwPort = value.tdwPort;
      this._tid = value.tid;
    }
  }

  // bid - computed: false, optional: false, required: true
  private _bid?: string; 
  public get bid() {
    return this.getStringAttribute('bid');
  }
  public set bid(value: string) {
    this._bid = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bidInput() {
    return this._bid;
  }

  // is_domestic - computed: false, optional: true, required: false
  private _isDomestic?: boolean | cdktf.IResolvable; 
  public get isDomestic() {
    return this.getBooleanAttribute('is_domestic');
  }
  public set isDomestic(value: boolean | cdktf.IResolvable) {
    this._isDomestic = value;
  }
  public resetIsDomestic() {
    this._isDomestic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isDomesticInput() {
    return this._isDomestic;
  }

  // tdw_host - computed: false, optional: true, required: false
  private _tdwHost?: string; 
  public get tdwHost() {
    return this.getStringAttribute('tdw_host');
  }
  public set tdwHost(value: string) {
    this._tdwHost = value;
  }
  public resetTdwHost() {
    this._tdwHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tdwHostInput() {
    return this._tdwHost;
  }

  // tdw_port - computed: false, optional: true, required: false
  private _tdwPort?: number; 
  public get tdwPort() {
    return this.getNumberAttribute('tdw_port');
  }
  public set tdwPort(value: number) {
    this._tdwPort = value;
  }
  public resetTdwPort() {
    this._tdwPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tdwPortInput() {
    return this._tdwPort;
  }

  // tid - computed: false, optional: false, required: true
  private _tid?: string; 
  public get tid() {
    return this.getStringAttribute('tid');
  }
  public set tid(value: string) {
    this._tid = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tidInput() {
    return this._tid;
  }
}
export interface CkafkaDatahubTaskSourceResourceTopicParam {
  /**
  * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, initial position earliest, latest position latest, time point position timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * The topic name of the topic sold separately.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * Topic TopicId.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskSourceResourceTopicParamToTerraform(struct?: CkafkaDatahubTaskSourceResourceTopicParamOutputReference | CkafkaDatahubTaskSourceResourceTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    resource: cdktf.stringToTerraform(struct!.resource),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
  }
}


export function ckafkaDatahubTaskSourceResourceTopicParamToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceTopicParamOutputReference | CkafkaDatahubTaskSourceResourceTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceTopicParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResourceTopicParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResourceTopicParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._resource = undefined;
      this._startTime = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._resource = value.resource;
      this._startTime = value.startTime;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic_id - computed: false, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }
}
export interface CkafkaDatahubTaskSourceResource {
  /**
  * resource type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
  /**
  * click_house_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#click_house_param CkafkaDatahubTask#click_house_param}
  */
  readonly clickHouseParam?: CkafkaDatahubTaskSourceResourceClickHouseParam;
  /**
  * cls_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#cls_param CkafkaDatahubTask#cls_param}
  */
  readonly clsParam?: CkafkaDatahubTaskSourceResourceClsParam;
  /**
  * cos_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#cos_param CkafkaDatahubTask#cos_param}
  */
  readonly cosParam?: CkafkaDatahubTaskSourceResourceCosParam;
  /**
  * ctsdb_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ctsdb_param CkafkaDatahubTask#ctsdb_param}
  */
  readonly ctsdbParam?: CkafkaDatahubTaskSourceResourceCtsdbParam;
  /**
  * dts_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#dts_param CkafkaDatahubTask#dts_param}
  */
  readonly dtsParam?: CkafkaDatahubTaskSourceResourceDtsParam;
  /**
  * es_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#es_param CkafkaDatahubTask#es_param}
  */
  readonly esParam?: CkafkaDatahubTaskSourceResourceEsParam;
  /**
  * event_bus_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#event_bus_param CkafkaDatahubTask#event_bus_param}
  */
  readonly eventBusParam?: CkafkaDatahubTaskSourceResourceEventBusParam;
  /**
  * kafka_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#kafka_param CkafkaDatahubTask#kafka_param}
  */
  readonly kafkaParam?: CkafkaDatahubTaskSourceResourceKafkaParam;
  /**
  * maria_db_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#maria_db_param CkafkaDatahubTask#maria_db_param}
  */
  readonly mariaDbParam?: CkafkaDatahubTaskSourceResourceMariaDbParam;
  /**
  * mongo_db_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#mongo_db_param CkafkaDatahubTask#mongo_db_param}
  */
  readonly mongoDbParam?: CkafkaDatahubTaskSourceResourceMongoDbParam;
  /**
  * my_sql_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#my_sql_param CkafkaDatahubTask#my_sql_param}
  */
  readonly mySqlParam?: CkafkaDatahubTaskSourceResourceMySqlParam;
  /**
  * postgre_sql_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#postgre_sql_param CkafkaDatahubTask#postgre_sql_param}
  */
  readonly postgreSqlParam?: CkafkaDatahubTaskSourceResourcePostgreSqlParam;
  /**
  * scf_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#scf_param CkafkaDatahubTask#scf_param}
  */
  readonly scfParam?: CkafkaDatahubTaskSourceResourceScfParam;
  /**
  * sql_server_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#sql_server_param CkafkaDatahubTask#sql_server_param}
  */
  readonly sqlServerParam?: CkafkaDatahubTaskSourceResourceSqlServerParam;
  /**
  * tdw_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#tdw_param CkafkaDatahubTask#tdw_param}
  */
  readonly tdwParam?: CkafkaDatahubTaskSourceResourceTdwParam;
  /**
  * topic_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_param CkafkaDatahubTask#topic_param}
  */
  readonly topicParam?: CkafkaDatahubTaskSourceResourceTopicParam;
}

export function ckafkaDatahubTaskSourceResourceToTerraform(struct?: CkafkaDatahubTaskSourceResourceOutputReference | CkafkaDatahubTaskSourceResource): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    click_house_param: ckafkaDatahubTaskSourceResourceClickHouseParamToTerraform(struct!.clickHouseParam),
    cls_param: ckafkaDatahubTaskSourceResourceClsParamToTerraform(struct!.clsParam),
    cos_param: ckafkaDatahubTaskSourceResourceCosParamToTerraform(struct!.cosParam),
    ctsdb_param: ckafkaDatahubTaskSourceResourceCtsdbParamToTerraform(struct!.ctsdbParam),
    dts_param: ckafkaDatahubTaskSourceResourceDtsParamToTerraform(struct!.dtsParam),
    es_param: ckafkaDatahubTaskSourceResourceEsParamToTerraform(struct!.esParam),
    event_bus_param: ckafkaDatahubTaskSourceResourceEventBusParamToTerraform(struct!.eventBusParam),
    kafka_param: ckafkaDatahubTaskSourceResourceKafkaParamToTerraform(struct!.kafkaParam),
    maria_db_param: ckafkaDatahubTaskSourceResourceMariaDbParamToTerraform(struct!.mariaDbParam),
    mongo_db_param: ckafkaDatahubTaskSourceResourceMongoDbParamToTerraform(struct!.mongoDbParam),
    my_sql_param: ckafkaDatahubTaskSourceResourceMySqlParamToTerraform(struct!.mySqlParam),
    postgre_sql_param: ckafkaDatahubTaskSourceResourcePostgreSqlParamToTerraform(struct!.postgreSqlParam),
    scf_param: ckafkaDatahubTaskSourceResourceScfParamToTerraform(struct!.scfParam),
    sql_server_param: ckafkaDatahubTaskSourceResourceSqlServerParamToTerraform(struct!.sqlServerParam),
    tdw_param: ckafkaDatahubTaskSourceResourceTdwParamToTerraform(struct!.tdwParam),
    topic_param: ckafkaDatahubTaskSourceResourceTopicParamToTerraform(struct!.topicParam),
  }
}


export function ckafkaDatahubTaskSourceResourceToHclTerraform(struct?: CkafkaDatahubTaskSourceResourceOutputReference | CkafkaDatahubTaskSourceResource): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    click_house_param: {
      value: ckafkaDatahubTaskSourceResourceClickHouseParamToHclTerraform(struct!.clickHouseParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceClickHouseParamList",
    },
    cls_param: {
      value: ckafkaDatahubTaskSourceResourceClsParamToHclTerraform(struct!.clsParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceClsParamList",
    },
    cos_param: {
      value: ckafkaDatahubTaskSourceResourceCosParamToHclTerraform(struct!.cosParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceCosParamList",
    },
    ctsdb_param: {
      value: ckafkaDatahubTaskSourceResourceCtsdbParamToHclTerraform(struct!.ctsdbParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceCtsdbParamList",
    },
    dts_param: {
      value: ckafkaDatahubTaskSourceResourceDtsParamToHclTerraform(struct!.dtsParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceDtsParamList",
    },
    es_param: {
      value: ckafkaDatahubTaskSourceResourceEsParamToHclTerraform(struct!.esParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceEsParamList",
    },
    event_bus_param: {
      value: ckafkaDatahubTaskSourceResourceEventBusParamToHclTerraform(struct!.eventBusParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceEventBusParamList",
    },
    kafka_param: {
      value: ckafkaDatahubTaskSourceResourceKafkaParamToHclTerraform(struct!.kafkaParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceKafkaParamList",
    },
    maria_db_param: {
      value: ckafkaDatahubTaskSourceResourceMariaDbParamToHclTerraform(struct!.mariaDbParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceMariaDbParamList",
    },
    mongo_db_param: {
      value: ckafkaDatahubTaskSourceResourceMongoDbParamToHclTerraform(struct!.mongoDbParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceMongoDbParamList",
    },
    my_sql_param: {
      value: ckafkaDatahubTaskSourceResourceMySqlParamToHclTerraform(struct!.mySqlParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceMySqlParamList",
    },
    postgre_sql_param: {
      value: ckafkaDatahubTaskSourceResourcePostgreSqlParamToHclTerraform(struct!.postgreSqlParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourcePostgreSqlParamList",
    },
    scf_param: {
      value: ckafkaDatahubTaskSourceResourceScfParamToHclTerraform(struct!.scfParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceScfParamList",
    },
    sql_server_param: {
      value: ckafkaDatahubTaskSourceResourceSqlServerParamToHclTerraform(struct!.sqlServerParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceSqlServerParamList",
    },
    tdw_param: {
      value: ckafkaDatahubTaskSourceResourceTdwParamToHclTerraform(struct!.tdwParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceTdwParamList",
    },
    topic_param: {
      value: ckafkaDatahubTaskSourceResourceTopicParamToHclTerraform(struct!.topicParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskSourceResourceTopicParamList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskSourceResourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskSourceResource | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._clickHouseParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clickHouseParam = this._clickHouseParam?.internalValue;
    }
    if (this._clsParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clsParam = this._clsParam?.internalValue;
    }
    if (this._cosParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cosParam = this._cosParam?.internalValue;
    }
    if (this._ctsdbParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ctsdbParam = this._ctsdbParam?.internalValue;
    }
    if (this._dtsParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dtsParam = this._dtsParam?.internalValue;
    }
    if (this._esParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.esParam = this._esParam?.internalValue;
    }
    if (this._eventBusParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.eventBusParam = this._eventBusParam?.internalValue;
    }
    if (this._kafkaParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kafkaParam = this._kafkaParam?.internalValue;
    }
    if (this._mariaDbParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mariaDbParam = this._mariaDbParam?.internalValue;
    }
    if (this._mongoDbParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mongoDbParam = this._mongoDbParam?.internalValue;
    }
    if (this._mySqlParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mySqlParam = this._mySqlParam?.internalValue;
    }
    if (this._postgreSqlParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.postgreSqlParam = this._postgreSqlParam?.internalValue;
    }
    if (this._scfParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scfParam = this._scfParam?.internalValue;
    }
    if (this._sqlServerParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sqlServerParam = this._sqlServerParam?.internalValue;
    }
    if (this._tdwParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tdwParam = this._tdwParam?.internalValue;
    }
    if (this._topicParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicParam = this._topicParam?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskSourceResource | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._type = undefined;
      this._clickHouseParam.internalValue = undefined;
      this._clsParam.internalValue = undefined;
      this._cosParam.internalValue = undefined;
      this._ctsdbParam.internalValue = undefined;
      this._dtsParam.internalValue = undefined;
      this._esParam.internalValue = undefined;
      this._eventBusParam.internalValue = undefined;
      this._kafkaParam.internalValue = undefined;
      this._mariaDbParam.internalValue = undefined;
      this._mongoDbParam.internalValue = undefined;
      this._mySqlParam.internalValue = undefined;
      this._postgreSqlParam.internalValue = undefined;
      this._scfParam.internalValue = undefined;
      this._sqlServerParam.internalValue = undefined;
      this._tdwParam.internalValue = undefined;
      this._topicParam.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._type = value.type;
      this._clickHouseParam.internalValue = value.clickHouseParam;
      this._clsParam.internalValue = value.clsParam;
      this._cosParam.internalValue = value.cosParam;
      this._ctsdbParam.internalValue = value.ctsdbParam;
      this._dtsParam.internalValue = value.dtsParam;
      this._esParam.internalValue = value.esParam;
      this._eventBusParam.internalValue = value.eventBusParam;
      this._kafkaParam.internalValue = value.kafkaParam;
      this._mariaDbParam.internalValue = value.mariaDbParam;
      this._mongoDbParam.internalValue = value.mongoDbParam;
      this._mySqlParam.internalValue = value.mySqlParam;
      this._postgreSqlParam.internalValue = value.postgreSqlParam;
      this._scfParam.internalValue = value.scfParam;
      this._sqlServerParam.internalValue = value.sqlServerParam;
      this._tdwParam.internalValue = value.tdwParam;
      this._topicParam.internalValue = value.topicParam;
    }
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // click_house_param - computed: false, optional: true, required: false
  private _clickHouseParam = new CkafkaDatahubTaskSourceResourceClickHouseParamOutputReference(this, "click_house_param");
  public get clickHouseParam() {
    return this._clickHouseParam;
  }
  public putClickHouseParam(value: CkafkaDatahubTaskSourceResourceClickHouseParam) {
    this._clickHouseParam.internalValue = value;
  }
  public resetClickHouseParam() {
    this._clickHouseParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clickHouseParamInput() {
    return this._clickHouseParam.internalValue;
  }

  // cls_param - computed: false, optional: true, required: false
  private _clsParam = new CkafkaDatahubTaskSourceResourceClsParamOutputReference(this, "cls_param");
  public get clsParam() {
    return this._clsParam;
  }
  public putClsParam(value: CkafkaDatahubTaskSourceResourceClsParam) {
    this._clsParam.internalValue = value;
  }
  public resetClsParam() {
    this._clsParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clsParamInput() {
    return this._clsParam.internalValue;
  }

  // cos_param - computed: false, optional: true, required: false
  private _cosParam = new CkafkaDatahubTaskSourceResourceCosParamOutputReference(this, "cos_param");
  public get cosParam() {
    return this._cosParam;
  }
  public putCosParam(value: CkafkaDatahubTaskSourceResourceCosParam) {
    this._cosParam.internalValue = value;
  }
  public resetCosParam() {
    this._cosParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cosParamInput() {
    return this._cosParam.internalValue;
  }

  // ctsdb_param - computed: false, optional: true, required: false
  private _ctsdbParam = new CkafkaDatahubTaskSourceResourceCtsdbParamOutputReference(this, "ctsdb_param");
  public get ctsdbParam() {
    return this._ctsdbParam;
  }
  public putCtsdbParam(value: CkafkaDatahubTaskSourceResourceCtsdbParam) {
    this._ctsdbParam.internalValue = value;
  }
  public resetCtsdbParam() {
    this._ctsdbParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ctsdbParamInput() {
    return this._ctsdbParam.internalValue;
  }

  // dts_param - computed: false, optional: true, required: false
  private _dtsParam = new CkafkaDatahubTaskSourceResourceDtsParamOutputReference(this, "dts_param");
  public get dtsParam() {
    return this._dtsParam;
  }
  public putDtsParam(value: CkafkaDatahubTaskSourceResourceDtsParam) {
    this._dtsParam.internalValue = value;
  }
  public resetDtsParam() {
    this._dtsParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dtsParamInput() {
    return this._dtsParam.internalValue;
  }

  // es_param - computed: false, optional: true, required: false
  private _esParam = new CkafkaDatahubTaskSourceResourceEsParamOutputReference(this, "es_param");
  public get esParam() {
    return this._esParam;
  }
  public putEsParam(value: CkafkaDatahubTaskSourceResourceEsParam) {
    this._esParam.internalValue = value;
  }
  public resetEsParam() {
    this._esParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get esParamInput() {
    return this._esParam.internalValue;
  }

  // event_bus_param - computed: false, optional: true, required: false
  private _eventBusParam = new CkafkaDatahubTaskSourceResourceEventBusParamOutputReference(this, "event_bus_param");
  public get eventBusParam() {
    return this._eventBusParam;
  }
  public putEventBusParam(value: CkafkaDatahubTaskSourceResourceEventBusParam) {
    this._eventBusParam.internalValue = value;
  }
  public resetEventBusParam() {
    this._eventBusParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get eventBusParamInput() {
    return this._eventBusParam.internalValue;
  }

  // kafka_param - computed: false, optional: true, required: false
  private _kafkaParam = new CkafkaDatahubTaskSourceResourceKafkaParamOutputReference(this, "kafka_param");
  public get kafkaParam() {
    return this._kafkaParam;
  }
  public putKafkaParam(value: CkafkaDatahubTaskSourceResourceKafkaParam) {
    this._kafkaParam.internalValue = value;
  }
  public resetKafkaParam() {
    this._kafkaParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kafkaParamInput() {
    return this._kafkaParam.internalValue;
  }

  // maria_db_param - computed: false, optional: true, required: false
  private _mariaDbParam = new CkafkaDatahubTaskSourceResourceMariaDbParamOutputReference(this, "maria_db_param");
  public get mariaDbParam() {
    return this._mariaDbParam;
  }
  public putMariaDbParam(value: CkafkaDatahubTaskSourceResourceMariaDbParam) {
    this._mariaDbParam.internalValue = value;
  }
  public resetMariaDbParam() {
    this._mariaDbParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mariaDbParamInput() {
    return this._mariaDbParam.internalValue;
  }

  // mongo_db_param - computed: false, optional: true, required: false
  private _mongoDbParam = new CkafkaDatahubTaskSourceResourceMongoDbParamOutputReference(this, "mongo_db_param");
  public get mongoDbParam() {
    return this._mongoDbParam;
  }
  public putMongoDbParam(value: CkafkaDatahubTaskSourceResourceMongoDbParam) {
    this._mongoDbParam.internalValue = value;
  }
  public resetMongoDbParam() {
    this._mongoDbParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mongoDbParamInput() {
    return this._mongoDbParam.internalValue;
  }

  // my_sql_param - computed: false, optional: true, required: false
  private _mySqlParam = new CkafkaDatahubTaskSourceResourceMySqlParamOutputReference(this, "my_sql_param");
  public get mySqlParam() {
    return this._mySqlParam;
  }
  public putMySqlParam(value: CkafkaDatahubTaskSourceResourceMySqlParam) {
    this._mySqlParam.internalValue = value;
  }
  public resetMySqlParam() {
    this._mySqlParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mySqlParamInput() {
    return this._mySqlParam.internalValue;
  }

  // postgre_sql_param - computed: false, optional: true, required: false
  private _postgreSqlParam = new CkafkaDatahubTaskSourceResourcePostgreSqlParamOutputReference(this, "postgre_sql_param");
  public get postgreSqlParam() {
    return this._postgreSqlParam;
  }
  public putPostgreSqlParam(value: CkafkaDatahubTaskSourceResourcePostgreSqlParam) {
    this._postgreSqlParam.internalValue = value;
  }
  public resetPostgreSqlParam() {
    this._postgreSqlParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get postgreSqlParamInput() {
    return this._postgreSqlParam.internalValue;
  }

  // scf_param - computed: false, optional: true, required: false
  private _scfParam = new CkafkaDatahubTaskSourceResourceScfParamOutputReference(this, "scf_param");
  public get scfParam() {
    return this._scfParam;
  }
  public putScfParam(value: CkafkaDatahubTaskSourceResourceScfParam) {
    this._scfParam.internalValue = value;
  }
  public resetScfParam() {
    this._scfParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scfParamInput() {
    return this._scfParam.internalValue;
  }

  // sql_server_param - computed: false, optional: true, required: false
  private _sqlServerParam = new CkafkaDatahubTaskSourceResourceSqlServerParamOutputReference(this, "sql_server_param");
  public get sqlServerParam() {
    return this._sqlServerParam;
  }
  public putSqlServerParam(value: CkafkaDatahubTaskSourceResourceSqlServerParam) {
    this._sqlServerParam.internalValue = value;
  }
  public resetSqlServerParam() {
    this._sqlServerParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sqlServerParamInput() {
    return this._sqlServerParam.internalValue;
  }

  // tdw_param - computed: false, optional: true, required: false
  private _tdwParam = new CkafkaDatahubTaskSourceResourceTdwParamOutputReference(this, "tdw_param");
  public get tdwParam() {
    return this._tdwParam;
  }
  public putTdwParam(value: CkafkaDatahubTaskSourceResourceTdwParam) {
    this._tdwParam.internalValue = value;
  }
  public resetTdwParam() {
    this._tdwParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tdwParamInput() {
    return this._tdwParam.internalValue;
  }

  // topic_param - computed: false, optional: true, required: false
  private _topicParam = new CkafkaDatahubTaskSourceResourceTopicParamOutputReference(this, "topic_param");
  public get topicParam() {
    return this._topicParam;
  }
  public putTopicParam(value: CkafkaDatahubTaskSourceResourceTopicParam) {
    this._topicParam.internalValue = value;
  }
  public resetTopicParam() {
    this._topicParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicParamInput() {
    return this._topicParam.internalValue;
  }
}
export interface CkafkaDatahubTaskTargetResourceClickHouseParamDropCls {
  /**
  * cls LogSet id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_log_set CkafkaDatahubTask#drop_cls_log_set}
  */
  readonly dropClsLogSet?: string;
  /**
  * cls account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_owneruin CkafkaDatahubTask#drop_cls_owneruin}
  */
  readonly dropClsOwneruin?: string;
  /**
  * cls region.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_region CkafkaDatahubTask#drop_cls_region}
  */
  readonly dropClsRegion?: string;
  /**
  * cls topicId.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_topic_id CkafkaDatahubTask#drop_cls_topic_id}
  */
  readonly dropClsTopicId?: string;
  /**
  * Whether to deliver to cls.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message_to_cls CkafkaDatahubTask#drop_invalid_message_to_cls}
  */
  readonly dropInvalidMessageToCls?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTargetResourceClickHouseParamDropClsToTerraform(struct?: CkafkaDatahubTaskTargetResourceClickHouseParamDropClsOutputReference | CkafkaDatahubTaskTargetResourceClickHouseParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    drop_cls_log_set: cdktf.stringToTerraform(struct!.dropClsLogSet),
    drop_cls_owneruin: cdktf.stringToTerraform(struct!.dropClsOwneruin),
    drop_cls_region: cdktf.stringToTerraform(struct!.dropClsRegion),
    drop_cls_topic_id: cdktf.stringToTerraform(struct!.dropClsTopicId),
    drop_invalid_message_to_cls: cdktf.booleanToTerraform(struct!.dropInvalidMessageToCls),
  }
}


export function ckafkaDatahubTaskTargetResourceClickHouseParamDropClsToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceClickHouseParamDropClsOutputReference | CkafkaDatahubTaskTargetResourceClickHouseParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    drop_cls_log_set: {
      value: cdktf.stringToHclTerraform(struct!.dropClsLogSet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_owneruin: {
      value: cdktf.stringToHclTerraform(struct!.dropClsOwneruin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_region: {
      value: cdktf.stringToHclTerraform(struct!.dropClsRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_topic_id: {
      value: cdktf.stringToHclTerraform(struct!.dropClsTopicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message_to_cls: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessageToCls),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceClickHouseParamDropClsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceClickHouseParamDropCls | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dropClsLogSet !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsLogSet = this._dropClsLogSet;
    }
    if (this._dropClsOwneruin !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsOwneruin = this._dropClsOwneruin;
    }
    if (this._dropClsRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsRegion = this._dropClsRegion;
    }
    if (this._dropClsTopicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsTopicId = this._dropClsTopicId;
    }
    if (this._dropInvalidMessageToCls !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessageToCls = this._dropInvalidMessageToCls;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceClickHouseParamDropCls | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dropClsLogSet = undefined;
      this._dropClsOwneruin = undefined;
      this._dropClsRegion = undefined;
      this._dropClsTopicId = undefined;
      this._dropInvalidMessageToCls = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dropClsLogSet = value.dropClsLogSet;
      this._dropClsOwneruin = value.dropClsOwneruin;
      this._dropClsRegion = value.dropClsRegion;
      this._dropClsTopicId = value.dropClsTopicId;
      this._dropInvalidMessageToCls = value.dropInvalidMessageToCls;
    }
  }

  // drop_cls_log_set - computed: false, optional: true, required: false
  private _dropClsLogSet?: string; 
  public get dropClsLogSet() {
    return this.getStringAttribute('drop_cls_log_set');
  }
  public set dropClsLogSet(value: string) {
    this._dropClsLogSet = value;
  }
  public resetDropClsLogSet() {
    this._dropClsLogSet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsLogSetInput() {
    return this._dropClsLogSet;
  }

  // drop_cls_owneruin - computed: false, optional: true, required: false
  private _dropClsOwneruin?: string; 
  public get dropClsOwneruin() {
    return this.getStringAttribute('drop_cls_owneruin');
  }
  public set dropClsOwneruin(value: string) {
    this._dropClsOwneruin = value;
  }
  public resetDropClsOwneruin() {
    this._dropClsOwneruin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsOwneruinInput() {
    return this._dropClsOwneruin;
  }

  // drop_cls_region - computed: false, optional: true, required: false
  private _dropClsRegion?: string; 
  public get dropClsRegion() {
    return this.getStringAttribute('drop_cls_region');
  }
  public set dropClsRegion(value: string) {
    this._dropClsRegion = value;
  }
  public resetDropClsRegion() {
    this._dropClsRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsRegionInput() {
    return this._dropClsRegion;
  }

  // drop_cls_topic_id - computed: false, optional: true, required: false
  private _dropClsTopicId?: string; 
  public get dropClsTopicId() {
    return this.getStringAttribute('drop_cls_topic_id');
  }
  public set dropClsTopicId(value: string) {
    this._dropClsTopicId = value;
  }
  public resetDropClsTopicId() {
    this._dropClsTopicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsTopicIdInput() {
    return this._dropClsTopicId;
  }

  // drop_invalid_message_to_cls - computed: false, optional: true, required: false
  private _dropInvalidMessageToCls?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessageToCls() {
    return this.getBooleanAttribute('drop_invalid_message_to_cls');
  }
  public set dropInvalidMessageToCls(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessageToCls = value;
  }
  public resetDropInvalidMessageToCls() {
    this._dropInvalidMessageToCls = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageToClsInput() {
    return this._dropInvalidMessageToCls;
  }
}
export interface CkafkaDatahubTaskTargetResourceClickHouseParamSchema {
  /**
  * Whether the column item is allowed to be empty.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#allow_null CkafkaDatahubTask#allow_null}
  */
  readonly allowNull: boolean | cdktf.IResolvable;
  /**
  * column name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#column_name CkafkaDatahubTask#column_name}
  */
  readonly columnName: string;
  /**
  * The json Key name corresponding to this column.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#json_key CkafkaDatahubTask#json_key}
  */
  readonly jsonKey: string;
  /**
  * type of table column.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
}

export function ckafkaDatahubTaskTargetResourceClickHouseParamSchemaToTerraform(struct?: CkafkaDatahubTaskTargetResourceClickHouseParamSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_null: cdktf.booleanToTerraform(struct!.allowNull),
    column_name: cdktf.stringToTerraform(struct!.columnName),
    json_key: cdktf.stringToTerraform(struct!.jsonKey),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function ckafkaDatahubTaskTargetResourceClickHouseParamSchemaToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceClickHouseParamSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_null: {
      value: cdktf.booleanToHclTerraform(struct!.allowNull),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    column_name: {
      value: cdktf.stringToHclTerraform(struct!.columnName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    json_key: {
      value: cdktf.stringToHclTerraform(struct!.jsonKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceClickHouseParamSchemaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceClickHouseParamSchema | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowNull !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowNull = this._allowNull;
    }
    if (this._columnName !== undefined) {
      hasAnyValues = true;
      internalValueResult.columnName = this._columnName;
    }
    if (this._jsonKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonKey = this._jsonKey;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceClickHouseParamSchema | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowNull = undefined;
      this._columnName = undefined;
      this._jsonKey = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowNull = value.allowNull;
      this._columnName = value.columnName;
      this._jsonKey = value.jsonKey;
      this._type = value.type;
    }
  }

  // allow_null - computed: false, optional: false, required: true
  private _allowNull?: boolean | cdktf.IResolvable; 
  public get allowNull() {
    return this.getBooleanAttribute('allow_null');
  }
  public set allowNull(value: boolean | cdktf.IResolvable) {
    this._allowNull = value;
  }
  // Temporarily expose input value. Use with caution.
  public get allowNullInput() {
    return this._allowNull;
  }

  // column_name - computed: false, optional: false, required: true
  private _columnName?: string; 
  public get columnName() {
    return this.getStringAttribute('column_name');
  }
  public set columnName(value: string) {
    this._columnName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get columnNameInput() {
    return this._columnName;
  }

  // json_key - computed: false, optional: false, required: true
  private _jsonKey?: string; 
  public get jsonKey() {
    return this.getStringAttribute('json_key');
  }
  public set jsonKey(value: string) {
    this._jsonKey = value;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonKeyInput() {
    return this._jsonKey;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}

export class CkafkaDatahubTaskTargetResourceClickHouseParamSchemaList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTargetResourceClickHouseParamSchema[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTargetResourceClickHouseParamSchemaOutputReference {
    return new CkafkaDatahubTaskTargetResourceClickHouseParamSchemaOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTargetResourceClickHouseParam {
  /**
  * ClickHouse cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#cluster CkafkaDatahubTask#cluster}
  */
  readonly cluster: string;
  /**
  * ClickHouse database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * Whether ClickHouse discards the message that fails to parse, the default is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message CkafkaDatahubTask#drop_invalid_message}
  */
  readonly dropInvalidMessage?: boolean | cdktf.IResolvable;
  /**
  * ClickHouse ip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ip CkafkaDatahubTask#ip}
  */
  readonly ip?: string;
  /**
  * ClickHouse passwd.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#password CkafkaDatahubTask#password}
  */
  readonly password?: string;
  /**
  * ClickHouse port.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#port CkafkaDatahubTask#port}
  */
  readonly port?: number;
  /**
  * resource id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt?: boolean | cdktf.IResolvable;
  /**
  * instance vip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#service_vip CkafkaDatahubTask#service_vip}
  */
  readonly serviceVip?: string;
  /**
  * ClickHouse table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * ClickHouse type, emr-clickhouse: emr;cdw-clickhouse: cdwch;selfBuilt: ``.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type?: string;
  /**
  * instance vpc id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#uniq_vpc_id CkafkaDatahubTask#uniq_vpc_id}
  */
  readonly uniqVpcId?: string;
  /**
  * ClickHouse user name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#user_name CkafkaDatahubTask#user_name}
  */
  readonly userName?: string;
  /**
  * drop_cls block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls CkafkaDatahubTask#drop_cls}
  */
  readonly dropCls?: CkafkaDatahubTaskTargetResourceClickHouseParamDropCls;
  /**
  * schema block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#schema CkafkaDatahubTask#schema}
  */
  readonly schema: CkafkaDatahubTaskTargetResourceClickHouseParamSchema[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTargetResourceClickHouseParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceClickHouseParamOutputReference | CkafkaDatahubTaskTargetResourceClickHouseParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster: cdktf.stringToTerraform(struct!.cluster),
    database: cdktf.stringToTerraform(struct!.database),
    drop_invalid_message: cdktf.booleanToTerraform(struct!.dropInvalidMessage),
    ip: cdktf.stringToTerraform(struct!.ip),
    password: cdktf.stringToTerraform(struct!.password),
    port: cdktf.numberToTerraform(struct!.port),
    resource: cdktf.stringToTerraform(struct!.resource),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    service_vip: cdktf.stringToTerraform(struct!.serviceVip),
    table: cdktf.stringToTerraform(struct!.table),
    type: cdktf.stringToTerraform(struct!.type),
    uniq_vpc_id: cdktf.stringToTerraform(struct!.uniqVpcId),
    user_name: cdktf.stringToTerraform(struct!.userName),
    drop_cls: ckafkaDatahubTaskTargetResourceClickHouseParamDropClsToTerraform(struct!.dropCls),
    schema: cdktf.listMapper(ckafkaDatahubTaskTargetResourceClickHouseParamSchemaToTerraform, true)(struct!.schema),
  }
}


export function ckafkaDatahubTaskTargetResourceClickHouseParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceClickHouseParamOutputReference | CkafkaDatahubTaskTargetResourceClickHouseParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster: {
      value: cdktf.stringToHclTerraform(struct!.cluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    service_vip: {
      value: cdktf.stringToHclTerraform(struct!.serviceVip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uniq_vpc_id: {
      value: cdktf.stringToHclTerraform(struct!.uniqVpcId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_name: {
      value: cdktf.stringToHclTerraform(struct!.userName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls: {
      value: ckafkaDatahubTaskTargetResourceClickHouseParamDropClsToHclTerraform(struct!.dropCls),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceClickHouseParamDropClsList",
    },
    schema: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTargetResourceClickHouseParamSchemaToHclTerraform, true)(struct!.schema),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceClickHouseParamSchemaList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceClickHouseParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceClickHouseParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.cluster = this._cluster;
    }
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._dropInvalidMessage !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessage = this._dropInvalidMessage;
    }
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._serviceVip !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceVip = this._serviceVip;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._uniqVpcId !== undefined) {
      hasAnyValues = true;
      internalValueResult.uniqVpcId = this._uniqVpcId;
    }
    if (this._userName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userName = this._userName;
    }
    if (this._dropCls?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropCls = this._dropCls?.internalValue;
    }
    if (this._schema?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.schema = this._schema?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceClickHouseParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._cluster = undefined;
      this._database = undefined;
      this._dropInvalidMessage = undefined;
      this._ip = undefined;
      this._password = undefined;
      this._port = undefined;
      this._resource = undefined;
      this._selfBuilt = undefined;
      this._serviceVip = undefined;
      this._table = undefined;
      this._type = undefined;
      this._uniqVpcId = undefined;
      this._userName = undefined;
      this._dropCls.internalValue = undefined;
      this._schema.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._cluster = value.cluster;
      this._database = value.database;
      this._dropInvalidMessage = value.dropInvalidMessage;
      this._ip = value.ip;
      this._password = value.password;
      this._port = value.port;
      this._resource = value.resource;
      this._selfBuilt = value.selfBuilt;
      this._serviceVip = value.serviceVip;
      this._table = value.table;
      this._type = value.type;
      this._uniqVpcId = value.uniqVpcId;
      this._userName = value.userName;
      this._dropCls.internalValue = value.dropCls;
      this._schema.internalValue = value.schema;
    }
  }

  // cluster - computed: false, optional: false, required: true
  private _cluster?: string; 
  public get cluster() {
    return this.getStringAttribute('cluster');
  }
  public set cluster(value: string) {
    this._cluster = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterInput() {
    return this._cluster;
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // drop_invalid_message - computed: false, optional: true, required: false
  private _dropInvalidMessage?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessage() {
    return this.getBooleanAttribute('drop_invalid_message');
  }
  public set dropInvalidMessage(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessage = value;
  }
  public resetDropInvalidMessage() {
    this._dropInvalidMessage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageInput() {
    return this._dropInvalidMessage;
  }

  // ip - computed: false, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // self_built - computed: false, optional: true, required: false
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  public resetSelfBuilt() {
    this._selfBuilt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // service_vip - computed: false, optional: true, required: false
  private _serviceVip?: string; 
  public get serviceVip() {
    return this.getStringAttribute('service_vip');
  }
  public set serviceVip(value: string) {
    this._serviceVip = value;
  }
  public resetServiceVip() {
    this._serviceVip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceVipInput() {
    return this._serviceVip;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // uniq_vpc_id - computed: false, optional: true, required: false
  private _uniqVpcId?: string; 
  public get uniqVpcId() {
    return this.getStringAttribute('uniq_vpc_id');
  }
  public set uniqVpcId(value: string) {
    this._uniqVpcId = value;
  }
  public resetUniqVpcId() {
    this._uniqVpcId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uniqVpcIdInput() {
    return this._uniqVpcId;
  }

  // user_name - computed: false, optional: true, required: false
  private _userName?: string; 
  public get userName() {
    return this.getStringAttribute('user_name');
  }
  public set userName(value: string) {
    this._userName = value;
  }
  public resetUserName() {
    this._userName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userNameInput() {
    return this._userName;
  }

  // drop_cls - computed: false, optional: true, required: false
  private _dropCls = new CkafkaDatahubTaskTargetResourceClickHouseParamDropClsOutputReference(this, "drop_cls");
  public get dropCls() {
    return this._dropCls;
  }
  public putDropCls(value: CkafkaDatahubTaskTargetResourceClickHouseParamDropCls) {
    this._dropCls.internalValue = value;
  }
  public resetDropCls() {
    this._dropCls.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsInput() {
    return this._dropCls.internalValue;
  }

  // schema - computed: false, optional: false, required: true
  private _schema = new CkafkaDatahubTaskTargetResourceClickHouseParamSchemaList(this, "schema", false);
  public get schema() {
    return this._schema;
  }
  public putSchema(value: CkafkaDatahubTaskTargetResourceClickHouseParamSchema[] | cdktf.IResolvable) {
    this._schema.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaInput() {
    return this._schema.internalValue;
  }
}
export interface CkafkaDatahubTaskTargetResourceClsParam {
  /**
  * Required when Decode Json is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#content_key CkafkaDatahubTask#content_key}
  */
  readonly contentKey?: string;
  /**
  * Whether the produced information is in json format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#decode_json CkafkaDatahubTask#decode_json}
  */
  readonly decodeJson: boolean | cdktf.IResolvable;
  /**
  * LogSet id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#log_set CkafkaDatahubTask#log_set}
  */
  readonly logSet?: string;
  /**
  * cls id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Specify the content of a field in the message as the time of the cls log. The format of the field content needs to be a second-level timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#time_field CkafkaDatahubTask#time_field}
  */
  readonly timeField?: string;
}

export function ckafkaDatahubTaskTargetResourceClsParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceClsParamOutputReference | CkafkaDatahubTaskTargetResourceClsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    content_key: cdktf.stringToTerraform(struct!.contentKey),
    decode_json: cdktf.booleanToTerraform(struct!.decodeJson),
    log_set: cdktf.stringToTerraform(struct!.logSet),
    resource: cdktf.stringToTerraform(struct!.resource),
    time_field: cdktf.stringToTerraform(struct!.timeField),
  }
}


export function ckafkaDatahubTaskTargetResourceClsParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceClsParamOutputReference | CkafkaDatahubTaskTargetResourceClsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    content_key: {
      value: cdktf.stringToHclTerraform(struct!.contentKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    decode_json: {
      value: cdktf.booleanToHclTerraform(struct!.decodeJson),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    log_set: {
      value: cdktf.stringToHclTerraform(struct!.logSet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_field: {
      value: cdktf.stringToHclTerraform(struct!.timeField),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceClsParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceClsParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._contentKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.contentKey = this._contentKey;
    }
    if (this._decodeJson !== undefined) {
      hasAnyValues = true;
      internalValueResult.decodeJson = this._decodeJson;
    }
    if (this._logSet !== undefined) {
      hasAnyValues = true;
      internalValueResult.logSet = this._logSet;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._timeField !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeField = this._timeField;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceClsParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._contentKey = undefined;
      this._decodeJson = undefined;
      this._logSet = undefined;
      this._resource = undefined;
      this._timeField = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._contentKey = value.contentKey;
      this._decodeJson = value.decodeJson;
      this._logSet = value.logSet;
      this._resource = value.resource;
      this._timeField = value.timeField;
    }
  }

  // content_key - computed: false, optional: true, required: false
  private _contentKey?: string; 
  public get contentKey() {
    return this.getStringAttribute('content_key');
  }
  public set contentKey(value: string) {
    this._contentKey = value;
  }
  public resetContentKey() {
    this._contentKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contentKeyInput() {
    return this._contentKey;
  }

  // decode_json - computed: false, optional: false, required: true
  private _decodeJson?: boolean | cdktf.IResolvable; 
  public get decodeJson() {
    return this.getBooleanAttribute('decode_json');
  }
  public set decodeJson(value: boolean | cdktf.IResolvable) {
    this._decodeJson = value;
  }
  // Temporarily expose input value. Use with caution.
  public get decodeJsonInput() {
    return this._decodeJson;
  }

  // log_set - computed: false, optional: true, required: false
  private _logSet?: string; 
  public get logSet() {
    return this.getStringAttribute('log_set');
  }
  public set logSet(value: string) {
    this._logSet = value;
  }
  public resetLogSet() {
    this._logSet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logSetInput() {
    return this._logSet;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // time_field - computed: false, optional: true, required: false
  private _timeField?: string; 
  public get timeField() {
    return this.getStringAttribute('time_field');
  }
  public set timeField(value: string) {
    this._timeField = value;
  }
  public resetTimeField() {
    this._timeField = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeFieldInput() {
    return this._timeField;
  }
}
export interface CkafkaDatahubTaskTargetResourceCosParam {
  /**
  * The size of aggregated messages MB.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#aggregate_batch_size CkafkaDatahubTask#aggregate_batch_size}
  */
  readonly aggregateBatchSize?: number;
  /**
  * time interval.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#aggregate_interval CkafkaDatahubTask#aggregate_interval}
  */
  readonly aggregateInterval?: number;
  /**
  * cos bucket name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#bucket_name CkafkaDatahubTask#bucket_name}
  */
  readonly bucketName: string;
  /**
  * Partition format formatted according to strptime time.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#directory_time_format CkafkaDatahubTask#directory_time_format}
  */
  readonly directoryTimeFormat?: string;
  /**
  * The file format after message aggregation csv|json.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#format_output_type CkafkaDatahubTask#format_output_type}
  */
  readonly formatOutputType?: string;
  /**
  * ObjectKey.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#object_key CkafkaDatahubTask#object_key}
  */
  readonly objectKey?: string;
  /**
  * Dumped object directory prefix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#object_key_prefix CkafkaDatahubTask#object_key_prefix}
  */
  readonly objectKeyPrefix?: string;
  /**
  * region code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#region CkafkaDatahubTask#region}
  */
  readonly region: string;
}

export function ckafkaDatahubTaskTargetResourceCosParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceCosParamOutputReference | CkafkaDatahubTaskTargetResourceCosParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aggregate_batch_size: cdktf.numberToTerraform(struct!.aggregateBatchSize),
    aggregate_interval: cdktf.numberToTerraform(struct!.aggregateInterval),
    bucket_name: cdktf.stringToTerraform(struct!.bucketName),
    directory_time_format: cdktf.stringToTerraform(struct!.directoryTimeFormat),
    format_output_type: cdktf.stringToTerraform(struct!.formatOutputType),
    object_key: cdktf.stringToTerraform(struct!.objectKey),
    object_key_prefix: cdktf.stringToTerraform(struct!.objectKeyPrefix),
    region: cdktf.stringToTerraform(struct!.region),
  }
}


export function ckafkaDatahubTaskTargetResourceCosParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceCosParamOutputReference | CkafkaDatahubTaskTargetResourceCosParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aggregate_batch_size: {
      value: cdktf.numberToHclTerraform(struct!.aggregateBatchSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    aggregate_interval: {
      value: cdktf.numberToHclTerraform(struct!.aggregateInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    bucket_name: {
      value: cdktf.stringToHclTerraform(struct!.bucketName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    directory_time_format: {
      value: cdktf.stringToHclTerraform(struct!.directoryTimeFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    format_output_type: {
      value: cdktf.stringToHclTerraform(struct!.formatOutputType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    object_key: {
      value: cdktf.stringToHclTerraform(struct!.objectKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    object_key_prefix: {
      value: cdktf.stringToHclTerraform(struct!.objectKeyPrefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceCosParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceCosParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._aggregateBatchSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregateBatchSize = this._aggregateBatchSize;
    }
    if (this._aggregateInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.aggregateInterval = this._aggregateInterval;
    }
    if (this._bucketName !== undefined) {
      hasAnyValues = true;
      internalValueResult.bucketName = this._bucketName;
    }
    if (this._directoryTimeFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.directoryTimeFormat = this._directoryTimeFormat;
    }
    if (this._formatOutputType !== undefined) {
      hasAnyValues = true;
      internalValueResult.formatOutputType = this._formatOutputType;
    }
    if (this._objectKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.objectKey = this._objectKey;
    }
    if (this._objectKeyPrefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.objectKeyPrefix = this._objectKeyPrefix;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceCosParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._aggregateBatchSize = undefined;
      this._aggregateInterval = undefined;
      this._bucketName = undefined;
      this._directoryTimeFormat = undefined;
      this._formatOutputType = undefined;
      this._objectKey = undefined;
      this._objectKeyPrefix = undefined;
      this._region = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._aggregateBatchSize = value.aggregateBatchSize;
      this._aggregateInterval = value.aggregateInterval;
      this._bucketName = value.bucketName;
      this._directoryTimeFormat = value.directoryTimeFormat;
      this._formatOutputType = value.formatOutputType;
      this._objectKey = value.objectKey;
      this._objectKeyPrefix = value.objectKeyPrefix;
      this._region = value.region;
    }
  }

  // aggregate_batch_size - computed: false, optional: true, required: false
  private _aggregateBatchSize?: number; 
  public get aggregateBatchSize() {
    return this.getNumberAttribute('aggregate_batch_size');
  }
  public set aggregateBatchSize(value: number) {
    this._aggregateBatchSize = value;
  }
  public resetAggregateBatchSize() {
    this._aggregateBatchSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregateBatchSizeInput() {
    return this._aggregateBatchSize;
  }

  // aggregate_interval - computed: false, optional: true, required: false
  private _aggregateInterval?: number; 
  public get aggregateInterval() {
    return this.getNumberAttribute('aggregate_interval');
  }
  public set aggregateInterval(value: number) {
    this._aggregateInterval = value;
  }
  public resetAggregateInterval() {
    this._aggregateInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aggregateIntervalInput() {
    return this._aggregateInterval;
  }

  // bucket_name - computed: false, optional: false, required: true
  private _bucketName?: string; 
  public get bucketName() {
    return this.getStringAttribute('bucket_name');
  }
  public set bucketName(value: string) {
    this._bucketName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bucketNameInput() {
    return this._bucketName;
  }

  // directory_time_format - computed: false, optional: true, required: false
  private _directoryTimeFormat?: string; 
  public get directoryTimeFormat() {
    return this.getStringAttribute('directory_time_format');
  }
  public set directoryTimeFormat(value: string) {
    this._directoryTimeFormat = value;
  }
  public resetDirectoryTimeFormat() {
    this._directoryTimeFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directoryTimeFormatInput() {
    return this._directoryTimeFormat;
  }

  // format_output_type - computed: false, optional: true, required: false
  private _formatOutputType?: string; 
  public get formatOutputType() {
    return this.getStringAttribute('format_output_type');
  }
  public set formatOutputType(value: string) {
    this._formatOutputType = value;
  }
  public resetFormatOutputType() {
    this._formatOutputType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatOutputTypeInput() {
    return this._formatOutputType;
  }

  // object_key - computed: false, optional: true, required: false
  private _objectKey?: string; 
  public get objectKey() {
    return this.getStringAttribute('object_key');
  }
  public set objectKey(value: string) {
    this._objectKey = value;
  }
  public resetObjectKey() {
    this._objectKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get objectKeyInput() {
    return this._objectKey;
  }

  // object_key_prefix - computed: false, optional: true, required: false
  private _objectKeyPrefix?: string; 
  public get objectKeyPrefix() {
    return this.getStringAttribute('object_key_prefix');
  }
  public set objectKeyPrefix(value: string) {
    this._objectKeyPrefix = value;
  }
  public resetObjectKeyPrefix() {
    this._objectKeyPrefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get objectKeyPrefixInput() {
    return this._objectKeyPrefix;
  }

  // region - computed: false, optional: false, required: true
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }
}
export interface CkafkaDatahubTaskTargetResourceCtsdbParam {
  /**
  * Ctsdb metric.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ctsdb_metric CkafkaDatahubTask#ctsdb_metric}
  */
  readonly ctsdbMetric?: string;
  /**
  * resource id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource?: string;
}

export function ckafkaDatahubTaskTargetResourceCtsdbParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceCtsdbParamOutputReference | CkafkaDatahubTaskTargetResourceCtsdbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ctsdb_metric: cdktf.stringToTerraform(struct!.ctsdbMetric),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function ckafkaDatahubTaskTargetResourceCtsdbParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceCtsdbParamOutputReference | CkafkaDatahubTaskTargetResourceCtsdbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ctsdb_metric: {
      value: cdktf.stringToHclTerraform(struct!.ctsdbMetric),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceCtsdbParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceCtsdbParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._ctsdbMetric !== undefined) {
      hasAnyValues = true;
      internalValueResult.ctsdbMetric = this._ctsdbMetric;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceCtsdbParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._ctsdbMetric = undefined;
      this._resource = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._ctsdbMetric = value.ctsdbMetric;
      this._resource = value.resource;
    }
  }

  // ctsdb_metric - computed: false, optional: true, required: false
  private _ctsdbMetric?: string; 
  public get ctsdbMetric() {
    return this.getStringAttribute('ctsdb_metric');
  }
  public set ctsdbMetric(value: string) {
    this._ctsdbMetric = value;
  }
  public resetCtsdbMetric() {
    this._ctsdbMetric = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ctsdbMetricInput() {
    return this._ctsdbMetric;
  }

  // resource - computed: false, optional: true, required: false
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  public resetResource() {
    this._resource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface CkafkaDatahubTaskTargetResourceDtsParam {
  /**
  * Dts consumer group Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#group_id CkafkaDatahubTask#group_id}
  */
  readonly groupId?: string;
  /**
  * Dts consumer group passwd.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#group_password CkafkaDatahubTask#group_password}
  */
  readonly groupPassword?: string;
  /**
  * Dts account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#group_user CkafkaDatahubTask#group_user}
  */
  readonly groupUser?: string;
  /**
  * Dts connection ip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ip CkafkaDatahubTask#ip}
  */
  readonly ip?: string;
  /**
  * Dts connection port.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#port CkafkaDatahubTask#port}
  */
  readonly port?: number;
  /**
  * Dts instance Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Dts topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic?: string;
  /**
  * False to synchronize the original data, true to synchronize the parsed json format data, the default is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#tran_sql CkafkaDatahubTask#tran_sql}
  */
  readonly tranSql?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTargetResourceDtsParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceDtsParamOutputReference | CkafkaDatahubTaskTargetResourceDtsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    group_id: cdktf.stringToTerraform(struct!.groupId),
    group_password: cdktf.stringToTerraform(struct!.groupPassword),
    group_user: cdktf.stringToTerraform(struct!.groupUser),
    ip: cdktf.stringToTerraform(struct!.ip),
    port: cdktf.numberToTerraform(struct!.port),
    resource: cdktf.stringToTerraform(struct!.resource),
    topic: cdktf.stringToTerraform(struct!.topic),
    tran_sql: cdktf.booleanToTerraform(struct!.tranSql),
  }
}


export function ckafkaDatahubTaskTargetResourceDtsParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceDtsParamOutputReference | CkafkaDatahubTaskTargetResourceDtsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    group_id: {
      value: cdktf.stringToHclTerraform(struct!.groupId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    group_password: {
      value: cdktf.stringToHclTerraform(struct!.groupPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    group_user: {
      value: cdktf.stringToHclTerraform(struct!.groupUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tran_sql: {
      value: cdktf.booleanToHclTerraform(struct!.tranSql),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceDtsParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceDtsParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._groupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupId = this._groupId;
    }
    if (this._groupPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupPassword = this._groupPassword;
    }
    if (this._groupUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.groupUser = this._groupUser;
    }
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._tranSql !== undefined) {
      hasAnyValues = true;
      internalValueResult.tranSql = this._tranSql;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceDtsParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._groupId = undefined;
      this._groupPassword = undefined;
      this._groupUser = undefined;
      this._ip = undefined;
      this._port = undefined;
      this._resource = undefined;
      this._topic = undefined;
      this._tranSql = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._groupId = value.groupId;
      this._groupPassword = value.groupPassword;
      this._groupUser = value.groupUser;
      this._ip = value.ip;
      this._port = value.port;
      this._resource = value.resource;
      this._topic = value.topic;
      this._tranSql = value.tranSql;
    }
  }

  // group_id - computed: false, optional: true, required: false
  private _groupId?: string; 
  public get groupId() {
    return this.getStringAttribute('group_id');
  }
  public set groupId(value: string) {
    this._groupId = value;
  }
  public resetGroupId() {
    this._groupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupIdInput() {
    return this._groupId;
  }

  // group_password - computed: false, optional: true, required: false
  private _groupPassword?: string; 
  public get groupPassword() {
    return this.getStringAttribute('group_password');
  }
  public set groupPassword(value: string) {
    this._groupPassword = value;
  }
  public resetGroupPassword() {
    this._groupPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupPasswordInput() {
    return this._groupPassword;
  }

  // group_user - computed: false, optional: true, required: false
  private _groupUser?: string; 
  public get groupUser() {
    return this.getStringAttribute('group_user');
  }
  public set groupUser(value: string) {
    this._groupUser = value;
  }
  public resetGroupUser() {
    this._groupUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupUserInput() {
    return this._groupUser;
  }

  // ip - computed: false, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // tran_sql - computed: false, optional: true, required: false
  private _tranSql?: boolean | cdktf.IResolvable; 
  public get tranSql() {
    return this.getBooleanAttribute('tran_sql');
  }
  public set tranSql(value: boolean | cdktf.IResolvable) {
    this._tranSql = value;
  }
  public resetTranSql() {
    this._tranSql = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tranSqlInput() {
    return this._tranSql;
  }
}
export interface CkafkaDatahubTaskTargetResourceEsParamDropCls {
  /**
  * cls log set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_log_set CkafkaDatahubTask#drop_cls_log_set}
  */
  readonly dropClsLogSet?: string;
  /**
  * Delivery account of cls.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_owneruin CkafkaDatahubTask#drop_cls_owneruin}
  */
  readonly dropClsOwneruin?: string;
  /**
  * The region where the cls is delivered.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_region CkafkaDatahubTask#drop_cls_region}
  */
  readonly dropClsRegion?: string;
  /**
  * topic of cls.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_topic_id CkafkaDatahubTask#drop_cls_topic_id}
  */
  readonly dropClsTopicId?: string;
  /**
  * Whether to deliver to cls.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message_to_cls CkafkaDatahubTask#drop_invalid_message_to_cls}
  */
  readonly dropInvalidMessageToCls?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTargetResourceEsParamDropClsToTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamDropClsOutputReference | CkafkaDatahubTaskTargetResourceEsParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    drop_cls_log_set: cdktf.stringToTerraform(struct!.dropClsLogSet),
    drop_cls_owneruin: cdktf.stringToTerraform(struct!.dropClsOwneruin),
    drop_cls_region: cdktf.stringToTerraform(struct!.dropClsRegion),
    drop_cls_topic_id: cdktf.stringToTerraform(struct!.dropClsTopicId),
    drop_invalid_message_to_cls: cdktf.booleanToTerraform(struct!.dropInvalidMessageToCls),
  }
}


export function ckafkaDatahubTaskTargetResourceEsParamDropClsToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamDropClsOutputReference | CkafkaDatahubTaskTargetResourceEsParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    drop_cls_log_set: {
      value: cdktf.stringToHclTerraform(struct!.dropClsLogSet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_owneruin: {
      value: cdktf.stringToHclTerraform(struct!.dropClsOwneruin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_region: {
      value: cdktf.stringToHclTerraform(struct!.dropClsRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_topic_id: {
      value: cdktf.stringToHclTerraform(struct!.dropClsTopicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message_to_cls: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessageToCls),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceEsParamDropClsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceEsParamDropCls | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dropClsLogSet !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsLogSet = this._dropClsLogSet;
    }
    if (this._dropClsOwneruin !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsOwneruin = this._dropClsOwneruin;
    }
    if (this._dropClsRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsRegion = this._dropClsRegion;
    }
    if (this._dropClsTopicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsTopicId = this._dropClsTopicId;
    }
    if (this._dropInvalidMessageToCls !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessageToCls = this._dropInvalidMessageToCls;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceEsParamDropCls | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dropClsLogSet = undefined;
      this._dropClsOwneruin = undefined;
      this._dropClsRegion = undefined;
      this._dropClsTopicId = undefined;
      this._dropInvalidMessageToCls = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dropClsLogSet = value.dropClsLogSet;
      this._dropClsOwneruin = value.dropClsOwneruin;
      this._dropClsRegion = value.dropClsRegion;
      this._dropClsTopicId = value.dropClsTopicId;
      this._dropInvalidMessageToCls = value.dropInvalidMessageToCls;
    }
  }

  // drop_cls_log_set - computed: false, optional: true, required: false
  private _dropClsLogSet?: string; 
  public get dropClsLogSet() {
    return this.getStringAttribute('drop_cls_log_set');
  }
  public set dropClsLogSet(value: string) {
    this._dropClsLogSet = value;
  }
  public resetDropClsLogSet() {
    this._dropClsLogSet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsLogSetInput() {
    return this._dropClsLogSet;
  }

  // drop_cls_owneruin - computed: false, optional: true, required: false
  private _dropClsOwneruin?: string; 
  public get dropClsOwneruin() {
    return this.getStringAttribute('drop_cls_owneruin');
  }
  public set dropClsOwneruin(value: string) {
    this._dropClsOwneruin = value;
  }
  public resetDropClsOwneruin() {
    this._dropClsOwneruin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsOwneruinInput() {
    return this._dropClsOwneruin;
  }

  // drop_cls_region - computed: false, optional: true, required: false
  private _dropClsRegion?: string; 
  public get dropClsRegion() {
    return this.getStringAttribute('drop_cls_region');
  }
  public set dropClsRegion(value: string) {
    this._dropClsRegion = value;
  }
  public resetDropClsRegion() {
    this._dropClsRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsRegionInput() {
    return this._dropClsRegion;
  }

  // drop_cls_topic_id - computed: false, optional: true, required: false
  private _dropClsTopicId?: string; 
  public get dropClsTopicId() {
    return this.getStringAttribute('drop_cls_topic_id');
  }
  public set dropClsTopicId(value: string) {
    this._dropClsTopicId = value;
  }
  public resetDropClsTopicId() {
    this._dropClsTopicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsTopicIdInput() {
    return this._dropClsTopicId;
  }

  // drop_invalid_message_to_cls - computed: false, optional: true, required: false
  private _dropInvalidMessageToCls?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessageToCls() {
    return this.getBooleanAttribute('drop_invalid_message_to_cls');
  }
  public set dropInvalidMessageToCls(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessageToCls = value;
  }
  public resetDropInvalidMessageToCls() {
    this._dropInvalidMessageToCls = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageToClsInput() {
    return this._dropInvalidMessageToCls;
  }
}
export interface CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappings {
  /**
  * database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * Table name, multiple tables, separated by (commas).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * Topic name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic: string;
  /**
  * Topic ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId: string;
}

export function ckafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingsToTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    table: cdktf.stringToTerraform(struct!.table),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
  }
}


export function ckafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingsToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._database = undefined;
      this._table = undefined;
      this._topic = undefined;
      this._topicId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._database = value.database;
      this._table = value.table;
      this._topic = value.topic;
      this._topicId = value.topicId;
    }
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // topic - computed: false, optional: false, required: true
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: false, required: true
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }
}

export class CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingsList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappings[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingsOutputReference {
    return new CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParam {
  /**
  * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * Enable the fault-tolerant instance and enable the dead-letter queue.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#enable_toleration CkafkaDatahubTask#enable_toleration}
  */
  readonly enableToleration?: boolean | cdktf.IResolvable;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, initial position earliest, latest position latest, time point position timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * Partition num.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#partition_num CkafkaDatahubTask#partition_num}
  */
  readonly partitionNum?: number;
  /**
  * Qps limit.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#qps_limit CkafkaDatahubTask#qps_limit}
  */
  readonly qpsLimit?: number;
  /**
  * resource id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * resource id name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource_name CkafkaDatahubTask#resource_name}
  */
  readonly resourceName?: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt: boolean | cdktf.IResolvable;
  /**
  * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * Topic name, multiple separated by,.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic?: string;
  /**
  * Topic Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
  /**
  * Distribute to multiple topics switch, the default is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_table_mapping CkafkaDatahubTask#use_table_mapping}
  */
  readonly useTableMapping?: boolean | cdktf.IResolvable;
  /**
  * Zone ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#zone_id CkafkaDatahubTask#zone_id}
  */
  readonly zoneId?: number;
  /**
  * table_mappings block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table_mappings CkafkaDatahubTask#table_mappings}
  */
  readonly tableMappings?: CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappings[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamOutputReference | CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    enable_toleration: cdktf.booleanToTerraform(struct!.enableToleration),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    partition_num: cdktf.numberToTerraform(struct!.partitionNum),
    qps_limit: cdktf.numberToTerraform(struct!.qpsLimit),
    resource: cdktf.stringToTerraform(struct!.resource),
    resource_name: cdktf.stringToTerraform(struct!.resourceName),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
    use_table_mapping: cdktf.booleanToTerraform(struct!.useTableMapping),
    zone_id: cdktf.numberToTerraform(struct!.zoneId),
    table_mappings: cdktf.listMapper(ckafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingsToTerraform, true)(struct!.tableMappings),
  }
}


export function ckafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamOutputReference | CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enable_toleration: {
      value: cdktf.booleanToHclTerraform(struct!.enableToleration),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition_num: {
      value: cdktf.numberToHclTerraform(struct!.partitionNum),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    qps_limit: {
      value: cdktf.numberToHclTerraform(struct!.qpsLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_name: {
      value: cdktf.stringToHclTerraform(struct!.resourceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_table_mapping: {
      value: cdktf.booleanToHclTerraform(struct!.useTableMapping),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    zone_id: {
      value: cdktf.numberToHclTerraform(struct!.zoneId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    table_mappings: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingsToHclTerraform, true)(struct!.tableMappings),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._enableToleration !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableToleration = this._enableToleration;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._partitionNum !== undefined) {
      hasAnyValues = true;
      internalValueResult.partitionNum = this._partitionNum;
    }
    if (this._qpsLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.qpsLimit = this._qpsLimit;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._resourceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceName = this._resourceName;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    if (this._useTableMapping !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTableMapping = this._useTableMapping;
    }
    if (this._zoneId !== undefined) {
      hasAnyValues = true;
      internalValueResult.zoneId = this._zoneId;
    }
    if (this._tableMappings?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableMappings = this._tableMappings?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._enableToleration = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._partitionNum = undefined;
      this._qpsLimit = undefined;
      this._resource = undefined;
      this._resourceName = undefined;
      this._selfBuilt = undefined;
      this._startTime = undefined;
      this._topic = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
      this._useTableMapping = undefined;
      this._zoneId = undefined;
      this._tableMappings.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._enableToleration = value.enableToleration;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._partitionNum = value.partitionNum;
      this._qpsLimit = value.qpsLimit;
      this._resource = value.resource;
      this._resourceName = value.resourceName;
      this._selfBuilt = value.selfBuilt;
      this._startTime = value.startTime;
      this._topic = value.topic;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
      this._useTableMapping = value.useTableMapping;
      this._zoneId = value.zoneId;
      this._tableMappings.internalValue = value.tableMappings;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // enable_toleration - computed: false, optional: true, required: false
  private _enableToleration?: boolean | cdktf.IResolvable; 
  public get enableToleration() {
    return this.getBooleanAttribute('enable_toleration');
  }
  public set enableToleration(value: boolean | cdktf.IResolvable) {
    this._enableToleration = value;
  }
  public resetEnableToleration() {
    this._enableToleration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableTolerationInput() {
    return this._enableToleration;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // partition_num - computed: false, optional: true, required: false
  private _partitionNum?: number; 
  public get partitionNum() {
    return this.getNumberAttribute('partition_num');
  }
  public set partitionNum(value: number) {
    this._partitionNum = value;
  }
  public resetPartitionNum() {
    this._partitionNum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionNumInput() {
    return this._partitionNum;
  }

  // qps_limit - computed: false, optional: true, required: false
  private _qpsLimit?: number; 
  public get qpsLimit() {
    return this.getNumberAttribute('qps_limit');
  }
  public set qpsLimit(value: number) {
    this._qpsLimit = value;
  }
  public resetQpsLimit() {
    this._qpsLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qpsLimitInput() {
    return this._qpsLimit;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // resource_name - computed: false, optional: true, required: false
  private _resourceName?: string; 
  public get resourceName() {
    return this.getStringAttribute('resource_name');
  }
  public set resourceName(value: string) {
    this._resourceName = value;
  }
  public resetResourceName() {
    this._resourceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceNameInput() {
    return this._resourceName;
  }

  // self_built - computed: false, optional: false, required: true
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }

  // use_table_mapping - computed: false, optional: true, required: false
  private _useTableMapping?: boolean | cdktf.IResolvable; 
  public get useTableMapping() {
    return this.getBooleanAttribute('use_table_mapping');
  }
  public set useTableMapping(value: boolean | cdktf.IResolvable) {
    this._useTableMapping = value;
  }
  public resetUseTableMapping() {
    this._useTableMapping = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTableMappingInput() {
    return this._useTableMapping;
  }

  // zone_id - computed: false, optional: true, required: false
  private _zoneId?: number; 
  public get zoneId() {
    return this.getNumberAttribute('zone_id');
  }
  public set zoneId(value: number) {
    this._zoneId = value;
  }
  public resetZoneId() {
    this._zoneId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get zoneIdInput() {
    return this._zoneId;
  }

  // table_mappings - computed: false, optional: true, required: false
  private _tableMappings = new CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappingsList(this, "table_mappings", false);
  public get tableMappings() {
    return this._tableMappings;
  }
  public putTableMappings(value: CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamTableMappings[] | cdktf.IResolvable) {
    this._tableMappings.internalValue = value;
  }
  public resetTableMappings() {
    this._tableMappings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableMappingsInput() {
    return this._tableMappings.internalValue;
  }
}
export interface CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParam {
  /**
  * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, initial position earliest, latest position latest, time point position timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * The topic name of the topic sold separately.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * TopicId.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTargetResourceEsParamDropDlqTopicParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParamOutputReference | CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    resource: cdktf.stringToTerraform(struct!.resource),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
  }
}


export function ckafkaDatahubTaskTargetResourceEsParamDropDlqTopicParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParamOutputReference | CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._resource = undefined;
      this._startTime = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._resource = value.resource;
      this._startTime = value.startTime;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic_id - computed: false, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }
}
export interface CkafkaDatahubTaskTargetResourceEsParamDropDlq {
  /**
  * dlq type, CKAFKA|TOPIC.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#dlq_type CkafkaDatahubTask#dlq_type}
  */
  readonly dlqType?: string;
  /**
  * retry times.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#max_retry_attempts CkafkaDatahubTask#max_retry_attempts}
  */
  readonly maxRetryAttempts?: number;
  /**
  * retry interval.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#retry_interval CkafkaDatahubTask#retry_interval}
  */
  readonly retryInterval?: number;
  /**
  * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
  /**
  * kafka_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#kafka_param CkafkaDatahubTask#kafka_param}
  */
  readonly kafkaParam?: CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParam;
  /**
  * topic_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_param CkafkaDatahubTask#topic_param}
  */
  readonly topicParam?: CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParam;
}

export function ckafkaDatahubTaskTargetResourceEsParamDropDlqToTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamDropDlqOutputReference | CkafkaDatahubTaskTargetResourceEsParamDropDlq): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dlq_type: cdktf.stringToTerraform(struct!.dlqType),
    max_retry_attempts: cdktf.numberToTerraform(struct!.maxRetryAttempts),
    retry_interval: cdktf.numberToTerraform(struct!.retryInterval),
    type: cdktf.stringToTerraform(struct!.type),
    kafka_param: ckafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamToTerraform(struct!.kafkaParam),
    topic_param: ckafkaDatahubTaskTargetResourceEsParamDropDlqTopicParamToTerraform(struct!.topicParam),
  }
}


export function ckafkaDatahubTaskTargetResourceEsParamDropDlqToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamDropDlqOutputReference | CkafkaDatahubTaskTargetResourceEsParamDropDlq): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dlq_type: {
      value: cdktf.stringToHclTerraform(struct!.dlqType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_retry_attempts: {
      value: cdktf.numberToHclTerraform(struct!.maxRetryAttempts),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    retry_interval: {
      value: cdktf.numberToHclTerraform(struct!.retryInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kafka_param: {
      value: ckafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamToHclTerraform(struct!.kafkaParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamList",
    },
    topic_param: {
      value: ckafkaDatahubTaskTargetResourceEsParamDropDlqTopicParamToHclTerraform(struct!.topicParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParamList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceEsParamDropDlqOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceEsParamDropDlq | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dlqType !== undefined) {
      hasAnyValues = true;
      internalValueResult.dlqType = this._dlqType;
    }
    if (this._maxRetryAttempts !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxRetryAttempts = this._maxRetryAttempts;
    }
    if (this._retryInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.retryInterval = this._retryInterval;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._kafkaParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kafkaParam = this._kafkaParam?.internalValue;
    }
    if (this._topicParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicParam = this._topicParam?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceEsParamDropDlq | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dlqType = undefined;
      this._maxRetryAttempts = undefined;
      this._retryInterval = undefined;
      this._type = undefined;
      this._kafkaParam.internalValue = undefined;
      this._topicParam.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dlqType = value.dlqType;
      this._maxRetryAttempts = value.maxRetryAttempts;
      this._retryInterval = value.retryInterval;
      this._type = value.type;
      this._kafkaParam.internalValue = value.kafkaParam;
      this._topicParam.internalValue = value.topicParam;
    }
  }

  // dlq_type - computed: false, optional: true, required: false
  private _dlqType?: string; 
  public get dlqType() {
    return this.getStringAttribute('dlq_type');
  }
  public set dlqType(value: string) {
    this._dlqType = value;
  }
  public resetDlqType() {
    this._dlqType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dlqTypeInput() {
    return this._dlqType;
  }

  // max_retry_attempts - computed: false, optional: true, required: false
  private _maxRetryAttempts?: number; 
  public get maxRetryAttempts() {
    return this.getNumberAttribute('max_retry_attempts');
  }
  public set maxRetryAttempts(value: number) {
    this._maxRetryAttempts = value;
  }
  public resetMaxRetryAttempts() {
    this._maxRetryAttempts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxRetryAttemptsInput() {
    return this._maxRetryAttempts;
  }

  // retry_interval - computed: false, optional: true, required: false
  private _retryInterval?: number; 
  public get retryInterval() {
    return this.getNumberAttribute('retry_interval');
  }
  public set retryInterval(value: number) {
    this._retryInterval = value;
  }
  public resetRetryInterval() {
    this._retryInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get retryIntervalInput() {
    return this._retryInterval;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // kafka_param - computed: false, optional: true, required: false
  private _kafkaParam = new CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParamOutputReference(this, "kafka_param");
  public get kafkaParam() {
    return this._kafkaParam;
  }
  public putKafkaParam(value: CkafkaDatahubTaskTargetResourceEsParamDropDlqKafkaParam) {
    this._kafkaParam.internalValue = value;
  }
  public resetKafkaParam() {
    this._kafkaParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kafkaParamInput() {
    return this._kafkaParam.internalValue;
  }

  // topic_param - computed: false, optional: true, required: false
  private _topicParam = new CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParamOutputReference(this, "topic_param");
  public get topicParam() {
    return this._topicParam;
  }
  public putTopicParam(value: CkafkaDatahubTaskTargetResourceEsParamDropDlqTopicParam) {
    this._topicParam.internalValue = value;
  }
  public resetTopicParam() {
    this._topicParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicParamInput() {
    return this._topicParam.internalValue;
  }
}
export interface CkafkaDatahubTaskTargetResourceEsParam {
  /**
  * key for data in non-json format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#content_key CkafkaDatahubTask#content_key}
  */
  readonly contentKey?: string;
  /**
  * When the message dumped to ES is the binlog of Database, if you need to synchronize database operations, that is, fill in the primary key of the database table when adding, deleting, and modifying operations to ES.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database_primary_key CkafkaDatahubTask#database_primary_key}
  */
  readonly databasePrimaryKey?: string;
  /**
  * Es date suffix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#date_format CkafkaDatahubTask#date_format}
  */
  readonly dateFormat?: string;
  /**
  * The field name of the document ID value dumped into Es.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#document_id_field CkafkaDatahubTask#document_id_field}
  */
  readonly documentIdField?: string;
  /**
  * Whether Es discards messages in non-json format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_json_message CkafkaDatahubTask#drop_invalid_json_message}
  */
  readonly dropInvalidJsonMessage?: boolean | cdktf.IResolvable;
  /**
  * Whether Es discards the message of parsing failure.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message CkafkaDatahubTask#drop_invalid_message}
  */
  readonly dropInvalidMessage?: boolean | cdktf.IResolvable;
  /**
  * Es index name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#index CkafkaDatahubTask#index}
  */
  readonly index?: string;
  /**
  * Es custom index name type, STRING, JSONPATH, the default is STRING.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#index_type CkafkaDatahubTask#index_type}
  */
  readonly indexType?: string;
  /**
  * Es Password.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#password CkafkaDatahubTask#password}
  */
  readonly password?: string;
  /**
  * Es connection port.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#port CkafkaDatahubTask#port}
  */
  readonly port?: number;
  /**
  * Resource.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt?: boolean | cdktf.IResolvable;
  /**
  * instance vip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#service_vip CkafkaDatahubTask#service_vip}
  */
  readonly serviceVip?: string;
  /**
  * instance vpc id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#uniq_vpc_id CkafkaDatahubTask#uniq_vpc_id}
  */
  readonly uniqVpcId?: string;
  /**
  * Es UserName.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#user_name CkafkaDatahubTask#user_name}
  */
  readonly userName?: string;
  /**
  * drop_cls block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls CkafkaDatahubTask#drop_cls}
  */
  readonly dropCls?: CkafkaDatahubTaskTargetResourceEsParamDropCls;
  /**
  * drop_dlq block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_dlq CkafkaDatahubTask#drop_dlq}
  */
  readonly dropDlq?: CkafkaDatahubTaskTargetResourceEsParamDropDlq;
}

export function ckafkaDatahubTaskTargetResourceEsParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamOutputReference | CkafkaDatahubTaskTargetResourceEsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    content_key: cdktf.stringToTerraform(struct!.contentKey),
    database_primary_key: cdktf.stringToTerraform(struct!.databasePrimaryKey),
    date_format: cdktf.stringToTerraform(struct!.dateFormat),
    document_id_field: cdktf.stringToTerraform(struct!.documentIdField),
    drop_invalid_json_message: cdktf.booleanToTerraform(struct!.dropInvalidJsonMessage),
    drop_invalid_message: cdktf.booleanToTerraform(struct!.dropInvalidMessage),
    index: cdktf.stringToTerraform(struct!.index),
    index_type: cdktf.stringToTerraform(struct!.indexType),
    password: cdktf.stringToTerraform(struct!.password),
    port: cdktf.numberToTerraform(struct!.port),
    resource: cdktf.stringToTerraform(struct!.resource),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    service_vip: cdktf.stringToTerraform(struct!.serviceVip),
    uniq_vpc_id: cdktf.stringToTerraform(struct!.uniqVpcId),
    user_name: cdktf.stringToTerraform(struct!.userName),
    drop_cls: ckafkaDatahubTaskTargetResourceEsParamDropClsToTerraform(struct!.dropCls),
    drop_dlq: ckafkaDatahubTaskTargetResourceEsParamDropDlqToTerraform(struct!.dropDlq),
  }
}


export function ckafkaDatahubTaskTargetResourceEsParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceEsParamOutputReference | CkafkaDatahubTaskTargetResourceEsParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    content_key: {
      value: cdktf.stringToHclTerraform(struct!.contentKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    database_primary_key: {
      value: cdktf.stringToHclTerraform(struct!.databasePrimaryKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    date_format: {
      value: cdktf.stringToHclTerraform(struct!.dateFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    document_id_field: {
      value: cdktf.stringToHclTerraform(struct!.documentIdField),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_json_message: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidJsonMessage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    drop_invalid_message: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    index: {
      value: cdktf.stringToHclTerraform(struct!.index),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    index_type: {
      value: cdktf.stringToHclTerraform(struct!.indexType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    service_vip: {
      value: cdktf.stringToHclTerraform(struct!.serviceVip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uniq_vpc_id: {
      value: cdktf.stringToHclTerraform(struct!.uniqVpcId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_name: {
      value: cdktf.stringToHclTerraform(struct!.userName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls: {
      value: ckafkaDatahubTaskTargetResourceEsParamDropClsToHclTerraform(struct!.dropCls),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceEsParamDropClsList",
    },
    drop_dlq: {
      value: ckafkaDatahubTaskTargetResourceEsParamDropDlqToHclTerraform(struct!.dropDlq),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceEsParamDropDlqList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceEsParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceEsParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._contentKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.contentKey = this._contentKey;
    }
    if (this._databasePrimaryKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.databasePrimaryKey = this._databasePrimaryKey;
    }
    if (this._dateFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.dateFormat = this._dateFormat;
    }
    if (this._documentIdField !== undefined) {
      hasAnyValues = true;
      internalValueResult.documentIdField = this._documentIdField;
    }
    if (this._dropInvalidJsonMessage !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidJsonMessage = this._dropInvalidJsonMessage;
    }
    if (this._dropInvalidMessage !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessage = this._dropInvalidMessage;
    }
    if (this._index !== undefined) {
      hasAnyValues = true;
      internalValueResult.index = this._index;
    }
    if (this._indexType !== undefined) {
      hasAnyValues = true;
      internalValueResult.indexType = this._indexType;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._serviceVip !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceVip = this._serviceVip;
    }
    if (this._uniqVpcId !== undefined) {
      hasAnyValues = true;
      internalValueResult.uniqVpcId = this._uniqVpcId;
    }
    if (this._userName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userName = this._userName;
    }
    if (this._dropCls?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropCls = this._dropCls?.internalValue;
    }
    if (this._dropDlq?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropDlq = this._dropDlq?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceEsParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._contentKey = undefined;
      this._databasePrimaryKey = undefined;
      this._dateFormat = undefined;
      this._documentIdField = undefined;
      this._dropInvalidJsonMessage = undefined;
      this._dropInvalidMessage = undefined;
      this._index = undefined;
      this._indexType = undefined;
      this._password = undefined;
      this._port = undefined;
      this._resource = undefined;
      this._selfBuilt = undefined;
      this._serviceVip = undefined;
      this._uniqVpcId = undefined;
      this._userName = undefined;
      this._dropCls.internalValue = undefined;
      this._dropDlq.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._contentKey = value.contentKey;
      this._databasePrimaryKey = value.databasePrimaryKey;
      this._dateFormat = value.dateFormat;
      this._documentIdField = value.documentIdField;
      this._dropInvalidJsonMessage = value.dropInvalidJsonMessage;
      this._dropInvalidMessage = value.dropInvalidMessage;
      this._index = value.index;
      this._indexType = value.indexType;
      this._password = value.password;
      this._port = value.port;
      this._resource = value.resource;
      this._selfBuilt = value.selfBuilt;
      this._serviceVip = value.serviceVip;
      this._uniqVpcId = value.uniqVpcId;
      this._userName = value.userName;
      this._dropCls.internalValue = value.dropCls;
      this._dropDlq.internalValue = value.dropDlq;
    }
  }

  // content_key - computed: false, optional: true, required: false
  private _contentKey?: string; 
  public get contentKey() {
    return this.getStringAttribute('content_key');
  }
  public set contentKey(value: string) {
    this._contentKey = value;
  }
  public resetContentKey() {
    this._contentKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contentKeyInput() {
    return this._contentKey;
  }

  // database_primary_key - computed: false, optional: true, required: false
  private _databasePrimaryKey?: string; 
  public get databasePrimaryKey() {
    return this.getStringAttribute('database_primary_key');
  }
  public set databasePrimaryKey(value: string) {
    this._databasePrimaryKey = value;
  }
  public resetDatabasePrimaryKey() {
    this._databasePrimaryKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get databasePrimaryKeyInput() {
    return this._databasePrimaryKey;
  }

  // date_format - computed: false, optional: true, required: false
  private _dateFormat?: string; 
  public get dateFormat() {
    return this.getStringAttribute('date_format');
  }
  public set dateFormat(value: string) {
    this._dateFormat = value;
  }
  public resetDateFormat() {
    this._dateFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dateFormatInput() {
    return this._dateFormat;
  }

  // document_id_field - computed: false, optional: true, required: false
  private _documentIdField?: string; 
  public get documentIdField() {
    return this.getStringAttribute('document_id_field');
  }
  public set documentIdField(value: string) {
    this._documentIdField = value;
  }
  public resetDocumentIdField() {
    this._documentIdField = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get documentIdFieldInput() {
    return this._documentIdField;
  }

  // drop_invalid_json_message - computed: false, optional: true, required: false
  private _dropInvalidJsonMessage?: boolean | cdktf.IResolvable; 
  public get dropInvalidJsonMessage() {
    return this.getBooleanAttribute('drop_invalid_json_message');
  }
  public set dropInvalidJsonMessage(value: boolean | cdktf.IResolvable) {
    this._dropInvalidJsonMessage = value;
  }
  public resetDropInvalidJsonMessage() {
    this._dropInvalidJsonMessage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidJsonMessageInput() {
    return this._dropInvalidJsonMessage;
  }

  // drop_invalid_message - computed: false, optional: true, required: false
  private _dropInvalidMessage?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessage() {
    return this.getBooleanAttribute('drop_invalid_message');
  }
  public set dropInvalidMessage(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessage = value;
  }
  public resetDropInvalidMessage() {
    this._dropInvalidMessage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageInput() {
    return this._dropInvalidMessage;
  }

  // index - computed: false, optional: true, required: false
  private _index?: string; 
  public get index() {
    return this.getStringAttribute('index');
  }
  public set index(value: string) {
    this._index = value;
  }
  public resetIndex() {
    this._index = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get indexInput() {
    return this._index;
  }

  // index_type - computed: false, optional: true, required: false
  private _indexType?: string; 
  public get indexType() {
    return this.getStringAttribute('index_type');
  }
  public set indexType(value: string) {
    this._indexType = value;
  }
  public resetIndexType() {
    this._indexType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get indexTypeInput() {
    return this._indexType;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // self_built - computed: false, optional: true, required: false
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  public resetSelfBuilt() {
    this._selfBuilt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // service_vip - computed: false, optional: true, required: false
  private _serviceVip?: string; 
  public get serviceVip() {
    return this.getStringAttribute('service_vip');
  }
  public set serviceVip(value: string) {
    this._serviceVip = value;
  }
  public resetServiceVip() {
    this._serviceVip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceVipInput() {
    return this._serviceVip;
  }

  // uniq_vpc_id - computed: false, optional: true, required: false
  private _uniqVpcId?: string; 
  public get uniqVpcId() {
    return this.getStringAttribute('uniq_vpc_id');
  }
  public set uniqVpcId(value: string) {
    this._uniqVpcId = value;
  }
  public resetUniqVpcId() {
    this._uniqVpcId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uniqVpcIdInput() {
    return this._uniqVpcId;
  }

  // user_name - computed: false, optional: true, required: false
  private _userName?: string; 
  public get userName() {
    return this.getStringAttribute('user_name');
  }
  public set userName(value: string) {
    this._userName = value;
  }
  public resetUserName() {
    this._userName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userNameInput() {
    return this._userName;
  }

  // drop_cls - computed: false, optional: true, required: false
  private _dropCls = new CkafkaDatahubTaskTargetResourceEsParamDropClsOutputReference(this, "drop_cls");
  public get dropCls() {
    return this._dropCls;
  }
  public putDropCls(value: CkafkaDatahubTaskTargetResourceEsParamDropCls) {
    this._dropCls.internalValue = value;
  }
  public resetDropCls() {
    this._dropCls.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsInput() {
    return this._dropCls.internalValue;
  }

  // drop_dlq - computed: false, optional: true, required: false
  private _dropDlq = new CkafkaDatahubTaskTargetResourceEsParamDropDlqOutputReference(this, "drop_dlq");
  public get dropDlq() {
    return this._dropDlq;
  }
  public putDropDlq(value: CkafkaDatahubTaskTargetResourceEsParamDropDlq) {
    this._dropDlq.internalValue = value;
  }
  public resetDropDlq() {
    this._dropDlq.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropDlqInput() {
    return this._dropDlq.internalValue;
  }
}
export interface CkafkaDatahubTaskTargetResourceEventBusParam {
  /**
  * SCF function name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#function_name CkafkaDatahubTask#function_name}
  */
  readonly functionName?: string;
  /**
  * SCF namespace.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#namespace CkafkaDatahubTask#namespace}
  */
  readonly namespace?: string;
  /**
  * SCF version and alias.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#qualifier CkafkaDatahubTask#qualifier}
  */
  readonly qualifier?: string;
  /**
  * instance id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt: boolean | cdktf.IResolvable;
  /**
  * resource type. EB_COS/EB_ES/EB_CLS.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
}

export function ckafkaDatahubTaskTargetResourceEventBusParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceEventBusParamOutputReference | CkafkaDatahubTaskTargetResourceEventBusParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    function_name: cdktf.stringToTerraform(struct!.functionName),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    qualifier: cdktf.stringToTerraform(struct!.qualifier),
    resource: cdktf.stringToTerraform(struct!.resource),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function ckafkaDatahubTaskTargetResourceEventBusParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceEventBusParamOutputReference | CkafkaDatahubTaskTargetResourceEventBusParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    function_name: {
      value: cdktf.stringToHclTerraform(struct!.functionName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    qualifier: {
      value: cdktf.stringToHclTerraform(struct!.qualifier),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceEventBusParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceEventBusParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._functionName !== undefined) {
      hasAnyValues = true;
      internalValueResult.functionName = this._functionName;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._qualifier !== undefined) {
      hasAnyValues = true;
      internalValueResult.qualifier = this._qualifier;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceEventBusParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._functionName = undefined;
      this._namespace = undefined;
      this._qualifier = undefined;
      this._resource = undefined;
      this._selfBuilt = undefined;
      this._type = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._functionName = value.functionName;
      this._namespace = value.namespace;
      this._qualifier = value.qualifier;
      this._resource = value.resource;
      this._selfBuilt = value.selfBuilt;
      this._type = value.type;
    }
  }

  // function_name - computed: false, optional: true, required: false
  private _functionName?: string; 
  public get functionName() {
    return this.getStringAttribute('function_name');
  }
  public set functionName(value: string) {
    this._functionName = value;
  }
  public resetFunctionName() {
    this._functionName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get functionNameInput() {
    return this._functionName;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // qualifier - computed: false, optional: true, required: false
  private _qualifier?: string; 
  public get qualifier() {
    return this.getStringAttribute('qualifier');
  }
  public set qualifier(value: string) {
    this._qualifier = value;
  }
  public resetQualifier() {
    this._qualifier = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qualifierInput() {
    return this._qualifier;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // self_built - computed: false, optional: false, required: true
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface CkafkaDatahubTaskTargetResourceKafkaParamTableMappings {
  /**
  * database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * table name,use, to separate.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * Topic name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic: string;
  /**
  * Topic ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId: string;
}

export function ckafkaDatahubTaskTargetResourceKafkaParamTableMappingsToTerraform(struct?: CkafkaDatahubTaskTargetResourceKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    table: cdktf.stringToTerraform(struct!.table),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
  }
}


export function ckafkaDatahubTaskTargetResourceKafkaParamTableMappingsToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceKafkaParamTableMappingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceKafkaParamTableMappings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceKafkaParamTableMappings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._database = undefined;
      this._table = undefined;
      this._topic = undefined;
      this._topicId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._database = value.database;
      this._table = value.table;
      this._topic = value.topic;
      this._topicId = value.topicId;
    }
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // topic - computed: false, optional: false, required: true
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: false, required: true
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }
}

export class CkafkaDatahubTaskTargetResourceKafkaParamTableMappingsList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTargetResourceKafkaParamTableMappings[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTargetResourceKafkaParamTableMappingsOutputReference {
    return new CkafkaDatahubTaskTargetResourceKafkaParamTableMappingsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTargetResourceKafkaParam {
  /**
  * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * enable dead letter queue.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#enable_toleration CkafkaDatahubTask#enable_toleration}
  */
  readonly enableToleration?: boolean | cdktf.IResolvable;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, from beginning:earliest, from latest:latest, from specific time:timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * the partition num of the topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#partition_num CkafkaDatahubTask#partition_num}
  */
  readonly partitionNum?: number;
  /**
  * Qps(query per seconds) limit.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#qps_limit CkafkaDatahubTask#qps_limit}
  */
  readonly qpsLimit?: number;
  /**
  * instance resource.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * instance name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource_name CkafkaDatahubTask#resource_name}
  */
  readonly resourceName?: string;
  /**
  * whether the cluster is built by yourself instead of cloud product.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt: boolean | cdktf.IResolvable;
  /**
  * when Offset type timestamp is required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * Topic name, use `,` when more than 1 topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic?: string;
  /**
  * Topic id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * Does the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
  /**
  * whether to use multi table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_table_mapping CkafkaDatahubTask#use_table_mapping}
  */
  readonly useTableMapping?: boolean | cdktf.IResolvable;
  /**
  * Zone ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#zone_id CkafkaDatahubTask#zone_id}
  */
  readonly zoneId?: number;
  /**
  * table_mappings block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table_mappings CkafkaDatahubTask#table_mappings}
  */
  readonly tableMappings?: CkafkaDatahubTaskTargetResourceKafkaParamTableMappings[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTargetResourceKafkaParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceKafkaParamOutputReference | CkafkaDatahubTaskTargetResourceKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    enable_toleration: cdktf.booleanToTerraform(struct!.enableToleration),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    partition_num: cdktf.numberToTerraform(struct!.partitionNum),
    qps_limit: cdktf.numberToTerraform(struct!.qpsLimit),
    resource: cdktf.stringToTerraform(struct!.resource),
    resource_name: cdktf.stringToTerraform(struct!.resourceName),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
    use_table_mapping: cdktf.booleanToTerraform(struct!.useTableMapping),
    zone_id: cdktf.numberToTerraform(struct!.zoneId),
    table_mappings: cdktf.listMapper(ckafkaDatahubTaskTargetResourceKafkaParamTableMappingsToTerraform, true)(struct!.tableMappings),
  }
}


export function ckafkaDatahubTaskTargetResourceKafkaParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceKafkaParamOutputReference | CkafkaDatahubTaskTargetResourceKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enable_toleration: {
      value: cdktf.booleanToHclTerraform(struct!.enableToleration),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition_num: {
      value: cdktf.numberToHclTerraform(struct!.partitionNum),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    qps_limit: {
      value: cdktf.numberToHclTerraform(struct!.qpsLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_name: {
      value: cdktf.stringToHclTerraform(struct!.resourceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_table_mapping: {
      value: cdktf.booleanToHclTerraform(struct!.useTableMapping),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    zone_id: {
      value: cdktf.numberToHclTerraform(struct!.zoneId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    table_mappings: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTargetResourceKafkaParamTableMappingsToHclTerraform, true)(struct!.tableMappings),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceKafkaParamTableMappingsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceKafkaParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceKafkaParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._enableToleration !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableToleration = this._enableToleration;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._partitionNum !== undefined) {
      hasAnyValues = true;
      internalValueResult.partitionNum = this._partitionNum;
    }
    if (this._qpsLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.qpsLimit = this._qpsLimit;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._resourceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceName = this._resourceName;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    if (this._useTableMapping !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTableMapping = this._useTableMapping;
    }
    if (this._zoneId !== undefined) {
      hasAnyValues = true;
      internalValueResult.zoneId = this._zoneId;
    }
    if (this._tableMappings?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableMappings = this._tableMappings?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceKafkaParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._enableToleration = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._partitionNum = undefined;
      this._qpsLimit = undefined;
      this._resource = undefined;
      this._resourceName = undefined;
      this._selfBuilt = undefined;
      this._startTime = undefined;
      this._topic = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
      this._useTableMapping = undefined;
      this._zoneId = undefined;
      this._tableMappings.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._enableToleration = value.enableToleration;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._partitionNum = value.partitionNum;
      this._qpsLimit = value.qpsLimit;
      this._resource = value.resource;
      this._resourceName = value.resourceName;
      this._selfBuilt = value.selfBuilt;
      this._startTime = value.startTime;
      this._topic = value.topic;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
      this._useTableMapping = value.useTableMapping;
      this._zoneId = value.zoneId;
      this._tableMappings.internalValue = value.tableMappings;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // enable_toleration - computed: false, optional: true, required: false
  private _enableToleration?: boolean | cdktf.IResolvable; 
  public get enableToleration() {
    return this.getBooleanAttribute('enable_toleration');
  }
  public set enableToleration(value: boolean | cdktf.IResolvable) {
    this._enableToleration = value;
  }
  public resetEnableToleration() {
    this._enableToleration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableTolerationInput() {
    return this._enableToleration;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // partition_num - computed: false, optional: true, required: false
  private _partitionNum?: number; 
  public get partitionNum() {
    return this.getNumberAttribute('partition_num');
  }
  public set partitionNum(value: number) {
    this._partitionNum = value;
  }
  public resetPartitionNum() {
    this._partitionNum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionNumInput() {
    return this._partitionNum;
  }

  // qps_limit - computed: false, optional: true, required: false
  private _qpsLimit?: number; 
  public get qpsLimit() {
    return this.getNumberAttribute('qps_limit');
  }
  public set qpsLimit(value: number) {
    this._qpsLimit = value;
  }
  public resetQpsLimit() {
    this._qpsLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qpsLimitInput() {
    return this._qpsLimit;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // resource_name - computed: false, optional: true, required: false
  private _resourceName?: string; 
  public get resourceName() {
    return this.getStringAttribute('resource_name');
  }
  public set resourceName(value: string) {
    this._resourceName = value;
  }
  public resetResourceName() {
    this._resourceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceNameInput() {
    return this._resourceName;
  }

  // self_built - computed: false, optional: false, required: true
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }

  // use_table_mapping - computed: false, optional: true, required: false
  private _useTableMapping?: boolean | cdktf.IResolvable; 
  public get useTableMapping() {
    return this.getBooleanAttribute('use_table_mapping');
  }
  public set useTableMapping(value: boolean | cdktf.IResolvable) {
    this._useTableMapping = value;
  }
  public resetUseTableMapping() {
    this._useTableMapping = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTableMappingInput() {
    return this._useTableMapping;
  }

  // zone_id - computed: false, optional: true, required: false
  private _zoneId?: number; 
  public get zoneId() {
    return this.getNumberAttribute('zone_id');
  }
  public set zoneId(value: number) {
    this._zoneId = value;
  }
  public resetZoneId() {
    this._zoneId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get zoneIdInput() {
    return this._zoneId;
  }

  // table_mappings - computed: false, optional: true, required: false
  private _tableMappings = new CkafkaDatahubTaskTargetResourceKafkaParamTableMappingsList(this, "table_mappings", false);
  public get tableMappings() {
    return this._tableMappings;
  }
  public putTableMappings(value: CkafkaDatahubTaskTargetResourceKafkaParamTableMappings[] | cdktf.IResolvable) {
    this._tableMappings.internalValue = value;
  }
  public resetTableMappings() {
    this._tableMappings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableMappingsInput() {
    return this._tableMappings.internalValue;
  }
}
export interface CkafkaDatahubTaskTargetResourceMariaDbParam {
  /**
  * MariaDB database name, * for all database.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#include_content_changes CkafkaDatahubTask#include_content_changes}
  */
  readonly includeContentChanges?: string;
  /**
  * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#include_query CkafkaDatahubTask#include_query}
  */
  readonly includeQuery?: boolean | cdktf.IResolvable;
  /**
  * When the Table input is a prefix, the value of this item is true, otherwise it is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#is_table_prefix CkafkaDatahubTask#is_table_prefix}
  */
  readonly isTablePrefix?: boolean | cdktf.IResolvable;
  /**
  * Format  library 1. table 1: field 1, field 2; library 2. table 2: field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#key_columns CkafkaDatahubTask#key_columns}
  */
  readonly keyColumns?: string;
  /**
  * output format, DEFAULT, CANAL_1, CANAL_2.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#output_format CkafkaDatahubTask#output_format}
  */
  readonly outputFormat?: string;
  /**
  * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#record_with_schema CkafkaDatahubTask#record_with_schema}
  */
  readonly recordWithSchema?: boolean | cdktf.IResolvable;
  /**
  * MariaDB connection Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * schema_only|initial, default initial.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#snapshot_mode CkafkaDatahubTask#snapshot_mode}
  */
  readonly snapshotMode?: string;
  /**
  * MariaDB db name, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
}

export function ckafkaDatahubTaskTargetResourceMariaDbParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceMariaDbParamOutputReference | CkafkaDatahubTaskTargetResourceMariaDbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    include_content_changes: cdktf.stringToTerraform(struct!.includeContentChanges),
    include_query: cdktf.booleanToTerraform(struct!.includeQuery),
    is_table_prefix: cdktf.booleanToTerraform(struct!.isTablePrefix),
    key_columns: cdktf.stringToTerraform(struct!.keyColumns),
    output_format: cdktf.stringToTerraform(struct!.outputFormat),
    record_with_schema: cdktf.booleanToTerraform(struct!.recordWithSchema),
    resource: cdktf.stringToTerraform(struct!.resource),
    snapshot_mode: cdktf.stringToTerraform(struct!.snapshotMode),
    table: cdktf.stringToTerraform(struct!.table),
  }
}


export function ckafkaDatahubTaskTargetResourceMariaDbParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceMariaDbParamOutputReference | CkafkaDatahubTaskTargetResourceMariaDbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    include_content_changes: {
      value: cdktf.stringToHclTerraform(struct!.includeContentChanges),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    include_query: {
      value: cdktf.booleanToHclTerraform(struct!.includeQuery),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_table_prefix: {
      value: cdktf.booleanToHclTerraform(struct!.isTablePrefix),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    key_columns: {
      value: cdktf.stringToHclTerraform(struct!.keyColumns),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    output_format: {
      value: cdktf.stringToHclTerraform(struct!.outputFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    record_with_schema: {
      value: cdktf.booleanToHclTerraform(struct!.recordWithSchema),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snapshot_mode: {
      value: cdktf.stringToHclTerraform(struct!.snapshotMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceMariaDbParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceMariaDbParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._includeContentChanges !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeContentChanges = this._includeContentChanges;
    }
    if (this._includeQuery !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeQuery = this._includeQuery;
    }
    if (this._isTablePrefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.isTablePrefix = this._isTablePrefix;
    }
    if (this._keyColumns !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyColumns = this._keyColumns;
    }
    if (this._outputFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.outputFormat = this._outputFormat;
    }
    if (this._recordWithSchema !== undefined) {
      hasAnyValues = true;
      internalValueResult.recordWithSchema = this._recordWithSchema;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._snapshotMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.snapshotMode = this._snapshotMode;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceMariaDbParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._database = undefined;
      this._includeContentChanges = undefined;
      this._includeQuery = undefined;
      this._isTablePrefix = undefined;
      this._keyColumns = undefined;
      this._outputFormat = undefined;
      this._recordWithSchema = undefined;
      this._resource = undefined;
      this._snapshotMode = undefined;
      this._table = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._database = value.database;
      this._includeContentChanges = value.includeContentChanges;
      this._includeQuery = value.includeQuery;
      this._isTablePrefix = value.isTablePrefix;
      this._keyColumns = value.keyColumns;
      this._outputFormat = value.outputFormat;
      this._recordWithSchema = value.recordWithSchema;
      this._resource = value.resource;
      this._snapshotMode = value.snapshotMode;
      this._table = value.table;
    }
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // include_content_changes - computed: false, optional: true, required: false
  private _includeContentChanges?: string; 
  public get includeContentChanges() {
    return this.getStringAttribute('include_content_changes');
  }
  public set includeContentChanges(value: string) {
    this._includeContentChanges = value;
  }
  public resetIncludeContentChanges() {
    this._includeContentChanges = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeContentChangesInput() {
    return this._includeContentChanges;
  }

  // include_query - computed: false, optional: true, required: false
  private _includeQuery?: boolean | cdktf.IResolvable; 
  public get includeQuery() {
    return this.getBooleanAttribute('include_query');
  }
  public set includeQuery(value: boolean | cdktf.IResolvable) {
    this._includeQuery = value;
  }
  public resetIncludeQuery() {
    this._includeQuery = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeQueryInput() {
    return this._includeQuery;
  }

  // is_table_prefix - computed: false, optional: true, required: false
  private _isTablePrefix?: boolean | cdktf.IResolvable; 
  public get isTablePrefix() {
    return this.getBooleanAttribute('is_table_prefix');
  }
  public set isTablePrefix(value: boolean | cdktf.IResolvable) {
    this._isTablePrefix = value;
  }
  public resetIsTablePrefix() {
    this._isTablePrefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isTablePrefixInput() {
    return this._isTablePrefix;
  }

  // key_columns - computed: false, optional: true, required: false
  private _keyColumns?: string; 
  public get keyColumns() {
    return this.getStringAttribute('key_columns');
  }
  public set keyColumns(value: string) {
    this._keyColumns = value;
  }
  public resetKeyColumns() {
    this._keyColumns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyColumnsInput() {
    return this._keyColumns;
  }

  // output_format - computed: false, optional: true, required: false
  private _outputFormat?: string; 
  public get outputFormat() {
    return this.getStringAttribute('output_format');
  }
  public set outputFormat(value: string) {
    this._outputFormat = value;
  }
  public resetOutputFormat() {
    this._outputFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get outputFormatInput() {
    return this._outputFormat;
  }

  // record_with_schema - computed: false, optional: true, required: false
  private _recordWithSchema?: boolean | cdktf.IResolvable; 
  public get recordWithSchema() {
    return this.getBooleanAttribute('record_with_schema');
  }
  public set recordWithSchema(value: boolean | cdktf.IResolvable) {
    this._recordWithSchema = value;
  }
  public resetRecordWithSchema() {
    this._recordWithSchema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recordWithSchemaInput() {
    return this._recordWithSchema;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // snapshot_mode - computed: false, optional: true, required: false
  private _snapshotMode?: string; 
  public get snapshotMode() {
    return this.getStringAttribute('snapshot_mode');
  }
  public set snapshotMode(value: string) {
    this._snapshotMode = value;
  }
  public resetSnapshotMode() {
    this._snapshotMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snapshotModeInput() {
    return this._snapshotMode;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }
}
export interface CkafkaDatahubTaskTargetResourceMongoDbParam {
  /**
  * MongoDB collection.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#collection CkafkaDatahubTask#collection}
  */
  readonly collection: string;
  /**
  * Whether to copy the stock data, the default parameter is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#copy_existing CkafkaDatahubTask#copy_existing}
  */
  readonly copyExisting: boolean | cdktf.IResolvable;
  /**
  * MongoDB database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * Mongo DB connection ip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ip CkafkaDatahubTask#ip}
  */
  readonly ip?: string;
  /**
  * Listening event type, if it is empty, it means select all. Values include insert, update, replace, delete, invalidate, drop, dropdatabase, rename, used between multiple types, separated by commas.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#listening_event CkafkaDatahubTask#listening_event}
  */
  readonly listeningEvent?: string;
  /**
  * MongoDB database password.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#password CkafkaDatahubTask#password}
  */
  readonly password?: string;
  /**
  * aggregation pipeline.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#pipeline CkafkaDatahubTask#pipeline}
  */
  readonly pipeline?: string;
  /**
  * MongoDB connection port.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#port CkafkaDatahubTask#port}
  */
  readonly port?: number;
  /**
  * Master-slave priority, default master node.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#read_preference CkafkaDatahubTask#read_preference}
  */
  readonly readPreference?: string;
  /**
  * resource id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt?: boolean | cdktf.IResolvable;
  /**
  * MongoDB database user name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#user_name CkafkaDatahubTask#user_name}
  */
  readonly userName?: string;
}

export function ckafkaDatahubTaskTargetResourceMongoDbParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceMongoDbParamOutputReference | CkafkaDatahubTaskTargetResourceMongoDbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collection: cdktf.stringToTerraform(struct!.collection),
    copy_existing: cdktf.booleanToTerraform(struct!.copyExisting),
    database: cdktf.stringToTerraform(struct!.database),
    ip: cdktf.stringToTerraform(struct!.ip),
    listening_event: cdktf.stringToTerraform(struct!.listeningEvent),
    password: cdktf.stringToTerraform(struct!.password),
    pipeline: cdktf.stringToTerraform(struct!.pipeline),
    port: cdktf.numberToTerraform(struct!.port),
    read_preference: cdktf.stringToTerraform(struct!.readPreference),
    resource: cdktf.stringToTerraform(struct!.resource),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    user_name: cdktf.stringToTerraform(struct!.userName),
  }
}


export function ckafkaDatahubTaskTargetResourceMongoDbParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceMongoDbParamOutputReference | CkafkaDatahubTaskTargetResourceMongoDbParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collection: {
      value: cdktf.stringToHclTerraform(struct!.collection),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    copy_existing: {
      value: cdktf.booleanToHclTerraform(struct!.copyExisting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    listening_event: {
      value: cdktf.stringToHclTerraform(struct!.listeningEvent),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pipeline: {
      value: cdktf.stringToHclTerraform(struct!.pipeline),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    read_preference: {
      value: cdktf.stringToHclTerraform(struct!.readPreference),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    user_name: {
      value: cdktf.stringToHclTerraform(struct!.userName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceMongoDbParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceMongoDbParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collection !== undefined) {
      hasAnyValues = true;
      internalValueResult.collection = this._collection;
    }
    if (this._copyExisting !== undefined) {
      hasAnyValues = true;
      internalValueResult.copyExisting = this._copyExisting;
    }
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    if (this._listeningEvent !== undefined) {
      hasAnyValues = true;
      internalValueResult.listeningEvent = this._listeningEvent;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._pipeline !== undefined) {
      hasAnyValues = true;
      internalValueResult.pipeline = this._pipeline;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._readPreference !== undefined) {
      hasAnyValues = true;
      internalValueResult.readPreference = this._readPreference;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._userName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userName = this._userName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceMongoDbParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._collection = undefined;
      this._copyExisting = undefined;
      this._database = undefined;
      this._ip = undefined;
      this._listeningEvent = undefined;
      this._password = undefined;
      this._pipeline = undefined;
      this._port = undefined;
      this._readPreference = undefined;
      this._resource = undefined;
      this._selfBuilt = undefined;
      this._userName = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._collection = value.collection;
      this._copyExisting = value.copyExisting;
      this._database = value.database;
      this._ip = value.ip;
      this._listeningEvent = value.listeningEvent;
      this._password = value.password;
      this._pipeline = value.pipeline;
      this._port = value.port;
      this._readPreference = value.readPreference;
      this._resource = value.resource;
      this._selfBuilt = value.selfBuilt;
      this._userName = value.userName;
    }
  }

  // collection - computed: false, optional: false, required: true
  private _collection?: string; 
  public get collection() {
    return this.getStringAttribute('collection');
  }
  public set collection(value: string) {
    this._collection = value;
  }
  // Temporarily expose input value. Use with caution.
  public get collectionInput() {
    return this._collection;
  }

  // copy_existing - computed: false, optional: false, required: true
  private _copyExisting?: boolean | cdktf.IResolvable; 
  public get copyExisting() {
    return this.getBooleanAttribute('copy_existing');
  }
  public set copyExisting(value: boolean | cdktf.IResolvable) {
    this._copyExisting = value;
  }
  // Temporarily expose input value. Use with caution.
  public get copyExistingInput() {
    return this._copyExisting;
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // ip - computed: false, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }

  // listening_event - computed: false, optional: true, required: false
  private _listeningEvent?: string; 
  public get listeningEvent() {
    return this.getStringAttribute('listening_event');
  }
  public set listeningEvent(value: string) {
    this._listeningEvent = value;
  }
  public resetListeningEvent() {
    this._listeningEvent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get listeningEventInput() {
    return this._listeningEvent;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // pipeline - computed: false, optional: true, required: false
  private _pipeline?: string; 
  public get pipeline() {
    return this.getStringAttribute('pipeline');
  }
  public set pipeline(value: string) {
    this._pipeline = value;
  }
  public resetPipeline() {
    this._pipeline = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pipelineInput() {
    return this._pipeline;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // read_preference - computed: false, optional: true, required: false
  private _readPreference?: string; 
  public get readPreference() {
    return this.getStringAttribute('read_preference');
  }
  public set readPreference(value: string) {
    this._readPreference = value;
  }
  public resetReadPreference() {
    this._readPreference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readPreferenceInput() {
    return this._readPreference;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // self_built - computed: false, optional: true, required: false
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  public resetSelfBuilt() {
    this._selfBuilt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // user_name - computed: false, optional: true, required: false
  private _userName?: string; 
  public get userName() {
    return this.getStringAttribute('user_name');
  }
  public set userName(value: string) {
    this._userName = value;
  }
  public resetUserName() {
    this._userName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userNameInput() {
    return this._userName;
  }
}
export interface CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMapping {
  /**
  * Whether the message is allowed to be empty.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#allow_null CkafkaDatahubTask#allow_null}
  */
  readonly allowNull?: boolean | cdktf.IResolvable;
  /**
  * Whether it is an auto-increment column.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#auto_increment CkafkaDatahubTask#auto_increment}
  */
  readonly autoIncrement?: boolean | cdktf.IResolvable;
  /**
  * Corresponding mapping column name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#column_name CkafkaDatahubTask#column_name}
  */
  readonly columnName?: string;
  /**
  * current column size.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#column_size CkafkaDatahubTask#column_size}
  */
  readonly columnSize?: string;
  /**
  * current column precision.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#decimal_digits CkafkaDatahubTask#decimal_digits}
  */
  readonly decimalDigits?: string;
  /**
  * Database table default parameters.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#default_value CkafkaDatahubTask#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Database table extra fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#extra_info CkafkaDatahubTask#extra_info}
  */
  readonly extraInfo?: string;
  /**
  * The key name of the message.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#json_key CkafkaDatahubTask#json_key}
  */
  readonly jsonKey?: string;
  /**
  * message type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type?: string;
}

export function ckafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingToTerraform(struct?: CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMapping | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_null: cdktf.booleanToTerraform(struct!.allowNull),
    auto_increment: cdktf.booleanToTerraform(struct!.autoIncrement),
    column_name: cdktf.stringToTerraform(struct!.columnName),
    column_size: cdktf.stringToTerraform(struct!.columnSize),
    decimal_digits: cdktf.stringToTerraform(struct!.decimalDigits),
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    extra_info: cdktf.stringToTerraform(struct!.extraInfo),
    json_key: cdktf.stringToTerraform(struct!.jsonKey),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function ckafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMapping | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_null: {
      value: cdktf.booleanToHclTerraform(struct!.allowNull),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    auto_increment: {
      value: cdktf.booleanToHclTerraform(struct!.autoIncrement),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    column_name: {
      value: cdktf.stringToHclTerraform(struct!.columnName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    column_size: {
      value: cdktf.stringToHclTerraform(struct!.columnSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    decimal_digits: {
      value: cdktf.stringToHclTerraform(struct!.decimalDigits),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    extra_info: {
      value: cdktf.stringToHclTerraform(struct!.extraInfo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    json_key: {
      value: cdktf.stringToHclTerraform(struct!.jsonKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMapping | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowNull !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowNull = this._allowNull;
    }
    if (this._autoIncrement !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoIncrement = this._autoIncrement;
    }
    if (this._columnName !== undefined) {
      hasAnyValues = true;
      internalValueResult.columnName = this._columnName;
    }
    if (this._columnSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.columnSize = this._columnSize;
    }
    if (this._decimalDigits !== undefined) {
      hasAnyValues = true;
      internalValueResult.decimalDigits = this._decimalDigits;
    }
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._extraInfo !== undefined) {
      hasAnyValues = true;
      internalValueResult.extraInfo = this._extraInfo;
    }
    if (this._jsonKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonKey = this._jsonKey;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMapping | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowNull = undefined;
      this._autoIncrement = undefined;
      this._columnName = undefined;
      this._columnSize = undefined;
      this._decimalDigits = undefined;
      this._defaultValue = undefined;
      this._extraInfo = undefined;
      this._jsonKey = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowNull = value.allowNull;
      this._autoIncrement = value.autoIncrement;
      this._columnName = value.columnName;
      this._columnSize = value.columnSize;
      this._decimalDigits = value.decimalDigits;
      this._defaultValue = value.defaultValue;
      this._extraInfo = value.extraInfo;
      this._jsonKey = value.jsonKey;
      this._type = value.type;
    }
  }

  // allow_null - computed: false, optional: true, required: false
  private _allowNull?: boolean | cdktf.IResolvable; 
  public get allowNull() {
    return this.getBooleanAttribute('allow_null');
  }
  public set allowNull(value: boolean | cdktf.IResolvable) {
    this._allowNull = value;
  }
  public resetAllowNull() {
    this._allowNull = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowNullInput() {
    return this._allowNull;
  }

  // auto_increment - computed: false, optional: true, required: false
  private _autoIncrement?: boolean | cdktf.IResolvable; 
  public get autoIncrement() {
    return this.getBooleanAttribute('auto_increment');
  }
  public set autoIncrement(value: boolean | cdktf.IResolvable) {
    this._autoIncrement = value;
  }
  public resetAutoIncrement() {
    this._autoIncrement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoIncrementInput() {
    return this._autoIncrement;
  }

  // column_name - computed: false, optional: true, required: false
  private _columnName?: string; 
  public get columnName() {
    return this.getStringAttribute('column_name');
  }
  public set columnName(value: string) {
    this._columnName = value;
  }
  public resetColumnName() {
    this._columnName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get columnNameInput() {
    return this._columnName;
  }

  // column_size - computed: false, optional: true, required: false
  private _columnSize?: string; 
  public get columnSize() {
    return this.getStringAttribute('column_size');
  }
  public set columnSize(value: string) {
    this._columnSize = value;
  }
  public resetColumnSize() {
    this._columnSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get columnSizeInput() {
    return this._columnSize;
  }

  // decimal_digits - computed: false, optional: true, required: false
  private _decimalDigits?: string; 
  public get decimalDigits() {
    return this.getStringAttribute('decimal_digits');
  }
  public set decimalDigits(value: string) {
    this._decimalDigits = value;
  }
  public resetDecimalDigits() {
    this._decimalDigits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decimalDigitsInput() {
    return this._decimalDigits;
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // extra_info - computed: false, optional: true, required: false
  private _extraInfo?: string; 
  public get extraInfo() {
    return this.getStringAttribute('extra_info');
  }
  public set extraInfo(value: string) {
    this._extraInfo = value;
  }
  public resetExtraInfo() {
    this._extraInfo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extraInfoInput() {
    return this._extraInfo;
  }

  // json_key - computed: false, optional: true, required: false
  private _jsonKey?: string; 
  public get jsonKey() {
    return this.getStringAttribute('json_key');
  }
  public set jsonKey(value: string) {
    this._jsonKey = value;
  }
  public resetJsonKey() {
    this._jsonKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonKeyInput() {
    return this._jsonKey;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}

export class CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMapping[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutputReference {
    return new CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTargetResourceMySqlParamDropCls {
  /**
  * cls LogSet id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_log_set CkafkaDatahubTask#drop_cls_log_set}
  */
  readonly dropClsLogSet?: string;
  /**
  * account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_owneruin CkafkaDatahubTask#drop_cls_owneruin}
  */
  readonly dropClsOwneruin?: string;
  /**
  * The region where the cls is delivered.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_region CkafkaDatahubTask#drop_cls_region}
  */
  readonly dropClsRegion?: string;
  /**
  * cls topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls_topic_id CkafkaDatahubTask#drop_cls_topic_id}
  */
  readonly dropClsTopicId?: string;
  /**
  * Whether to deliver to cls.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message_to_cls CkafkaDatahubTask#drop_invalid_message_to_cls}
  */
  readonly dropInvalidMessageToCls?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTargetResourceMySqlParamDropClsToTerraform(struct?: CkafkaDatahubTaskTargetResourceMySqlParamDropClsOutputReference | CkafkaDatahubTaskTargetResourceMySqlParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    drop_cls_log_set: cdktf.stringToTerraform(struct!.dropClsLogSet),
    drop_cls_owneruin: cdktf.stringToTerraform(struct!.dropClsOwneruin),
    drop_cls_region: cdktf.stringToTerraform(struct!.dropClsRegion),
    drop_cls_topic_id: cdktf.stringToTerraform(struct!.dropClsTopicId),
    drop_invalid_message_to_cls: cdktf.booleanToTerraform(struct!.dropInvalidMessageToCls),
  }
}


export function ckafkaDatahubTaskTargetResourceMySqlParamDropClsToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceMySqlParamDropClsOutputReference | CkafkaDatahubTaskTargetResourceMySqlParamDropCls): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    drop_cls_log_set: {
      value: cdktf.stringToHclTerraform(struct!.dropClsLogSet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_owneruin: {
      value: cdktf.stringToHclTerraform(struct!.dropClsOwneruin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_region: {
      value: cdktf.stringToHclTerraform(struct!.dropClsRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_cls_topic_id: {
      value: cdktf.stringToHclTerraform(struct!.dropClsTopicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message_to_cls: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessageToCls),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceMySqlParamDropClsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceMySqlParamDropCls | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dropClsLogSet !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsLogSet = this._dropClsLogSet;
    }
    if (this._dropClsOwneruin !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsOwneruin = this._dropClsOwneruin;
    }
    if (this._dropClsRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsRegion = this._dropClsRegion;
    }
    if (this._dropClsTopicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropClsTopicId = this._dropClsTopicId;
    }
    if (this._dropInvalidMessageToCls !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessageToCls = this._dropInvalidMessageToCls;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceMySqlParamDropCls | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dropClsLogSet = undefined;
      this._dropClsOwneruin = undefined;
      this._dropClsRegion = undefined;
      this._dropClsTopicId = undefined;
      this._dropInvalidMessageToCls = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dropClsLogSet = value.dropClsLogSet;
      this._dropClsOwneruin = value.dropClsOwneruin;
      this._dropClsRegion = value.dropClsRegion;
      this._dropClsTopicId = value.dropClsTopicId;
      this._dropInvalidMessageToCls = value.dropInvalidMessageToCls;
    }
  }

  // drop_cls_log_set - computed: false, optional: true, required: false
  private _dropClsLogSet?: string; 
  public get dropClsLogSet() {
    return this.getStringAttribute('drop_cls_log_set');
  }
  public set dropClsLogSet(value: string) {
    this._dropClsLogSet = value;
  }
  public resetDropClsLogSet() {
    this._dropClsLogSet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsLogSetInput() {
    return this._dropClsLogSet;
  }

  // drop_cls_owneruin - computed: false, optional: true, required: false
  private _dropClsOwneruin?: string; 
  public get dropClsOwneruin() {
    return this.getStringAttribute('drop_cls_owneruin');
  }
  public set dropClsOwneruin(value: string) {
    this._dropClsOwneruin = value;
  }
  public resetDropClsOwneruin() {
    this._dropClsOwneruin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsOwneruinInput() {
    return this._dropClsOwneruin;
  }

  // drop_cls_region - computed: false, optional: true, required: false
  private _dropClsRegion?: string; 
  public get dropClsRegion() {
    return this.getStringAttribute('drop_cls_region');
  }
  public set dropClsRegion(value: string) {
    this._dropClsRegion = value;
  }
  public resetDropClsRegion() {
    this._dropClsRegion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsRegionInput() {
    return this._dropClsRegion;
  }

  // drop_cls_topic_id - computed: false, optional: true, required: false
  private _dropClsTopicId?: string; 
  public get dropClsTopicId() {
    return this.getStringAttribute('drop_cls_topic_id');
  }
  public set dropClsTopicId(value: string) {
    this._dropClsTopicId = value;
  }
  public resetDropClsTopicId() {
    this._dropClsTopicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsTopicIdInput() {
    return this._dropClsTopicId;
  }

  // drop_invalid_message_to_cls - computed: false, optional: true, required: false
  private _dropInvalidMessageToCls?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessageToCls() {
    return this.getBooleanAttribute('drop_invalid_message_to_cls');
  }
  public set dropInvalidMessageToCls(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessageToCls = value;
  }
  public resetDropInvalidMessageToCls() {
    this._dropInvalidMessageToCls = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageToClsInput() {
    return this._dropInvalidMessageToCls;
  }
}
export interface CkafkaDatahubTaskTargetResourceMySqlParam {
  /**
  * the name of the column to be monitored.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_source_increment_column CkafkaDatahubTask#data_source_increment_column}
  */
  readonly dataSourceIncrementColumn?: string;
  /**
  * TIMESTAMP indicates that the incremental column is of timestamp type, INCREMENT indicates that the incremental column is of self-incrementing id type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_source_increment_mode CkafkaDatahubTask#data_source_increment_mode}
  */
  readonly dataSourceIncrementMode?: string;
  /**
  * TABLE indicates that the read item is a table, QUERY indicates that the read item is a query.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_source_monitor_mode CkafkaDatahubTask#data_source_monitor_mode}
  */
  readonly dataSourceMonitorMode?: string;
  /**
  * When DataMonitorMode=TABLE, pass in the Table that needs to be read; when DataMonitorMode=QUERY, pass in the query sql statement that needs to be read.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_source_monitor_resource CkafkaDatahubTask#data_source_monitor_resource}
  */
  readonly dataSourceMonitorResource?: string;
  /**
  * HEAD means copy stock + incremental data, TAIL means copy only incremental data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_source_start_from CkafkaDatahubTask#data_source_start_from}
  */
  readonly dataSourceStartFrom?: string;
  /**
  * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_insert_mode CkafkaDatahubTask#data_target_insert_mode}
  */
  readonly dataTargetInsertMode?: string;
  /**
  * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_primary_key_field CkafkaDatahubTask#data_target_primary_key_field}
  */
  readonly dataTargetPrimaryKeyField?: string;
  /**
  * MySQL database name, * is the whole database.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * The Topic that stores the Ddl information of My SQL, if it is empty, it will not be stored by default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ddl_topic CkafkaDatahubTask#ddl_topic}
  */
  readonly ddlTopic?: string;
  /**
  * Whether to discard messages that fail to parse, the default is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message CkafkaDatahubTask#drop_invalid_message}
  */
  readonly dropInvalidMessage?: boolean | cdktf.IResolvable;
  /**
  * If the value is all, DDL data and DML data will also be written to the selected topic; if the value is dml, only DML data will be written to the selected topic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#include_content_changes CkafkaDatahubTask#include_content_changes}
  */
  readonly includeContentChanges?: string;
  /**
  * If the value is true, and the value of the binlog rows query log events configuration item in My SQL is ON, the data flowing into the topic contains the original SQL statement; if the value is false, the data flowing into the topic does not contain Original SQL statement.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#include_query CkafkaDatahubTask#include_query}
  */
  readonly includeQuery?: boolean | cdktf.IResolvable;
  /**
  * When the Table input is a prefix, the value of this item is true, otherwise it is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#is_table_prefix CkafkaDatahubTask#is_table_prefix}
  */
  readonly isTablePrefix?: boolean | cdktf.IResolvable;
  /**
  * Whether the input table is a regular expression, if this option and Is Table Prefix are true at the same time, the judgment priority of this option is higher than Is Table Prefix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#is_table_regular CkafkaDatahubTask#is_table_regular}
  */
  readonly isTableRegular?: boolean | cdktf.IResolvable;
  /**
  * Format library1.table1 field 1,field 2;library 2.table2 field 2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#key_columns CkafkaDatahubTask#key_columns}
  */
  readonly keyColumns?: string;
  /**
  * output format, DEFAULT, CANAL_1, CANAL_2.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#output_format CkafkaDatahubTask#output_format}
  */
  readonly outputFormat?: string;
  /**
  * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#record_with_schema CkafkaDatahubTask#record_with_schema}
  */
  readonly recordWithSchema?: boolean | cdktf.IResolvable;
  /**
  * MySQL connection Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * database name of signal table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#signal_database CkafkaDatahubTask#signal_database}
  */
  readonly signalDatabase?: string;
  /**
  * whether to Copy inventory information (schema_only does not copy, initial full amount), the default is initial.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#snapshot_mode CkafkaDatahubTask#snapshot_mode}
  */
  readonly snapshotMode?: string;
  /**
  * The name of the MySQL data table,  is the non-system table in all the monitored databases, which can be separated by, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name, when a regular expression needs to be filled in, the format is data database name.data table name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * Regular expression for routing events to specific topics, defaults to (.*).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_regex CkafkaDatahubTask#topic_regex}
  */
  readonly topicRegex?: string;
  /**
  * TopicRegex, $1, $2.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_replacement CkafkaDatahubTask#topic_replacement}
  */
  readonly topicReplacement?: string;
  /**
  * data_target_record_mapping block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_record_mapping CkafkaDatahubTask#data_target_record_mapping}
  */
  readonly dataTargetRecordMapping?: CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMapping[] | cdktf.IResolvable;
  /**
  * drop_cls block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_cls CkafkaDatahubTask#drop_cls}
  */
  readonly dropCls?: CkafkaDatahubTaskTargetResourceMySqlParamDropCls;
}

export function ckafkaDatahubTaskTargetResourceMySqlParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceMySqlParamOutputReference | CkafkaDatahubTaskTargetResourceMySqlParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    data_source_increment_column: cdktf.stringToTerraform(struct!.dataSourceIncrementColumn),
    data_source_increment_mode: cdktf.stringToTerraform(struct!.dataSourceIncrementMode),
    data_source_monitor_mode: cdktf.stringToTerraform(struct!.dataSourceMonitorMode),
    data_source_monitor_resource: cdktf.stringToTerraform(struct!.dataSourceMonitorResource),
    data_source_start_from: cdktf.stringToTerraform(struct!.dataSourceStartFrom),
    data_target_insert_mode: cdktf.stringToTerraform(struct!.dataTargetInsertMode),
    data_target_primary_key_field: cdktf.stringToTerraform(struct!.dataTargetPrimaryKeyField),
    database: cdktf.stringToTerraform(struct!.database),
    ddl_topic: cdktf.stringToTerraform(struct!.ddlTopic),
    drop_invalid_message: cdktf.booleanToTerraform(struct!.dropInvalidMessage),
    include_content_changes: cdktf.stringToTerraform(struct!.includeContentChanges),
    include_query: cdktf.booleanToTerraform(struct!.includeQuery),
    is_table_prefix: cdktf.booleanToTerraform(struct!.isTablePrefix),
    is_table_regular: cdktf.booleanToTerraform(struct!.isTableRegular),
    key_columns: cdktf.stringToTerraform(struct!.keyColumns),
    output_format: cdktf.stringToTerraform(struct!.outputFormat),
    record_with_schema: cdktf.booleanToTerraform(struct!.recordWithSchema),
    resource: cdktf.stringToTerraform(struct!.resource),
    signal_database: cdktf.stringToTerraform(struct!.signalDatabase),
    snapshot_mode: cdktf.stringToTerraform(struct!.snapshotMode),
    table: cdktf.stringToTerraform(struct!.table),
    topic_regex: cdktf.stringToTerraform(struct!.topicRegex),
    topic_replacement: cdktf.stringToTerraform(struct!.topicReplacement),
    data_target_record_mapping: cdktf.listMapper(ckafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingToTerraform, true)(struct!.dataTargetRecordMapping),
    drop_cls: ckafkaDatahubTaskTargetResourceMySqlParamDropClsToTerraform(struct!.dropCls),
  }
}


export function ckafkaDatahubTaskTargetResourceMySqlParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceMySqlParamOutputReference | CkafkaDatahubTaskTargetResourceMySqlParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    data_source_increment_column: {
      value: cdktf.stringToHclTerraform(struct!.dataSourceIncrementColumn),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_source_increment_mode: {
      value: cdktf.stringToHclTerraform(struct!.dataSourceIncrementMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_source_monitor_mode: {
      value: cdktf.stringToHclTerraform(struct!.dataSourceMonitorMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_source_monitor_resource: {
      value: cdktf.stringToHclTerraform(struct!.dataSourceMonitorResource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_source_start_from: {
      value: cdktf.stringToHclTerraform(struct!.dataSourceStartFrom),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_insert_mode: {
      value: cdktf.stringToHclTerraform(struct!.dataTargetInsertMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_primary_key_field: {
      value: cdktf.stringToHclTerraform(struct!.dataTargetPrimaryKeyField),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ddl_topic: {
      value: cdktf.stringToHclTerraform(struct!.ddlTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    include_content_changes: {
      value: cdktf.stringToHclTerraform(struct!.includeContentChanges),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    include_query: {
      value: cdktf.booleanToHclTerraform(struct!.includeQuery),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_table_prefix: {
      value: cdktf.booleanToHclTerraform(struct!.isTablePrefix),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_table_regular: {
      value: cdktf.booleanToHclTerraform(struct!.isTableRegular),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    key_columns: {
      value: cdktf.stringToHclTerraform(struct!.keyColumns),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    output_format: {
      value: cdktf.stringToHclTerraform(struct!.outputFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    record_with_schema: {
      value: cdktf.booleanToHclTerraform(struct!.recordWithSchema),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signal_database: {
      value: cdktf.stringToHclTerraform(struct!.signalDatabase),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snapshot_mode: {
      value: cdktf.stringToHclTerraform(struct!.snapshotMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_regex: {
      value: cdktf.stringToHclTerraform(struct!.topicRegex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_replacement: {
      value: cdktf.stringToHclTerraform(struct!.topicReplacement),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_record_mapping: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingToHclTerraform, true)(struct!.dataTargetRecordMapping),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingList",
    },
    drop_cls: {
      value: ckafkaDatahubTaskTargetResourceMySqlParamDropClsToHclTerraform(struct!.dropCls),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceMySqlParamDropClsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceMySqlParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceMySqlParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dataSourceIncrementColumn !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceIncrementColumn = this._dataSourceIncrementColumn;
    }
    if (this._dataSourceIncrementMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceIncrementMode = this._dataSourceIncrementMode;
    }
    if (this._dataSourceMonitorMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceMonitorMode = this._dataSourceMonitorMode;
    }
    if (this._dataSourceMonitorResource !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceMonitorResource = this._dataSourceMonitorResource;
    }
    if (this._dataSourceStartFrom !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceStartFrom = this._dataSourceStartFrom;
    }
    if (this._dataTargetInsertMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetInsertMode = this._dataTargetInsertMode;
    }
    if (this._dataTargetPrimaryKeyField !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetPrimaryKeyField = this._dataTargetPrimaryKeyField;
    }
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._ddlTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.ddlTopic = this._ddlTopic;
    }
    if (this._dropInvalidMessage !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessage = this._dropInvalidMessage;
    }
    if (this._includeContentChanges !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeContentChanges = this._includeContentChanges;
    }
    if (this._includeQuery !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeQuery = this._includeQuery;
    }
    if (this._isTablePrefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.isTablePrefix = this._isTablePrefix;
    }
    if (this._isTableRegular !== undefined) {
      hasAnyValues = true;
      internalValueResult.isTableRegular = this._isTableRegular;
    }
    if (this._keyColumns !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyColumns = this._keyColumns;
    }
    if (this._outputFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.outputFormat = this._outputFormat;
    }
    if (this._recordWithSchema !== undefined) {
      hasAnyValues = true;
      internalValueResult.recordWithSchema = this._recordWithSchema;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._signalDatabase !== undefined) {
      hasAnyValues = true;
      internalValueResult.signalDatabase = this._signalDatabase;
    }
    if (this._snapshotMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.snapshotMode = this._snapshotMode;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._topicRegex !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicRegex = this._topicRegex;
    }
    if (this._topicReplacement !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicReplacement = this._topicReplacement;
    }
    if (this._dataTargetRecordMapping?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetRecordMapping = this._dataTargetRecordMapping?.internalValue;
    }
    if (this._dropCls?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropCls = this._dropCls?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceMySqlParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dataSourceIncrementColumn = undefined;
      this._dataSourceIncrementMode = undefined;
      this._dataSourceMonitorMode = undefined;
      this._dataSourceMonitorResource = undefined;
      this._dataSourceStartFrom = undefined;
      this._dataTargetInsertMode = undefined;
      this._dataTargetPrimaryKeyField = undefined;
      this._database = undefined;
      this._ddlTopic = undefined;
      this._dropInvalidMessage = undefined;
      this._includeContentChanges = undefined;
      this._includeQuery = undefined;
      this._isTablePrefix = undefined;
      this._isTableRegular = undefined;
      this._keyColumns = undefined;
      this._outputFormat = undefined;
      this._recordWithSchema = undefined;
      this._resource = undefined;
      this._signalDatabase = undefined;
      this._snapshotMode = undefined;
      this._table = undefined;
      this._topicRegex = undefined;
      this._topicReplacement = undefined;
      this._dataTargetRecordMapping.internalValue = undefined;
      this._dropCls.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dataSourceIncrementColumn = value.dataSourceIncrementColumn;
      this._dataSourceIncrementMode = value.dataSourceIncrementMode;
      this._dataSourceMonitorMode = value.dataSourceMonitorMode;
      this._dataSourceMonitorResource = value.dataSourceMonitorResource;
      this._dataSourceStartFrom = value.dataSourceStartFrom;
      this._dataTargetInsertMode = value.dataTargetInsertMode;
      this._dataTargetPrimaryKeyField = value.dataTargetPrimaryKeyField;
      this._database = value.database;
      this._ddlTopic = value.ddlTopic;
      this._dropInvalidMessage = value.dropInvalidMessage;
      this._includeContentChanges = value.includeContentChanges;
      this._includeQuery = value.includeQuery;
      this._isTablePrefix = value.isTablePrefix;
      this._isTableRegular = value.isTableRegular;
      this._keyColumns = value.keyColumns;
      this._outputFormat = value.outputFormat;
      this._recordWithSchema = value.recordWithSchema;
      this._resource = value.resource;
      this._signalDatabase = value.signalDatabase;
      this._snapshotMode = value.snapshotMode;
      this._table = value.table;
      this._topicRegex = value.topicRegex;
      this._topicReplacement = value.topicReplacement;
      this._dataTargetRecordMapping.internalValue = value.dataTargetRecordMapping;
      this._dropCls.internalValue = value.dropCls;
    }
  }

  // data_source_increment_column - computed: false, optional: true, required: false
  private _dataSourceIncrementColumn?: string; 
  public get dataSourceIncrementColumn() {
    return this.getStringAttribute('data_source_increment_column');
  }
  public set dataSourceIncrementColumn(value: string) {
    this._dataSourceIncrementColumn = value;
  }
  public resetDataSourceIncrementColumn() {
    this._dataSourceIncrementColumn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceIncrementColumnInput() {
    return this._dataSourceIncrementColumn;
  }

  // data_source_increment_mode - computed: false, optional: true, required: false
  private _dataSourceIncrementMode?: string; 
  public get dataSourceIncrementMode() {
    return this.getStringAttribute('data_source_increment_mode');
  }
  public set dataSourceIncrementMode(value: string) {
    this._dataSourceIncrementMode = value;
  }
  public resetDataSourceIncrementMode() {
    this._dataSourceIncrementMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceIncrementModeInput() {
    return this._dataSourceIncrementMode;
  }

  // data_source_monitor_mode - computed: false, optional: true, required: false
  private _dataSourceMonitorMode?: string; 
  public get dataSourceMonitorMode() {
    return this.getStringAttribute('data_source_monitor_mode');
  }
  public set dataSourceMonitorMode(value: string) {
    this._dataSourceMonitorMode = value;
  }
  public resetDataSourceMonitorMode() {
    this._dataSourceMonitorMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceMonitorModeInput() {
    return this._dataSourceMonitorMode;
  }

  // data_source_monitor_resource - computed: false, optional: true, required: false
  private _dataSourceMonitorResource?: string; 
  public get dataSourceMonitorResource() {
    return this.getStringAttribute('data_source_monitor_resource');
  }
  public set dataSourceMonitorResource(value: string) {
    this._dataSourceMonitorResource = value;
  }
  public resetDataSourceMonitorResource() {
    this._dataSourceMonitorResource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceMonitorResourceInput() {
    return this._dataSourceMonitorResource;
  }

  // data_source_start_from - computed: false, optional: true, required: false
  private _dataSourceStartFrom?: string; 
  public get dataSourceStartFrom() {
    return this.getStringAttribute('data_source_start_from');
  }
  public set dataSourceStartFrom(value: string) {
    this._dataSourceStartFrom = value;
  }
  public resetDataSourceStartFrom() {
    this._dataSourceStartFrom = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceStartFromInput() {
    return this._dataSourceStartFrom;
  }

  // data_target_insert_mode - computed: false, optional: true, required: false
  private _dataTargetInsertMode?: string; 
  public get dataTargetInsertMode() {
    return this.getStringAttribute('data_target_insert_mode');
  }
  public set dataTargetInsertMode(value: string) {
    this._dataTargetInsertMode = value;
  }
  public resetDataTargetInsertMode() {
    this._dataTargetInsertMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetInsertModeInput() {
    return this._dataTargetInsertMode;
  }

  // data_target_primary_key_field - computed: false, optional: true, required: false
  private _dataTargetPrimaryKeyField?: string; 
  public get dataTargetPrimaryKeyField() {
    return this.getStringAttribute('data_target_primary_key_field');
  }
  public set dataTargetPrimaryKeyField(value: string) {
    this._dataTargetPrimaryKeyField = value;
  }
  public resetDataTargetPrimaryKeyField() {
    this._dataTargetPrimaryKeyField = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetPrimaryKeyFieldInput() {
    return this._dataTargetPrimaryKeyField;
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // ddl_topic - computed: false, optional: true, required: false
  private _ddlTopic?: string; 
  public get ddlTopic() {
    return this.getStringAttribute('ddl_topic');
  }
  public set ddlTopic(value: string) {
    this._ddlTopic = value;
  }
  public resetDdlTopic() {
    this._ddlTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ddlTopicInput() {
    return this._ddlTopic;
  }

  // drop_invalid_message - computed: false, optional: true, required: false
  private _dropInvalidMessage?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessage() {
    return this.getBooleanAttribute('drop_invalid_message');
  }
  public set dropInvalidMessage(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessage = value;
  }
  public resetDropInvalidMessage() {
    this._dropInvalidMessage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageInput() {
    return this._dropInvalidMessage;
  }

  // include_content_changes - computed: false, optional: true, required: false
  private _includeContentChanges?: string; 
  public get includeContentChanges() {
    return this.getStringAttribute('include_content_changes');
  }
  public set includeContentChanges(value: string) {
    this._includeContentChanges = value;
  }
  public resetIncludeContentChanges() {
    this._includeContentChanges = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeContentChangesInput() {
    return this._includeContentChanges;
  }

  // include_query - computed: false, optional: true, required: false
  private _includeQuery?: boolean | cdktf.IResolvable; 
  public get includeQuery() {
    return this.getBooleanAttribute('include_query');
  }
  public set includeQuery(value: boolean | cdktf.IResolvable) {
    this._includeQuery = value;
  }
  public resetIncludeQuery() {
    this._includeQuery = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeQueryInput() {
    return this._includeQuery;
  }

  // is_table_prefix - computed: false, optional: true, required: false
  private _isTablePrefix?: boolean | cdktf.IResolvable; 
  public get isTablePrefix() {
    return this.getBooleanAttribute('is_table_prefix');
  }
  public set isTablePrefix(value: boolean | cdktf.IResolvable) {
    this._isTablePrefix = value;
  }
  public resetIsTablePrefix() {
    this._isTablePrefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isTablePrefixInput() {
    return this._isTablePrefix;
  }

  // is_table_regular - computed: false, optional: true, required: false
  private _isTableRegular?: boolean | cdktf.IResolvable; 
  public get isTableRegular() {
    return this.getBooleanAttribute('is_table_regular');
  }
  public set isTableRegular(value: boolean | cdktf.IResolvable) {
    this._isTableRegular = value;
  }
  public resetIsTableRegular() {
    this._isTableRegular = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isTableRegularInput() {
    return this._isTableRegular;
  }

  // key_columns - computed: false, optional: true, required: false
  private _keyColumns?: string; 
  public get keyColumns() {
    return this.getStringAttribute('key_columns');
  }
  public set keyColumns(value: string) {
    this._keyColumns = value;
  }
  public resetKeyColumns() {
    this._keyColumns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyColumnsInput() {
    return this._keyColumns;
  }

  // output_format - computed: false, optional: true, required: false
  private _outputFormat?: string; 
  public get outputFormat() {
    return this.getStringAttribute('output_format');
  }
  public set outputFormat(value: string) {
    this._outputFormat = value;
  }
  public resetOutputFormat() {
    this._outputFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get outputFormatInput() {
    return this._outputFormat;
  }

  // record_with_schema - computed: false, optional: true, required: false
  private _recordWithSchema?: boolean | cdktf.IResolvable; 
  public get recordWithSchema() {
    return this.getBooleanAttribute('record_with_schema');
  }
  public set recordWithSchema(value: boolean | cdktf.IResolvable) {
    this._recordWithSchema = value;
  }
  public resetRecordWithSchema() {
    this._recordWithSchema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recordWithSchemaInput() {
    return this._recordWithSchema;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // signal_database - computed: false, optional: true, required: false
  private _signalDatabase?: string; 
  public get signalDatabase() {
    return this.getStringAttribute('signal_database');
  }
  public set signalDatabase(value: string) {
    this._signalDatabase = value;
  }
  public resetSignalDatabase() {
    this._signalDatabase = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signalDatabaseInput() {
    return this._signalDatabase;
  }

  // snapshot_mode - computed: false, optional: true, required: false
  private _snapshotMode?: string; 
  public get snapshotMode() {
    return this.getStringAttribute('snapshot_mode');
  }
  public set snapshotMode(value: string) {
    this._snapshotMode = value;
  }
  public resetSnapshotMode() {
    this._snapshotMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snapshotModeInput() {
    return this._snapshotMode;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // topic_regex - computed: false, optional: true, required: false
  private _topicRegex?: string; 
  public get topicRegex() {
    return this.getStringAttribute('topic_regex');
  }
  public set topicRegex(value: string) {
    this._topicRegex = value;
  }
  public resetTopicRegex() {
    this._topicRegex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicRegexInput() {
    return this._topicRegex;
  }

  // topic_replacement - computed: false, optional: true, required: false
  private _topicReplacement?: string; 
  public get topicReplacement() {
    return this.getStringAttribute('topic_replacement');
  }
  public set topicReplacement(value: string) {
    this._topicReplacement = value;
  }
  public resetTopicReplacement() {
    this._topicReplacement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicReplacementInput() {
    return this._topicReplacement;
  }

  // data_target_record_mapping - computed: false, optional: true, required: false
  private _dataTargetRecordMapping = new CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMappingList(this, "data_target_record_mapping", false);
  public get dataTargetRecordMapping() {
    return this._dataTargetRecordMapping;
  }
  public putDataTargetRecordMapping(value: CkafkaDatahubTaskTargetResourceMySqlParamDataTargetRecordMapping[] | cdktf.IResolvable) {
    this._dataTargetRecordMapping.internalValue = value;
  }
  public resetDataTargetRecordMapping() {
    this._dataTargetRecordMapping.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetRecordMappingInput() {
    return this._dataTargetRecordMapping.internalValue;
  }

  // drop_cls - computed: false, optional: true, required: false
  private _dropCls = new CkafkaDatahubTaskTargetResourceMySqlParamDropClsOutputReference(this, "drop_cls");
  public get dropCls() {
    return this._dropCls;
  }
  public putDropCls(value: CkafkaDatahubTaskTargetResourceMySqlParamDropCls) {
    this._dropCls.internalValue = value;
  }
  public resetDropCls() {
    this._dropCls.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropClsInput() {
    return this._dropCls.internalValue;
  }
}
export interface CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping {
  /**
  * Whether the message is allowed to be empty.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#allow_null CkafkaDatahubTask#allow_null}
  */
  readonly allowNull?: boolean | cdktf.IResolvable;
  /**
  * Whether it is an auto-increment column.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#auto_increment CkafkaDatahubTask#auto_increment}
  */
  readonly autoIncrement?: boolean | cdktf.IResolvable;
  /**
  * Column Name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#column_name CkafkaDatahubTask#column_name}
  */
  readonly columnName?: string;
  /**
  * current ColumnSize.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#column_size CkafkaDatahubTask#column_size}
  */
  readonly columnSize?: string;
  /**
  * current Column DecimalDigits.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#decimal_digits CkafkaDatahubTask#decimal_digits}
  */
  readonly decimalDigits?: string;
  /**
  * Database table default parameters.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#default_value CkafkaDatahubTask#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Database table extra fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#extra_info CkafkaDatahubTask#extra_info}
  */
  readonly extraInfo?: string;
  /**
  * The key name of the message.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#json_key CkafkaDatahubTask#json_key}
  */
  readonly jsonKey?: string;
  /**
  * message type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type?: string;
}

export function ckafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingToTerraform(struct?: CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_null: cdktf.booleanToTerraform(struct!.allowNull),
    auto_increment: cdktf.booleanToTerraform(struct!.autoIncrement),
    column_name: cdktf.stringToTerraform(struct!.columnName),
    column_size: cdktf.stringToTerraform(struct!.columnSize),
    decimal_digits: cdktf.stringToTerraform(struct!.decimalDigits),
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    extra_info: cdktf.stringToTerraform(struct!.extraInfo),
    json_key: cdktf.stringToTerraform(struct!.jsonKey),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function ckafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingToHclTerraform(struct?: CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_null: {
      value: cdktf.booleanToHclTerraform(struct!.allowNull),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    auto_increment: {
      value: cdktf.booleanToHclTerraform(struct!.autoIncrement),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    column_name: {
      value: cdktf.stringToHclTerraform(struct!.columnName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    column_size: {
      value: cdktf.stringToHclTerraform(struct!.columnSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    decimal_digits: {
      value: cdktf.stringToHclTerraform(struct!.decimalDigits),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    extra_info: {
      value: cdktf.stringToHclTerraform(struct!.extraInfo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    json_key: {
      value: cdktf.stringToHclTerraform(struct!.jsonKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowNull !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowNull = this._allowNull;
    }
    if (this._autoIncrement !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoIncrement = this._autoIncrement;
    }
    if (this._columnName !== undefined) {
      hasAnyValues = true;
      internalValueResult.columnName = this._columnName;
    }
    if (this._columnSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.columnSize = this._columnSize;
    }
    if (this._decimalDigits !== undefined) {
      hasAnyValues = true;
      internalValueResult.decimalDigits = this._decimalDigits;
    }
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._extraInfo !== undefined) {
      hasAnyValues = true;
      internalValueResult.extraInfo = this._extraInfo;
    }
    if (this._jsonKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonKey = this._jsonKey;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowNull = undefined;
      this._autoIncrement = undefined;
      this._columnName = undefined;
      this._columnSize = undefined;
      this._decimalDigits = undefined;
      this._defaultValue = undefined;
      this._extraInfo = undefined;
      this._jsonKey = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowNull = value.allowNull;
      this._autoIncrement = value.autoIncrement;
      this._columnName = value.columnName;
      this._columnSize = value.columnSize;
      this._decimalDigits = value.decimalDigits;
      this._defaultValue = value.defaultValue;
      this._extraInfo = value.extraInfo;
      this._jsonKey = value.jsonKey;
      this._type = value.type;
    }
  }

  // allow_null - computed: false, optional: true, required: false
  private _allowNull?: boolean | cdktf.IResolvable; 
  public get allowNull() {
    return this.getBooleanAttribute('allow_null');
  }
  public set allowNull(value: boolean | cdktf.IResolvable) {
    this._allowNull = value;
  }
  public resetAllowNull() {
    this._allowNull = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowNullInput() {
    return this._allowNull;
  }

  // auto_increment - computed: false, optional: true, required: false
  private _autoIncrement?: boolean | cdktf.IResolvable; 
  public get autoIncrement() {
    return this.getBooleanAttribute('auto_increment');
  }
  public set autoIncrement(value: boolean | cdktf.IResolvable) {
    this._autoIncrement = value;
  }
  public resetAutoIncrement() {
    this._autoIncrement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoIncrementInput() {
    return this._autoIncrement;
  }

  // column_name - computed: false, optional: true, required: false
  private _columnName?: string; 
  public get columnName() {
    return this.getStringAttribute('column_name');
  }
  public set columnName(value: string) {
    this._columnName = value;
  }
  public resetColumnName() {
    this._columnName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get columnNameInput() {
    return this._columnName;
  }

  // column_size - computed: false, optional: true, required: false
  private _columnSize?: string; 
  public get columnSize() {
    return this.getStringAttribute('column_size');
  }
  public set columnSize(value: string) {
    this._columnSize = value;
  }
  public resetColumnSize() {
    this._columnSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get columnSizeInput() {
    return this._columnSize;
  }

  // decimal_digits - computed: false, optional: true, required: false
  private _decimalDigits?: string; 
  public get decimalDigits() {
    return this.getStringAttribute('decimal_digits');
  }
  public set decimalDigits(value: string) {
    this._decimalDigits = value;
  }
  public resetDecimalDigits() {
    this._decimalDigits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decimalDigitsInput() {
    return this._decimalDigits;
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // extra_info - computed: false, optional: true, required: false
  private _extraInfo?: string; 
  public get extraInfo() {
    return this.getStringAttribute('extra_info');
  }
  public set extraInfo(value: string) {
    this._extraInfo = value;
  }
  public resetExtraInfo() {
    this._extraInfo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extraInfoInput() {
    return this._extraInfo;
  }

  // json_key - computed: false, optional: true, required: false
  private _jsonKey?: string; 
  public get jsonKey() {
    return this.getStringAttribute('json_key');
  }
  public set jsonKey(value: string) {
    this._jsonKey = value;
  }
  public resetJsonKey() {
    this._jsonKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonKeyInput() {
    return this._jsonKey;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}

export class CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutputReference {
    return new CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTargetResourcePostgreSqlParam {
  /**
  * Upstream data format (JSON|Debezium), required when the database synchronization mode matches the default field.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_format CkafkaDatahubTask#data_format}
  */
  readonly dataFormat?: string;
  /**
  * INSERT means insert using Insert mode, UPSERT means insert using Upsert mode.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_insert_mode CkafkaDatahubTask#data_target_insert_mode}
  */
  readonly dataTargetInsertMode?: string;
  /**
  * When DataInsertMode=UPSERT, pass in the primary key that the current upsert depends on.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_primary_key_field CkafkaDatahubTask#data_target_primary_key_field}
  */
  readonly dataTargetPrimaryKeyField?: string;
  /**
  * PostgreSQL database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * Whether to discard messages that fail to parse, the default is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#drop_invalid_message CkafkaDatahubTask#drop_invalid_message}
  */
  readonly dropInvalidMessage?: boolean | cdktf.IResolvable;
  /**
  * Whether the input table is a regular expression.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#is_table_regular CkafkaDatahubTask#is_table_regular}
  */
  readonly isTableRegular?: boolean | cdktf.IResolvable;
  /**
  * Format  library1.table1:field 1,field2;library2.table2:field2, between tables; (semicolon) separated, between fields, (comma) separated. The table that is not specified defaults to the primary key of the table.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#key_columns CkafkaDatahubTask#key_columns}
  */
  readonly keyColumns?: string;
  /**
  * (decoderbufs/pgoutput), default decoderbufs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#plugin_name CkafkaDatahubTask#plugin_name}
  */
  readonly pluginName: string;
  /**
  * If the value is true, the message will carry the schema corresponding to the message structure, if the value is false, it will not carry.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#record_with_schema CkafkaDatahubTask#record_with_schema}
  */
  readonly recordWithSchema?: boolean | cdktf.IResolvable;
  /**
  * PostgreSQL connection Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * never|initial, default initial.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#snapshot_mode CkafkaDatahubTask#snapshot_mode}
  */
  readonly snapshotMode?: string;
  /**
  * PostgreSQL tableName, * is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of Schema name.Data table name, and you need to fill in a regular expression When, the format is Schema name.data table name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * data_target_record_mapping block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#data_target_record_mapping CkafkaDatahubTask#data_target_record_mapping}
  */
  readonly dataTargetRecordMapping?: CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTargetResourcePostgreSqlParamToTerraform(struct?: CkafkaDatahubTaskTargetResourcePostgreSqlParamOutputReference | CkafkaDatahubTaskTargetResourcePostgreSqlParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    data_format: cdktf.stringToTerraform(struct!.dataFormat),
    data_target_insert_mode: cdktf.stringToTerraform(struct!.dataTargetInsertMode),
    data_target_primary_key_field: cdktf.stringToTerraform(struct!.dataTargetPrimaryKeyField),
    database: cdktf.stringToTerraform(struct!.database),
    drop_invalid_message: cdktf.booleanToTerraform(struct!.dropInvalidMessage),
    is_table_regular: cdktf.booleanToTerraform(struct!.isTableRegular),
    key_columns: cdktf.stringToTerraform(struct!.keyColumns),
    plugin_name: cdktf.stringToTerraform(struct!.pluginName),
    record_with_schema: cdktf.booleanToTerraform(struct!.recordWithSchema),
    resource: cdktf.stringToTerraform(struct!.resource),
    snapshot_mode: cdktf.stringToTerraform(struct!.snapshotMode),
    table: cdktf.stringToTerraform(struct!.table),
    data_target_record_mapping: cdktf.listMapper(ckafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingToTerraform, true)(struct!.dataTargetRecordMapping),
  }
}


export function ckafkaDatahubTaskTargetResourcePostgreSqlParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourcePostgreSqlParamOutputReference | CkafkaDatahubTaskTargetResourcePostgreSqlParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    data_format: {
      value: cdktf.stringToHclTerraform(struct!.dataFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_insert_mode: {
      value: cdktf.stringToHclTerraform(struct!.dataTargetInsertMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_primary_key_field: {
      value: cdktf.stringToHclTerraform(struct!.dataTargetPrimaryKeyField),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    drop_invalid_message: {
      value: cdktf.booleanToHclTerraform(struct!.dropInvalidMessage),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    is_table_regular: {
      value: cdktf.booleanToHclTerraform(struct!.isTableRegular),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    key_columns: {
      value: cdktf.stringToHclTerraform(struct!.keyColumns),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    plugin_name: {
      value: cdktf.stringToHclTerraform(struct!.pluginName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    record_with_schema: {
      value: cdktf.booleanToHclTerraform(struct!.recordWithSchema),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snapshot_mode: {
      value: cdktf.stringToHclTerraform(struct!.snapshotMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_target_record_mapping: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingToHclTerraform, true)(struct!.dataTargetRecordMapping),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourcePostgreSqlParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourcePostgreSqlParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dataFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataFormat = this._dataFormat;
    }
    if (this._dataTargetInsertMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetInsertMode = this._dataTargetInsertMode;
    }
    if (this._dataTargetPrimaryKeyField !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetPrimaryKeyField = this._dataTargetPrimaryKeyField;
    }
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._dropInvalidMessage !== undefined) {
      hasAnyValues = true;
      internalValueResult.dropInvalidMessage = this._dropInvalidMessage;
    }
    if (this._isTableRegular !== undefined) {
      hasAnyValues = true;
      internalValueResult.isTableRegular = this._isTableRegular;
    }
    if (this._keyColumns !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyColumns = this._keyColumns;
    }
    if (this._pluginName !== undefined) {
      hasAnyValues = true;
      internalValueResult.pluginName = this._pluginName;
    }
    if (this._recordWithSchema !== undefined) {
      hasAnyValues = true;
      internalValueResult.recordWithSchema = this._recordWithSchema;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._snapshotMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.snapshotMode = this._snapshotMode;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._dataTargetRecordMapping?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTargetRecordMapping = this._dataTargetRecordMapping?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourcePostgreSqlParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dataFormat = undefined;
      this._dataTargetInsertMode = undefined;
      this._dataTargetPrimaryKeyField = undefined;
      this._database = undefined;
      this._dropInvalidMessage = undefined;
      this._isTableRegular = undefined;
      this._keyColumns = undefined;
      this._pluginName = undefined;
      this._recordWithSchema = undefined;
      this._resource = undefined;
      this._snapshotMode = undefined;
      this._table = undefined;
      this._dataTargetRecordMapping.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dataFormat = value.dataFormat;
      this._dataTargetInsertMode = value.dataTargetInsertMode;
      this._dataTargetPrimaryKeyField = value.dataTargetPrimaryKeyField;
      this._database = value.database;
      this._dropInvalidMessage = value.dropInvalidMessage;
      this._isTableRegular = value.isTableRegular;
      this._keyColumns = value.keyColumns;
      this._pluginName = value.pluginName;
      this._recordWithSchema = value.recordWithSchema;
      this._resource = value.resource;
      this._snapshotMode = value.snapshotMode;
      this._table = value.table;
      this._dataTargetRecordMapping.internalValue = value.dataTargetRecordMapping;
    }
  }

  // data_format - computed: false, optional: true, required: false
  private _dataFormat?: string; 
  public get dataFormat() {
    return this.getStringAttribute('data_format');
  }
  public set dataFormat(value: string) {
    this._dataFormat = value;
  }
  public resetDataFormat() {
    this._dataFormat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataFormatInput() {
    return this._dataFormat;
  }

  // data_target_insert_mode - computed: false, optional: true, required: false
  private _dataTargetInsertMode?: string; 
  public get dataTargetInsertMode() {
    return this.getStringAttribute('data_target_insert_mode');
  }
  public set dataTargetInsertMode(value: string) {
    this._dataTargetInsertMode = value;
  }
  public resetDataTargetInsertMode() {
    this._dataTargetInsertMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetInsertModeInput() {
    return this._dataTargetInsertMode;
  }

  // data_target_primary_key_field - computed: false, optional: true, required: false
  private _dataTargetPrimaryKeyField?: string; 
  public get dataTargetPrimaryKeyField() {
    return this.getStringAttribute('data_target_primary_key_field');
  }
  public set dataTargetPrimaryKeyField(value: string) {
    this._dataTargetPrimaryKeyField = value;
  }
  public resetDataTargetPrimaryKeyField() {
    this._dataTargetPrimaryKeyField = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetPrimaryKeyFieldInput() {
    return this._dataTargetPrimaryKeyField;
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // drop_invalid_message - computed: false, optional: true, required: false
  private _dropInvalidMessage?: boolean | cdktf.IResolvable; 
  public get dropInvalidMessage() {
    return this.getBooleanAttribute('drop_invalid_message');
  }
  public set dropInvalidMessage(value: boolean | cdktf.IResolvable) {
    this._dropInvalidMessage = value;
  }
  public resetDropInvalidMessage() {
    this._dropInvalidMessage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInvalidMessageInput() {
    return this._dropInvalidMessage;
  }

  // is_table_regular - computed: false, optional: true, required: false
  private _isTableRegular?: boolean | cdktf.IResolvable; 
  public get isTableRegular() {
    return this.getBooleanAttribute('is_table_regular');
  }
  public set isTableRegular(value: boolean | cdktf.IResolvable) {
    this._isTableRegular = value;
  }
  public resetIsTableRegular() {
    this._isTableRegular = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isTableRegularInput() {
    return this._isTableRegular;
  }

  // key_columns - computed: false, optional: true, required: false
  private _keyColumns?: string; 
  public get keyColumns() {
    return this.getStringAttribute('key_columns');
  }
  public set keyColumns(value: string) {
    this._keyColumns = value;
  }
  public resetKeyColumns() {
    this._keyColumns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyColumnsInput() {
    return this._keyColumns;
  }

  // plugin_name - computed: false, optional: false, required: true
  private _pluginName?: string; 
  public get pluginName() {
    return this.getStringAttribute('plugin_name');
  }
  public set pluginName(value: string) {
    this._pluginName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pluginNameInput() {
    return this._pluginName;
  }

  // record_with_schema - computed: false, optional: true, required: false
  private _recordWithSchema?: boolean | cdktf.IResolvable; 
  public get recordWithSchema() {
    return this.getBooleanAttribute('record_with_schema');
  }
  public set recordWithSchema(value: boolean | cdktf.IResolvable) {
    this._recordWithSchema = value;
  }
  public resetRecordWithSchema() {
    this._recordWithSchema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recordWithSchemaInput() {
    return this._recordWithSchema;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // snapshot_mode - computed: false, optional: true, required: false
  private _snapshotMode?: string; 
  public get snapshotMode() {
    return this.getStringAttribute('snapshot_mode');
  }
  public set snapshotMode(value: string) {
    this._snapshotMode = value;
  }
  public resetSnapshotMode() {
    this._snapshotMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snapshotModeInput() {
    return this._snapshotMode;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // data_target_record_mapping - computed: false, optional: true, required: false
  private _dataTargetRecordMapping = new CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMappingList(this, "data_target_record_mapping", false);
  public get dataTargetRecordMapping() {
    return this._dataTargetRecordMapping;
  }
  public putDataTargetRecordMapping(value: CkafkaDatahubTaskTargetResourcePostgreSqlParamDataTargetRecordMapping[] | cdktf.IResolvable) {
    this._dataTargetRecordMapping.internalValue = value;
  }
  public resetDataTargetRecordMapping() {
    this._dataTargetRecordMapping.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTargetRecordMappingInput() {
    return this._dataTargetRecordMapping.internalValue;
  }
}
export interface CkafkaDatahubTaskTargetResourceScfParam {
  /**
  * The maximum number of messages sent in each batch, the default is 1000.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#batch_size CkafkaDatahubTask#batch_size}
  */
  readonly batchSize?: number;
  /**
  * SCF function name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#function_name CkafkaDatahubTask#function_name}
  */
  readonly functionName: string;
  /**
  * The number of retries after the SCF call fails, the default is 5.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#max_retries CkafkaDatahubTask#max_retries}
  */
  readonly maxRetries?: number;
  /**
  * SCF cloud function namespace, the default is default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#namespace CkafkaDatahubTask#namespace}
  */
  readonly namespace?: string;
  /**
  * SCF cloud function version and alias, the default is DEFAULT.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#qualifier CkafkaDatahubTask#qualifier}
  */
  readonly qualifier?: string;
}

export function ckafkaDatahubTaskTargetResourceScfParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceScfParamOutputReference | CkafkaDatahubTaskTargetResourceScfParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    batch_size: cdktf.numberToTerraform(struct!.batchSize),
    function_name: cdktf.stringToTerraform(struct!.functionName),
    max_retries: cdktf.numberToTerraform(struct!.maxRetries),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    qualifier: cdktf.stringToTerraform(struct!.qualifier),
  }
}


export function ckafkaDatahubTaskTargetResourceScfParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceScfParamOutputReference | CkafkaDatahubTaskTargetResourceScfParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    batch_size: {
      value: cdktf.numberToHclTerraform(struct!.batchSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    function_name: {
      value: cdktf.stringToHclTerraform(struct!.functionName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_retries: {
      value: cdktf.numberToHclTerraform(struct!.maxRetries),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    qualifier: {
      value: cdktf.stringToHclTerraform(struct!.qualifier),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceScfParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceScfParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._batchSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.batchSize = this._batchSize;
    }
    if (this._functionName !== undefined) {
      hasAnyValues = true;
      internalValueResult.functionName = this._functionName;
    }
    if (this._maxRetries !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxRetries = this._maxRetries;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._qualifier !== undefined) {
      hasAnyValues = true;
      internalValueResult.qualifier = this._qualifier;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceScfParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._batchSize = undefined;
      this._functionName = undefined;
      this._maxRetries = undefined;
      this._namespace = undefined;
      this._qualifier = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._batchSize = value.batchSize;
      this._functionName = value.functionName;
      this._maxRetries = value.maxRetries;
      this._namespace = value.namespace;
      this._qualifier = value.qualifier;
    }
  }

  // batch_size - computed: false, optional: true, required: false
  private _batchSize?: number; 
  public get batchSize() {
    return this.getNumberAttribute('batch_size');
  }
  public set batchSize(value: number) {
    this._batchSize = value;
  }
  public resetBatchSize() {
    this._batchSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get batchSizeInput() {
    return this._batchSize;
  }

  // function_name - computed: false, optional: false, required: true
  private _functionName?: string; 
  public get functionName() {
    return this.getStringAttribute('function_name');
  }
  public set functionName(value: string) {
    this._functionName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get functionNameInput() {
    return this._functionName;
  }

  // max_retries - computed: false, optional: true, required: false
  private _maxRetries?: number; 
  public get maxRetries() {
    return this.getNumberAttribute('max_retries');
  }
  public set maxRetries(value: number) {
    this._maxRetries = value;
  }
  public resetMaxRetries() {
    this._maxRetries = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxRetriesInput() {
    return this._maxRetries;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // qualifier - computed: false, optional: true, required: false
  private _qualifier?: string; 
  public get qualifier() {
    return this.getStringAttribute('qualifier');
  }
  public set qualifier(value: string) {
    this._qualifier = value;
  }
  public resetQualifier() {
    this._qualifier = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qualifierInput() {
    return this._qualifier;
  }
}
export interface CkafkaDatahubTaskTargetResourceSqlServerParam {
  /**
  * SQLServer database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * SQLServer connection Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * schema_only|initial default initial.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#snapshot_mode CkafkaDatahubTask#snapshot_mode}
  */
  readonly snapshotMode?: string;
  /**
  * SQLServer table, *is the non-system table in all the monitored databases, you can use, to monitor multiple data tables, but the data table needs to be filled in the format of data database name.data table name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
}

export function ckafkaDatahubTaskTargetResourceSqlServerParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceSqlServerParamOutputReference | CkafkaDatahubTaskTargetResourceSqlServerParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    resource: cdktf.stringToTerraform(struct!.resource),
    snapshot_mode: cdktf.stringToTerraform(struct!.snapshotMode),
    table: cdktf.stringToTerraform(struct!.table),
  }
}


export function ckafkaDatahubTaskTargetResourceSqlServerParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceSqlServerParamOutputReference | CkafkaDatahubTaskTargetResourceSqlServerParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snapshot_mode: {
      value: cdktf.stringToHclTerraform(struct!.snapshotMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceSqlServerParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceSqlServerParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._snapshotMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.snapshotMode = this._snapshotMode;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceSqlServerParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._database = undefined;
      this._resource = undefined;
      this._snapshotMode = undefined;
      this._table = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._database = value.database;
      this._resource = value.resource;
      this._snapshotMode = value.snapshotMode;
      this._table = value.table;
    }
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // snapshot_mode - computed: false, optional: true, required: false
  private _snapshotMode?: string; 
  public get snapshotMode() {
    return this.getStringAttribute('snapshot_mode');
  }
  public set snapshotMode(value: string) {
    this._snapshotMode = value;
  }
  public resetSnapshotMode() {
    this._snapshotMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snapshotModeInput() {
    return this._snapshotMode;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }
}
export interface CkafkaDatahubTaskTargetResourceTdwParam {
  /**
  * Tdw bid.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#bid CkafkaDatahubTask#bid}
  */
  readonly bid: string;
  /**
  * default true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#is_domestic CkafkaDatahubTask#is_domestic}
  */
  readonly isDomestic?: boolean | cdktf.IResolvable;
  /**
  * TDW address, defalt tl-tdbank-tdmanager.tencent-distribute.com.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#tdw_host CkafkaDatahubTask#tdw_host}
  */
  readonly tdwHost?: string;
  /**
  * TDW port, default 8099.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#tdw_port CkafkaDatahubTask#tdw_port}
  */
  readonly tdwPort?: number;
  /**
  * Tdw tid.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#tid CkafkaDatahubTask#tid}
  */
  readonly tid: string;
}

export function ckafkaDatahubTaskTargetResourceTdwParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceTdwParamOutputReference | CkafkaDatahubTaskTargetResourceTdwParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bid: cdktf.stringToTerraform(struct!.bid),
    is_domestic: cdktf.booleanToTerraform(struct!.isDomestic),
    tdw_host: cdktf.stringToTerraform(struct!.tdwHost),
    tdw_port: cdktf.numberToTerraform(struct!.tdwPort),
    tid: cdktf.stringToTerraform(struct!.tid),
  }
}


export function ckafkaDatahubTaskTargetResourceTdwParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceTdwParamOutputReference | CkafkaDatahubTaskTargetResourceTdwParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bid: {
      value: cdktf.stringToHclTerraform(struct!.bid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    is_domestic: {
      value: cdktf.booleanToHclTerraform(struct!.isDomestic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tdw_host: {
      value: cdktf.stringToHclTerraform(struct!.tdwHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tdw_port: {
      value: cdktf.numberToHclTerraform(struct!.tdwPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tid: {
      value: cdktf.stringToHclTerraform(struct!.tid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceTdwParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceTdwParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bid !== undefined) {
      hasAnyValues = true;
      internalValueResult.bid = this._bid;
    }
    if (this._isDomestic !== undefined) {
      hasAnyValues = true;
      internalValueResult.isDomestic = this._isDomestic;
    }
    if (this._tdwHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.tdwHost = this._tdwHost;
    }
    if (this._tdwPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.tdwPort = this._tdwPort;
    }
    if (this._tid !== undefined) {
      hasAnyValues = true;
      internalValueResult.tid = this._tid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceTdwParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._bid = undefined;
      this._isDomestic = undefined;
      this._tdwHost = undefined;
      this._tdwPort = undefined;
      this._tid = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._bid = value.bid;
      this._isDomestic = value.isDomestic;
      this._tdwHost = value.tdwHost;
      this._tdwPort = value.tdwPort;
      this._tid = value.tid;
    }
  }

  // bid - computed: false, optional: false, required: true
  private _bid?: string; 
  public get bid() {
    return this.getStringAttribute('bid');
  }
  public set bid(value: string) {
    this._bid = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bidInput() {
    return this._bid;
  }

  // is_domestic - computed: false, optional: true, required: false
  private _isDomestic?: boolean | cdktf.IResolvable; 
  public get isDomestic() {
    return this.getBooleanAttribute('is_domestic');
  }
  public set isDomestic(value: boolean | cdktf.IResolvable) {
    this._isDomestic = value;
  }
  public resetIsDomestic() {
    this._isDomestic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isDomesticInput() {
    return this._isDomestic;
  }

  // tdw_host - computed: false, optional: true, required: false
  private _tdwHost?: string; 
  public get tdwHost() {
    return this.getStringAttribute('tdw_host');
  }
  public set tdwHost(value: string) {
    this._tdwHost = value;
  }
  public resetTdwHost() {
    this._tdwHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tdwHostInput() {
    return this._tdwHost;
  }

  // tdw_port - computed: false, optional: true, required: false
  private _tdwPort?: number; 
  public get tdwPort() {
    return this.getNumberAttribute('tdw_port');
  }
  public set tdwPort(value: number) {
    this._tdwPort = value;
  }
  public resetTdwPort() {
    this._tdwPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tdwPortInput() {
    return this._tdwPort;
  }

  // tid - computed: false, optional: false, required: true
  private _tid?: string; 
  public get tid() {
    return this.getStringAttribute('tid');
  }
  public set tid(value: string) {
    this._tid = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tidInput() {
    return this._tid;
  }
}
export interface CkafkaDatahubTaskTargetResourceTopicParam {
  /**
  * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, initial position earliest, latest position latest, time point position timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * The topic name of the topic sold separately.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * Topic TopicId.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTargetResourceTopicParamToTerraform(struct?: CkafkaDatahubTaskTargetResourceTopicParamOutputReference | CkafkaDatahubTaskTargetResourceTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    resource: cdktf.stringToTerraform(struct!.resource),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
  }
}


export function ckafkaDatahubTaskTargetResourceTopicParamToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceTopicParamOutputReference | CkafkaDatahubTaskTargetResourceTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceTopicParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResourceTopicParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResourceTopicParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._resource = undefined;
      this._startTime = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._resource = value.resource;
      this._startTime = value.startTime;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic_id - computed: true, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }
}
export interface CkafkaDatahubTaskTargetResource {
  /**
  * Resource Type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
  /**
  * click_house_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#click_house_param CkafkaDatahubTask#click_house_param}
  */
  readonly clickHouseParam?: CkafkaDatahubTaskTargetResourceClickHouseParam;
  /**
  * cls_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#cls_param CkafkaDatahubTask#cls_param}
  */
  readonly clsParam?: CkafkaDatahubTaskTargetResourceClsParam;
  /**
  * cos_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#cos_param CkafkaDatahubTask#cos_param}
  */
  readonly cosParam?: CkafkaDatahubTaskTargetResourceCosParam;
  /**
  * ctsdb_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#ctsdb_param CkafkaDatahubTask#ctsdb_param}
  */
  readonly ctsdbParam?: CkafkaDatahubTaskTargetResourceCtsdbParam;
  /**
  * dts_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#dts_param CkafkaDatahubTask#dts_param}
  */
  readonly dtsParam?: CkafkaDatahubTaskTargetResourceDtsParam;
  /**
  * es_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#es_param CkafkaDatahubTask#es_param}
  */
  readonly esParam?: CkafkaDatahubTaskTargetResourceEsParam;
  /**
  * event_bus_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#event_bus_param CkafkaDatahubTask#event_bus_param}
  */
  readonly eventBusParam?: CkafkaDatahubTaskTargetResourceEventBusParam;
  /**
  * kafka_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#kafka_param CkafkaDatahubTask#kafka_param}
  */
  readonly kafkaParam?: CkafkaDatahubTaskTargetResourceKafkaParam;
  /**
  * maria_db_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#maria_db_param CkafkaDatahubTask#maria_db_param}
  */
  readonly mariaDbParam?: CkafkaDatahubTaskTargetResourceMariaDbParam;
  /**
  * mongo_db_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#mongo_db_param CkafkaDatahubTask#mongo_db_param}
  */
  readonly mongoDbParam?: CkafkaDatahubTaskTargetResourceMongoDbParam;
  /**
  * my_sql_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#my_sql_param CkafkaDatahubTask#my_sql_param}
  */
  readonly mySqlParam?: CkafkaDatahubTaskTargetResourceMySqlParam;
  /**
  * postgre_sql_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#postgre_sql_param CkafkaDatahubTask#postgre_sql_param}
  */
  readonly postgreSqlParam?: CkafkaDatahubTaskTargetResourcePostgreSqlParam;
  /**
  * scf_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#scf_param CkafkaDatahubTask#scf_param}
  */
  readonly scfParam?: CkafkaDatahubTaskTargetResourceScfParam;
  /**
  * sql_server_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#sql_server_param CkafkaDatahubTask#sql_server_param}
  */
  readonly sqlServerParam?: CkafkaDatahubTaskTargetResourceSqlServerParam;
  /**
  * tdw_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#tdw_param CkafkaDatahubTask#tdw_param}
  */
  readonly tdwParam?: CkafkaDatahubTaskTargetResourceTdwParam;
  /**
  * topic_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_param CkafkaDatahubTask#topic_param}
  */
  readonly topicParam?: CkafkaDatahubTaskTargetResourceTopicParam;
}

export function ckafkaDatahubTaskTargetResourceToTerraform(struct?: CkafkaDatahubTaskTargetResourceOutputReference | CkafkaDatahubTaskTargetResource): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    click_house_param: ckafkaDatahubTaskTargetResourceClickHouseParamToTerraform(struct!.clickHouseParam),
    cls_param: ckafkaDatahubTaskTargetResourceClsParamToTerraform(struct!.clsParam),
    cos_param: ckafkaDatahubTaskTargetResourceCosParamToTerraform(struct!.cosParam),
    ctsdb_param: ckafkaDatahubTaskTargetResourceCtsdbParamToTerraform(struct!.ctsdbParam),
    dts_param: ckafkaDatahubTaskTargetResourceDtsParamToTerraform(struct!.dtsParam),
    es_param: ckafkaDatahubTaskTargetResourceEsParamToTerraform(struct!.esParam),
    event_bus_param: ckafkaDatahubTaskTargetResourceEventBusParamToTerraform(struct!.eventBusParam),
    kafka_param: ckafkaDatahubTaskTargetResourceKafkaParamToTerraform(struct!.kafkaParam),
    maria_db_param: ckafkaDatahubTaskTargetResourceMariaDbParamToTerraform(struct!.mariaDbParam),
    mongo_db_param: ckafkaDatahubTaskTargetResourceMongoDbParamToTerraform(struct!.mongoDbParam),
    my_sql_param: ckafkaDatahubTaskTargetResourceMySqlParamToTerraform(struct!.mySqlParam),
    postgre_sql_param: ckafkaDatahubTaskTargetResourcePostgreSqlParamToTerraform(struct!.postgreSqlParam),
    scf_param: ckafkaDatahubTaskTargetResourceScfParamToTerraform(struct!.scfParam),
    sql_server_param: ckafkaDatahubTaskTargetResourceSqlServerParamToTerraform(struct!.sqlServerParam),
    tdw_param: ckafkaDatahubTaskTargetResourceTdwParamToTerraform(struct!.tdwParam),
    topic_param: ckafkaDatahubTaskTargetResourceTopicParamToTerraform(struct!.topicParam),
  }
}


export function ckafkaDatahubTaskTargetResourceToHclTerraform(struct?: CkafkaDatahubTaskTargetResourceOutputReference | CkafkaDatahubTaskTargetResource): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    click_house_param: {
      value: ckafkaDatahubTaskTargetResourceClickHouseParamToHclTerraform(struct!.clickHouseParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceClickHouseParamList",
    },
    cls_param: {
      value: ckafkaDatahubTaskTargetResourceClsParamToHclTerraform(struct!.clsParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceClsParamList",
    },
    cos_param: {
      value: ckafkaDatahubTaskTargetResourceCosParamToHclTerraform(struct!.cosParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceCosParamList",
    },
    ctsdb_param: {
      value: ckafkaDatahubTaskTargetResourceCtsdbParamToHclTerraform(struct!.ctsdbParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceCtsdbParamList",
    },
    dts_param: {
      value: ckafkaDatahubTaskTargetResourceDtsParamToHclTerraform(struct!.dtsParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceDtsParamList",
    },
    es_param: {
      value: ckafkaDatahubTaskTargetResourceEsParamToHclTerraform(struct!.esParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceEsParamList",
    },
    event_bus_param: {
      value: ckafkaDatahubTaskTargetResourceEventBusParamToHclTerraform(struct!.eventBusParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceEventBusParamList",
    },
    kafka_param: {
      value: ckafkaDatahubTaskTargetResourceKafkaParamToHclTerraform(struct!.kafkaParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceKafkaParamList",
    },
    maria_db_param: {
      value: ckafkaDatahubTaskTargetResourceMariaDbParamToHclTerraform(struct!.mariaDbParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceMariaDbParamList",
    },
    mongo_db_param: {
      value: ckafkaDatahubTaskTargetResourceMongoDbParamToHclTerraform(struct!.mongoDbParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceMongoDbParamList",
    },
    my_sql_param: {
      value: ckafkaDatahubTaskTargetResourceMySqlParamToHclTerraform(struct!.mySqlParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceMySqlParamList",
    },
    postgre_sql_param: {
      value: ckafkaDatahubTaskTargetResourcePostgreSqlParamToHclTerraform(struct!.postgreSqlParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourcePostgreSqlParamList",
    },
    scf_param: {
      value: ckafkaDatahubTaskTargetResourceScfParamToHclTerraform(struct!.scfParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceScfParamList",
    },
    sql_server_param: {
      value: ckafkaDatahubTaskTargetResourceSqlServerParamToHclTerraform(struct!.sqlServerParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceSqlServerParamList",
    },
    tdw_param: {
      value: ckafkaDatahubTaskTargetResourceTdwParamToHclTerraform(struct!.tdwParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceTdwParamList",
    },
    topic_param: {
      value: ckafkaDatahubTaskTargetResourceTopicParamToHclTerraform(struct!.topicParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTargetResourceTopicParamList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTargetResourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTargetResource | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._clickHouseParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clickHouseParam = this._clickHouseParam?.internalValue;
    }
    if (this._clsParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clsParam = this._clsParam?.internalValue;
    }
    if (this._cosParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cosParam = this._cosParam?.internalValue;
    }
    if (this._ctsdbParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ctsdbParam = this._ctsdbParam?.internalValue;
    }
    if (this._dtsParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dtsParam = this._dtsParam?.internalValue;
    }
    if (this._esParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.esParam = this._esParam?.internalValue;
    }
    if (this._eventBusParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.eventBusParam = this._eventBusParam?.internalValue;
    }
    if (this._kafkaParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kafkaParam = this._kafkaParam?.internalValue;
    }
    if (this._mariaDbParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mariaDbParam = this._mariaDbParam?.internalValue;
    }
    if (this._mongoDbParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mongoDbParam = this._mongoDbParam?.internalValue;
    }
    if (this._mySqlParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mySqlParam = this._mySqlParam?.internalValue;
    }
    if (this._postgreSqlParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.postgreSqlParam = this._postgreSqlParam?.internalValue;
    }
    if (this._scfParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scfParam = this._scfParam?.internalValue;
    }
    if (this._sqlServerParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sqlServerParam = this._sqlServerParam?.internalValue;
    }
    if (this._tdwParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tdwParam = this._tdwParam?.internalValue;
    }
    if (this._topicParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicParam = this._topicParam?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTargetResource | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._type = undefined;
      this._clickHouseParam.internalValue = undefined;
      this._clsParam.internalValue = undefined;
      this._cosParam.internalValue = undefined;
      this._ctsdbParam.internalValue = undefined;
      this._dtsParam.internalValue = undefined;
      this._esParam.internalValue = undefined;
      this._eventBusParam.internalValue = undefined;
      this._kafkaParam.internalValue = undefined;
      this._mariaDbParam.internalValue = undefined;
      this._mongoDbParam.internalValue = undefined;
      this._mySqlParam.internalValue = undefined;
      this._postgreSqlParam.internalValue = undefined;
      this._scfParam.internalValue = undefined;
      this._sqlServerParam.internalValue = undefined;
      this._tdwParam.internalValue = undefined;
      this._topicParam.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._type = value.type;
      this._clickHouseParam.internalValue = value.clickHouseParam;
      this._clsParam.internalValue = value.clsParam;
      this._cosParam.internalValue = value.cosParam;
      this._ctsdbParam.internalValue = value.ctsdbParam;
      this._dtsParam.internalValue = value.dtsParam;
      this._esParam.internalValue = value.esParam;
      this._eventBusParam.internalValue = value.eventBusParam;
      this._kafkaParam.internalValue = value.kafkaParam;
      this._mariaDbParam.internalValue = value.mariaDbParam;
      this._mongoDbParam.internalValue = value.mongoDbParam;
      this._mySqlParam.internalValue = value.mySqlParam;
      this._postgreSqlParam.internalValue = value.postgreSqlParam;
      this._scfParam.internalValue = value.scfParam;
      this._sqlServerParam.internalValue = value.sqlServerParam;
      this._tdwParam.internalValue = value.tdwParam;
      this._topicParam.internalValue = value.topicParam;
    }
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // click_house_param - computed: false, optional: true, required: false
  private _clickHouseParam = new CkafkaDatahubTaskTargetResourceClickHouseParamOutputReference(this, "click_house_param");
  public get clickHouseParam() {
    return this._clickHouseParam;
  }
  public putClickHouseParam(value: CkafkaDatahubTaskTargetResourceClickHouseParam) {
    this._clickHouseParam.internalValue = value;
  }
  public resetClickHouseParam() {
    this._clickHouseParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clickHouseParamInput() {
    return this._clickHouseParam.internalValue;
  }

  // cls_param - computed: false, optional: true, required: false
  private _clsParam = new CkafkaDatahubTaskTargetResourceClsParamOutputReference(this, "cls_param");
  public get clsParam() {
    return this._clsParam;
  }
  public putClsParam(value: CkafkaDatahubTaskTargetResourceClsParam) {
    this._clsParam.internalValue = value;
  }
  public resetClsParam() {
    this._clsParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clsParamInput() {
    return this._clsParam.internalValue;
  }

  // cos_param - computed: false, optional: true, required: false
  private _cosParam = new CkafkaDatahubTaskTargetResourceCosParamOutputReference(this, "cos_param");
  public get cosParam() {
    return this._cosParam;
  }
  public putCosParam(value: CkafkaDatahubTaskTargetResourceCosParam) {
    this._cosParam.internalValue = value;
  }
  public resetCosParam() {
    this._cosParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cosParamInput() {
    return this._cosParam.internalValue;
  }

  // ctsdb_param - computed: false, optional: true, required: false
  private _ctsdbParam = new CkafkaDatahubTaskTargetResourceCtsdbParamOutputReference(this, "ctsdb_param");
  public get ctsdbParam() {
    return this._ctsdbParam;
  }
  public putCtsdbParam(value: CkafkaDatahubTaskTargetResourceCtsdbParam) {
    this._ctsdbParam.internalValue = value;
  }
  public resetCtsdbParam() {
    this._ctsdbParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ctsdbParamInput() {
    return this._ctsdbParam.internalValue;
  }

  // dts_param - computed: false, optional: true, required: false
  private _dtsParam = new CkafkaDatahubTaskTargetResourceDtsParamOutputReference(this, "dts_param");
  public get dtsParam() {
    return this._dtsParam;
  }
  public putDtsParam(value: CkafkaDatahubTaskTargetResourceDtsParam) {
    this._dtsParam.internalValue = value;
  }
  public resetDtsParam() {
    this._dtsParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dtsParamInput() {
    return this._dtsParam.internalValue;
  }

  // es_param - computed: false, optional: true, required: false
  private _esParam = new CkafkaDatahubTaskTargetResourceEsParamOutputReference(this, "es_param");
  public get esParam() {
    return this._esParam;
  }
  public putEsParam(value: CkafkaDatahubTaskTargetResourceEsParam) {
    this._esParam.internalValue = value;
  }
  public resetEsParam() {
    this._esParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get esParamInput() {
    return this._esParam.internalValue;
  }

  // event_bus_param - computed: false, optional: true, required: false
  private _eventBusParam = new CkafkaDatahubTaskTargetResourceEventBusParamOutputReference(this, "event_bus_param");
  public get eventBusParam() {
    return this._eventBusParam;
  }
  public putEventBusParam(value: CkafkaDatahubTaskTargetResourceEventBusParam) {
    this._eventBusParam.internalValue = value;
  }
  public resetEventBusParam() {
    this._eventBusParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get eventBusParamInput() {
    return this._eventBusParam.internalValue;
  }

  // kafka_param - computed: false, optional: true, required: false
  private _kafkaParam = new CkafkaDatahubTaskTargetResourceKafkaParamOutputReference(this, "kafka_param");
  public get kafkaParam() {
    return this._kafkaParam;
  }
  public putKafkaParam(value: CkafkaDatahubTaskTargetResourceKafkaParam) {
    this._kafkaParam.internalValue = value;
  }
  public resetKafkaParam() {
    this._kafkaParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kafkaParamInput() {
    return this._kafkaParam.internalValue;
  }

  // maria_db_param - computed: false, optional: true, required: false
  private _mariaDbParam = new CkafkaDatahubTaskTargetResourceMariaDbParamOutputReference(this, "maria_db_param");
  public get mariaDbParam() {
    return this._mariaDbParam;
  }
  public putMariaDbParam(value: CkafkaDatahubTaskTargetResourceMariaDbParam) {
    this._mariaDbParam.internalValue = value;
  }
  public resetMariaDbParam() {
    this._mariaDbParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mariaDbParamInput() {
    return this._mariaDbParam.internalValue;
  }

  // mongo_db_param - computed: false, optional: true, required: false
  private _mongoDbParam = new CkafkaDatahubTaskTargetResourceMongoDbParamOutputReference(this, "mongo_db_param");
  public get mongoDbParam() {
    return this._mongoDbParam;
  }
  public putMongoDbParam(value: CkafkaDatahubTaskTargetResourceMongoDbParam) {
    this._mongoDbParam.internalValue = value;
  }
  public resetMongoDbParam() {
    this._mongoDbParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mongoDbParamInput() {
    return this._mongoDbParam.internalValue;
  }

  // my_sql_param - computed: false, optional: true, required: false
  private _mySqlParam = new CkafkaDatahubTaskTargetResourceMySqlParamOutputReference(this, "my_sql_param");
  public get mySqlParam() {
    return this._mySqlParam;
  }
  public putMySqlParam(value: CkafkaDatahubTaskTargetResourceMySqlParam) {
    this._mySqlParam.internalValue = value;
  }
  public resetMySqlParam() {
    this._mySqlParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mySqlParamInput() {
    return this._mySqlParam.internalValue;
  }

  // postgre_sql_param - computed: false, optional: true, required: false
  private _postgreSqlParam = new CkafkaDatahubTaskTargetResourcePostgreSqlParamOutputReference(this, "postgre_sql_param");
  public get postgreSqlParam() {
    return this._postgreSqlParam;
  }
  public putPostgreSqlParam(value: CkafkaDatahubTaskTargetResourcePostgreSqlParam) {
    this._postgreSqlParam.internalValue = value;
  }
  public resetPostgreSqlParam() {
    this._postgreSqlParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get postgreSqlParamInput() {
    return this._postgreSqlParam.internalValue;
  }

  // scf_param - computed: false, optional: true, required: false
  private _scfParam = new CkafkaDatahubTaskTargetResourceScfParamOutputReference(this, "scf_param");
  public get scfParam() {
    return this._scfParam;
  }
  public putScfParam(value: CkafkaDatahubTaskTargetResourceScfParam) {
    this._scfParam.internalValue = value;
  }
  public resetScfParam() {
    this._scfParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scfParamInput() {
    return this._scfParam.internalValue;
  }

  // sql_server_param - computed: false, optional: true, required: false
  private _sqlServerParam = new CkafkaDatahubTaskTargetResourceSqlServerParamOutputReference(this, "sql_server_param");
  public get sqlServerParam() {
    return this._sqlServerParam;
  }
  public putSqlServerParam(value: CkafkaDatahubTaskTargetResourceSqlServerParam) {
    this._sqlServerParam.internalValue = value;
  }
  public resetSqlServerParam() {
    this._sqlServerParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sqlServerParamInput() {
    return this._sqlServerParam.internalValue;
  }

  // tdw_param - computed: false, optional: true, required: false
  private _tdwParam = new CkafkaDatahubTaskTargetResourceTdwParamOutputReference(this, "tdw_param");
  public get tdwParam() {
    return this._tdwParam;
  }
  public putTdwParam(value: CkafkaDatahubTaskTargetResourceTdwParam) {
    this._tdwParam.internalValue = value;
  }
  public resetTdwParam() {
    this._tdwParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tdwParamInput() {
    return this._tdwParam.internalValue;
  }

  // topic_param - computed: false, optional: true, required: false
  private _topicParam = new CkafkaDatahubTaskTargetResourceTopicParamOutputReference(this, "topic_param");
  public get topicParam() {
    return this._topicParam;
  }
  public putTopicParam(value: CkafkaDatahubTaskTargetResourceTopicParam) {
    this._topicParam.internalValue = value;
  }
  public resetTopicParam() {
    this._topicParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicParamInput() {
    return this._topicParam.internalValue;
  }
}
export interface CkafkaDatahubTaskTransformParamAnalyseResult {
  /**
  * key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#key CkafkaDatahubTask#key}
  */
  readonly key: string;
  /**
  * Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type?: string;
  /**
  * value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#value CkafkaDatahubTask#value}
  */
  readonly value?: string;
}

export function ckafkaDatahubTaskTransformParamAnalyseResultToTerraform(struct?: CkafkaDatahubTaskTransformParamAnalyseResult | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function ckafkaDatahubTaskTransformParamAnalyseResultToHclTerraform(struct?: CkafkaDatahubTaskTransformParamAnalyseResult | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformParamAnalyseResultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTransformParamAnalyseResult | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformParamAnalyseResult | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class CkafkaDatahubTaskTransformParamAnalyseResultList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTransformParamAnalyseResult[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTransformParamAnalyseResultOutputReference {
    return new CkafkaDatahubTaskTransformParamAnalyseResultOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappings {
  /**
  * database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * Table name, multiple tables, separated by (commas).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * Topic name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic: string;
  /**
  * Topic ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId: string;
}

export function ckafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappingsToTerraform(struct?: CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    table: cdktf.stringToTerraform(struct!.table),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
  }
}


export function ckafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappingsToHclTerraform(struct?: CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._database = undefined;
      this._table = undefined;
      this._topic = undefined;
      this._topicId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._database = value.database;
      this._table = value.table;
      this._topic = value.topic;
      this._topicId = value.topicId;
    }
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // topic - computed: false, optional: false, required: true
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: false, required: true
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }
}

export class CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappingsList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappings[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappingsOutputReference {
    return new CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappingsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTransformParamFailureParamKafkaParam {
  /**
  * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * Enable the fault-tolerant instance and enable the dead-letter queue.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#enable_toleration CkafkaDatahubTask#enable_toleration}
  */
  readonly enableToleration?: boolean | cdktf.IResolvable;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, initial position earliest, latest position latest, time point position timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * Partition num.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#partition_num CkafkaDatahubTask#partition_num}
  */
  readonly partitionNum?: number;
  /**
  * Qps limit.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#qps_limit CkafkaDatahubTask#qps_limit}
  */
  readonly qpsLimit?: number;
  /**
  * resource id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * resource id name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource_name CkafkaDatahubTask#resource_name}
  */
  readonly resourceName?: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt: boolean | cdktf.IResolvable;
  /**
  * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * Topic name, multiple separated by,.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic?: string;
  /**
  * Topic Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
  /**
  * Distribute to multiple topics switch, the default is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_table_mapping CkafkaDatahubTask#use_table_mapping}
  */
  readonly useTableMapping?: boolean | cdktf.IResolvable;
  /**
  * Zone ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#zone_id CkafkaDatahubTask#zone_id}
  */
  readonly zoneId?: number;
  /**
  * table_mappings block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table_mappings CkafkaDatahubTask#table_mappings}
  */
  readonly tableMappings?: CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappings[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTransformParamFailureParamKafkaParamToTerraform(struct?: CkafkaDatahubTaskTransformParamFailureParamKafkaParamOutputReference | CkafkaDatahubTaskTransformParamFailureParamKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    enable_toleration: cdktf.booleanToTerraform(struct!.enableToleration),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    partition_num: cdktf.numberToTerraform(struct!.partitionNum),
    qps_limit: cdktf.numberToTerraform(struct!.qpsLimit),
    resource: cdktf.stringToTerraform(struct!.resource),
    resource_name: cdktf.stringToTerraform(struct!.resourceName),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
    use_table_mapping: cdktf.booleanToTerraform(struct!.useTableMapping),
    zone_id: cdktf.numberToTerraform(struct!.zoneId),
    table_mappings: cdktf.listMapper(ckafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappingsToTerraform, true)(struct!.tableMappings),
  }
}


export function ckafkaDatahubTaskTransformParamFailureParamKafkaParamToHclTerraform(struct?: CkafkaDatahubTaskTransformParamFailureParamKafkaParamOutputReference | CkafkaDatahubTaskTransformParamFailureParamKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enable_toleration: {
      value: cdktf.booleanToHclTerraform(struct!.enableToleration),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition_num: {
      value: cdktf.numberToHclTerraform(struct!.partitionNum),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    qps_limit: {
      value: cdktf.numberToHclTerraform(struct!.qpsLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_name: {
      value: cdktf.stringToHclTerraform(struct!.resourceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_table_mapping: {
      value: cdktf.booleanToHclTerraform(struct!.useTableMapping),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    zone_id: {
      value: cdktf.numberToHclTerraform(struct!.zoneId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    table_mappings: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappingsToHclTerraform, true)(struct!.tableMappings),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappingsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformParamFailureParamKafkaParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformParamFailureParamKafkaParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._enableToleration !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableToleration = this._enableToleration;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._partitionNum !== undefined) {
      hasAnyValues = true;
      internalValueResult.partitionNum = this._partitionNum;
    }
    if (this._qpsLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.qpsLimit = this._qpsLimit;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._resourceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceName = this._resourceName;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    if (this._useTableMapping !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTableMapping = this._useTableMapping;
    }
    if (this._zoneId !== undefined) {
      hasAnyValues = true;
      internalValueResult.zoneId = this._zoneId;
    }
    if (this._tableMappings?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableMappings = this._tableMappings?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformParamFailureParamKafkaParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._enableToleration = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._partitionNum = undefined;
      this._qpsLimit = undefined;
      this._resource = undefined;
      this._resourceName = undefined;
      this._selfBuilt = undefined;
      this._startTime = undefined;
      this._topic = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
      this._useTableMapping = undefined;
      this._zoneId = undefined;
      this._tableMappings.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._enableToleration = value.enableToleration;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._partitionNum = value.partitionNum;
      this._qpsLimit = value.qpsLimit;
      this._resource = value.resource;
      this._resourceName = value.resourceName;
      this._selfBuilt = value.selfBuilt;
      this._startTime = value.startTime;
      this._topic = value.topic;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
      this._useTableMapping = value.useTableMapping;
      this._zoneId = value.zoneId;
      this._tableMappings.internalValue = value.tableMappings;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // enable_toleration - computed: false, optional: true, required: false
  private _enableToleration?: boolean | cdktf.IResolvable; 
  public get enableToleration() {
    return this.getBooleanAttribute('enable_toleration');
  }
  public set enableToleration(value: boolean | cdktf.IResolvable) {
    this._enableToleration = value;
  }
  public resetEnableToleration() {
    this._enableToleration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableTolerationInput() {
    return this._enableToleration;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // partition_num - computed: false, optional: true, required: false
  private _partitionNum?: number; 
  public get partitionNum() {
    return this.getNumberAttribute('partition_num');
  }
  public set partitionNum(value: number) {
    this._partitionNum = value;
  }
  public resetPartitionNum() {
    this._partitionNum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionNumInput() {
    return this._partitionNum;
  }

  // qps_limit - computed: false, optional: true, required: false
  private _qpsLimit?: number; 
  public get qpsLimit() {
    return this.getNumberAttribute('qps_limit');
  }
  public set qpsLimit(value: number) {
    this._qpsLimit = value;
  }
  public resetQpsLimit() {
    this._qpsLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qpsLimitInput() {
    return this._qpsLimit;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // resource_name - computed: false, optional: true, required: false
  private _resourceName?: string; 
  public get resourceName() {
    return this.getStringAttribute('resource_name');
  }
  public set resourceName(value: string) {
    this._resourceName = value;
  }
  public resetResourceName() {
    this._resourceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceNameInput() {
    return this._resourceName;
  }

  // self_built - computed: false, optional: false, required: true
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }

  // use_table_mapping - computed: false, optional: true, required: false
  private _useTableMapping?: boolean | cdktf.IResolvable; 
  public get useTableMapping() {
    return this.getBooleanAttribute('use_table_mapping');
  }
  public set useTableMapping(value: boolean | cdktf.IResolvable) {
    this._useTableMapping = value;
  }
  public resetUseTableMapping() {
    this._useTableMapping = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTableMappingInput() {
    return this._useTableMapping;
  }

  // zone_id - computed: false, optional: true, required: false
  private _zoneId?: number; 
  public get zoneId() {
    return this.getNumberAttribute('zone_id');
  }
  public set zoneId(value: number) {
    this._zoneId = value;
  }
  public resetZoneId() {
    this._zoneId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get zoneIdInput() {
    return this._zoneId;
  }

  // table_mappings - computed: false, optional: true, required: false
  private _tableMappings = new CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappingsList(this, "table_mappings", false);
  public get tableMappings() {
    return this._tableMappings;
  }
  public putTableMappings(value: CkafkaDatahubTaskTransformParamFailureParamKafkaParamTableMappings[] | cdktf.IResolvable) {
    this._tableMappings.internalValue = value;
  }
  public resetTableMappings() {
    this._tableMappings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableMappingsInput() {
    return this._tableMappings.internalValue;
  }
}
export interface CkafkaDatahubTaskTransformParamFailureParamTopicParam {
  /**
  * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, initial position earliest, latest position latest, time point position timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * The topic name of the topic sold separately.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * TopicId.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTransformParamFailureParamTopicParamToTerraform(struct?: CkafkaDatahubTaskTransformParamFailureParamTopicParamOutputReference | CkafkaDatahubTaskTransformParamFailureParamTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    resource: cdktf.stringToTerraform(struct!.resource),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
  }
}


export function ckafkaDatahubTaskTransformParamFailureParamTopicParamToHclTerraform(struct?: CkafkaDatahubTaskTransformParamFailureParamTopicParamOutputReference | CkafkaDatahubTaskTransformParamFailureParamTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformParamFailureParamTopicParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformParamFailureParamTopicParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformParamFailureParamTopicParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._resource = undefined;
      this._startTime = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._resource = value.resource;
      this._startTime = value.startTime;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic_id - computed: false, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }
}
export interface CkafkaDatahubTaskTransformParamFailureParam {
  /**
  * dlq type, CKAFKA|TOPIC.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#dlq_type CkafkaDatahubTask#dlq_type}
  */
  readonly dlqType?: string;
  /**
  * retry times.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#max_retry_attempts CkafkaDatahubTask#max_retry_attempts}
  */
  readonly maxRetryAttempts?: number;
  /**
  * retry interval.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#retry_interval CkafkaDatahubTask#retry_interval}
  */
  readonly retryInterval?: number;
  /**
  * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
  /**
  * kafka_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#kafka_param CkafkaDatahubTask#kafka_param}
  */
  readonly kafkaParam?: CkafkaDatahubTaskTransformParamFailureParamKafkaParam;
  /**
  * topic_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_param CkafkaDatahubTask#topic_param}
  */
  readonly topicParam?: CkafkaDatahubTaskTransformParamFailureParamTopicParam;
}

export function ckafkaDatahubTaskTransformParamFailureParamToTerraform(struct?: CkafkaDatahubTaskTransformParamFailureParamOutputReference | CkafkaDatahubTaskTransformParamFailureParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dlq_type: cdktf.stringToTerraform(struct!.dlqType),
    max_retry_attempts: cdktf.numberToTerraform(struct!.maxRetryAttempts),
    retry_interval: cdktf.numberToTerraform(struct!.retryInterval),
    type: cdktf.stringToTerraform(struct!.type),
    kafka_param: ckafkaDatahubTaskTransformParamFailureParamKafkaParamToTerraform(struct!.kafkaParam),
    topic_param: ckafkaDatahubTaskTransformParamFailureParamTopicParamToTerraform(struct!.topicParam),
  }
}


export function ckafkaDatahubTaskTransformParamFailureParamToHclTerraform(struct?: CkafkaDatahubTaskTransformParamFailureParamOutputReference | CkafkaDatahubTaskTransformParamFailureParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dlq_type: {
      value: cdktf.stringToHclTerraform(struct!.dlqType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_retry_attempts: {
      value: cdktf.numberToHclTerraform(struct!.maxRetryAttempts),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    retry_interval: {
      value: cdktf.numberToHclTerraform(struct!.retryInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kafka_param: {
      value: ckafkaDatahubTaskTransformParamFailureParamKafkaParamToHclTerraform(struct!.kafkaParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformParamFailureParamKafkaParamList",
    },
    topic_param: {
      value: ckafkaDatahubTaskTransformParamFailureParamTopicParamToHclTerraform(struct!.topicParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformParamFailureParamTopicParamList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformParamFailureParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformParamFailureParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dlqType !== undefined) {
      hasAnyValues = true;
      internalValueResult.dlqType = this._dlqType;
    }
    if (this._maxRetryAttempts !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxRetryAttempts = this._maxRetryAttempts;
    }
    if (this._retryInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.retryInterval = this._retryInterval;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._kafkaParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kafkaParam = this._kafkaParam?.internalValue;
    }
    if (this._topicParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicParam = this._topicParam?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformParamFailureParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dlqType = undefined;
      this._maxRetryAttempts = undefined;
      this._retryInterval = undefined;
      this._type = undefined;
      this._kafkaParam.internalValue = undefined;
      this._topicParam.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dlqType = value.dlqType;
      this._maxRetryAttempts = value.maxRetryAttempts;
      this._retryInterval = value.retryInterval;
      this._type = value.type;
      this._kafkaParam.internalValue = value.kafkaParam;
      this._topicParam.internalValue = value.topicParam;
    }
  }

  // dlq_type - computed: false, optional: true, required: false
  private _dlqType?: string; 
  public get dlqType() {
    return this.getStringAttribute('dlq_type');
  }
  public set dlqType(value: string) {
    this._dlqType = value;
  }
  public resetDlqType() {
    this._dlqType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dlqTypeInput() {
    return this._dlqType;
  }

  // max_retry_attempts - computed: false, optional: true, required: false
  private _maxRetryAttempts?: number; 
  public get maxRetryAttempts() {
    return this.getNumberAttribute('max_retry_attempts');
  }
  public set maxRetryAttempts(value: number) {
    this._maxRetryAttempts = value;
  }
  public resetMaxRetryAttempts() {
    this._maxRetryAttempts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxRetryAttemptsInput() {
    return this._maxRetryAttempts;
  }

  // retry_interval - computed: false, optional: true, required: false
  private _retryInterval?: number; 
  public get retryInterval() {
    return this.getNumberAttribute('retry_interval');
  }
  public set retryInterval(value: number) {
    this._retryInterval = value;
  }
  public resetRetryInterval() {
    this._retryInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get retryIntervalInput() {
    return this._retryInterval;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // kafka_param - computed: false, optional: true, required: false
  private _kafkaParam = new CkafkaDatahubTaskTransformParamFailureParamKafkaParamOutputReference(this, "kafka_param");
  public get kafkaParam() {
    return this._kafkaParam;
  }
  public putKafkaParam(value: CkafkaDatahubTaskTransformParamFailureParamKafkaParam) {
    this._kafkaParam.internalValue = value;
  }
  public resetKafkaParam() {
    this._kafkaParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kafkaParamInput() {
    return this._kafkaParam.internalValue;
  }

  // topic_param - computed: false, optional: true, required: false
  private _topicParam = new CkafkaDatahubTaskTransformParamFailureParamTopicParamOutputReference(this, "topic_param");
  public get topicParam() {
    return this._topicParam;
  }
  public putTopicParam(value: CkafkaDatahubTaskTransformParamFailureParamTopicParam) {
    this._topicParam.internalValue = value;
  }
  public resetTopicParam() {
    this._topicParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicParamInput() {
    return this._topicParam.internalValue;
  }
}
export interface CkafkaDatahubTaskTransformParamFilterParam {
  /**
  * Key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#key CkafkaDatahubTask#key}
  */
  readonly key: string;
  /**
  * Matching mode, prefix matches PREFIX, suffix matches SUFFIX, contains matches CONTAINS, except matches EXCEPT, value matches NUMBER, IP matches IP.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#match_mode CkafkaDatahubTask#match_mode}
  */
  readonly matchMode: string;
  /**
  * REGULAR.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type?: string;
  /**
  * Value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#value CkafkaDatahubTask#value}
  */
  readonly value: string;
}

export function ckafkaDatahubTaskTransformParamFilterParamToTerraform(struct?: CkafkaDatahubTaskTransformParamFilterParam | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    match_mode: cdktf.stringToTerraform(struct!.matchMode),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function ckafkaDatahubTaskTransformParamFilterParamToHclTerraform(struct?: CkafkaDatahubTaskTransformParamFilterParam | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    match_mode: {
      value: cdktf.stringToHclTerraform(struct!.matchMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformParamFilterParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTransformParamFilterParam | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._matchMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchMode = this._matchMode;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformParamFilterParam | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._matchMode = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._matchMode = value.matchMode;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // match_mode - computed: false, optional: false, required: true
  private _matchMode?: string; 
  public get matchMode() {
    return this.getStringAttribute('match_mode');
  }
  public set matchMode(value: string) {
    this._matchMode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get matchModeInput() {
    return this._matchMode;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class CkafkaDatahubTaskTransformParamFilterParamList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTransformParamFilterParam[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTransformParamFilterParamOutputReference {
    return new CkafkaDatahubTaskTransformParamFilterParamOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTransformParamMapParam {
  /**
  * key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#key CkafkaDatahubTask#key}
  */
  readonly key: string;
  /**
  * Type, DEFAULT default, DATE system default - timestamp, CUSTOMIZE custom, MAPPING mapping.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type?: string;
  /**
  * value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#value CkafkaDatahubTask#value}
  */
  readonly value?: string;
}

export function ckafkaDatahubTaskTransformParamMapParamToTerraform(struct?: CkafkaDatahubTaskTransformParamMapParam | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function ckafkaDatahubTaskTransformParamMapParamToHclTerraform(struct?: CkafkaDatahubTaskTransformParamMapParam | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformParamMapParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTransformParamMapParam | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformParamMapParam | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class CkafkaDatahubTaskTransformParamMapParamList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTransformParamMapParam[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTransformParamMapParamOutputReference {
    return new CkafkaDatahubTaskTransformParamMapParamOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTransformParam {
  /**
  * parsing format, JSON | DELIMITER| REGULAR.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#analysis_format CkafkaDatahubTask#analysis_format}
  */
  readonly analysisFormat: string;
  /**
  * Raw data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#content CkafkaDatahubTask#content}
  */
  readonly content: string;
  /**
  * output format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#output_format CkafkaDatahubTask#output_format}
  */
  readonly outputFormat: string;
  /**
  * delimiter, regular expression.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex?: string;
  /**
  * Test Results.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#result CkafkaDatahubTask#result}
  */
  readonly result?: string;
  /**
  * Data source, TOPIC pulls from the source topic, CUSTOMIZE custom.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#source_type CkafkaDatahubTask#source_type}
  */
  readonly sourceType: string;
  /**
  * Whether the underlying engine uses eb.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_event_bus CkafkaDatahubTask#use_event_bus}
  */
  readonly useEventBus?: boolean | cdktf.IResolvable;
  /**
  * analyse_result block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#analyse_result CkafkaDatahubTask#analyse_result}
  */
  readonly analyseResult?: CkafkaDatahubTaskTransformParamAnalyseResult[] | cdktf.IResolvable;
  /**
  * failure_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#failure_param CkafkaDatahubTask#failure_param}
  */
  readonly failureParam: CkafkaDatahubTaskTransformParamFailureParam;
  /**
  * filter_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#filter_param CkafkaDatahubTask#filter_param}
  */
  readonly filterParam?: CkafkaDatahubTaskTransformParamFilterParam[] | cdktf.IResolvable;
  /**
  * map_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#map_param CkafkaDatahubTask#map_param}
  */
  readonly mapParam?: CkafkaDatahubTaskTransformParamMapParam[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTransformParamToTerraform(struct?: CkafkaDatahubTaskTransformParamOutputReference | CkafkaDatahubTaskTransformParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    analysis_format: cdktf.stringToTerraform(struct!.analysisFormat),
    content: cdktf.stringToTerraform(struct!.content),
    output_format: cdktf.stringToTerraform(struct!.outputFormat),
    regex: cdktf.stringToTerraform(struct!.regex),
    result: cdktf.stringToTerraform(struct!.result),
    source_type: cdktf.stringToTerraform(struct!.sourceType),
    use_event_bus: cdktf.booleanToTerraform(struct!.useEventBus),
    analyse_result: cdktf.listMapper(ckafkaDatahubTaskTransformParamAnalyseResultToTerraform, true)(struct!.analyseResult),
    failure_param: ckafkaDatahubTaskTransformParamFailureParamToTerraform(struct!.failureParam),
    filter_param: cdktf.listMapper(ckafkaDatahubTaskTransformParamFilterParamToTerraform, true)(struct!.filterParam),
    map_param: cdktf.listMapper(ckafkaDatahubTaskTransformParamMapParamToTerraform, true)(struct!.mapParam),
  }
}


export function ckafkaDatahubTaskTransformParamToHclTerraform(struct?: CkafkaDatahubTaskTransformParamOutputReference | CkafkaDatahubTaskTransformParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    analysis_format: {
      value: cdktf.stringToHclTerraform(struct!.analysisFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    content: {
      value: cdktf.stringToHclTerraform(struct!.content),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    output_format: {
      value: cdktf.stringToHclTerraform(struct!.outputFormat),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    result: {
      value: cdktf.stringToHclTerraform(struct!.result),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    source_type: {
      value: cdktf.stringToHclTerraform(struct!.sourceType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_event_bus: {
      value: cdktf.booleanToHclTerraform(struct!.useEventBus),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    analyse_result: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTransformParamAnalyseResultToHclTerraform, true)(struct!.analyseResult),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformParamAnalyseResultList",
    },
    failure_param: {
      value: ckafkaDatahubTaskTransformParamFailureParamToHclTerraform(struct!.failureParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformParamFailureParamList",
    },
    filter_param: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTransformParamFilterParamToHclTerraform, true)(struct!.filterParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformParamFilterParamList",
    },
    map_param: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTransformParamMapParamToHclTerraform, true)(struct!.mapParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformParamMapParamList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._analysisFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.analysisFormat = this._analysisFormat;
    }
    if (this._content !== undefined) {
      hasAnyValues = true;
      internalValueResult.content = this._content;
    }
    if (this._outputFormat !== undefined) {
      hasAnyValues = true;
      internalValueResult.outputFormat = this._outputFormat;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    if (this._result !== undefined) {
      hasAnyValues = true;
      internalValueResult.result = this._result;
    }
    if (this._sourceType !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceType = this._sourceType;
    }
    if (this._useEventBus !== undefined) {
      hasAnyValues = true;
      internalValueResult.useEventBus = this._useEventBus;
    }
    if (this._analyseResult?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.analyseResult = this._analyseResult?.internalValue;
    }
    if (this._failureParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.failureParam = this._failureParam?.internalValue;
    }
    if (this._filterParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.filterParam = this._filterParam?.internalValue;
    }
    if (this._mapParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mapParam = this._mapParam?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._analysisFormat = undefined;
      this._content = undefined;
      this._outputFormat = undefined;
      this._regex = undefined;
      this._result = undefined;
      this._sourceType = undefined;
      this._useEventBus = undefined;
      this._analyseResult.internalValue = undefined;
      this._failureParam.internalValue = undefined;
      this._filterParam.internalValue = undefined;
      this._mapParam.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._analysisFormat = value.analysisFormat;
      this._content = value.content;
      this._outputFormat = value.outputFormat;
      this._regex = value.regex;
      this._result = value.result;
      this._sourceType = value.sourceType;
      this._useEventBus = value.useEventBus;
      this._analyseResult.internalValue = value.analyseResult;
      this._failureParam.internalValue = value.failureParam;
      this._filterParam.internalValue = value.filterParam;
      this._mapParam.internalValue = value.mapParam;
    }
  }

  // analysis_format - computed: false, optional: false, required: true
  private _analysisFormat?: string; 
  public get analysisFormat() {
    return this.getStringAttribute('analysis_format');
  }
  public set analysisFormat(value: string) {
    this._analysisFormat = value;
  }
  // Temporarily expose input value. Use with caution.
  public get analysisFormatInput() {
    return this._analysisFormat;
  }

  // content - computed: false, optional: false, required: true
  private _content?: string; 
  public get content() {
    return this.getStringAttribute('content');
  }
  public set content(value: string) {
    this._content = value;
  }
  // Temporarily expose input value. Use with caution.
  public get contentInput() {
    return this._content;
  }

  // output_format - computed: false, optional: false, required: true
  private _outputFormat?: string; 
  public get outputFormat() {
    return this.getStringAttribute('output_format');
  }
  public set outputFormat(value: string) {
    this._outputFormat = value;
  }
  // Temporarily expose input value. Use with caution.
  public get outputFormatInput() {
    return this._outputFormat;
  }

  // regex - computed: false, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }

  // result - computed: false, optional: true, required: false
  private _result?: string; 
  public get result() {
    return this.getStringAttribute('result');
  }
  public set result(value: string) {
    this._result = value;
  }
  public resetResult() {
    this._result = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resultInput() {
    return this._result;
  }

  // source_type - computed: false, optional: false, required: true
  private _sourceType?: string; 
  public get sourceType() {
    return this.getStringAttribute('source_type');
  }
  public set sourceType(value: string) {
    this._sourceType = value;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceTypeInput() {
    return this._sourceType;
  }

  // use_event_bus - computed: false, optional: true, required: false
  private _useEventBus?: boolean | cdktf.IResolvable; 
  public get useEventBus() {
    return this.getBooleanAttribute('use_event_bus');
  }
  public set useEventBus(value: boolean | cdktf.IResolvable) {
    this._useEventBus = value;
  }
  public resetUseEventBus() {
    this._useEventBus = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useEventBusInput() {
    return this._useEventBus;
  }

  // analyse_result - computed: false, optional: true, required: false
  private _analyseResult = new CkafkaDatahubTaskTransformParamAnalyseResultList(this, "analyse_result", false);
  public get analyseResult() {
    return this._analyseResult;
  }
  public putAnalyseResult(value: CkafkaDatahubTaskTransformParamAnalyseResult[] | cdktf.IResolvable) {
    this._analyseResult.internalValue = value;
  }
  public resetAnalyseResult() {
    this._analyseResult.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyseResultInput() {
    return this._analyseResult.internalValue;
  }

  // failure_param - computed: false, optional: false, required: true
  private _failureParam = new CkafkaDatahubTaskTransformParamFailureParamOutputReference(this, "failure_param");
  public get failureParam() {
    return this._failureParam;
  }
  public putFailureParam(value: CkafkaDatahubTaskTransformParamFailureParam) {
    this._failureParam.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get failureParamInput() {
    return this._failureParam.internalValue;
  }

  // filter_param - computed: false, optional: true, required: false
  private _filterParam = new CkafkaDatahubTaskTransformParamFilterParamList(this, "filter_param", false);
  public get filterParam() {
    return this._filterParam;
  }
  public putFilterParam(value: CkafkaDatahubTaskTransformParamFilterParam[] | cdktf.IResolvable) {
    this._filterParam.internalValue = value;
  }
  public resetFilterParam() {
    this._filterParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterParamInput() {
    return this._filterParam.internalValue;
  }

  // map_param - computed: false, optional: true, required: false
  private _mapParam = new CkafkaDatahubTaskTransformParamMapParamList(this, "map_param", false);
  public get mapParam() {
    return this._mapParam;
  }
  public putMapParam(value: CkafkaDatahubTaskTransformParamMapParam[] | cdktf.IResolvable) {
    this._mapParam.internalValue = value;
  }
  public resetMapParam() {
    this._mapParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mapParamInput() {
    return this._mapParam.internalValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamBatchAnalyse {
  /**
  * ONE BY ONE single output, MERGE combined output.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#format CkafkaDatahubTask#format}
  */
  readonly format: string;
}

export function ckafkaDatahubTaskTransformsParamBatchAnalyseToTerraform(struct?: CkafkaDatahubTaskTransformsParamBatchAnalyseOutputReference | CkafkaDatahubTaskTransformsParamBatchAnalyse): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    format: cdktf.stringToTerraform(struct!.format),
  }
}


export function ckafkaDatahubTaskTransformsParamBatchAnalyseToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamBatchAnalyseOutputReference | CkafkaDatahubTaskTransformsParamBatchAnalyse): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamBatchAnalyseOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamBatchAnalyse | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamBatchAnalyse | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._format = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._format = value.format;
    }
  }

  // format - computed: false, optional: false, required: true
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }
}
export interface CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappings {
  /**
  * database name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#database CkafkaDatahubTask#database}
  */
  readonly database: string;
  /**
  * Table name, multiple tables, separated by (commas).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table CkafkaDatahubTask#table}
  */
  readonly table: string;
  /**
  * Topic name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic: string;
  /**
  * Topic ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId: string;
}

export function ckafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappingsToTerraform(struct?: CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    table: cdktf.stringToTerraform(struct!.table),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
  }
}


export function ckafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappingsToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._database = undefined;
      this._table = undefined;
      this._topic = undefined;
      this._topicId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._database = value.database;
      this._table = value.table;
      this._topic = value.topic;
      this._topicId = value.topicId;
    }
  }

  // database - computed: false, optional: false, required: true
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // table - computed: false, optional: false, required: true
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // topic - computed: false, optional: false, required: true
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: false, required: true
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }
}

export class CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappingsList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappings[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappingsOutputReference {
    return new CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappingsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTransformsParamFailureParamKafkaParam {
  /**
  * Whether to compress when writing to the Topic, if it is not enabled, fill in none, if it is enabled, fill in open.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * Enable the fault-tolerant instance and enable the dead-letter queue.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#enable_toleration CkafkaDatahubTask#enable_toleration}
  */
  readonly enableToleration?: boolean | cdktf.IResolvable;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, initial position earliest, latest position latest, time point position timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * Partition num.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#partition_num CkafkaDatahubTask#partition_num}
  */
  readonly partitionNum?: number;
  /**
  * Qps limit.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#qps_limit CkafkaDatahubTask#qps_limit}
  */
  readonly qpsLimit?: number;
  /**
  * resource id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * resource id name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource_name CkafkaDatahubTask#resource_name}
  */
  readonly resourceName?: string;
  /**
  * Whether it is a self-built cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#self_built CkafkaDatahubTask#self_built}
  */
  readonly selfBuilt: boolean | cdktf.IResolvable;
  /**
  * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * Topic name, multiple separated by,.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic CkafkaDatahubTask#topic}
  */
  readonly topic?: string;
  /**
  * Topic Id.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks, if you do not use to distribute to multiple topics, you need to fill in the topic name that needs to be automatically created in the Topic field).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
  /**
  * Distribute to multiple topics switch, the default is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_table_mapping CkafkaDatahubTask#use_table_mapping}
  */
  readonly useTableMapping?: boolean | cdktf.IResolvable;
  /**
  * Zone ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#zone_id CkafkaDatahubTask#zone_id}
  */
  readonly zoneId?: number;
  /**
  * table_mappings block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#table_mappings CkafkaDatahubTask#table_mappings}
  */
  readonly tableMappings?: CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappings[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTransformsParamFailureParamKafkaParamToTerraform(struct?: CkafkaDatahubTaskTransformsParamFailureParamKafkaParamOutputReference | CkafkaDatahubTaskTransformsParamFailureParamKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    enable_toleration: cdktf.booleanToTerraform(struct!.enableToleration),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    partition_num: cdktf.numberToTerraform(struct!.partitionNum),
    qps_limit: cdktf.numberToTerraform(struct!.qpsLimit),
    resource: cdktf.stringToTerraform(struct!.resource),
    resource_name: cdktf.stringToTerraform(struct!.resourceName),
    self_built: cdktf.booleanToTerraform(struct!.selfBuilt),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic: cdktf.stringToTerraform(struct!.topic),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
    use_table_mapping: cdktf.booleanToTerraform(struct!.useTableMapping),
    zone_id: cdktf.numberToTerraform(struct!.zoneId),
    table_mappings: cdktf.listMapper(ckafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappingsToTerraform, true)(struct!.tableMappings),
  }
}


export function ckafkaDatahubTaskTransformsParamFailureParamKafkaParamToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFailureParamKafkaParamOutputReference | CkafkaDatahubTaskTransformsParamFailureParamKafkaParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enable_toleration: {
      value: cdktf.booleanToHclTerraform(struct!.enableToleration),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition_num: {
      value: cdktf.numberToHclTerraform(struct!.partitionNum),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    qps_limit: {
      value: cdktf.numberToHclTerraform(struct!.qpsLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_name: {
      value: cdktf.stringToHclTerraform(struct!.resourceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_built: {
      value: cdktf.booleanToHclTerraform(struct!.selfBuilt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_table_mapping: {
      value: cdktf.booleanToHclTerraform(struct!.useTableMapping),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    zone_id: {
      value: cdktf.numberToHclTerraform(struct!.zoneId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    table_mappings: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappingsToHclTerraform, true)(struct!.tableMappings),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappingsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFailureParamKafkaParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFailureParamKafkaParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._enableToleration !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableToleration = this._enableToleration;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._partitionNum !== undefined) {
      hasAnyValues = true;
      internalValueResult.partitionNum = this._partitionNum;
    }
    if (this._qpsLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.qpsLimit = this._qpsLimit;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._resourceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceName = this._resourceName;
    }
    if (this._selfBuilt !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfBuilt = this._selfBuilt;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    if (this._useTableMapping !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTableMapping = this._useTableMapping;
    }
    if (this._zoneId !== undefined) {
      hasAnyValues = true;
      internalValueResult.zoneId = this._zoneId;
    }
    if (this._tableMappings?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tableMappings = this._tableMappings?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFailureParamKafkaParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._enableToleration = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._partitionNum = undefined;
      this._qpsLimit = undefined;
      this._resource = undefined;
      this._resourceName = undefined;
      this._selfBuilt = undefined;
      this._startTime = undefined;
      this._topic = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
      this._useTableMapping = undefined;
      this._zoneId = undefined;
      this._tableMappings.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._enableToleration = value.enableToleration;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._partitionNum = value.partitionNum;
      this._qpsLimit = value.qpsLimit;
      this._resource = value.resource;
      this._resourceName = value.resourceName;
      this._selfBuilt = value.selfBuilt;
      this._startTime = value.startTime;
      this._topic = value.topic;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
      this._useTableMapping = value.useTableMapping;
      this._zoneId = value.zoneId;
      this._tableMappings.internalValue = value.tableMappings;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // enable_toleration - computed: false, optional: true, required: false
  private _enableToleration?: boolean | cdktf.IResolvable; 
  public get enableToleration() {
    return this.getBooleanAttribute('enable_toleration');
  }
  public set enableToleration(value: boolean | cdktf.IResolvable) {
    this._enableToleration = value;
  }
  public resetEnableToleration() {
    this._enableToleration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableTolerationInput() {
    return this._enableToleration;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // partition_num - computed: false, optional: true, required: false
  private _partitionNum?: number; 
  public get partitionNum() {
    return this.getNumberAttribute('partition_num');
  }
  public set partitionNum(value: number) {
    this._partitionNum = value;
  }
  public resetPartitionNum() {
    this._partitionNum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionNumInput() {
    return this._partitionNum;
  }

  // qps_limit - computed: false, optional: true, required: false
  private _qpsLimit?: number; 
  public get qpsLimit() {
    return this.getNumberAttribute('qps_limit');
  }
  public set qpsLimit(value: number) {
    this._qpsLimit = value;
  }
  public resetQpsLimit() {
    this._qpsLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qpsLimitInput() {
    return this._qpsLimit;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // resource_name - computed: false, optional: true, required: false
  private _resourceName?: string; 
  public get resourceName() {
    return this.getStringAttribute('resource_name');
  }
  public set resourceName(value: string) {
    this._resourceName = value;
  }
  public resetResourceName() {
    this._resourceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceNameInput() {
    return this._resourceName;
  }

  // self_built - computed: false, optional: false, required: true
  private _selfBuilt?: boolean | cdktf.IResolvable; 
  public get selfBuilt() {
    return this.getBooleanAttribute('self_built');
  }
  public set selfBuilt(value: boolean | cdktf.IResolvable) {
    this._selfBuilt = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selfBuiltInput() {
    return this._selfBuilt;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // topic_id - computed: false, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }

  // use_table_mapping - computed: false, optional: true, required: false
  private _useTableMapping?: boolean | cdktf.IResolvable; 
  public get useTableMapping() {
    return this.getBooleanAttribute('use_table_mapping');
  }
  public set useTableMapping(value: boolean | cdktf.IResolvable) {
    this._useTableMapping = value;
  }
  public resetUseTableMapping() {
    this._useTableMapping = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTableMappingInput() {
    return this._useTableMapping;
  }

  // zone_id - computed: false, optional: true, required: false
  private _zoneId?: number; 
  public get zoneId() {
    return this.getNumberAttribute('zone_id');
  }
  public set zoneId(value: number) {
    this._zoneId = value;
  }
  public resetZoneId() {
    this._zoneId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get zoneIdInput() {
    return this._zoneId;
  }

  // table_mappings - computed: false, optional: true, required: false
  private _tableMappings = new CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappingsList(this, "table_mappings", false);
  public get tableMappings() {
    return this._tableMappings;
  }
  public putTableMappings(value: CkafkaDatahubTaskTransformsParamFailureParamKafkaParamTableMappings[] | cdktf.IResolvable) {
    this._tableMappings.internalValue = value;
  }
  public resetTableMappings() {
    this._tableMappings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableMappingsInput() {
    return this._tableMappings.internalValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFailureParamTopicParam {
  /**
  * Whether to perform compression when writing a topic, if it is not enabled, fill in none, if it is enabled, you can choose one of gzip, snappy, lz4 to fill in.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#compression_type CkafkaDatahubTask#compression_type}
  */
  readonly compressionType?: string;
  /**
  * 1 source topic message is amplified into msg Multiple and written to the target topic (this parameter is currently only applicable to ckafka flowing into ckafka).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#msg_multiple CkafkaDatahubTask#msg_multiple}
  */
  readonly msgMultiple?: number;
  /**
  * Offset type, initial position earliest, latest position latest, time point position timestamp.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#offset_type CkafkaDatahubTask#offset_type}
  */
  readonly offsetType?: string;
  /**
  * The topic name of the topic sold separately.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#resource CkafkaDatahubTask#resource}
  */
  readonly resource: string;
  /**
  * It must be passed when the Offset type is timestamp, and the time stamp is passed, accurate to the second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start_time CkafkaDatahubTask#start_time}
  */
  readonly startTime?: number;
  /**
  * TopicId.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_id CkafkaDatahubTask#topic_id}
  */
  readonly topicId?: string;
  /**
  * whether the used topic need to be automatically created (currently only supports SOURCE inflow tasks).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#use_auto_create_topic CkafkaDatahubTask#use_auto_create_topic}
  */
  readonly useAutoCreateTopic?: boolean | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTransformsParamFailureParamTopicParamToTerraform(struct?: CkafkaDatahubTaskTransformsParamFailureParamTopicParamOutputReference | CkafkaDatahubTaskTransformsParamFailureParamTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compression_type: cdktf.stringToTerraform(struct!.compressionType),
    msg_multiple: cdktf.numberToTerraform(struct!.msgMultiple),
    offset_type: cdktf.stringToTerraform(struct!.offsetType),
    resource: cdktf.stringToTerraform(struct!.resource),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    topic_id: cdktf.stringToTerraform(struct!.topicId),
    use_auto_create_topic: cdktf.booleanToTerraform(struct!.useAutoCreateTopic),
  }
}


export function ckafkaDatahubTaskTransformsParamFailureParamTopicParamToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFailureParamTopicParamOutputReference | CkafkaDatahubTaskTransformsParamFailureParamTopicParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compression_type: {
      value: cdktf.stringToHclTerraform(struct!.compressionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    msg_multiple: {
      value: cdktf.numberToHclTerraform(struct!.msgMultiple),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offset_type: {
      value: cdktf.stringToHclTerraform(struct!.offsetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic_id: {
      value: cdktf.stringToHclTerraform(struct!.topicId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_auto_create_topic: {
      value: cdktf.booleanToHclTerraform(struct!.useAutoCreateTopic),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFailureParamTopicParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFailureParamTopicParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compressionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.compressionType = this._compressionType;
    }
    if (this._msgMultiple !== undefined) {
      hasAnyValues = true;
      internalValueResult.msgMultiple = this._msgMultiple;
    }
    if (this._offsetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetType = this._offsetType;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._topicId !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicId = this._topicId;
    }
    if (this._useAutoCreateTopic !== undefined) {
      hasAnyValues = true;
      internalValueResult.useAutoCreateTopic = this._useAutoCreateTopic;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFailureParamTopicParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._compressionType = undefined;
      this._msgMultiple = undefined;
      this._offsetType = undefined;
      this._resource = undefined;
      this._startTime = undefined;
      this._topicId = undefined;
      this._useAutoCreateTopic = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._compressionType = value.compressionType;
      this._msgMultiple = value.msgMultiple;
      this._offsetType = value.offsetType;
      this._resource = value.resource;
      this._startTime = value.startTime;
      this._topicId = value.topicId;
      this._useAutoCreateTopic = value.useAutoCreateTopic;
    }
  }

  // compression_type - computed: false, optional: true, required: false
  private _compressionType?: string; 
  public get compressionType() {
    return this.getStringAttribute('compression_type');
  }
  public set compressionType(value: string) {
    this._compressionType = value;
  }
  public resetCompressionType() {
    this._compressionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionTypeInput() {
    return this._compressionType;
  }

  // msg_multiple - computed: false, optional: true, required: false
  private _msgMultiple?: number; 
  public get msgMultiple() {
    return this.getNumberAttribute('msg_multiple');
  }
  public set msgMultiple(value: number) {
    this._msgMultiple = value;
  }
  public resetMsgMultiple() {
    this._msgMultiple = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get msgMultipleInput() {
    return this._msgMultiple;
  }

  // offset_type - computed: false, optional: true, required: false
  private _offsetType?: string; 
  public get offsetType() {
    return this.getStringAttribute('offset_type');
  }
  public set offsetType(value: string) {
    this._offsetType = value;
  }
  public resetOffsetType() {
    this._offsetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetTypeInput() {
    return this._offsetType;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // topic_id - computed: false, optional: true, required: false
  private _topicId?: string; 
  public get topicId() {
    return this.getStringAttribute('topic_id');
  }
  public set topicId(value: string) {
    this._topicId = value;
  }
  public resetTopicId() {
    this._topicId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicIdInput() {
    return this._topicId;
  }

  // use_auto_create_topic - computed: false, optional: true, required: false
  private _useAutoCreateTopic?: boolean | cdktf.IResolvable; 
  public get useAutoCreateTopic() {
    return this.getBooleanAttribute('use_auto_create_topic');
  }
  public set useAutoCreateTopic(value: boolean | cdktf.IResolvable) {
    this._useAutoCreateTopic = value;
  }
  public resetUseAutoCreateTopic() {
    this._useAutoCreateTopic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useAutoCreateTopicInput() {
    return this._useAutoCreateTopic;
  }
}
export interface CkafkaDatahubTaskTransformsParamFailureParam {
  /**
  * dlq type, CKAFKA|TOPIC.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#dlq_type CkafkaDatahubTask#dlq_type}
  */
  readonly dlqType?: string;
  /**
  * retry times.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#max_retry_attempts CkafkaDatahubTask#max_retry_attempts}
  */
  readonly maxRetryAttempts?: number;
  /**
  * retry interval.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#retry_interval CkafkaDatahubTask#retry_interval}
  */
  readonly retryInterval?: number;
  /**
  * type, DLQ dead letter queue, IGNORE_ERROR|DROP.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
  /**
  * kafka_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#kafka_param CkafkaDatahubTask#kafka_param}
  */
  readonly kafkaParam?: CkafkaDatahubTaskTransformsParamFailureParamKafkaParam;
  /**
  * topic_param block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#topic_param CkafkaDatahubTask#topic_param}
  */
  readonly topicParam?: CkafkaDatahubTaskTransformsParamFailureParamTopicParam;
}

export function ckafkaDatahubTaskTransformsParamFailureParamToTerraform(struct?: CkafkaDatahubTaskTransformsParamFailureParamOutputReference | CkafkaDatahubTaskTransformsParamFailureParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dlq_type: cdktf.stringToTerraform(struct!.dlqType),
    max_retry_attempts: cdktf.numberToTerraform(struct!.maxRetryAttempts),
    retry_interval: cdktf.numberToTerraform(struct!.retryInterval),
    type: cdktf.stringToTerraform(struct!.type),
    kafka_param: ckafkaDatahubTaskTransformsParamFailureParamKafkaParamToTerraform(struct!.kafkaParam),
    topic_param: ckafkaDatahubTaskTransformsParamFailureParamTopicParamToTerraform(struct!.topicParam),
  }
}


export function ckafkaDatahubTaskTransformsParamFailureParamToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFailureParamOutputReference | CkafkaDatahubTaskTransformsParamFailureParam): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dlq_type: {
      value: cdktf.stringToHclTerraform(struct!.dlqType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_retry_attempts: {
      value: cdktf.numberToHclTerraform(struct!.maxRetryAttempts),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    retry_interval: {
      value: cdktf.numberToHclTerraform(struct!.retryInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kafka_param: {
      value: ckafkaDatahubTaskTransformsParamFailureParamKafkaParamToHclTerraform(struct!.kafkaParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFailureParamKafkaParamList",
    },
    topic_param: {
      value: ckafkaDatahubTaskTransformsParamFailureParamTopicParamToHclTerraform(struct!.topicParam),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFailureParamTopicParamList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFailureParamOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFailureParam | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dlqType !== undefined) {
      hasAnyValues = true;
      internalValueResult.dlqType = this._dlqType;
    }
    if (this._maxRetryAttempts !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxRetryAttempts = this._maxRetryAttempts;
    }
    if (this._retryInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.retryInterval = this._retryInterval;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._kafkaParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kafkaParam = this._kafkaParam?.internalValue;
    }
    if (this._topicParam?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.topicParam = this._topicParam?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFailureParam | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._dlqType = undefined;
      this._maxRetryAttempts = undefined;
      this._retryInterval = undefined;
      this._type = undefined;
      this._kafkaParam.internalValue = undefined;
      this._topicParam.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._dlqType = value.dlqType;
      this._maxRetryAttempts = value.maxRetryAttempts;
      this._retryInterval = value.retryInterval;
      this._type = value.type;
      this._kafkaParam.internalValue = value.kafkaParam;
      this._topicParam.internalValue = value.topicParam;
    }
  }

  // dlq_type - computed: false, optional: true, required: false
  private _dlqType?: string; 
  public get dlqType() {
    return this.getStringAttribute('dlq_type');
  }
  public set dlqType(value: string) {
    this._dlqType = value;
  }
  public resetDlqType() {
    this._dlqType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dlqTypeInput() {
    return this._dlqType;
  }

  // max_retry_attempts - computed: false, optional: true, required: false
  private _maxRetryAttempts?: number; 
  public get maxRetryAttempts() {
    return this.getNumberAttribute('max_retry_attempts');
  }
  public set maxRetryAttempts(value: number) {
    this._maxRetryAttempts = value;
  }
  public resetMaxRetryAttempts() {
    this._maxRetryAttempts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxRetryAttemptsInput() {
    return this._maxRetryAttempts;
  }

  // retry_interval - computed: false, optional: true, required: false
  private _retryInterval?: number; 
  public get retryInterval() {
    return this.getNumberAttribute('retry_interval');
  }
  public set retryInterval(value: number) {
    this._retryInterval = value;
  }
  public resetRetryInterval() {
    this._retryInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get retryIntervalInput() {
    return this._retryInterval;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // kafka_param - computed: false, optional: true, required: false
  private _kafkaParam = new CkafkaDatahubTaskTransformsParamFailureParamKafkaParamOutputReference(this, "kafka_param");
  public get kafkaParam() {
    return this._kafkaParam;
  }
  public putKafkaParam(value: CkafkaDatahubTaskTransformsParamFailureParamKafkaParam) {
    this._kafkaParam.internalValue = value;
  }
  public resetKafkaParam() {
    this._kafkaParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kafkaParamInput() {
    return this._kafkaParam.internalValue;
  }

  // topic_param - computed: false, optional: true, required: false
  private _topicParam = new CkafkaDatahubTaskTransformsParamFailureParamTopicParamOutputReference(this, "topic_param");
  public get topicParam() {
    return this._topicParam;
  }
  public putTopicParam(value: CkafkaDatahubTaskTransformsParamFailureParamTopicParam) {
    this._topicParam.internalValue = value;
  }
  public resetTopicParam() {
    this._topicParam.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicParamInput() {
    return this._topicParam.internalValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyse {
  /**
  * Parsing format, JSON, DELIMITER delimiter, REGULAR regular extraction, SOURCE processing all results of the upper layer.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#format CkafkaDatahubTask#format}
  */
  readonly format: string;
  /**
  * KEY to be processed again - KEY expression.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#input_value CkafkaDatahubTask#input_value}
  */
  readonly inputValue?: string;
  /**
  * KEY to be processed again - mode.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#input_value_type CkafkaDatahubTask#input_value_type}
  */
  readonly inputValueType?: string;
  /**
  * delimiter, regular expression.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyse): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    format: cdktf.stringToTerraform(struct!.format),
    input_value: cdktf.stringToTerraform(struct!.inputValue),
    input_value_type: cdktf.stringToTerraform(struct!.inputValueType),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyse): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    input_value: {
      value: cdktf.stringToHclTerraform(struct!.inputValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    input_value_type: {
      value: cdktf.stringToHclTerraform(struct!.inputValueType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyse | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._inputValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.inputValue = this._inputValue;
    }
    if (this._inputValueType !== undefined) {
      hasAnyValues = true;
      internalValueResult.inputValueType = this._inputValueType;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyse | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._format = undefined;
      this._inputValue = undefined;
      this._inputValueType = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._format = value.format;
      this._inputValue = value.inputValue;
      this._inputValueType = value.inputValueType;
      this._regex = value.regex;
    }
  }

  // format - computed: false, optional: false, required: true
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // input_value - computed: false, optional: true, required: false
  private _inputValue?: string; 
  public get inputValue() {
    return this.getStringAttribute('input_value');
  }
  public set inputValue(value: string) {
    this._inputValue = value;
  }
  public resetInputValue() {
    this._inputValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get inputValueInput() {
    return this._inputValue;
  }

  // input_value_type - computed: false, optional: true, required: false
  private _inputValueType?: string; 
  public get inputValueType() {
    return this.getStringAttribute('input_value_type');
  }
  public set inputValueType(value: string) {
    this._inputValueType = value;
  }
  public resetInputValueType() {
    this._inputValueType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get inputValueTypeInput() {
    return this._inputValueType;
  }

  // regex - computed: false, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate {
  /**
  * Time format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#format CkafkaDatahubTask#format}
  */
  readonly format?: string;
  /**
  * input type, string|unix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#target_type CkafkaDatahubTask#target_type}
  */
  readonly targetType?: string;
  /**
  * default GMT+8.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#time_zone CkafkaDatahubTask#time_zone}
  */
  readonly timeZone?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    format: cdktf.stringToTerraform(struct!.format),
    target_type: cdktf.stringToTerraform(struct!.targetType),
    time_zone: cdktf.stringToTerraform(struct!.timeZone),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    target_type: {
      value: cdktf.stringToHclTerraform(struct!.targetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_zone: {
      value: cdktf.stringToHclTerraform(struct!.timeZone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._targetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetType = this._targetType;
    }
    if (this._timeZone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeZone = this._timeZone;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._format = undefined;
      this._targetType = undefined;
      this._timeZone = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._format = value.format;
      this._targetType = value.targetType;
      this._timeZone = value.timeZone;
    }
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // target_type - computed: false, optional: true, required: false
  private _targetType?: string; 
  public get targetType() {
    return this.getStringAttribute('target_type');
  }
  public set targetType(value: string) {
    this._targetType = value;
  }
  public resetTargetType() {
    this._targetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetTypeInput() {
    return this._targetType;
  }

  // time_zone - computed: false, optional: true, required: false
  private _timeZone?: string; 
  public get timeZone() {
    return this.getStringAttribute('time_zone');
  }
  public set timeZone(value: string) {
    this._timeZone = value;
  }
  public resetTimeZone() {
    this._timeZone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeZoneInput() {
    return this._timeZone;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace {
  /**
  * Replacement value, Jsonpath expression or string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Replaced value, Jsonpath expression.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#delimiter CkafkaDatahubTask#delimiter}
  */
  readonly delimiter: string;
  /**
  * Keep the source Key, the default is false not to keep.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#keep_original_key CkafkaDatahubTask#keep_original_key}
  */
  readonly keepOriginalKey?: string;
  /**
  * Key-value secondary analysis delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    delimiter: cdktf.stringToTerraform(struct!.delimiter),
    keep_original_key: cdktf.stringToTerraform(struct!.keepOriginalKey),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    delimiter: {
      value: cdktf.stringToHclTerraform(struct!.delimiter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keep_original_key: {
      value: cdktf.stringToHclTerraform(struct!.keepOriginalKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._delimiter !== undefined) {
      hasAnyValues = true;
      internalValueResult.delimiter = this._delimiter;
    }
    if (this._keepOriginalKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.keepOriginalKey = this._keepOriginalKey;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._delimiter = undefined;
      this._keepOriginalKey = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._delimiter = value.delimiter;
      this._keepOriginalKey = value.keepOriginalKey;
      this._regex = value.regex;
    }
  }

  // delimiter - computed: false, optional: false, required: true
  private _delimiter?: string; 
  public get delimiter() {
    return this.getStringAttribute('delimiter');
  }
  public set delimiter(value: string) {
    this._delimiter = value;
  }
  // Temporarily expose input value. Use with caution.
  public get delimiterInput() {
    return this._delimiter;
  }

  // keep_original_key - computed: false, optional: true, required: false
  private _keepOriginalKey?: string; 
  public get keepOriginalKey() {
    return this.getStringAttribute('keep_original_key');
  }
  public set keepOriginalKey(value: string) {
    this._keepOriginalKey = value;
  }
  public resetKeepOriginalKey() {
    this._keepOriginalKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keepOriginalKeyInput() {
    return this._keepOriginalKey;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Regular.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._regex = value.regex;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * been replaced value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._regex = value.regex;
    }
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr {
  /**
  * cut-off position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#end CkafkaDatahubTask#end}
  */
  readonly end: number;
  /**
  * interception starting position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start CkafkaDatahubTask#start}
  */
  readonly start: number;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._end = undefined;
      this._start = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: false, required: true
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: false, required: true
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode {
  /**
  * code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#charset_name CkafkaDatahubTask#charset_name}
  */
  readonly charsetName?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    charset_name: cdktf.stringToTerraform(struct!.charsetName),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    charset_name: {
      value: cdktf.stringToHclTerraform(struct!.charsetName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._charsetName !== undefined) {
      hasAnyValues = true;
      internalValueResult.charsetName = this._charsetName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._charsetName = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._charsetName = value.charsetName;
    }
  }

  // charset_name - computed: false, optional: true, required: false
  private _charsetName?: string; 
  public get charsetName() {
    return this.getStringAttribute('charset_name');
  }
  public set charsetName(value: string) {
    this._charsetName = value;
  }
  public resetCharsetName() {
    this._charsetName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get charsetNameInput() {
    return this._charsetName;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperate {
  /**
  * result.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#result CkafkaDatahubTask#result}
  */
  readonly result?: string;
  /**
  * Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
  /**
  * date block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#date CkafkaDatahubTask#date}
  */
  readonly date?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate;
  /**
  * json_path_replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#json_path_replace CkafkaDatahubTask#json_path_replace}
  */
  readonly jsonPathReplace?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace;
  /**
  * k_v block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#k_v CkafkaDatahubTask#k_v}
  */
  readonly kV?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV;
  /**
  * regex_replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex_replace CkafkaDatahubTask#regex_replace}
  */
  readonly regexReplace?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace;
  /**
  * replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#replace CkafkaDatahubTask#replace}
  */
  readonly replace?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace;
  /**
  * split block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#split CkafkaDatahubTask#split}
  */
  readonly split?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit;
  /**
  * substr block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#substr CkafkaDatahubTask#substr}
  */
  readonly substr?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr;
  /**
  * url_decode block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#url_decode CkafkaDatahubTask#url_decode}
  */
  readonly urlDecode?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    result: cdktf.stringToTerraform(struct!.result),
    type: cdktf.stringToTerraform(struct!.type),
    date: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateToTerraform(struct!.date),
    json_path_replace: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceToTerraform(struct!.jsonPathReplace),
    k_v: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVToTerraform(struct!.kV),
    regex_replace: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceToTerraform(struct!.regexReplace),
    replace: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceToTerraform(struct!.replace),
    split: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitToTerraform(struct!.split),
    substr: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrToTerraform(struct!.substr),
    url_decode: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeToTerraform(struct!.urlDecode),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    result: {
      value: cdktf.stringToHclTerraform(struct!.result),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    date: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateToHclTerraform(struct!.date),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateList",
    },
    json_path_replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceToHclTerraform(struct!.jsonPathReplace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceList",
    },
    k_v: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVToHclTerraform(struct!.kV),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVList",
    },
    regex_replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceToHclTerraform(struct!.regexReplace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceList",
    },
    replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceToHclTerraform(struct!.replace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceList",
    },
    split: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitToHclTerraform(struct!.split),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitList",
    },
    substr: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrToHclTerraform(struct!.substr),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrList",
    },
    url_decode: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeToHclTerraform(struct!.urlDecode),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperate | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._result !== undefined) {
      hasAnyValues = true;
      internalValueResult.result = this._result;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._date?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.date = this._date?.internalValue;
    }
    if (this._jsonPathReplace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonPathReplace = this._jsonPathReplace?.internalValue;
    }
    if (this._kV?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kV = this._kV?.internalValue;
    }
    if (this._regexReplace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexReplace = this._regexReplace?.internalValue;
    }
    if (this._replace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.replace = this._replace?.internalValue;
    }
    if (this._split?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.split = this._split?.internalValue;
    }
    if (this._substr?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.substr = this._substr?.internalValue;
    }
    if (this._urlDecode?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.urlDecode = this._urlDecode?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperate | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._result = undefined;
      this._type = undefined;
      this._date.internalValue = undefined;
      this._jsonPathReplace.internalValue = undefined;
      this._kV.internalValue = undefined;
      this._regexReplace.internalValue = undefined;
      this._replace.internalValue = undefined;
      this._split.internalValue = undefined;
      this._substr.internalValue = undefined;
      this._urlDecode.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._result = value.result;
      this._type = value.type;
      this._date.internalValue = value.date;
      this._jsonPathReplace.internalValue = value.jsonPathReplace;
      this._kV.internalValue = value.kV;
      this._regexReplace.internalValue = value.regexReplace;
      this._replace.internalValue = value.replace;
      this._split.internalValue = value.split;
      this._substr.internalValue = value.substr;
      this._urlDecode.internalValue = value.urlDecode;
    }
  }

  // result - computed: false, optional: true, required: false
  private _result?: string; 
  public get result() {
    return this.getStringAttribute('result');
  }
  public set result(value: string) {
    this._result = value;
  }
  public resetResult() {
    this._result = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resultInput() {
    return this._result;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // date - computed: false, optional: true, required: false
  private _date = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDateOutputReference(this, "date");
  public get date() {
    return this._date;
  }
  public putDate(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateDate) {
    this._date.internalValue = value;
  }
  public resetDate() {
    this._date.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dateInput() {
    return this._date.internalValue;
  }

  // json_path_replace - computed: false, optional: true, required: false
  private _jsonPathReplace = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplaceOutputReference(this, "json_path_replace");
  public get jsonPathReplace() {
    return this._jsonPathReplace;
  }
  public putJsonPathReplace(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateJsonPathReplace) {
    this._jsonPathReplace.internalValue = value;
  }
  public resetJsonPathReplace() {
    this._jsonPathReplace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonPathReplaceInput() {
    return this._jsonPathReplace.internalValue;
  }

  // k_v - computed: false, optional: true, required: false
  private _kV = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKVOutputReference(this, "k_v");
  public get kV() {
    return this._kV;
  }
  public putKV(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateKV) {
    this._kV.internalValue = value;
  }
  public resetKV() {
    this._kV.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kVInput() {
    return this._kV.internalValue;
  }

  // regex_replace - computed: false, optional: true, required: false
  private _regexReplace = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplaceOutputReference(this, "regex_replace");
  public get regexReplace() {
    return this._regexReplace;
  }
  public putRegexReplace(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateRegexReplace) {
    this._regexReplace.internalValue = value;
  }
  public resetRegexReplace() {
    this._regexReplace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexReplaceInput() {
    return this._regexReplace.internalValue;
  }

  // replace - computed: false, optional: true, required: false
  private _replace = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplaceOutputReference(this, "replace");
  public get replace() {
    return this._replace;
  }
  public putReplace(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateReplace) {
    this._replace.internalValue = value;
  }
  public resetReplace() {
    this._replace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replaceInput() {
    return this._replace.internalValue;
  }

  // split - computed: false, optional: true, required: false
  private _split = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplitOutputReference(this, "split");
  public get split() {
    return this._split;
  }
  public putSplit(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSplit) {
    this._split.internalValue = value;
  }
  public resetSplit() {
    this._split.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get splitInput() {
    return this._split.internalValue;
  }

  // substr - computed: false, optional: true, required: false
  private _substr = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstrOutputReference(this, "substr");
  public get substr() {
    return this._substr;
  }
  public putSubstr(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateSubstr) {
    this._substr.internalValue = value;
  }
  public resetSubstr() {
    this._substr.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get substrInput() {
    return this._substr.internalValue;
  }

  // url_decode - computed: false, optional: true, required: false
  private _urlDecode = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecodeOutputReference(this, "url_decode");
  public get urlDecode() {
    return this._urlDecode;
  }
  public putUrlDecode(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateUrlDecode) {
    this._urlDecode.internalValue = value;
  }
  public resetUrlDecode() {
    this._urlDecode.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlDecodeInput() {
    return this._urlDecode.internalValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDate {
  /**
  * Time format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#format CkafkaDatahubTask#format}
  */
  readonly format?: string;
  /**
  * input type, string|unix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#target_type CkafkaDatahubTask#target_type}
  */
  readonly targetType?: string;
  /**
  * default GMT+8.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#time_zone CkafkaDatahubTask#time_zone}
  */
  readonly timeZone?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDateToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    format: cdktf.stringToTerraform(struct!.format),
    target_type: cdktf.stringToTerraform(struct!.targetType),
    time_zone: cdktf.stringToTerraform(struct!.timeZone),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDateToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    target_type: {
      value: cdktf.stringToHclTerraform(struct!.targetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_zone: {
      value: cdktf.stringToHclTerraform(struct!.timeZone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDate | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._targetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetType = this._targetType;
    }
    if (this._timeZone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeZone = this._timeZone;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDate | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._format = undefined;
      this._targetType = undefined;
      this._timeZone = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._format = value.format;
      this._targetType = value.targetType;
      this._timeZone = value.timeZone;
    }
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // target_type - computed: false, optional: true, required: false
  private _targetType?: string; 
  public get targetType() {
    return this.getStringAttribute('target_type');
  }
  public set targetType(value: string) {
    this._targetType = value;
  }
  public resetTargetType() {
    this._targetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetTypeInput() {
    return this._targetType;
  }

  // time_zone - computed: false, optional: true, required: false
  private _timeZone?: string; 
  public get timeZone() {
    return this.getStringAttribute('time_zone');
  }
  public set timeZone(value: string) {
    this._timeZone = value;
  }
  public resetTimeZone() {
    this._timeZone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeZoneInput() {
    return this._timeZone;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplace {
  /**
  * Replacement value, Jsonpath expression or string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Replaced value, Jsonpath expression.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKV {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#delimiter CkafkaDatahubTask#delimiter}
  */
  readonly delimiter: string;
  /**
  * Keep the source Key, the default is false not to keep.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#keep_original_key CkafkaDatahubTask#keep_original_key}
  */
  readonly keepOriginalKey?: string;
  /**
  * Key-value secondary analysis delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKVToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    delimiter: cdktf.stringToTerraform(struct!.delimiter),
    keep_original_key: cdktf.stringToTerraform(struct!.keepOriginalKey),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKVToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    delimiter: {
      value: cdktf.stringToHclTerraform(struct!.delimiter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keep_original_key: {
      value: cdktf.stringToHclTerraform(struct!.keepOriginalKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKVOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKV | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._delimiter !== undefined) {
      hasAnyValues = true;
      internalValueResult.delimiter = this._delimiter;
    }
    if (this._keepOriginalKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.keepOriginalKey = this._keepOriginalKey;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKV | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._delimiter = undefined;
      this._keepOriginalKey = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._delimiter = value.delimiter;
      this._keepOriginalKey = value.keepOriginalKey;
      this._regex = value.regex;
    }
  }

  // delimiter - computed: false, optional: false, required: true
  private _delimiter?: string; 
  public get delimiter() {
    return this.getStringAttribute('delimiter');
  }
  public set delimiter(value: string) {
    this._delimiter = value;
  }
  // Temporarily expose input value. Use with caution.
  public get delimiterInput() {
    return this._delimiter;
  }

  // keep_original_key - computed: false, optional: true, required: false
  private _keepOriginalKey?: string; 
  public get keepOriginalKey() {
    return this.getStringAttribute('keep_original_key');
  }
  public set keepOriginalKey(value: string) {
    this._keepOriginalKey = value;
  }
  public resetKeepOriginalKey() {
    this._keepOriginalKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keepOriginalKeyInput() {
    return this._keepOriginalKey;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Regular.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._regex = value.regex;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * been replaced value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplit {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplitToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplitToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplit | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplit | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._regex = value.regex;
    }
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstr {
  /**
  * cut-off position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#end CkafkaDatahubTask#end}
  */
  readonly end: number;
  /**
  * interception starting position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start CkafkaDatahubTask#start}
  */
  readonly start: number;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstrToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstrToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstrOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstr | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstr | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._end = undefined;
      this._start = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: false, required: true
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: false, required: true
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecode {
  /**
  * code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#charset_name CkafkaDatahubTask#charset_name}
  */
  readonly charsetName?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecodeToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    charset_name: cdktf.stringToTerraform(struct!.charsetName),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecodeToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    charset_name: {
      value: cdktf.stringToHclTerraform(struct!.charsetName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecodeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecode | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._charsetName !== undefined) {
      hasAnyValues = true;
      internalValueResult.charsetName = this._charsetName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecode | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._charsetName = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._charsetName = value.charsetName;
    }
  }

  // charset_name - computed: false, optional: true, required: false
  private _charsetName?: string; 
  public get charsetName() {
    return this.getStringAttribute('charset_name');
  }
  public set charsetName(value: string) {
    this._charsetName = value;
  }
  public resetCharsetName() {
    this._charsetName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get charsetNameInput() {
    return this._charsetName;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperates {
  /**
  * result.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#result CkafkaDatahubTask#result}
  */
  readonly result?: string;
  /**
  * Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
  /**
  * date block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#date CkafkaDatahubTask#date}
  */
  readonly date?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDate;
  /**
  * json_path_replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#json_path_replace CkafkaDatahubTask#json_path_replace}
  */
  readonly jsonPathReplace?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplace;
  /**
  * k_v block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#k_v CkafkaDatahubTask#k_v}
  */
  readonly kV?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKV;
  /**
  * regex_replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex_replace CkafkaDatahubTask#regex_replace}
  */
  readonly regexReplace?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplace;
  /**
  * replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#replace CkafkaDatahubTask#replace}
  */
  readonly replace?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplace;
  /**
  * split block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#split CkafkaDatahubTask#split}
  */
  readonly split?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplit;
  /**
  * substr block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#substr CkafkaDatahubTask#substr}
  */
  readonly substr?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstr;
  /**
  * url_decode block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#url_decode CkafkaDatahubTask#url_decode}
  */
  readonly urlDecode?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecode;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    result: cdktf.stringToTerraform(struct!.result),
    type: cdktf.stringToTerraform(struct!.type),
    date: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDateToTerraform(struct!.date),
    json_path_replace: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplaceToTerraform(struct!.jsonPathReplace),
    k_v: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKVToTerraform(struct!.kV),
    regex_replace: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplaceToTerraform(struct!.regexReplace),
    replace: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplaceToTerraform(struct!.replace),
    split: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplitToTerraform(struct!.split),
    substr: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstrToTerraform(struct!.substr),
    url_decode: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecodeToTerraform(struct!.urlDecode),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    result: {
      value: cdktf.stringToHclTerraform(struct!.result),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    date: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDateToHclTerraform(struct!.date),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDateList",
    },
    json_path_replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplaceToHclTerraform(struct!.jsonPathReplace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplaceList",
    },
    k_v: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKVToHclTerraform(struct!.kV),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKVList",
    },
    regex_replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplaceToHclTerraform(struct!.regexReplace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplaceList",
    },
    replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplaceToHclTerraform(struct!.replace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplaceList",
    },
    split: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplitToHclTerraform(struct!.split),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplitList",
    },
    substr: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstrToHclTerraform(struct!.substr),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstrList",
    },
    url_decode: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecodeToHclTerraform(struct!.urlDecode),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecodeList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperates | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._result !== undefined) {
      hasAnyValues = true;
      internalValueResult.result = this._result;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._date?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.date = this._date?.internalValue;
    }
    if (this._jsonPathReplace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonPathReplace = this._jsonPathReplace?.internalValue;
    }
    if (this._kV?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kV = this._kV?.internalValue;
    }
    if (this._regexReplace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexReplace = this._regexReplace?.internalValue;
    }
    if (this._replace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.replace = this._replace?.internalValue;
    }
    if (this._split?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.split = this._split?.internalValue;
    }
    if (this._substr?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.substr = this._substr?.internalValue;
    }
    if (this._urlDecode?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.urlDecode = this._urlDecode?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperates | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._result = undefined;
      this._type = undefined;
      this._date.internalValue = undefined;
      this._jsonPathReplace.internalValue = undefined;
      this._kV.internalValue = undefined;
      this._regexReplace.internalValue = undefined;
      this._replace.internalValue = undefined;
      this._split.internalValue = undefined;
      this._substr.internalValue = undefined;
      this._urlDecode.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._result = value.result;
      this._type = value.type;
      this._date.internalValue = value.date;
      this._jsonPathReplace.internalValue = value.jsonPathReplace;
      this._kV.internalValue = value.kV;
      this._regexReplace.internalValue = value.regexReplace;
      this._replace.internalValue = value.replace;
      this._split.internalValue = value.split;
      this._substr.internalValue = value.substr;
      this._urlDecode.internalValue = value.urlDecode;
    }
  }

  // result - computed: false, optional: true, required: false
  private _result?: string; 
  public get result() {
    return this.getStringAttribute('result');
  }
  public set result(value: string) {
    this._result = value;
  }
  public resetResult() {
    this._result = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resultInput() {
    return this._result;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // date - computed: false, optional: true, required: false
  private _date = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDateOutputReference(this, "date");
  public get date() {
    return this._date;
  }
  public putDate(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesDate) {
    this._date.internalValue = value;
  }
  public resetDate() {
    this._date.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dateInput() {
    return this._date.internalValue;
  }

  // json_path_replace - computed: false, optional: true, required: false
  private _jsonPathReplace = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplaceOutputReference(this, "json_path_replace");
  public get jsonPathReplace() {
    return this._jsonPathReplace;
  }
  public putJsonPathReplace(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesJsonPathReplace) {
    this._jsonPathReplace.internalValue = value;
  }
  public resetJsonPathReplace() {
    this._jsonPathReplace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonPathReplaceInput() {
    return this._jsonPathReplace.internalValue;
  }

  // k_v - computed: false, optional: true, required: false
  private _kV = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKVOutputReference(this, "k_v");
  public get kV() {
    return this._kV;
  }
  public putKV(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesKV) {
    this._kV.internalValue = value;
  }
  public resetKV() {
    this._kV.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kVInput() {
    return this._kV.internalValue;
  }

  // regex_replace - computed: false, optional: true, required: false
  private _regexReplace = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplaceOutputReference(this, "regex_replace");
  public get regexReplace() {
    return this._regexReplace;
  }
  public putRegexReplace(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesRegexReplace) {
    this._regexReplace.internalValue = value;
  }
  public resetRegexReplace() {
    this._regexReplace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexReplaceInput() {
    return this._regexReplace.internalValue;
  }

  // replace - computed: false, optional: true, required: false
  private _replace = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplaceOutputReference(this, "replace");
  public get replace() {
    return this._replace;
  }
  public putReplace(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesReplace) {
    this._replace.internalValue = value;
  }
  public resetReplace() {
    this._replace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replaceInput() {
    return this._replace.internalValue;
  }

  // split - computed: false, optional: true, required: false
  private _split = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplitOutputReference(this, "split");
  public get split() {
    return this._split;
  }
  public putSplit(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSplit) {
    this._split.internalValue = value;
  }
  public resetSplit() {
    this._split.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get splitInput() {
    return this._split.internalValue;
  }

  // substr - computed: false, optional: true, required: false
  private _substr = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstrOutputReference(this, "substr");
  public get substr() {
    return this._substr;
  }
  public putSubstr(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesSubstr) {
    this._substr.internalValue = value;
  }
  public resetSubstr() {
    this._substr.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get substrInput() {
    return this._substr.internalValue;
  }

  // url_decode - computed: false, optional: true, required: false
  private _urlDecode = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecodeOutputReference(this, "url_decode");
  public get urlDecode() {
    return this._urlDecode;
  }
  public putUrlDecode(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesUrlDecode) {
    this._urlDecode.internalValue = value;
  }
  public resetUrlDecode() {
    this._urlDecode.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlDecodeInput() {
    return this._urlDecode.internalValue;
  }
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperates[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesOutputReference {
    return new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainAnalyseResult {
  /**
  * KEY.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#key CkafkaDatahubTask#key}
  */
  readonly key: string;
  /**
  * Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#operate CkafkaDatahubTask#operate}
  */
  readonly operate: string;
  /**
  * OriginalValue.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#original_value CkafkaDatahubTask#original_value}
  */
  readonly originalValue?: string;
  /**
  * data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#scheme_type CkafkaDatahubTask#scheme_type}
  */
  readonly schemeType: string;
  /**
  * VALUE.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#value CkafkaDatahubTask#value}
  */
  readonly value?: string;
  /**
  * value_operate block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#value_operate CkafkaDatahubTask#value_operate}
  */
  readonly valueOperate?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperate;
  /**
  * value_operates block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#value_operates CkafkaDatahubTask#value_operates}
  */
  readonly valueOperates?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperates[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResult | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operate: cdktf.stringToTerraform(struct!.operate),
    original_value: cdktf.stringToTerraform(struct!.originalValue),
    scheme_type: cdktf.stringToTerraform(struct!.schemeType),
    value: cdktf.stringToTerraform(struct!.value),
    value_operate: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateToTerraform(struct!.valueOperate),
    value_operates: cdktf.listMapper(ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesToTerraform, true)(struct!.valueOperates),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResult | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operate: {
      value: cdktf.stringToHclTerraform(struct!.operate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    original_value: {
      value: cdktf.stringToHclTerraform(struct!.originalValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme_type: {
      value: cdktf.stringToHclTerraform(struct!.schemeType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_operate: {
      value: ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateToHclTerraform(struct!.valueOperate),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateList",
    },
    value_operates: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesToHclTerraform, true)(struct!.valueOperates),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResult | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operate !== undefined) {
      hasAnyValues = true;
      internalValueResult.operate = this._operate;
    }
    if (this._originalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.originalValue = this._originalValue;
    }
    if (this._schemeType !== undefined) {
      hasAnyValues = true;
      internalValueResult.schemeType = this._schemeType;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueOperate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueOperate = this._valueOperate?.internalValue;
    }
    if (this._valueOperates?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueOperates = this._valueOperates?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResult | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operate = undefined;
      this._originalValue = undefined;
      this._schemeType = undefined;
      this._value = undefined;
      this._valueOperate.internalValue = undefined;
      this._valueOperates.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operate = value.operate;
      this._originalValue = value.originalValue;
      this._schemeType = value.schemeType;
      this._value = value.value;
      this._valueOperate.internalValue = value.valueOperate;
      this._valueOperates.internalValue = value.valueOperates;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operate - computed: false, optional: false, required: true
  private _operate?: string; 
  public get operate() {
    return this.getStringAttribute('operate');
  }
  public set operate(value: string) {
    this._operate = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operateInput() {
    return this._operate;
  }

  // original_value - computed: false, optional: true, required: false
  private _originalValue?: string; 
  public get originalValue() {
    return this.getStringAttribute('original_value');
  }
  public set originalValue(value: string) {
    this._originalValue = value;
  }
  public resetOriginalValue() {
    this._originalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originalValueInput() {
    return this._originalValue;
  }

  // scheme_type - computed: false, optional: false, required: true
  private _schemeType?: string; 
  public get schemeType() {
    return this.getStringAttribute('scheme_type');
  }
  public set schemeType(value: string) {
    this._schemeType = value;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeTypeInput() {
    return this._schemeType;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_operate - computed: false, optional: true, required: false
  private _valueOperate = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperateOutputReference(this, "value_operate");
  public get valueOperate() {
    return this._valueOperate;
  }
  public putValueOperate(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperate) {
    this._valueOperate.internalValue = value;
  }
  public resetValueOperate() {
    this._valueOperate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueOperateInput() {
    return this._valueOperate.internalValue;
  }

  // value_operates - computed: false, optional: true, required: false
  private _valueOperates = new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperatesList(this, "value_operates", false);
  public get valueOperates() {
    return this._valueOperates;
  }
  public putValueOperates(value: CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultValueOperates[] | cdktf.IResolvable) {
    this._valueOperates.internalValue = value;
  }
  public resetValueOperates() {
    this._valueOperates.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueOperatesInput() {
    return this._valueOperates.internalValue;
  }
}

export class CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTransformsParamFieldChainAnalyseResult[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultOutputReference {
    return new CkafkaDatahubTaskTransformsParamFieldChainAnalyseResultOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDate {
  /**
  * Time format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#format CkafkaDatahubTask#format}
  */
  readonly format?: string;
  /**
  * input type, string|unix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#target_type CkafkaDatahubTask#target_type}
  */
  readonly targetType?: string;
  /**
  * default GMT+8.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#time_zone CkafkaDatahubTask#time_zone}
  */
  readonly timeZone?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDateToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    format: cdktf.stringToTerraform(struct!.format),
    target_type: cdktf.stringToTerraform(struct!.targetType),
    time_zone: cdktf.stringToTerraform(struct!.timeZone),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDateToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    target_type: {
      value: cdktf.stringToHclTerraform(struct!.targetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_zone: {
      value: cdktf.stringToHclTerraform(struct!.timeZone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDate | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._targetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetType = this._targetType;
    }
    if (this._timeZone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeZone = this._timeZone;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDate | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._format = undefined;
      this._targetType = undefined;
      this._timeZone = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._format = value.format;
      this._targetType = value.targetType;
      this._timeZone = value.timeZone;
    }
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // target_type - computed: false, optional: true, required: false
  private _targetType?: string; 
  public get targetType() {
    return this.getStringAttribute('target_type');
  }
  public set targetType(value: string) {
    this._targetType = value;
  }
  public resetTargetType() {
    this._targetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetTypeInput() {
    return this._targetType;
  }

  // time_zone - computed: false, optional: true, required: false
  private _timeZone?: string; 
  public get timeZone() {
    return this.getStringAttribute('time_zone');
  }
  public set timeZone(value: string) {
    this._timeZone = value;
  }
  public resetTimeZone() {
    this._timeZone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeZoneInput() {
    return this._timeZone;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace {
  /**
  * Replacement value, Jsonpath expression or string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Replaced value, Jsonpath expression.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKV {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#delimiter CkafkaDatahubTask#delimiter}
  */
  readonly delimiter: string;
  /**
  * Keep the source Key, the default is false not to keep.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#keep_original_key CkafkaDatahubTask#keep_original_key}
  */
  readonly keepOriginalKey?: string;
  /**
  * Key-value secondary analysis delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKVToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    delimiter: cdktf.stringToTerraform(struct!.delimiter),
    keep_original_key: cdktf.stringToTerraform(struct!.keepOriginalKey),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKVToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    delimiter: {
      value: cdktf.stringToHclTerraform(struct!.delimiter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keep_original_key: {
      value: cdktf.stringToHclTerraform(struct!.keepOriginalKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKVOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKV | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._delimiter !== undefined) {
      hasAnyValues = true;
      internalValueResult.delimiter = this._delimiter;
    }
    if (this._keepOriginalKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.keepOriginalKey = this._keepOriginalKey;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKV | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._delimiter = undefined;
      this._keepOriginalKey = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._delimiter = value.delimiter;
      this._keepOriginalKey = value.keepOriginalKey;
      this._regex = value.regex;
    }
  }

  // delimiter - computed: false, optional: false, required: true
  private _delimiter?: string; 
  public get delimiter() {
    return this.getStringAttribute('delimiter');
  }
  public set delimiter(value: string) {
    this._delimiter = value;
  }
  // Temporarily expose input value. Use with caution.
  public get delimiterInput() {
    return this._delimiter;
  }

  // keep_original_key - computed: false, optional: true, required: false
  private _keepOriginalKey?: string; 
  public get keepOriginalKey() {
    return this.getStringAttribute('keep_original_key');
  }
  public set keepOriginalKey(value: string) {
    this._keepOriginalKey = value;
  }
  public resetKeepOriginalKey() {
    this._keepOriginalKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keepOriginalKeyInput() {
    return this._keepOriginalKey;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Regular.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._regex = value.regex;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * been replaced value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplit {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplitToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplitToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplit | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplit | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._regex = value.regex;
    }
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstr {
  /**
  * cut-off position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#end CkafkaDatahubTask#end}
  */
  readonly end: number;
  /**
  * interception starting position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start CkafkaDatahubTask#start}
  */
  readonly start: number;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstr | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstr | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._end = undefined;
      this._start = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: false, required: true
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: false, required: true
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode {
  /**
  * code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#charset_name CkafkaDatahubTask#charset_name}
  */
  readonly charsetName?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    charset_name: cdktf.stringToTerraform(struct!.charsetName),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    charset_name: {
      value: cdktf.stringToHclTerraform(struct!.charsetName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._charsetName !== undefined) {
      hasAnyValues = true;
      internalValueResult.charsetName = this._charsetName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._charsetName = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._charsetName = value.charsetName;
    }
  }

  // charset_name - computed: false, optional: true, required: false
  private _charsetName?: string; 
  public get charsetName() {
    return this.getStringAttribute('charset_name');
  }
  public set charsetName(value: string) {
    this._charsetName = value;
  }
  public resetCharsetName() {
    this._charsetName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get charsetNameInput() {
    return this._charsetName;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperate {
  /**
  * result.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#result CkafkaDatahubTask#result}
  */
  readonly result?: string;
  /**
  * Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
  /**
  * date block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#date CkafkaDatahubTask#date}
  */
  readonly date?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDate;
  /**
  * json_path_replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#json_path_replace CkafkaDatahubTask#json_path_replace}
  */
  readonly jsonPathReplace?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace;
  /**
  * k_v block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#k_v CkafkaDatahubTask#k_v}
  */
  readonly kV?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKV;
  /**
  * regex_replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex_replace CkafkaDatahubTask#regex_replace}
  */
  readonly regexReplace?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace;
  /**
  * replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#replace CkafkaDatahubTask#replace}
  */
  readonly replace?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplace;
  /**
  * split block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#split CkafkaDatahubTask#split}
  */
  readonly split?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplit;
  /**
  * substr block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#substr CkafkaDatahubTask#substr}
  */
  readonly substr?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstr;
  /**
  * url_decode block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#url_decode CkafkaDatahubTask#url_decode}
  */
  readonly urlDecode?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    result: cdktf.stringToTerraform(struct!.result),
    type: cdktf.stringToTerraform(struct!.type),
    date: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDateToTerraform(struct!.date),
    json_path_replace: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceToTerraform(struct!.jsonPathReplace),
    k_v: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKVToTerraform(struct!.kV),
    regex_replace: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceToTerraform(struct!.regexReplace),
    replace: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceToTerraform(struct!.replace),
    split: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplitToTerraform(struct!.split),
    substr: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrToTerraform(struct!.substr),
    url_decode: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeToTerraform(struct!.urlDecode),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    result: {
      value: cdktf.stringToHclTerraform(struct!.result),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    date: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDateToHclTerraform(struct!.date),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDateList",
    },
    json_path_replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceToHclTerraform(struct!.jsonPathReplace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceList",
    },
    k_v: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKVToHclTerraform(struct!.kV),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKVList",
    },
    regex_replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceToHclTerraform(struct!.regexReplace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceList",
    },
    replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceToHclTerraform(struct!.replace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceList",
    },
    split: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplitToHclTerraform(struct!.split),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplitList",
    },
    substr: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrToHclTerraform(struct!.substr),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrList",
    },
    url_decode: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeToHclTerraform(struct!.urlDecode),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperate | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._result !== undefined) {
      hasAnyValues = true;
      internalValueResult.result = this._result;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._date?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.date = this._date?.internalValue;
    }
    if (this._jsonPathReplace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonPathReplace = this._jsonPathReplace?.internalValue;
    }
    if (this._kV?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kV = this._kV?.internalValue;
    }
    if (this._regexReplace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexReplace = this._regexReplace?.internalValue;
    }
    if (this._replace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.replace = this._replace?.internalValue;
    }
    if (this._split?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.split = this._split?.internalValue;
    }
    if (this._substr?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.substr = this._substr?.internalValue;
    }
    if (this._urlDecode?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.urlDecode = this._urlDecode?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperate | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._result = undefined;
      this._type = undefined;
      this._date.internalValue = undefined;
      this._jsonPathReplace.internalValue = undefined;
      this._kV.internalValue = undefined;
      this._regexReplace.internalValue = undefined;
      this._replace.internalValue = undefined;
      this._split.internalValue = undefined;
      this._substr.internalValue = undefined;
      this._urlDecode.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._result = value.result;
      this._type = value.type;
      this._date.internalValue = value.date;
      this._jsonPathReplace.internalValue = value.jsonPathReplace;
      this._kV.internalValue = value.kV;
      this._regexReplace.internalValue = value.regexReplace;
      this._replace.internalValue = value.replace;
      this._split.internalValue = value.split;
      this._substr.internalValue = value.substr;
      this._urlDecode.internalValue = value.urlDecode;
    }
  }

  // result - computed: false, optional: true, required: false
  private _result?: string; 
  public get result() {
    return this.getStringAttribute('result');
  }
  public set result(value: string) {
    this._result = value;
  }
  public resetResult() {
    this._result = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resultInput() {
    return this._result;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // date - computed: false, optional: true, required: false
  private _date = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDateOutputReference(this, "date");
  public get date() {
    return this._date;
  }
  public putDate(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateDate) {
    this._date.internalValue = value;
  }
  public resetDate() {
    this._date.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dateInput() {
    return this._date.internalValue;
  }

  // json_path_replace - computed: false, optional: true, required: false
  private _jsonPathReplace = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplaceOutputReference(this, "json_path_replace");
  public get jsonPathReplace() {
    return this._jsonPathReplace;
  }
  public putJsonPathReplace(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateJsonPathReplace) {
    this._jsonPathReplace.internalValue = value;
  }
  public resetJsonPathReplace() {
    this._jsonPathReplace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonPathReplaceInput() {
    return this._jsonPathReplace.internalValue;
  }

  // k_v - computed: false, optional: true, required: false
  private _kV = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKVOutputReference(this, "k_v");
  public get kV() {
    return this._kV;
  }
  public putKV(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateKV) {
    this._kV.internalValue = value;
  }
  public resetKV() {
    this._kV.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kVInput() {
    return this._kV.internalValue;
  }

  // regex_replace - computed: false, optional: true, required: false
  private _regexReplace = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplaceOutputReference(this, "regex_replace");
  public get regexReplace() {
    return this._regexReplace;
  }
  public putRegexReplace(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateRegexReplace) {
    this._regexReplace.internalValue = value;
  }
  public resetRegexReplace() {
    this._regexReplace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexReplaceInput() {
    return this._regexReplace.internalValue;
  }

  // replace - computed: false, optional: true, required: false
  private _replace = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplaceOutputReference(this, "replace");
  public get replace() {
    return this._replace;
  }
  public putReplace(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateReplace) {
    this._replace.internalValue = value;
  }
  public resetReplace() {
    this._replace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replaceInput() {
    return this._replace.internalValue;
  }

  // split - computed: false, optional: true, required: false
  private _split = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplitOutputReference(this, "split");
  public get split() {
    return this._split;
  }
  public putSplit(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSplit) {
    this._split.internalValue = value;
  }
  public resetSplit() {
    this._split.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get splitInput() {
    return this._split.internalValue;
  }

  // substr - computed: false, optional: true, required: false
  private _substr = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstrOutputReference(this, "substr");
  public get substr() {
    return this._substr;
  }
  public putSubstr(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateSubstr) {
    this._substr.internalValue = value;
  }
  public resetSubstr() {
    this._substr.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get substrInput() {
    return this._substr.internalValue;
  }

  // url_decode - computed: false, optional: true, required: false
  private _urlDecode = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecodeOutputReference(this, "url_decode");
  public get urlDecode() {
    return this._urlDecode;
  }
  public putUrlDecode(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateUrlDecode) {
    this._urlDecode.internalValue = value;
  }
  public resetUrlDecode() {
    this._urlDecode.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlDecodeInput() {
    return this._urlDecode.internalValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDate {
  /**
  * Time format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#format CkafkaDatahubTask#format}
  */
  readonly format?: string;
  /**
  * input type, string|unix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#target_type CkafkaDatahubTask#target_type}
  */
  readonly targetType?: string;
  /**
  * default GMT+8.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#time_zone CkafkaDatahubTask#time_zone}
  */
  readonly timeZone?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDateToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    format: cdktf.stringToTerraform(struct!.format),
    target_type: cdktf.stringToTerraform(struct!.targetType),
    time_zone: cdktf.stringToTerraform(struct!.timeZone),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDateToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    target_type: {
      value: cdktf.stringToHclTerraform(struct!.targetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_zone: {
      value: cdktf.stringToHclTerraform(struct!.timeZone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDate | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._targetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetType = this._targetType;
    }
    if (this._timeZone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeZone = this._timeZone;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDate | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._format = undefined;
      this._targetType = undefined;
      this._timeZone = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._format = value.format;
      this._targetType = value.targetType;
      this._timeZone = value.timeZone;
    }
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // target_type - computed: false, optional: true, required: false
  private _targetType?: string; 
  public get targetType() {
    return this.getStringAttribute('target_type');
  }
  public set targetType(value: string) {
    this._targetType = value;
  }
  public resetTargetType() {
    this._targetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetTypeInput() {
    return this._targetType;
  }

  // time_zone - computed: false, optional: true, required: false
  private _timeZone?: string; 
  public get timeZone() {
    return this.getStringAttribute('time_zone');
  }
  public set timeZone(value: string) {
    this._timeZone = value;
  }
  public resetTimeZone() {
    this._timeZone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeZoneInput() {
    return this._timeZone;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplace {
  /**
  * Replacement value, Jsonpath expression or string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Replaced value, Jsonpath expression.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKV {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#delimiter CkafkaDatahubTask#delimiter}
  */
  readonly delimiter: string;
  /**
  * Keep the source Key, the default is false not to keep.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#keep_original_key CkafkaDatahubTask#keep_original_key}
  */
  readonly keepOriginalKey?: string;
  /**
  * Key-value secondary analysis delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKVToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    delimiter: cdktf.stringToTerraform(struct!.delimiter),
    keep_original_key: cdktf.stringToTerraform(struct!.keepOriginalKey),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKVToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    delimiter: {
      value: cdktf.stringToHclTerraform(struct!.delimiter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keep_original_key: {
      value: cdktf.stringToHclTerraform(struct!.keepOriginalKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKVOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKV | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._delimiter !== undefined) {
      hasAnyValues = true;
      internalValueResult.delimiter = this._delimiter;
    }
    if (this._keepOriginalKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.keepOriginalKey = this._keepOriginalKey;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKV | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._delimiter = undefined;
      this._keepOriginalKey = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._delimiter = value.delimiter;
      this._keepOriginalKey = value.keepOriginalKey;
      this._regex = value.regex;
    }
  }

  // delimiter - computed: false, optional: false, required: true
  private _delimiter?: string; 
  public get delimiter() {
    return this.getStringAttribute('delimiter');
  }
  public set delimiter(value: string) {
    this._delimiter = value;
  }
  // Temporarily expose input value. Use with caution.
  public get delimiterInput() {
    return this._delimiter;
  }

  // keep_original_key - computed: false, optional: true, required: false
  private _keepOriginalKey?: string; 
  public get keepOriginalKey() {
    return this.getStringAttribute('keep_original_key');
  }
  public set keepOriginalKey(value: string) {
    this._keepOriginalKey = value;
  }
  public resetKeepOriginalKey() {
    this._keepOriginalKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keepOriginalKeyInput() {
    return this._keepOriginalKey;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Regular.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._regex = value.regex;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * been replaced value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplit {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplitToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplitToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplit | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplit | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._regex = value.regex;
    }
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstr {
  /**
  * cut-off position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#end CkafkaDatahubTask#end}
  */
  readonly end: number;
  /**
  * interception starting position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start CkafkaDatahubTask#start}
  */
  readonly start: number;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstrToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstrToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstrOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstr | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstr | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._end = undefined;
      this._start = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: false, required: true
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: false, required: true
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecode {
  /**
  * code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#charset_name CkafkaDatahubTask#charset_name}
  */
  readonly charsetName?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecodeToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    charset_name: cdktf.stringToTerraform(struct!.charsetName),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecodeToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    charset_name: {
      value: cdktf.stringToHclTerraform(struct!.charsetName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecodeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecode | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._charsetName !== undefined) {
      hasAnyValues = true;
      internalValueResult.charsetName = this._charsetName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecode | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._charsetName = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._charsetName = value.charsetName;
    }
  }

  // charset_name - computed: false, optional: true, required: false
  private _charsetName?: string; 
  public get charsetName() {
    return this.getStringAttribute('charset_name');
  }
  public set charsetName(value: string) {
    this._charsetName = value;
  }
  public resetCharsetName() {
    this._charsetName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get charsetNameInput() {
    return this._charsetName;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperates {
  /**
  * result.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#result CkafkaDatahubTask#result}
  */
  readonly result?: string;
  /**
  * Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
  /**
  * date block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#date CkafkaDatahubTask#date}
  */
  readonly date?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDate;
  /**
  * json_path_replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#json_path_replace CkafkaDatahubTask#json_path_replace}
  */
  readonly jsonPathReplace?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplace;
  /**
  * k_v block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#k_v CkafkaDatahubTask#k_v}
  */
  readonly kV?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKV;
  /**
  * regex_replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex_replace CkafkaDatahubTask#regex_replace}
  */
  readonly regexReplace?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplace;
  /**
  * replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#replace CkafkaDatahubTask#replace}
  */
  readonly replace?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplace;
  /**
  * split block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#split CkafkaDatahubTask#split}
  */
  readonly split?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplit;
  /**
  * substr block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#substr CkafkaDatahubTask#substr}
  */
  readonly substr?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstr;
  /**
  * url_decode block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#url_decode CkafkaDatahubTask#url_decode}
  */
  readonly urlDecode?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecode;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    result: cdktf.stringToTerraform(struct!.result),
    type: cdktf.stringToTerraform(struct!.type),
    date: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDateToTerraform(struct!.date),
    json_path_replace: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplaceToTerraform(struct!.jsonPathReplace),
    k_v: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKVToTerraform(struct!.kV),
    regex_replace: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplaceToTerraform(struct!.regexReplace),
    replace: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplaceToTerraform(struct!.replace),
    split: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplitToTerraform(struct!.split),
    substr: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstrToTerraform(struct!.substr),
    url_decode: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecodeToTerraform(struct!.urlDecode),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    result: {
      value: cdktf.stringToHclTerraform(struct!.result),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    date: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDateToHclTerraform(struct!.date),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDateList",
    },
    json_path_replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplaceToHclTerraform(struct!.jsonPathReplace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplaceList",
    },
    k_v: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKVToHclTerraform(struct!.kV),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKVList",
    },
    regex_replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplaceToHclTerraform(struct!.regexReplace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplaceList",
    },
    replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplaceToHclTerraform(struct!.replace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplaceList",
    },
    split: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplitToHclTerraform(struct!.split),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplitList",
    },
    substr: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstrToHclTerraform(struct!.substr),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstrList",
    },
    url_decode: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecodeToHclTerraform(struct!.urlDecode),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecodeList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperates | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._result !== undefined) {
      hasAnyValues = true;
      internalValueResult.result = this._result;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._date?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.date = this._date?.internalValue;
    }
    if (this._jsonPathReplace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonPathReplace = this._jsonPathReplace?.internalValue;
    }
    if (this._kV?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kV = this._kV?.internalValue;
    }
    if (this._regexReplace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexReplace = this._regexReplace?.internalValue;
    }
    if (this._replace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.replace = this._replace?.internalValue;
    }
    if (this._split?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.split = this._split?.internalValue;
    }
    if (this._substr?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.substr = this._substr?.internalValue;
    }
    if (this._urlDecode?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.urlDecode = this._urlDecode?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperates | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._result = undefined;
      this._type = undefined;
      this._date.internalValue = undefined;
      this._jsonPathReplace.internalValue = undefined;
      this._kV.internalValue = undefined;
      this._regexReplace.internalValue = undefined;
      this._replace.internalValue = undefined;
      this._split.internalValue = undefined;
      this._substr.internalValue = undefined;
      this._urlDecode.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._result = value.result;
      this._type = value.type;
      this._date.internalValue = value.date;
      this._jsonPathReplace.internalValue = value.jsonPathReplace;
      this._kV.internalValue = value.kV;
      this._regexReplace.internalValue = value.regexReplace;
      this._replace.internalValue = value.replace;
      this._split.internalValue = value.split;
      this._substr.internalValue = value.substr;
      this._urlDecode.internalValue = value.urlDecode;
    }
  }

  // result - computed: false, optional: true, required: false
  private _result?: string; 
  public get result() {
    return this.getStringAttribute('result');
  }
  public set result(value: string) {
    this._result = value;
  }
  public resetResult() {
    this._result = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resultInput() {
    return this._result;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // date - computed: false, optional: true, required: false
  private _date = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDateOutputReference(this, "date");
  public get date() {
    return this._date;
  }
  public putDate(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesDate) {
    this._date.internalValue = value;
  }
  public resetDate() {
    this._date.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dateInput() {
    return this._date.internalValue;
  }

  // json_path_replace - computed: false, optional: true, required: false
  private _jsonPathReplace = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplaceOutputReference(this, "json_path_replace");
  public get jsonPathReplace() {
    return this._jsonPathReplace;
  }
  public putJsonPathReplace(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesJsonPathReplace) {
    this._jsonPathReplace.internalValue = value;
  }
  public resetJsonPathReplace() {
    this._jsonPathReplace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonPathReplaceInput() {
    return this._jsonPathReplace.internalValue;
  }

  // k_v - computed: false, optional: true, required: false
  private _kV = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKVOutputReference(this, "k_v");
  public get kV() {
    return this._kV;
  }
  public putKV(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesKV) {
    this._kV.internalValue = value;
  }
  public resetKV() {
    this._kV.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kVInput() {
    return this._kV.internalValue;
  }

  // regex_replace - computed: false, optional: true, required: false
  private _regexReplace = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplaceOutputReference(this, "regex_replace");
  public get regexReplace() {
    return this._regexReplace;
  }
  public putRegexReplace(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesRegexReplace) {
    this._regexReplace.internalValue = value;
  }
  public resetRegexReplace() {
    this._regexReplace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexReplaceInput() {
    return this._regexReplace.internalValue;
  }

  // replace - computed: false, optional: true, required: false
  private _replace = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplaceOutputReference(this, "replace");
  public get replace() {
    return this._replace;
  }
  public putReplace(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesReplace) {
    this._replace.internalValue = value;
  }
  public resetReplace() {
    this._replace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replaceInput() {
    return this._replace.internalValue;
  }

  // split - computed: false, optional: true, required: false
  private _split = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplitOutputReference(this, "split");
  public get split() {
    return this._split;
  }
  public putSplit(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSplit) {
    this._split.internalValue = value;
  }
  public resetSplit() {
    this._split.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get splitInput() {
    return this._split.internalValue;
  }

  // substr - computed: false, optional: true, required: false
  private _substr = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstrOutputReference(this, "substr");
  public get substr() {
    return this._substr;
  }
  public putSubstr(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesSubstr) {
    this._substr.internalValue = value;
  }
  public resetSubstr() {
    this._substr.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get substrInput() {
    return this._substr.internalValue;
  }

  // url_decode - computed: false, optional: true, required: false
  private _urlDecode = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecodeOutputReference(this, "url_decode");
  public get urlDecode() {
    return this._urlDecode;
  }
  public putUrlDecode(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesUrlDecode) {
    this._urlDecode.internalValue = value;
  }
  public resetUrlDecode() {
    this._urlDecode.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlDecodeInput() {
    return this._urlDecode.internalValue;
  }
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperates[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesOutputReference {
    return new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSMT {
  /**
  * KEY.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#key CkafkaDatahubTask#key}
  */
  readonly key: string;
  /**
  * Operation, DATE system preset - timestamp, CUSTOMIZE customization, MAPPING mapping, JSONPATH.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#operate CkafkaDatahubTask#operate}
  */
  readonly operate: string;
  /**
  * OriginalValue.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#original_value CkafkaDatahubTask#original_value}
  */
  readonly originalValue?: string;
  /**
  * data type, ORIGINAL, STRING, INT64, FLOAT64, BOOLEAN, MAP, ARRAY.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#scheme_type CkafkaDatahubTask#scheme_type}
  */
  readonly schemeType: string;
  /**
  * VALUE.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#value CkafkaDatahubTask#value}
  */
  readonly value?: string;
  /**
  * value_operate block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#value_operate CkafkaDatahubTask#value_operate}
  */
  readonly valueOperate?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperate;
  /**
  * value_operates block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#value_operates CkafkaDatahubTask#value_operates}
  */
  readonly valueOperates?: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperates[] | cdktf.IResolvable;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSMTToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMT | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operate: cdktf.stringToTerraform(struct!.operate),
    original_value: cdktf.stringToTerraform(struct!.originalValue),
    scheme_type: cdktf.stringToTerraform(struct!.schemeType),
    value: cdktf.stringToTerraform(struct!.value),
    value_operate: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateToTerraform(struct!.valueOperate),
    value_operates: cdktf.listMapper(ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesToTerraform, true)(struct!.valueOperates),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSMTToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSMT | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operate: {
      value: cdktf.stringToHclTerraform(struct!.operate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    original_value: {
      value: cdktf.stringToHclTerraform(struct!.originalValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme_type: {
      value: cdktf.stringToHclTerraform(struct!.schemeType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_operate: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperateToHclTerraform(struct!.valueOperate),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateList",
    },
    value_operates: {
      value: cdktf.listMapperHcl(ckafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesToHclTerraform, true)(struct!.valueOperates),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSMT | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operate !== undefined) {
      hasAnyValues = true;
      internalValueResult.operate = this._operate;
    }
    if (this._originalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.originalValue = this._originalValue;
    }
    if (this._schemeType !== undefined) {
      hasAnyValues = true;
      internalValueResult.schemeType = this._schemeType;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueOperate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueOperate = this._valueOperate?.internalValue;
    }
    if (this._valueOperates?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueOperates = this._valueOperates?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSMT | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operate = undefined;
      this._originalValue = undefined;
      this._schemeType = undefined;
      this._value = undefined;
      this._valueOperate.internalValue = undefined;
      this._valueOperates.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operate = value.operate;
      this._originalValue = value.originalValue;
      this._schemeType = value.schemeType;
      this._value = value.value;
      this._valueOperate.internalValue = value.valueOperate;
      this._valueOperates.internalValue = value.valueOperates;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operate - computed: false, optional: false, required: true
  private _operate?: string; 
  public get operate() {
    return this.getStringAttribute('operate');
  }
  public set operate(value: string) {
    this._operate = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operateInput() {
    return this._operate;
  }

  // original_value - computed: false, optional: true, required: false
  private _originalValue?: string; 
  public get originalValue() {
    return this.getStringAttribute('original_value');
  }
  public set originalValue(value: string) {
    this._originalValue = value;
  }
  public resetOriginalValue() {
    this._originalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originalValueInput() {
    return this._originalValue;
  }

  // scheme_type - computed: false, optional: false, required: true
  private _schemeType?: string; 
  public get schemeType() {
    return this.getStringAttribute('scheme_type');
  }
  public set schemeType(value: string) {
    this._schemeType = value;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeTypeInput() {
    return this._schemeType;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_operate - computed: false, optional: true, required: false
  private _valueOperate = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperateOutputReference(this, "value_operate");
  public get valueOperate() {
    return this._valueOperate;
  }
  public putValueOperate(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperate) {
    this._valueOperate.internalValue = value;
  }
  public resetValueOperate() {
    this._valueOperate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueOperateInput() {
    return this._valueOperate.internalValue;
  }

  // value_operates - computed: false, optional: true, required: false
  private _valueOperates = new CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperatesList(this, "value_operates", false);
  public get valueOperates() {
    return this._valueOperates;
  }
  public putValueOperates(value: CkafkaDatahubTaskTransformsParamFieldChainSMTValueOperates[] | cdktf.IResolvable) {
    this._valueOperates.internalValue = value;
  }
  public resetValueOperates() {
    this._valueOperates.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueOperatesInput() {
    return this._valueOperates.internalValue;
  }
}

export class CkafkaDatahubTaskTransformsParamFieldChainSMTList extends cdktf.ComplexList {
  public internalValue? : CkafkaDatahubTaskTransformsParamFieldChainSMT[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): CkafkaDatahubTaskTransformsParamFieldChainSMTOutputReference {
    return new CkafkaDatahubTaskTransformsParamFieldChainSMTOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyse {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyse): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyse): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyse | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyse | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._regex = value.regex;
    }
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate {
  /**
  * Time format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#format CkafkaDatahubTask#format}
  */
  readonly format?: string;
  /**
  * input type, string|unix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#target_type CkafkaDatahubTask#target_type}
  */
  readonly targetType?: string;
  /**
  * default GMT+8.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#time_zone CkafkaDatahubTask#time_zone}
  */
  readonly timeZone?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    format: cdktf.stringToTerraform(struct!.format),
    target_type: cdktf.stringToTerraform(struct!.targetType),
    time_zone: cdktf.stringToTerraform(struct!.timeZone),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    target_type: {
      value: cdktf.stringToHclTerraform(struct!.targetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_zone: {
      value: cdktf.stringToHclTerraform(struct!.timeZone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._targetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetType = this._targetType;
    }
    if (this._timeZone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeZone = this._timeZone;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._format = undefined;
      this._targetType = undefined;
      this._timeZone = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._format = value.format;
      this._targetType = value.targetType;
      this._timeZone = value.timeZone;
    }
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // target_type - computed: false, optional: true, required: false
  private _targetType?: string; 
  public get targetType() {
    return this.getStringAttribute('target_type');
  }
  public set targetType(value: string) {
    this._targetType = value;
  }
  public resetTargetType() {
    this._targetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetTypeInput() {
    return this._targetType;
  }

  // time_zone - computed: false, optional: true, required: false
  private _timeZone?: string; 
  public get timeZone() {
    return this.getStringAttribute('time_zone');
  }
  public set timeZone(value: string) {
    this._timeZone = value;
  }
  public resetTimeZone() {
    this._timeZone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeZoneInput() {
    return this._timeZone;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace {
  /**
  * Replacement value, Jsonpath expression or string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Replaced value, Jsonpath expression.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#delimiter CkafkaDatahubTask#delimiter}
  */
  readonly delimiter: string;
  /**
  * Keep the source Key, the default is false not to keep.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#keep_original_key CkafkaDatahubTask#keep_original_key}
  */
  readonly keepOriginalKey?: string;
  /**
  * Key-value secondary analysis delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    delimiter: cdktf.stringToTerraform(struct!.delimiter),
    keep_original_key: cdktf.stringToTerraform(struct!.keepOriginalKey),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    delimiter: {
      value: cdktf.stringToHclTerraform(struct!.delimiter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keep_original_key: {
      value: cdktf.stringToHclTerraform(struct!.keepOriginalKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._delimiter !== undefined) {
      hasAnyValues = true;
      internalValueResult.delimiter = this._delimiter;
    }
    if (this._keepOriginalKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.keepOriginalKey = this._keepOriginalKey;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._delimiter = undefined;
      this._keepOriginalKey = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._delimiter = value.delimiter;
      this._keepOriginalKey = value.keepOriginalKey;
      this._regex = value.regex;
    }
  }

  // delimiter - computed: false, optional: false, required: true
  private _delimiter?: string; 
  public get delimiter() {
    return this.getStringAttribute('delimiter');
  }
  public set delimiter(value: string) {
    this._delimiter = value;
  }
  // Temporarily expose input value. Use with caution.
  public get delimiterInput() {
    return this._delimiter;
  }

  // keep_original_key - computed: false, optional: true, required: false
  private _keepOriginalKey?: string; 
  public get keepOriginalKey() {
    return this.getStringAttribute('keep_original_key');
  }
  public set keepOriginalKey(value: string) {
    this._keepOriginalKey = value;
  }
  public resetKeepOriginalKey() {
    this._keepOriginalKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keepOriginalKeyInput() {
    return this._keepOriginalKey;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Regular.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._regex = value.regex;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * been replaced value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._regex = value.regex;
    }
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr {
  /**
  * cut-off position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#end CkafkaDatahubTask#end}
  */
  readonly end: number;
  /**
  * interception starting position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start CkafkaDatahubTask#start}
  */
  readonly start: number;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._end = undefined;
      this._start = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: false, required: true
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: false, required: true
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode {
  /**
  * code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#charset_name CkafkaDatahubTask#charset_name}
  */
  readonly charsetName?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    charset_name: cdktf.stringToTerraform(struct!.charsetName),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    charset_name: {
      value: cdktf.stringToHclTerraform(struct!.charsetName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._charsetName !== undefined) {
      hasAnyValues = true;
      internalValueResult.charsetName = this._charsetName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._charsetName = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._charsetName = value.charsetName;
    }
  }

  // charset_name - computed: false, optional: true, required: false
  private _charsetName?: string; 
  public get charsetName() {
    return this.getStringAttribute('charset_name');
  }
  public set charsetName(value: string) {
    this._charsetName = value;
  }
  public resetCharsetName() {
    this._charsetName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get charsetNameInput() {
    return this._charsetName;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate {
  /**
  * result.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#result CkafkaDatahubTask#result}
  */
  readonly result?: string;
  /**
  * Processing mode, REPLACE replacement, SUBSTR interception, DATE date conversion, TRIM removal of leading and trailing spaces, REGEX REPLACE regular replacement, URL DECODE, LOWERCASE conversion to lowercase.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#type CkafkaDatahubTask#type}
  */
  readonly type: string;
  /**
  * date block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#date CkafkaDatahubTask#date}
  */
  readonly date?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate;
  /**
  * json_path_replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#json_path_replace CkafkaDatahubTask#json_path_replace}
  */
  readonly jsonPathReplace?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace;
  /**
  * k_v block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#k_v CkafkaDatahubTask#k_v}
  */
  readonly kV?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV;
  /**
  * regex_replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex_replace CkafkaDatahubTask#regex_replace}
  */
  readonly regexReplace?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace;
  /**
  * replace block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#replace CkafkaDatahubTask#replace}
  */
  readonly replace?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace;
  /**
  * split block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#split CkafkaDatahubTask#split}
  */
  readonly split?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit;
  /**
  * substr block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#substr CkafkaDatahubTask#substr}
  */
  readonly substr?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr;
  /**
  * url_decode block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#url_decode CkafkaDatahubTask#url_decode}
  */
  readonly urlDecode?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    result: cdktf.stringToTerraform(struct!.result),
    type: cdktf.stringToTerraform(struct!.type),
    date: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateToTerraform(struct!.date),
    json_path_replace: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceToTerraform(struct!.jsonPathReplace),
    k_v: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVToTerraform(struct!.kV),
    regex_replace: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceToTerraform(struct!.regexReplace),
    replace: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceToTerraform(struct!.replace),
    split: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitToTerraform(struct!.split),
    substr: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrToTerraform(struct!.substr),
    url_decode: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeToTerraform(struct!.urlDecode),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    result: {
      value: cdktf.stringToHclTerraform(struct!.result),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    date: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateToHclTerraform(struct!.date),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateList",
    },
    json_path_replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceToHclTerraform(struct!.jsonPathReplace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceList",
    },
    k_v: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVToHclTerraform(struct!.kV),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVList",
    },
    regex_replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceToHclTerraform(struct!.regexReplace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceList",
    },
    replace: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceToHclTerraform(struct!.replace),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceList",
    },
    split: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitToHclTerraform(struct!.split),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitList",
    },
    substr: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrToHclTerraform(struct!.substr),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrList",
    },
    url_decode: {
      value: ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeToHclTerraform(struct!.urlDecode),
      isBlock: true,
      type: "list",
      storageClassType: "CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._result !== undefined) {
      hasAnyValues = true;
      internalValueResult.result = this._result;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._date?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.date = this._date?.internalValue;
    }
    if (this._jsonPathReplace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonPathReplace = this._jsonPathReplace?.internalValue;
    }
    if (this._kV?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kV = this._kV?.internalValue;
    }
    if (this._regexReplace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexReplace = this._regexReplace?.internalValue;
    }
    if (this._replace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.replace = this._replace?.internalValue;
    }
    if (this._split?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.split = this._split?.internalValue;
    }
    if (this._substr?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.substr = this._substr?.internalValue;
    }
    if (this._urlDecode?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.urlDecode = this._urlDecode?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperate | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._result = undefined;
      this._type = undefined;
      this._date.internalValue = undefined;
      this._jsonPathReplace.internalValue = undefined;
      this._kV.internalValue = undefined;
      this._regexReplace.internalValue = undefined;
      this._replace.internalValue = undefined;
      this._split.internalValue = undefined;
      this._substr.internalValue = undefined;
      this._urlDecode.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._result = value.result;
      this._type = value.type;
      this._date.internalValue = value.date;
      this._jsonPathReplace.internalValue = value.jsonPathReplace;
      this._kV.internalValue = value.kV;
      this._regexReplace.internalValue = value.regexReplace;
      this._replace.internalValue = value.replace;
      this._split.internalValue = value.split;
      this._substr.internalValue = value.substr;
      this._urlDecode.internalValue = value.urlDecode;
    }
  }

  // result - computed: false, optional: true, required: false
  private _result?: string; 
  public get result() {
    return this.getStringAttribute('result');
  }
  public set result(value: string) {
    this._result = value;
  }
  public resetResult() {
    this._result = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resultInput() {
    return this._result;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // date - computed: false, optional: true, required: false
  private _date = new CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDateOutputReference(this, "date");
  public get date() {
    return this._date;
  }
  public putDate(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateDate) {
    this._date.internalValue = value;
  }
  public resetDate() {
    this._date.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dateInput() {
    return this._date.internalValue;
  }

  // json_path_replace - computed: false, optional: true, required: false
  private _jsonPathReplace = new CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplaceOutputReference(this, "json_path_replace");
  public get jsonPathReplace() {
    return this._jsonPathReplace;
  }
  public putJsonPathReplace(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateJsonPathReplace) {
    this._jsonPathReplace.internalValue = value;
  }
  public resetJsonPathReplace() {
    this._jsonPathReplace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonPathReplaceInput() {
    return this._jsonPathReplace.internalValue;
  }

  // k_v - computed: false, optional: true, required: false
  private _kV = new CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKVOutputReference(this, "k_v");
  public get kV() {
    return this._kV;
  }
  public putKV(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateKV) {
    this._kV.internalValue = value;
  }
  public resetKV() {
    this._kV.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kVInput() {
    return this._kV.internalValue;
  }

  // regex_replace - computed: false, optional: true, required: false
  private _regexReplace = new CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplaceOutputReference(this, "regex_replace");
  public get regexReplace() {
    return this._regexReplace;
  }
  public putRegexReplace(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateRegexReplace) {
    this._regexReplace.internalValue = value;
  }
  public resetRegexReplace() {
    this._regexReplace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexReplaceInput() {
    return this._regexReplace.internalValue;
  }

  // replace - computed: false, optional: true, required: false
  private _replace = new CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplaceOutputReference(this, "replace");
  public get replace() {
    return this._replace;
  }
  public putReplace(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateReplace) {
    this._replace.internalValue = value;
  }
  public resetReplace() {
    this._replace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replaceInput() {
    return this._replace.internalValue;
  }

  // split - computed: false, optional: true, required: false
  private _split = new CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplitOutputReference(this, "split");
  public get split() {
    return this._split;
  }
  public putSplit(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSplit) {
    this._split.internalValue = value;
  }
  public resetSplit() {
    this._split.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get splitInput() {
    return this._split.internalValue;
  }

  // substr - computed: false, optional: true, required: false
  private _substr = new CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstrOutputReference(this, "substr");
  public get substr() {
    return this._substr;
  }
  public putSubstr(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateSubstr) {
    this._substr.internalValue = value;
  }
  public resetSubstr() {
    this._substr.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get substrInput() {
    return this._substr.internalValue;
  }

  // url_decode - computed: false, optional: true, required: false
  private _urlDecode = new CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecodeOutputReference(this, "url_decode");
  public get urlDecode() {
    return this._urlDecode;
  }
  public putUrlDecode(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperateUrlDecode) {
    this._urlDecode.internalValue = value;
  }
  public resetUrlDecode() {
    this._urlDecode.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlDecodeInput() {
    return this._urlDecode.internalValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesDate {
  /**
  * Time format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#format CkafkaDatahubTask#format}
  */
  readonly format?: string;
  /**
  * input type, string|unix.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#target_type CkafkaDatahubTask#target_type}
  */
  readonly targetType?: string;
  /**
  * default GMT+8.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#time_zone CkafkaDatahubTask#time_zone}
  */
  readonly timeZone?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesDateToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    format: cdktf.stringToTerraform(struct!.format),
    target_type: cdktf.stringToTerraform(struct!.targetType),
    time_zone: cdktf.stringToTerraform(struct!.timeZone),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesDateToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesDateOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesDate): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    target_type: {
      value: cdktf.stringToHclTerraform(struct!.targetType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time_zone: {
      value: cdktf.stringToHclTerraform(struct!.timeZone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesDateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesDate | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._targetType !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetType = this._targetType;
    }
    if (this._timeZone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeZone = this._timeZone;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesDate | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._format = undefined;
      this._targetType = undefined;
      this._timeZone = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._format = value.format;
      this._targetType = value.targetType;
      this._timeZone = value.timeZone;
    }
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // target_type - computed: false, optional: true, required: false
  private _targetType?: string; 
  public get targetType() {
    return this.getStringAttribute('target_type');
  }
  public set targetType(value: string) {
    this._targetType = value;
  }
  public resetTargetType() {
    this._targetType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetTypeInput() {
    return this._targetType;
  }

  // time_zone - computed: false, optional: true, required: false
  private _timeZone?: string; 
  public get timeZone() {
    return this.getStringAttribute('time_zone');
  }
  public set timeZone(value: string) {
    this._timeZone = value;
  }
  public resetTimeZone() {
    this._timeZone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeZoneInput() {
    return this._timeZone;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesJsonPathReplace {
  /**
  * Replacement value, Jsonpath expression or string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Replaced value, Jsonpath expression.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesJsonPathReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesJsonPathReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesJsonPathReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesJsonPathReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesJsonPathReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesJsonPathReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesJsonPathReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesKV {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#delimiter CkafkaDatahubTask#delimiter}
  */
  readonly delimiter: string;
  /**
  * Keep the source Key, the default is false not to keep.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#keep_original_key CkafkaDatahubTask#keep_original_key}
  */
  readonly keepOriginalKey?: string;
  /**
  * Key-value secondary analysis delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesKVToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    delimiter: cdktf.stringToTerraform(struct!.delimiter),
    keep_original_key: cdktf.stringToTerraform(struct!.keepOriginalKey),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesKVToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesKVOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesKV): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    delimiter: {
      value: cdktf.stringToHclTerraform(struct!.delimiter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keep_original_key: {
      value: cdktf.stringToHclTerraform(struct!.keepOriginalKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesKVOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesKV | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._delimiter !== undefined) {
      hasAnyValues = true;
      internalValueResult.delimiter = this._delimiter;
    }
    if (this._keepOriginalKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.keepOriginalKey = this._keepOriginalKey;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesKV | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._delimiter = undefined;
      this._keepOriginalKey = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._delimiter = value.delimiter;
      this._keepOriginalKey = value.keepOriginalKey;
      this._regex = value.regex;
    }
  }

  // delimiter - computed: false, optional: false, required: true
  private _delimiter?: string; 
  public get delimiter() {
    return this.getStringAttribute('delimiter');
  }
  public set delimiter(value: string) {
    this._delimiter = value;
  }
  // Temporarily expose input value. Use with caution.
  public get delimiterInput() {
    return this._delimiter;
  }

  // keep_original_key - computed: false, optional: true, required: false
  private _keepOriginalKey?: string; 
  public get keepOriginalKey() {
    return this.getStringAttribute('keep_original_key');
  }
  public set keepOriginalKey(value: string) {
    this._keepOriginalKey = value;
  }
  public resetKeepOriginalKey() {
    this._keepOriginalKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keepOriginalKeyInput() {
    return this._keepOriginalKey;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesRegexReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * Regular.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesRegexReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesRegexReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesRegexReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesRegexReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesRegexReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesRegexReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesRegexReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._regex = value.regex;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesReplace {
  /**
  * new value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#new_value CkafkaDatahubTask#new_value}
  */
  readonly newValue: string;
  /**
  * been replaced value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#old_value CkafkaDatahubTask#old_value}
  */
  readonly oldValue: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesReplaceToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    new_value: cdktf.stringToTerraform(struct!.newValue),
    old_value: cdktf.stringToTerraform(struct!.oldValue),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesReplaceToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesReplaceOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesReplace): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    new_value: {
      value: cdktf.stringToHclTerraform(struct!.newValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    old_value: {
      value: cdktf.stringToHclTerraform(struct!.oldValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesReplace | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._newValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.newValue = this._newValue;
    }
    if (this._oldValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oldValue = this._oldValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesReplace | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._newValue = undefined;
      this._oldValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._newValue = value.newValue;
      this._oldValue = value.oldValue;
    }
  }

  // new_value - computed: false, optional: false, required: true
  private _newValue?: string; 
  public get newValue() {
    return this.getStringAttribute('new_value');
  }
  public set newValue(value: string) {
    this._newValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get newValueInput() {
    return this._newValue;
  }

  // old_value - computed: false, optional: false, required: true
  private _oldValue?: string; 
  public get oldValue() {
    return this.getStringAttribute('old_value');
  }
  public set oldValue(value: string) {
    this._oldValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get oldValueInput() {
    return this._oldValue;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSplit {
  /**
  * delimiter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#regex CkafkaDatahubTask#regex}
  */
  readonly regex: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSplitToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSplitToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSplitOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSplit): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSplitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSplit | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSplit | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._regex = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._regex = value.regex;
    }
  }

  // regex - computed: false, optional: false, required: true
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSubstr {
  /**
  * cut-off position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#end CkafkaDatahubTask#end}
  */
  readonly end: number;
  /**
  * interception starting position.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#start CkafkaDatahubTask#start}
  */
  readonly start: number;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSubstrToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSubstrToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSubstrOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSubstr): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSubstrOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSubstr | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesSubstr | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._end = undefined;
      this._start = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: false, required: true
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: false, required: true
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesUrlDecode {
  /**
  * code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/tencentcloudstack/tencentcloud/1.82.32/docs/resources/ckafka_datahub_task#charset_name CkafkaDatahubTask#charset_name}
  */
  readonly charsetName?: string;
}

export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesUrlDecodeToTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    charset_name: cdktf.stringToTerraform(struct!.charsetName),
  }
}


export function ckafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesUrlDecodeToHclTerraform(struct?: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesUrlDecodeOutputReference | CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesUrlDecode): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    charset_name: {
      value: cdktf.stringToHclTerraform(struct!.charsetName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesUrlDecodeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesUrlDecode | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._charsetName !== undefined) {
      hasAnyValues = true;
      internalValueResult.charsetName = this._charsetName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: CkafkaDatahubTaskTransformsParamFieldChainSecondaryAnalyseResultValueOperatesUrlDecode | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._charsetName = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._charsetName = value.charsetName;
    }
  }

  // charset_name - computed: false, optional: true, required: false
  private _charsetName?: string; 
  public get charsetName() {
    return this.getStringAttribute('charset_name');
  }
  public set charsetName(value: string) {
    this._charsetName = value;
  }
  public resetCharsetName() {
    this._charsetName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get charsetNameInput() {
    return this._charsetName;
  }
}
