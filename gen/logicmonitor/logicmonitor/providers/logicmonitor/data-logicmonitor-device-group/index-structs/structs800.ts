import * as cdktf from 'cdktf';
import { DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigCollectors,
dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigCollectorsToTerraform,
dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigCollectorsToHclTerraform,
DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigCollectorsList,
DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOTags,
dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOTagsToTerraform,
dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOTagsToHclTerraform,
DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOTagsList } from './structs400'
export interface DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEO {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEO | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEO | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEO | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEO | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEONormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEO[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesKINESISVIdEOOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLAMBDATags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesLAMBDATagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLAMBDATags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLAMBDATagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLAMBDATags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLAMBDATagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLAMBDATags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLAMBDATags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLAMBDATagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLAMBDATags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLAMBDATagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLAMBDATagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLAMBDA {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesLAMBDATags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLAMBDAToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLAMBDA | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLAMBDATagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLAMBDAToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLAMBDA | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLAMBDATagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLAMBDATagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLAMBDAOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLAMBDA | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLAMBDA | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesLAMBDATagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesLAMBDATags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesLAMBDANormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLAMBDAList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLAMBDA[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLAMBDAOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLAMBDAOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERS {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERS | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERS | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERS | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERS | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERS[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOADBALANCERSOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACES {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACES | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACES | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACES | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACES | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACES[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOGANALYTICSWORKSPACESOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesLOGICAPPS {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPS | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPS | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesLOGICAPPS | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPS | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesLOGICAPPS[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesLOGICAPPSOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECT {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECT | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECT | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECT | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECT | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECT[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIACONNECTOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERT {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERT | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERT | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERT | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERT | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERT[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIACONVERTOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVE {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVEToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVE | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVEToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVE | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVEOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVE | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVE | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVETags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVENormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVEList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVE[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVEOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGELIVEOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVOD {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVOD | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVOD | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVOD | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVOD | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVOD[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIAPACKAGEVODOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIASTORETagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIASTORETagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIASTORE {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIASTOREToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORE | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIASTORETagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIASTOREToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORE | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIASTORETagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIASTOREOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIASTORE | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORE | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORETags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesMEDIASTORENormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIASTOREList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIASTORE[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIASTOREOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIASTOREOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMEDIATAILOR {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILOR | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILOR | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIATAILOROutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMEDIATAILOR | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILOR | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMEDIATAILORList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMEDIATAILOR[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMEDIATAILOROutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMEDIATAILOROutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMQTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesMQTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMQTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMQTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMQTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMQTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMQTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMQTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMQTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMQTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMQTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMQTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMQ {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesMQTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMQToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMQ | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMQTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMQToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMQ | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMQTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMQTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMQOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMQ | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMQ | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesMQTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesMQTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesMQNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMQList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMQ[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMQOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMQOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesMSKBROKERTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMSKBROKERTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMSKBROKER {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMSKBROKERToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKBROKER | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMSKBROKERTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMSKBROKERToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKBROKER | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMSKBROKERTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKBROKEROutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMSKBROKER | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMSKBROKER | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesMSKBROKERNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKBROKERList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMSKBROKER[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMSKBROKEROutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMSKBROKEROutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTER {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTER | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTER | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTEROutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTER | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTER | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTERList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTER[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTEROutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMSKCLUSTEROutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMYSqlTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesMYSqlTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMYSqlTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMYSqlTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMYSqlTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMYSqlTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMYSqlTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMYSqlTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMYSqlTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMYSqlTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMYSqlTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMYSqlTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesMYSql {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesMYSqlTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesMYSqlToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMYSql | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMYSqlTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesMYSqlToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesMYSql | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMYSqlTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMYSqlTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesMYSqlOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesMYSql | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesMYSql | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesMYSqlTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesMYSqlTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesMYSqlNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesMYSqlList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesMYSql[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesMYSqlOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesMYSqlOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNATGATEWAY {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAY | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAY | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNATGATEWAY | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAY | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNATGATEWAY[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNATGATEWAYOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesNETWORKELBTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNETWORKELBTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNETWORKELB {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesNETWORKELBToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKELB | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesNETWORKELBTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNETWORKELBToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKELB | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesNETWORKELBTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKELBOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNETWORKELB | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKELB | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKELBNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKELBList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNETWORKELB[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNETWORKELBOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNETWORKELBOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACE {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACEToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACE | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACEToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACE | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACEOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACE | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACE | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACETags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACENormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACEList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACE[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACEOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesNETWORKINTERFACEOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesOPSWORKSTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesOPSWORKSTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesOPSWORKS {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesOPSWORKSToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesOPSWORKS | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesOPSWORKSTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesOPSWORKSToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesOPSWORKS | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesOPSWORKSTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesOPSWORKSOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesOPSWORKS | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesOPSWORKS | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesOPSWORKSNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesOPSWORKSList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesOPSWORKS[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesOPSWORKSOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesOPSWORKSOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesPOSTGRESql {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESql | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESql | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesPOSTGRESql | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESql | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesPOSTGRESql[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesPOSTGRESqlOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesPUBLICIpTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesPUBLICIpTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesPUBLICIp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesPUBLICIpToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPUBLICIp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesPUBLICIpTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesPUBLICIpToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesPUBLICIp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesPUBLICIpTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesPUBLICIpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesPUBLICIp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesPUBLICIp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesPUBLICIpNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesPUBLICIpList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesPUBLICIp[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesPUBLICIpOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesPUBLICIpOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGE {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGEToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGE | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGEToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGE | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGEOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGE | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGE | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGETags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGENormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGEList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGE[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGEOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesQUEUESTORAGEOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRDSTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesRDSTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRDSTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRDSTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRDSTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRDSTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRDSTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRDSTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRDSTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRDSTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRDSTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRDSTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRDS {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesRDSTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesRDSToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRDS | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesRDSTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRDSToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRDS | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesRDSTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesRDSTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRDSOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRDS | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRDS | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesRDSTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesRDSTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesRDSNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRDSList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRDS[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRDSOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRDSOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEM {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEM | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEM | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEM | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEM | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEM[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRECOVERYPROTECTEDITEMOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collectors DataLogicmonitorDeviceGroup#collectors}
  */
  readonly collectors?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectors[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#enabled DataLogicmonitorDeviceGroup#enabled}
  */
  readonly enabled: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collectors: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectorsToTerraform, false)(struct!.collectors),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collectors: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectorsToHclTerraform, false)(struct!.collectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectorsList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectors = this._collectors?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collectors.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collectors.internalValue = value.collectors;
      this._enabled = value.enabled;
    }
  }

  // collectors - computed: false, optional: true, required: false
  private _collectors = new DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectorsList(this, "collectors", false);
  public get collectors() {
    return this._collectors;
  }
  public putCollectors(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigCollectors[] | cdktf.IResolvable) {
    this._collectors.internalValue = value;
  }
  public resetCollectors() {
    this._collectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorsInput() {
    return this._collectors.internalValue;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICES {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#custom_n_s_p_schedule DataLogicmonitorDeviceGroup#custom_n_s_p_schedule}
  */
  readonly customNSPSchedule?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#dead_operation DataLogicmonitorDeviceGroup#dead_operation}
  */
  readonly deadOperation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#device_display_name_template DataLogicmonitorDeviceGroup#device_display_name_template}
  */
  readonly deviceDisplayNameTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_stop_terminate_host_monitor DataLogicmonitorDeviceGroup#disable_stop_terminate_host_monitor}
  */
  readonly disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#disable_terminated_host_alerting DataLogicmonitorDeviceGroup#disable_terminated_host_alerting}
  */
  readonly disableTerminatedHostAlerting?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_region_infos DataLogicmonitorDeviceGroup#monitoring_region_infos}
  */
  readonly monitoringRegionInfos?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#monitoring_regions DataLogicmonitorDeviceGroup#monitoring_regions}
  */
  readonly monitoringRegions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name_filter DataLogicmonitorDeviceGroup#name_filter}
  */
  readonly nameFilter?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#select_all DataLogicmonitorDeviceGroup#select_all}
  */
  readonly selectAll?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#tags DataLogicmonitorDeviceGroup#tags}
  */
  readonly tags?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTags[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_default DataLogicmonitorDeviceGroup#use_default}
  */
  readonly useDefault: boolean | cdktf.IResolvable;
  /**
  * normal_collector_config block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#normal_collector_config DataLogicmonitorDeviceGroup#normal_collector_config}
  */
  readonly normalCollectorConfig?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfig[] | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICES | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_n_s_p_schedule: cdktf.stringToTerraform(struct!.customNSPSchedule),
    dead_operation: cdktf.stringToTerraform(struct!.deadOperation),
    device_display_name_template: cdktf.stringToTerraform(struct!.deviceDisplayNameTemplate),
    disable_stop_terminate_host_monitor: cdktf.booleanToTerraform(struct!.disableStopTerminateHostMonitor),
    disable_terminated_host_alerting: cdktf.booleanToTerraform(struct!.disableTerminatedHostAlerting),
    monitoring_region_infos: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegionInfos),
    monitoring_regions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitoringRegions),
    name_filter: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameFilter),
    select_all: cdktf.booleanToTerraform(struct!.selectAll),
    tags: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTagsToTerraform, false)(struct!.tags),
    use_default: cdktf.booleanToTerraform(struct!.useDefault),
    normal_collector_config: cdktf.listMapper(dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigToTerraform, true)(struct!.normalCollectorConfig),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICES | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_n_s_p_schedule: {
      value: cdktf.stringToHclTerraform(struct!.customNSPSchedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dead_operation: {
      value: cdktf.stringToHclTerraform(struct!.deadOperation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_display_name_template: {
      value: cdktf.stringToHclTerraform(struct!.deviceDisplayNameTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_stop_terminate_host_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.disableStopTerminateHostMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disable_terminated_host_alerting: {
      value: cdktf.booleanToHclTerraform(struct!.disableTerminatedHostAlerting),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    monitoring_region_infos: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegionInfos),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    monitoring_regions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitoringRegions),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    name_filter: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameFilter),
      isBlock: false,
      type: "set",
      storageClassType: "stringList",
    },
    select_all: {
      value: cdktf.booleanToHclTerraform(struct!.selectAll),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tags: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTagsToHclTerraform, false)(struct!.tags),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTagsList",
    },
    use_default: {
      value: cdktf.booleanToHclTerraform(struct!.useDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    normal_collector_config: {
      value: cdktf.listMapperHcl(dataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigToHclTerraform, true)(struct!.normalCollectorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICES | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customNSPSchedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.customNSPSchedule = this._customNSPSchedule;
    }
    if (this._deadOperation !== undefined) {
      hasAnyValues = true;
      internalValueResult.deadOperation = this._deadOperation;
    }
    if (this._deviceDisplayNameTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceDisplayNameTemplate = this._deviceDisplayNameTemplate;
    }
    if (this._disableStopTerminateHostMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableStopTerminateHostMonitor = this._disableStopTerminateHostMonitor;
    }
    if (this._disableTerminatedHostAlerting !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTerminatedHostAlerting = this._disableTerminatedHostAlerting;
    }
    if (this._monitoringRegionInfos !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegionInfos = this._monitoringRegionInfos;
    }
    if (this._monitoringRegions !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitoringRegions = this._monitoringRegions;
    }
    if (this._nameFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameFilter = this._nameFilter;
    }
    if (this._selectAll !== undefined) {
      hasAnyValues = true;
      internalValueResult.selectAll = this._selectAll;
    }
    if (this._tags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tags = this._tags?.internalValue;
    }
    if (this._useDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.useDefault = this._useDefault;
    }
    if (this._normalCollectorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.normalCollectorConfig = this._normalCollectorConfig?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICES | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customNSPSchedule = undefined;
      this._deadOperation = undefined;
      this._deviceDisplayNameTemplate = undefined;
      this._disableStopTerminateHostMonitor = undefined;
      this._disableTerminatedHostAlerting = undefined;
      this._monitoringRegionInfos = undefined;
      this._monitoringRegions = undefined;
      this._nameFilter = undefined;
      this._selectAll = undefined;
      this._tags.internalValue = undefined;
      this._useDefault = undefined;
      this._normalCollectorConfig.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customNSPSchedule = value.customNSPSchedule;
      this._deadOperation = value.deadOperation;
      this._deviceDisplayNameTemplate = value.deviceDisplayNameTemplate;
      this._disableStopTerminateHostMonitor = value.disableStopTerminateHostMonitor;
      this._disableTerminatedHostAlerting = value.disableTerminatedHostAlerting;
      this._monitoringRegionInfos = value.monitoringRegionInfos;
      this._monitoringRegions = value.monitoringRegions;
      this._nameFilter = value.nameFilter;
      this._selectAll = value.selectAll;
      this._tags.internalValue = value.tags;
      this._useDefault = value.useDefault;
      this._normalCollectorConfig.internalValue = value.normalCollectorConfig;
    }
  }

  // custom_n_s_p_schedule - computed: false, optional: true, required: false
  private _customNSPSchedule?: string; 
  public get customNSPSchedule() {
    return this.getStringAttribute('custom_n_s_p_schedule');
  }
  public set customNSPSchedule(value: string) {
    this._customNSPSchedule = value;
  }
  public resetCustomNSPSchedule() {
    this._customNSPSchedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customNSPScheduleInput() {
    return this._customNSPSchedule;
  }

  // dead_operation - computed: false, optional: true, required: false
  private _deadOperation?: string; 
  public get deadOperation() {
    return this.getStringAttribute('dead_operation');
  }
  public set deadOperation(value: string) {
    this._deadOperation = value;
  }
  public resetDeadOperation() {
    this._deadOperation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deadOperationInput() {
    return this._deadOperation;
  }

  // device_display_name_template - computed: false, optional: true, required: false
  private _deviceDisplayNameTemplate?: string; 
  public get deviceDisplayNameTemplate() {
    return this.getStringAttribute('device_display_name_template');
  }
  public set deviceDisplayNameTemplate(value: string) {
    this._deviceDisplayNameTemplate = value;
  }
  public resetDeviceDisplayNameTemplate() {
    this._deviceDisplayNameTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceDisplayNameTemplateInput() {
    return this._deviceDisplayNameTemplate;
  }

  // disable_stop_terminate_host_monitor - computed: false, optional: true, required: false
  private _disableStopTerminateHostMonitor?: boolean | cdktf.IResolvable; 
  public get disableStopTerminateHostMonitor() {
    return this.getBooleanAttribute('disable_stop_terminate_host_monitor');
  }
  public set disableStopTerminateHostMonitor(value: boolean | cdktf.IResolvable) {
    this._disableStopTerminateHostMonitor = value;
  }
  public resetDisableStopTerminateHostMonitor() {
    this._disableStopTerminateHostMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableStopTerminateHostMonitorInput() {
    return this._disableStopTerminateHostMonitor;
  }

  // disable_terminated_host_alerting - computed: false, optional: true, required: false
  private _disableTerminatedHostAlerting?: boolean | cdktf.IResolvable; 
  public get disableTerminatedHostAlerting() {
    return this.getBooleanAttribute('disable_terminated_host_alerting');
  }
  public set disableTerminatedHostAlerting(value: boolean | cdktf.IResolvable) {
    this._disableTerminatedHostAlerting = value;
  }
  public resetDisableTerminatedHostAlerting() {
    this._disableTerminatedHostAlerting = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTerminatedHostAlertingInput() {
    return this._disableTerminatedHostAlerting;
  }

  // monitoring_region_infos - computed: false, optional: true, required: false
  private _monitoringRegionInfos?: string[]; 
  public get monitoringRegionInfos() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_region_infos'));
  }
  public set monitoringRegionInfos(value: string[]) {
    this._monitoringRegionInfos = value;
  }
  public resetMonitoringRegionInfos() {
    this._monitoringRegionInfos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionInfosInput() {
    return this._monitoringRegionInfos;
  }

  // monitoring_regions - computed: false, optional: true, required: false
  private _monitoringRegions?: string[]; 
  public get monitoringRegions() {
    return cdktf.Fn.tolist(this.getListAttribute('monitoring_regions'));
  }
  public set monitoringRegions(value: string[]) {
    this._monitoringRegions = value;
  }
  public resetMonitoringRegions() {
    this._monitoringRegions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitoringRegionsInput() {
    return this._monitoringRegions;
  }

  // name_filter - computed: false, optional: true, required: false
  private _nameFilter?: string[]; 
  public get nameFilter() {
    return cdktf.Fn.tolist(this.getListAttribute('name_filter'));
  }
  public set nameFilter(value: string[]) {
    this._nameFilter = value;
  }
  public resetNameFilter() {
    this._nameFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameFilterInput() {
    return this._nameFilter;
  }

  // select_all - computed: false, optional: true, required: false
  private _selectAll?: boolean | cdktf.IResolvable; 
  public get selectAll() {
    return this.getBooleanAttribute('select_all');
  }
  public set selectAll(value: boolean | cdktf.IResolvable) {
    this._selectAll = value;
  }
  public resetSelectAll() {
    this._selectAll = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectAllInput() {
    return this._selectAll;
  }

  // tags - computed: false, optional: true, required: false
  private _tags = new DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTagsList(this, "tags", false);
  public get tags() {
    return this._tags;
  }
  public putTags(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESTags[] | cdktf.IResolvable) {
    this._tags.internalValue = value;
  }
  public resetTags() {
    this._tags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagsInput() {
    return this._tags.internalValue;
  }

  // use_default - computed: false, optional: false, required: true
  private _useDefault?: boolean | cdktf.IResolvable; 
  public get useDefault() {
    return this.getBooleanAttribute('use_default');
  }
  public set useDefault(value: boolean | cdktf.IResolvable) {
    this._useDefault = value;
  }
  // Temporarily expose input value. Use with caution.
  public get useDefaultInput() {
    return this._useDefault;
  }

  // normal_collector_config - computed: false, optional: true, required: false
  private _normalCollectorConfig = new DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfigList(this, "normal_collector_config", false);
  public get normalCollectorConfig() {
    return this._normalCollectorConfig;
  }
  public putNormalCollectorConfig(value: DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESNormalCollectorConfig[] | cdktf.IResolvable) {
    this._normalCollectorConfig.internalValue = value;
  }
  public resetNormalCollectorConfig() {
    this._normalCollectorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get normalCollectorConfigInput() {
    return this._normalCollectorConfig.internalValue;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICES[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesRECOVERYSERVICESOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesREDISCACHETags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#name DataLogicmonitorDeviceGroup#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#operation DataLogicmonitorDeviceGroup#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#value DataLogicmonitorDeviceGroup#value}
  */
  readonly value?: string;
}

export function dataLogicmonitorDeviceGroupExtraServicesREDISCACHETagsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesREDISCACHETags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesREDISCACHETagsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesREDISCACHETags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesREDISCACHETagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesREDISCACHETags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesREDISCACHETags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesREDISCACHETagsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesREDISCACHETags[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesREDISCACHETagsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesREDISCACHETagsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#applies_to DataLogicmonitorDeviceGroup#applies_to}
  */
  readonly appliesTo?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#auto_balanced_collector_group_id DataLogicmonitorDeviceGroup#auto_balanced_collector_group_id}
  */
  readonly autoBalancedCollectorGroupId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#collector_id DataLogicmonitorDeviceGroup#collector_id}
  */
  readonly collectorId?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#priority DataLogicmonitorDeviceGroup#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/logicmonitor/logicmonitor/2.0.25/docs/data-sources/device_group#use_public_ip DataLogicmonitorDeviceGroup#use_public_ip}
  */
  readonly usePublicIp?: boolean | cdktf.IResolvable;
}

export function dataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectorsToTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    applies_to: cdktf.stringToTerraform(struct!.appliesTo),
    auto_balanced_collector_group_id: cdktf.numberToTerraform(struct!.autoBalancedCollectorGroupId),
    collector_id: cdktf.numberToTerraform(struct!.collectorId),
    priority: cdktf.numberToTerraform(struct!.priority),
    use_public_ip: cdktf.booleanToTerraform(struct!.usePublicIp),
  }
}


export function dataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectorsToHclTerraform(struct?: DataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    applies_to: {
      value: cdktf.stringToHclTerraform(struct!.appliesTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auto_balanced_collector_group_id: {
      value: cdktf.numberToHclTerraform(struct!.autoBalancedCollectorGroupId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_id: {
      value: cdktf.numberToHclTerraform(struct!.collectorId),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_public_ip: {
      value: cdktf.booleanToHclTerraform(struct!.usePublicIp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._appliesTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.appliesTo = this._appliesTo;
    }
    if (this._autoBalancedCollectorGroupId !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoBalancedCollectorGroupId = this._autoBalancedCollectorGroupId;
    }
    if (this._collectorId !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorId = this._collectorId;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._usePublicIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.usePublicIp = this._usePublicIp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._appliesTo = undefined;
      this._autoBalancedCollectorGroupId = undefined;
      this._collectorId = undefined;
      this._priority = undefined;
      this._usePublicIp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._appliesTo = value.appliesTo;
      this._autoBalancedCollectorGroupId = value.autoBalancedCollectorGroupId;
      this._collectorId = value.collectorId;
      this._priority = value.priority;
      this._usePublicIp = value.usePublicIp;
    }
  }

  // applies_to - computed: false, optional: true, required: false
  private _appliesTo?: string; 
  public get appliesTo() {
    return this.getStringAttribute('applies_to');
  }
  public set appliesTo(value: string) {
    this._appliesTo = value;
  }
  public resetAppliesTo() {
    this._appliesTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appliesToInput() {
    return this._appliesTo;
  }

  // auto_balanced_collector_group_id - computed: false, optional: true, required: false
  private _autoBalancedCollectorGroupId?: number; 
  public get autoBalancedCollectorGroupId() {
    return this.getNumberAttribute('auto_balanced_collector_group_id');
  }
  public set autoBalancedCollectorGroupId(value: number) {
    this._autoBalancedCollectorGroupId = value;
  }
  public resetAutoBalancedCollectorGroupId() {
    this._autoBalancedCollectorGroupId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoBalancedCollectorGroupIdInput() {
    return this._autoBalancedCollectorGroupId;
  }

  // collector_id - computed: false, optional: true, required: false
  private _collectorId?: number; 
  public get collectorId() {
    return this.getNumberAttribute('collector_id');
  }
  public set collectorId(value: number) {
    this._collectorId = value;
  }
  public resetCollectorId() {
    this._collectorId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIdInput() {
    return this._collectorId;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // use_public_ip - computed: false, optional: true, required: false
  private _usePublicIp?: boolean | cdktf.IResolvable; 
  public get usePublicIp() {
    return this.getBooleanAttribute('use_public_ip');
  }
  public set usePublicIp(value: boolean | cdktf.IResolvable) {
    this._usePublicIp = value;
  }
  public resetUsePublicIp() {
    this._usePublicIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usePublicIpInput() {
    return this._usePublicIp;
  }
}

export class DataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectorsList extends cdktf.ComplexList {
  public internalValue? : DataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectorsOutputReference {
    return new DataLogicmonitorDeviceGroupExtraServicesREDISCACHENormalCollectorConfigCollectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
