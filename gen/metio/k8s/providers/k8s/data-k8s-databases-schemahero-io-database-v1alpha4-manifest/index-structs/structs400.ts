import * as cdktf from 'cdktf';
import { DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRef,
dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRefToTerraform,
dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRefToHclTerraform,
DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRefOutputReference,
DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsm,
dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmToTerraform,
dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmToHclTerraform,
DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmOutputReference,
DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVault,
dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVaultToTerraform,
dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVaultToHclTerraform,
DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVaultOutputReference } from './structs0'
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbname {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbname | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbname | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbname | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbname | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHost {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHost | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHost | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPassword {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPassword | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPassword | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPort {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPort | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPort | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchema {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchema | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchema | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmode {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmode | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmode | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmode | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmode | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUri {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUri | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUri | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUri | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUri | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUser {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUser | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUser | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUser | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUser | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgres {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#dbname DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#dbname}
  */
  readonly dbname?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbname;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#host DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#host}
  */
  readonly host?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHost;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#password DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#password}
  */
  readonly password?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPassword;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#port DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#port}
  */
  readonly port?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPort;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#schema DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#schema}
  */
  readonly schema?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchema;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#sslmode DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#sslmode}
  */
  readonly sslmode?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmode;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#uri DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#uri}
  */
  readonly uri?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUri;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#user DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#user}
  */
  readonly user?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUser;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgres | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dbname: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameToTerraform(struct!.dbname),
    host: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostToTerraform(struct!.host),
    password: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordToTerraform(struct!.password),
    port: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortToTerraform(struct!.port),
    schema: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaToTerraform(struct!.schema),
    sslmode: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeToTerraform(struct!.sslmode),
    uri: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriToTerraform(struct!.uri),
    user: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserToTerraform(struct!.user),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgres | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dbname: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameToHclTerraform(struct!.dbname),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbname",
    },
    host: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostToHclTerraform(struct!.host),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHost",
    },
    password: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordToHclTerraform(struct!.password),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPassword",
    },
    port: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortToHclTerraform(struct!.port),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPort",
    },
    schema: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaToHclTerraform(struct!.schema),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchema",
    },
    sslmode: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeToHclTerraform(struct!.sslmode),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmode",
    },
    uri: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriToHclTerraform(struct!.uri),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUri",
    },
    user: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserToHclTerraform(struct!.user),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUser",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgres | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dbname?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dbname = this._dbname?.internalValue;
    }
    if (this._host?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host?.internalValue;
    }
    if (this._password?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password?.internalValue;
    }
    if (this._port?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port?.internalValue;
    }
    if (this._schema?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.schema = this._schema?.internalValue;
    }
    if (this._sslmode?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sslmode = this._sslmode?.internalValue;
    }
    if (this._uri?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri?.internalValue;
    }
    if (this._user?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgres | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dbname.internalValue = undefined;
      this._host.internalValue = undefined;
      this._password.internalValue = undefined;
      this._port.internalValue = undefined;
      this._schema.internalValue = undefined;
      this._sslmode.internalValue = undefined;
      this._uri.internalValue = undefined;
      this._user.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dbname.internalValue = value.dbname;
      this._host.internalValue = value.host;
      this._password.internalValue = value.password;
      this._port.internalValue = value.port;
      this._schema.internalValue = value.schema;
      this._sslmode.internalValue = value.sslmode;
      this._uri.internalValue = value.uri;
      this._user.internalValue = value.user;
    }
  }

  // dbname - computed: false, optional: true, required: false
  private _dbname = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameOutputReference(this, "dbname");
  public get dbname() {
    return this._dbname;
  }
  public putDbname(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbname) {
    this._dbname.internalValue = value;
  }
  public resetDbname() {
    this._dbname.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dbnameInput() {
    return this._dbname.internalValue;
  }

  // host - computed: false, optional: true, required: false
  private _host = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHostOutputReference(this, "host");
  public get host() {
    return this._host;
  }
  public putHost(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresHost) {
    this._host.internalValue = value;
  }
  public resetHost() {
    this._host.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host.internalValue;
  }

  // password - computed: false, optional: true, required: false
  private _password = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPasswordOutputReference(this, "password");
  public get password() {
    return this._password;
  }
  public putPassword(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPassword) {
    this._password.internalValue = value;
  }
  public resetPassword() {
    this._password.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password.internalValue;
  }

  // port - computed: false, optional: true, required: false
  private _port = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPortOutputReference(this, "port");
  public get port() {
    return this._port;
  }
  public putPort(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresPort) {
    this._port.internalValue = value;
  }
  public resetPort() {
    this._port.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port.internalValue;
  }

  // schema - computed: false, optional: true, required: false
  private _schema = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchemaOutputReference(this, "schema");
  public get schema() {
    return this._schema;
  }
  public putSchema(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSchema) {
    this._schema.internalValue = value;
  }
  public resetSchema() {
    this._schema.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaInput() {
    return this._schema.internalValue;
  }

  // sslmode - computed: false, optional: true, required: false
  private _sslmode = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmodeOutputReference(this, "sslmode");
  public get sslmode() {
    return this._sslmode;
  }
  public putSslmode(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresSslmode) {
    this._sslmode.internalValue = value;
  }
  public resetSslmode() {
    this._sslmode.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sslmodeInput() {
    return this._sslmode.internalValue;
  }

  // uri - computed: false, optional: true, required: false
  private _uri = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUriOutputReference(this, "uri");
  public get uri() {
    return this._uri;
  }
  public putUri(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUri) {
    this._uri.internalValue = value;
  }
  public resetUri() {
    this._uri.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUserOutputReference(this, "user");
  public get user() {
    return this._user;
  }
  public putUser(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresUser) {
    this._user.internalValue = value;
  }
  public resetUser() {
    this._user.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHost {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHost | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHost | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePassword {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePassword | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePassword | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePort {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePort | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePort | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUri {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUri | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUri | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUri | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUri | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUser {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUser | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUser | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUser | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUser | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlite {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#disable_tls DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#disable_tls}
  */
  readonly disableTls?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#host DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#host}
  */
  readonly host?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHost;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#password DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#password}
  */
  readonly password?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePassword;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#port DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#port}
  */
  readonly port?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePort;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#uri DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#uri}
  */
  readonly uri?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUri;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#user DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#user}
  */
  readonly user?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUser;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlite | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    disable_tls: cdktf.booleanToTerraform(struct!.disableTls),
    host: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostToTerraform(struct!.host),
    password: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordToTerraform(struct!.password),
    port: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortToTerraform(struct!.port),
    uri: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriToTerraform(struct!.uri),
    user: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserToTerraform(struct!.user),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlite | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    disable_tls: {
      value: cdktf.booleanToHclTerraform(struct!.disableTls),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    host: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostToHclTerraform(struct!.host),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHost",
    },
    password: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordToHclTerraform(struct!.password),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePassword",
    },
    port: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortToHclTerraform(struct!.port),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePort",
    },
    uri: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriToHclTerraform(struct!.uri),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUri",
    },
    user: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserToHclTerraform(struct!.user),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUser",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlite | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._disableTls !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTls = this._disableTls;
    }
    if (this._host?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host?.internalValue;
    }
    if (this._password?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password?.internalValue;
    }
    if (this._port?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port?.internalValue;
    }
    if (this._uri?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri?.internalValue;
    }
    if (this._user?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlite | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._disableTls = undefined;
      this._host.internalValue = undefined;
      this._password.internalValue = undefined;
      this._port.internalValue = undefined;
      this._uri.internalValue = undefined;
      this._user.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._disableTls = value.disableTls;
      this._host.internalValue = value.host;
      this._password.internalValue = value.password;
      this._port.internalValue = value.port;
      this._uri.internalValue = value.uri;
      this._user.internalValue = value.user;
    }
  }

  // disable_tls - computed: false, optional: true, required: false
  private _disableTls?: boolean | cdktf.IResolvable; 
  public get disableTls() {
    return this.getBooleanAttribute('disable_tls');
  }
  public set disableTls(value: boolean | cdktf.IResolvable) {
    this._disableTls = value;
  }
  public resetDisableTls() {
    this._disableTls = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTlsInput() {
    return this._disableTls;
  }

  // host - computed: false, optional: true, required: false
  private _host = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHostOutputReference(this, "host");
  public get host() {
    return this._host;
  }
  public putHost(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteHost) {
    this._host.internalValue = value;
  }
  public resetHost() {
    this._host.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host.internalValue;
  }

  // password - computed: false, optional: true, required: false
  private _password = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePasswordOutputReference(this, "password");
  public get password() {
    return this._password;
  }
  public putPassword(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePassword) {
    this._password.internalValue = value;
  }
  public resetPassword() {
    this._password.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password.internalValue;
  }

  // port - computed: false, optional: true, required: false
  private _port = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePortOutputReference(this, "port");
  public get port() {
    return this._port;
  }
  public putPort(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqlitePort) {
    this._port.internalValue = value;
  }
  public resetPort() {
    this._port.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port.internalValue;
  }

  // uri - computed: false, optional: true, required: false
  private _uri = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUriOutputReference(this, "uri");
  public get uri() {
    return this._uri;
  }
  public putUri(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUri) {
    this._uri.internalValue = value;
  }
  public resetUri() {
    this._uri.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUserOutputReference(this, "user");
  public get user() {
    return this._user;
  }
  public putUser(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionRqliteUser) {
    this._user.internalValue = value;
  }
  public resetUser() {
    this._user.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionSqlite {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#dsn DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#dsn}
  */
  readonly dsn: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionSqliteToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionSqlite | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dsn: cdktf.stringToTerraform(struct!.dsn),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionSqliteToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionSqlite | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dsn: {
      value: cdktf.stringToHclTerraform(struct!.dsn),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionSqliteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionSqlite | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dsn !== undefined) {
      hasAnyValues = true;
      internalValueResult.dsn = this._dsn;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionSqlite | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dsn = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dsn = value.dsn;
    }
  }

  // dsn - computed: false, optional: false, required: true
  private _dsn?: string; 
  public get dsn() {
    return this.getStringAttribute('dsn');
  }
  public set dsn(value: string) {
    this._dsn = value;
  }
  // Temporarily expose input value. Use with caution.
  public get dsnInput() {
    return this._dsn;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbname {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbname | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbname | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbname | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbname | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbDbnameValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHost {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHost | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHost | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbHostValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPassword {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPassword | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPassword | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPasswordValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPort {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPort | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPort | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbPortValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchema {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchema | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchema | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSchemaValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionTimescaledbSslmodeValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
