import * as cdktf from 'cdktf';
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestMetadata {
  /**
  * Keys and values that can be used by external tooling to store and retrieve arbitrary metadata about this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#annotations DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Keys and values that can be used to organize and categorize objects. See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#labels DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Unique identifier for this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Namespaces provides a mechanism for isolating groups of resources within a single cluster. See https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#namespace}
  */
  readonly namespace: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestMetadataToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestMetadataToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._labels = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._labels = value.labels;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: false, required: true
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspace {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspace | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspace | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPassword {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPassword | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPassword | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsername {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsername | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsername | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsername | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsername | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandra {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#hosts DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#hosts}
  */
  readonly hosts: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#keyspace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#keyspace}
  */
  readonly keyspace: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspace;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#password DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#password}
  */
  readonly password?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPassword;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#username DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#username}
  */
  readonly username?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsername;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandra | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    hosts: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.hosts),
    keyspace: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceToTerraform(struct!.keyspace),
    password: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordToTerraform(struct!.password),
    username: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameToTerraform(struct!.username),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandra | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    hosts: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.hosts),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    keyspace: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceToHclTerraform(struct!.keyspace),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspace",
    },
    password: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordToHclTerraform(struct!.password),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPassword",
    },
    username: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameToHclTerraform(struct!.username),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsername",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandra | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._hosts !== undefined) {
      hasAnyValues = true;
      internalValueResult.hosts = this._hosts;
    }
    if (this._keyspace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyspace = this._keyspace?.internalValue;
    }
    if (this._password?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password?.internalValue;
    }
    if (this._username?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.username = this._username?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandra | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._hosts = undefined;
      this._keyspace.internalValue = undefined;
      this._password.internalValue = undefined;
      this._username.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._hosts = value.hosts;
      this._keyspace.internalValue = value.keyspace;
      this._password.internalValue = value.password;
      this._username.internalValue = value.username;
    }
  }

  // hosts - computed: false, optional: false, required: true
  private _hosts?: string[]; 
  public get hosts() {
    return this.getListAttribute('hosts');
  }
  public set hosts(value: string[]) {
    this._hosts = value;
  }
  // Temporarily expose input value. Use with caution.
  public get hostsInput() {
    return this._hosts;
  }

  // keyspace - computed: false, optional: false, required: true
  private _keyspace = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspaceOutputReference(this, "keyspace");
  public get keyspace() {
    return this._keyspace;
  }
  public putKeyspace(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraKeyspace) {
    this._keyspace.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyspaceInput() {
    return this._keyspace.internalValue;
  }

  // password - computed: false, optional: true, required: false
  private _password = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPasswordOutputReference(this, "password");
  public get password() {
    return this._password;
  }
  public putPassword(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraPassword) {
    this._password.internalValue = value;
  }
  public resetPassword() {
    this._password.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password.internalValue;
  }

  // username - computed: false, optional: true, required: false
  private _username = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsernameOutputReference(this, "username");
  public get username() {
    return this._username;
  }
  public putUsername(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCassandraUsername) {
    this._username.internalValue = value;
  }
  public resetUsername() {
    this._username.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usernameInput() {
    return this._username.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbname {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbname | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbname | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbname | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbname | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHost {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHost | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHost | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPassword {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPassword | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPassword | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPort {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPort | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPort | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchema {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchema | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchema | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmode {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmode | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmode | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmode | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmode | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUri {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUri | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUri | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUri | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUri | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUser {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUser | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUser | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUser | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUser | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdb {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#dbname DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#dbname}
  */
  readonly dbname?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbname;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#host DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#host}
  */
  readonly host?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHost;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#password DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#password}
  */
  readonly password?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPassword;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#port DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#port}
  */
  readonly port?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPort;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#schema DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#schema}
  */
  readonly schema?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchema;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#sslmode DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#sslmode}
  */
  readonly sslmode?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmode;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#uri DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#uri}
  */
  readonly uri?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUri;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#user DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#user}
  */
  readonly user?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUser;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dbname: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameToTerraform(struct!.dbname),
    host: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostToTerraform(struct!.host),
    password: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordToTerraform(struct!.password),
    port: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortToTerraform(struct!.port),
    schema: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaToTerraform(struct!.schema),
    sslmode: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeToTerraform(struct!.sslmode),
    uri: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriToTerraform(struct!.uri),
    user: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserToTerraform(struct!.user),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dbname: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameToHclTerraform(struct!.dbname),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbname",
    },
    host: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostToHclTerraform(struct!.host),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHost",
    },
    password: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordToHclTerraform(struct!.password),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPassword",
    },
    port: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortToHclTerraform(struct!.port),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPort",
    },
    schema: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaToHclTerraform(struct!.schema),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchema",
    },
    sslmode: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeToHclTerraform(struct!.sslmode),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmode",
    },
    uri: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriToHclTerraform(struct!.uri),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUri",
    },
    user: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserToHclTerraform(struct!.user),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUser",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdb | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dbname?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dbname = this._dbname?.internalValue;
    }
    if (this._host?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host?.internalValue;
    }
    if (this._password?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password?.internalValue;
    }
    if (this._port?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port?.internalValue;
    }
    if (this._schema?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.schema = this._schema?.internalValue;
    }
    if (this._sslmode?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sslmode = this._sslmode?.internalValue;
    }
    if (this._uri?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri?.internalValue;
    }
    if (this._user?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdb | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dbname.internalValue = undefined;
      this._host.internalValue = undefined;
      this._password.internalValue = undefined;
      this._port.internalValue = undefined;
      this._schema.internalValue = undefined;
      this._sslmode.internalValue = undefined;
      this._uri.internalValue = undefined;
      this._user.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dbname.internalValue = value.dbname;
      this._host.internalValue = value.host;
      this._password.internalValue = value.password;
      this._port.internalValue = value.port;
      this._schema.internalValue = value.schema;
      this._sslmode.internalValue = value.sslmode;
      this._uri.internalValue = value.uri;
      this._user.internalValue = value.user;
    }
  }

  // dbname - computed: false, optional: true, required: false
  private _dbname = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbnameOutputReference(this, "dbname");
  public get dbname() {
    return this._dbname;
  }
  public putDbname(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbDbname) {
    this._dbname.internalValue = value;
  }
  public resetDbname() {
    this._dbname.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dbnameInput() {
    return this._dbname.internalValue;
  }

  // host - computed: false, optional: true, required: false
  private _host = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHostOutputReference(this, "host");
  public get host() {
    return this._host;
  }
  public putHost(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbHost) {
    this._host.internalValue = value;
  }
  public resetHost() {
    this._host.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host.internalValue;
  }

  // password - computed: false, optional: true, required: false
  private _password = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPasswordOutputReference(this, "password");
  public get password() {
    return this._password;
  }
  public putPassword(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPassword) {
    this._password.internalValue = value;
  }
  public resetPassword() {
    this._password.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password.internalValue;
  }

  // port - computed: false, optional: true, required: false
  private _port = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPortOutputReference(this, "port");
  public get port() {
    return this._port;
  }
  public putPort(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbPort) {
    this._port.internalValue = value;
  }
  public resetPort() {
    this._port.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port.internalValue;
  }

  // schema - computed: false, optional: true, required: false
  private _schema = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchemaOutputReference(this, "schema");
  public get schema() {
    return this._schema;
  }
  public putSchema(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSchema) {
    this._schema.internalValue = value;
  }
  public resetSchema() {
    this._schema.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaInput() {
    return this._schema.internalValue;
  }

  // sslmode - computed: false, optional: true, required: false
  private _sslmode = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmodeOutputReference(this, "sslmode");
  public get sslmode() {
    return this._sslmode;
  }
  public putSslmode(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbSslmode) {
    this._sslmode.internalValue = value;
  }
  public resetSslmode() {
    this._sslmode.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sslmodeInput() {
    return this._sslmode.internalValue;
  }

  // uri - computed: false, optional: true, required: false
  private _uri = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUriOutputReference(this, "uri");
  public get uri() {
    return this._uri;
  }
  public putUri(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUri) {
    this._uri.internalValue = value;
  }
  public resetUri() {
    this._uri.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUserOutputReference(this, "user");
  public get user() {
    return this._user;
  }
  public putUser(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionCockroachdbUser) {
    this._user.internalValue = value;
  }
  public resetUser() {
    this._user.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbname {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbname | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbname | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbname | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbname | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHost {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHost | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHost | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPassword {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPassword | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPassword | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPort {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPort | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPort | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUri {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUri | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUri | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUri | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUri | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#ssm DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#ssm}
  */
  readonly ssm?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#vault DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#vault}
  */
  readonly vault?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVault;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
    ssm: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmToTerraform(struct!.ssm),
    vault: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVaultToTerraform(struct!.vault),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRef",
    },
    ssm: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmToHclTerraform(struct!.ssm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsm",
    },
    vault: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVaultToHclTerraform(struct!.vault),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVault",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    if (this._ssm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssm = this._ssm?.internalValue;
    }
    if (this._vault?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vault = this._vault?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
      this._ssm.internalValue = undefined;
      this._vault.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
      this._ssm.internalValue = value.ssm;
      this._vault.internalValue = value.vault;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }

  // ssm - computed: false, optional: true, required: false
  private _ssm = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsmOutputReference(this, "ssm");
  public get ssm() {
    return this._ssm;
  }
  public putSsm(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromSsm) {
    this._ssm.internalValue = value;
  }
  public resetSsm() {
    this._ssm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssmInput() {
    return this._ssm.internalValue;
  }

  // vault - computed: false, optional: true, required: false
  private _vault = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVaultOutputReference(this, "vault");
  public get vault() {
    return this._vault;
  }
  public putVault(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromVault) {
    this._vault.internalValue = value;
  }
  public resetVault() {
    this._vault.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vaultInput() {
    return this._vault.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUser {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUser | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUser | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUser | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUser | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysql {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#collation DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#collation}
  */
  readonly collation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#dbname DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#dbname}
  */
  readonly dbname?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbname;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#default_charset DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#default_charset}
  */
  readonly defaultCharset?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#disable_tls DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#disable_tls}
  */
  readonly disableTls?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#host DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#host}
  */
  readonly host?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHost;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#password DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#password}
  */
  readonly password?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPassword;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#port DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#port}
  */
  readonly port?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPort;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#uri DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#uri}
  */
  readonly uri?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUri;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#user DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#user}
  */
  readonly user?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUser;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysql | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    collation: cdktf.stringToTerraform(struct!.collation),
    dbname: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameToTerraform(struct!.dbname),
    default_charset: cdktf.stringToTerraform(struct!.defaultCharset),
    disable_tls: cdktf.booleanToTerraform(struct!.disableTls),
    host: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostToTerraform(struct!.host),
    password: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordToTerraform(struct!.password),
    port: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortToTerraform(struct!.port),
    uri: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriToTerraform(struct!.uri),
    user: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserToTerraform(struct!.user),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysql | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    collation: {
      value: cdktf.stringToHclTerraform(struct!.collation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dbname: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameToHclTerraform(struct!.dbname),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbname",
    },
    default_charset: {
      value: cdktf.stringToHclTerraform(struct!.defaultCharset),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disable_tls: {
      value: cdktf.booleanToHclTerraform(struct!.disableTls),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    host: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostToHclTerraform(struct!.host),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHost",
    },
    password: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordToHclTerraform(struct!.password),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPassword",
    },
    port: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortToHclTerraform(struct!.port),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPort",
    },
    uri: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriToHclTerraform(struct!.uri),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUri",
    },
    user: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserToHclTerraform(struct!.user),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUser",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysql | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._collation !== undefined) {
      hasAnyValues = true;
      internalValueResult.collation = this._collation;
    }
    if (this._dbname?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dbname = this._dbname?.internalValue;
    }
    if (this._defaultCharset !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultCharset = this._defaultCharset;
    }
    if (this._disableTls !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableTls = this._disableTls;
    }
    if (this._host?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host?.internalValue;
    }
    if (this._password?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password?.internalValue;
    }
    if (this._port?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port?.internalValue;
    }
    if (this._uri?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri?.internalValue;
    }
    if (this._user?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysql | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._collation = undefined;
      this._dbname.internalValue = undefined;
      this._defaultCharset = undefined;
      this._disableTls = undefined;
      this._host.internalValue = undefined;
      this._password.internalValue = undefined;
      this._port.internalValue = undefined;
      this._uri.internalValue = undefined;
      this._user.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._collation = value.collation;
      this._dbname.internalValue = value.dbname;
      this._defaultCharset = value.defaultCharset;
      this._disableTls = value.disableTls;
      this._host.internalValue = value.host;
      this._password.internalValue = value.password;
      this._port.internalValue = value.port;
      this._uri.internalValue = value.uri;
      this._user.internalValue = value.user;
    }
  }

  // collation - computed: false, optional: true, required: false
  private _collation?: string; 
  public get collation() {
    return this.getStringAttribute('collation');
  }
  public set collation(value: string) {
    this._collation = value;
  }
  public resetCollation() {
    this._collation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collationInput() {
    return this._collation;
  }

  // dbname - computed: false, optional: true, required: false
  private _dbname = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbnameOutputReference(this, "dbname");
  public get dbname() {
    return this._dbname;
  }
  public putDbname(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlDbname) {
    this._dbname.internalValue = value;
  }
  public resetDbname() {
    this._dbname.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dbnameInput() {
    return this._dbname.internalValue;
  }

  // default_charset - computed: false, optional: true, required: false
  private _defaultCharset?: string; 
  public get defaultCharset() {
    return this.getStringAttribute('default_charset');
  }
  public set defaultCharset(value: string) {
    this._defaultCharset = value;
  }
  public resetDefaultCharset() {
    this._defaultCharset = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultCharsetInput() {
    return this._defaultCharset;
  }

  // disable_tls - computed: false, optional: true, required: false
  private _disableTls?: boolean | cdktf.IResolvable; 
  public get disableTls() {
    return this.getBooleanAttribute('disable_tls');
  }
  public set disableTls(value: boolean | cdktf.IResolvable) {
    this._disableTls = value;
  }
  public resetDisableTls() {
    this._disableTls = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableTlsInput() {
    return this._disableTls;
  }

  // host - computed: false, optional: true, required: false
  private _host = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHostOutputReference(this, "host");
  public get host() {
    return this._host;
  }
  public putHost(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlHost) {
    this._host.internalValue = value;
  }
  public resetHost() {
    this._host.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host.internalValue;
  }

  // password - computed: false, optional: true, required: false
  private _password = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPasswordOutputReference(this, "password");
  public get password() {
    return this._password;
  }
  public putPassword(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPassword) {
    this._password.internalValue = value;
  }
  public resetPassword() {
    this._password.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password.internalValue;
  }

  // port - computed: false, optional: true, required: false
  private _port = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPortOutputReference(this, "port");
  public get port() {
    return this._port;
  }
  public putPort(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlPort) {
    this._port.internalValue = value;
  }
  public resetPort() {
    this._port.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port.internalValue;
  }

  // uri - computed: false, optional: true, required: false
  private _uri = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUriOutputReference(this, "uri");
  public get uri() {
    return this._uri;
  }
  public putUri(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUri) {
    this._uri.internalValue = value;
  }
  public resetUri() {
    this._uri.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUserOutputReference(this, "user");
  public get user() {
    return this._user;
  }
  public putUser(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionMysqlUser) {
    this._user.internalValue = value;
  }
  public resetUser() {
    this._user.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyId {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyId | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyId | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyId | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#key}
  */
  readonly key: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_key_ref DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_key_ref: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_key_ref: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value}
  */
  readonly value: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#value_from DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#value_from}
  */
  readonly valueFrom?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFrom;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#access_key_id DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#access_key_id}
  */
  readonly accessKeyId?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyId;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#name DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#name}
  */
  readonly name: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#region DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret_access_key DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret_access_key}
  */
  readonly secretAccessKey?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#with_decryption DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#with_decryption}
  */
  readonly withDecryption?: boolean | cdktf.IResolvable;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_key_id: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdToTerraform(struct!.accessKeyId),
    name: cdktf.stringToTerraform(struct!.name),
    region: cdktf.stringToTerraform(struct!.region),
    secret_access_key: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyToTerraform(struct!.secretAccessKey),
    with_decryption: cdktf.booleanToTerraform(struct!.withDecryption),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_key_id: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdToHclTerraform(struct!.accessKeyId),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyId",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_access_key: {
      value: dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyToHclTerraform(struct!.secretAccessKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKey",
    },
    with_decryption: {
      value: cdktf.booleanToHclTerraform(struct!.withDecryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessKeyId?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessKeyId = this._accessKeyId?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._secretAccessKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretAccessKey = this._secretAccessKey?.internalValue;
    }
    if (this._withDecryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.withDecryption = this._withDecryption;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = undefined;
      this._name = undefined;
      this._region = undefined;
      this._secretAccessKey.internalValue = undefined;
      this._withDecryption = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessKeyId.internalValue = value.accessKeyId;
      this._name = value.name;
      this._region = value.region;
      this._secretAccessKey.internalValue = value.secretAccessKey;
      this._withDecryption = value.withDecryption;
    }
  }

  // access_key_id - computed: false, optional: true, required: false
  private _accessKeyId = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyIdOutputReference(this, "access_key_id");
  public get accessKeyId() {
    return this._accessKeyId;
  }
  public putAccessKeyId(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmAccessKeyId) {
    this._accessKeyId.internalValue = value;
  }
  public resetAccessKeyId() {
    this._accessKeyId.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessKeyIdInput() {
    return this._accessKeyId.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // secret_access_key - computed: false, optional: true, required: false
  private _secretAccessKey = new DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKeyOutputReference(this, "secret_access_key");
  public get secretAccessKey() {
    return this._secretAccessKey;
  }
  public putSecretAccessKey(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromSsmSecretAccessKey) {
    this._secretAccessKey.internalValue = value;
  }
  public resetSecretAccessKey() {
    this._secretAccessKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretAccessKeyInput() {
    return this._secretAccessKey.internalValue;
  }

  // with_decryption - computed: false, optional: true, required: false
  private _withDecryption?: boolean | cdktf.IResolvable; 
  public get withDecryption() {
    return this.getBooleanAttribute('with_decryption');
  }
  public set withDecryption(value: boolean | cdktf.IResolvable) {
    this._withDecryption = value;
  }
  public resetWithDecryption() {
    this._withDecryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get withDecryptionInput() {
    return this._withDecryption;
  }
}
export interface DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVault {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#agent_inject DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#agent_inject}
  */
  readonly agentInject?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#connection_template DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#connection_template}
  */
  readonly connectionTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#kubernetes_auth_endpoint DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#kubernetes_auth_endpoint}
  */
  readonly kubernetesAuthEndpoint?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#role DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#role}
  */
  readonly role: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#secret DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#secret}
  */
  readonly secret: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account}
  */
  readonly serviceAccount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/databases_schemahero_io_database_v1alpha4_manifest#service_account_namespace DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4Manifest#service_account_namespace}
  */
  readonly serviceAccountNamespace?: string;
}

export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVaultToTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_inject: cdktf.booleanToTerraform(struct!.agentInject),
    connection_template: cdktf.stringToTerraform(struct!.connectionTemplate),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    kubernetes_auth_endpoint: cdktf.stringToTerraform(struct!.kubernetesAuthEndpoint),
    role: cdktf.stringToTerraform(struct!.role),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_account: cdktf.stringToTerraform(struct!.serviceAccount),
    service_account_namespace: cdktf.stringToTerraform(struct!.serviceAccountNamespace),
  }
}


export function dataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVaultToHclTerraform(struct?: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVault | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_inject: {
      value: cdktf.booleanToHclTerraform(struct!.agentInject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    connection_template: {
      value: cdktf.stringToHclTerraform(struct!.connectionTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_auth_endpoint: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesAuthEndpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_namespace: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVaultOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVault | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentInject !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentInject = this._agentInject;
    }
    if (this._connectionTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.connectionTemplate = this._connectionTemplate;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._kubernetesAuthEndpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesAuthEndpoint = this._kubernetesAuthEndpoint;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccount !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccount = this._serviceAccount;
    }
    if (this._serviceAccountNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountNamespace = this._serviceAccountNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SDatabasesSchemaheroIoDatabaseV1Alpha4ManifestSpecConnectionPostgresDbnameValueFromVault | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentInject = undefined;
      this._connectionTemplate = undefined;
      this._endpoint = undefined;
      this._kubernetesAuthEndpoint = undefined;
      this._role = undefined;
      this._secret = undefined;
      this._serviceAccount = undefined;
      this._serviceAccountNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentInject = value.agentInject;
      this._connectionTemplate = value.connectionTemplate;
      this._endpoint = value.endpoint;
      this._kubernetesAuthEndpoint = value.kubernetesAuthEndpoint;
      this._role = value.role;
      this._secret = value.secret;
      this._serviceAccount = value.serviceAccount;
      this._serviceAccountNamespace = value.serviceAccountNamespace;
    }
  }

  // agent_inject - computed: false, optional: true, required: false
  private _agentInject?: boolean | cdktf.IResolvable; 
  public get agentInject() {
    return this.getBooleanAttribute('agent_inject');
  }
  public set agentInject(value: boolean | cdktf.IResolvable) {
    this._agentInject = value;
  }
  public resetAgentInject() {
    this._agentInject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentInjectInput() {
    return this._agentInject;
  }

  // connection_template - computed: false, optional: true, required: false
  private _connectionTemplate?: string; 
  public get connectionTemplate() {
    return this.getStringAttribute('connection_template');
  }
  public set connectionTemplate(value: string) {
    this._connectionTemplate = value;
  }
  public resetConnectionTemplate() {
    this._connectionTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get connectionTemplateInput() {
    return this._connectionTemplate;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // kubernetes_auth_endpoint - computed: false, optional: true, required: false
  private _kubernetesAuthEndpoint?: string; 
  public get kubernetesAuthEndpoint() {
    return this.getStringAttribute('kubernetes_auth_endpoint');
  }
  public set kubernetesAuthEndpoint(value: string) {
    this._kubernetesAuthEndpoint = value;
  }
  public resetKubernetesAuthEndpoint() {
    this._kubernetesAuthEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesAuthEndpointInput() {
    return this._kubernetesAuthEndpoint;
  }

  // role - computed: false, optional: false, required: true
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // secret - computed: false, optional: false, required: true
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_account - computed: false, optional: true, required: false
  private _serviceAccount?: string; 
  public get serviceAccount() {
    return this.getStringAttribute('service_account');
  }
  public set serviceAccount(value: string) {
    this._serviceAccount = value;
  }
  public resetServiceAccount() {
    this._serviceAccount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountInput() {
    return this._serviceAccount;
  }

  // service_account_namespace - computed: false, optional: true, required: false
  private _serviceAccountNamespace?: string; 
  public get serviceAccountNamespace() {
    return this.getStringAttribute('service_account_namespace');
  }
  public set serviceAccountNamespace(value: string) {
    this._serviceAccountNamespace = value;
  }
  public resetServiceAccountNamespace() {
    this._serviceAccountNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNamespaceInput() {
    return this._serviceAccountNamespace;
  }
}
