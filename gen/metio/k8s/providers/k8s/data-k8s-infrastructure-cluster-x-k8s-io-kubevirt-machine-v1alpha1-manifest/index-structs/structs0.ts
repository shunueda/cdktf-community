import * as cdktf from 'cdktf';
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestMetadata {
  /**
  * Keys and values that can be used by external tooling to store and retrieve arbitrary metadata about this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#annotations DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Keys and values that can be used to organize and categorize objects. See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#labels DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Unique identifier for this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Namespaces provides a mechanism for isolating groups of resources within a single cluster. See https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespace DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespace}
  */
  readonly namespace: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestMetadataToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestMetadataToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._labels = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._labels = value.labels;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: false, required: true
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecInfraClusterSecretRef {
  /**
  * API version of the referent.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#api_version DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: 'spec.containers{name}' (where 'name' refers to the name of the container that triggered the event) or if no container name is specified 'spec.containers[2]' (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#field_path DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#field_path}
  */
  readonly fieldPath?: string;
  /**
  * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kind DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespace DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespace}
  */
  readonly namespace?: string;
  /**
  * Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#resource_version DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#resource_version}
  */
  readonly resourceVersion?: string;
  /**
  * UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#uid DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#uid}
  */
  readonly uid?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecInfraClusterSecretRefToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecInfraClusterSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    resource_version: cdktf.stringToTerraform(struct!.resourceVersion),
    uid: cdktf.stringToTerraform(struct!.uid),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecInfraClusterSecretRefToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecInfraClusterSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_version: {
      value: cdktf.stringToHclTerraform(struct!.resourceVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uid: {
      value: cdktf.stringToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecInfraClusterSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecInfraClusterSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._resourceVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceVersion = this._resourceVersion;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecInfraClusterSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._namespace = undefined;
      this._resourceVersion = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
      this._kind = value.kind;
      this._name = value.name;
      this._namespace = value.namespace;
      this._resourceVersion = value.resourceVersion;
      this._uid = value.uid;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // resource_version - computed: false, optional: true, required: false
  private _resourceVersion?: string; 
  public get resourceVersion() {
    return this.getStringAttribute('resource_version');
  }
  public set resourceVersion(value: string) {
    this._resourceVersion = value;
  }
  public resetResourceVersion() {
    this._resourceVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceVersionInput() {
    return this._resourceVersion;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: string; 
  public get uid() {
    return this.getStringAttribute('uid');
  }
  public set uid(value: string) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineBootstrapCheck {
  /**
  * CheckStrategy describes how CAPK controller will validate a successful CAPI bootstrap. Following specified method, CAPK will try to retrieve the state of the CAPI Sentinel file from the VM. Possible values are: 'none' or 'ssh' (default is 'ssh') and this value is validated by apiserver.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#check_strategy DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#check_strategy}
  */
  readonly checkStrategy?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineBootstrapCheckToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineBootstrapCheck | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    check_strategy: cdktf.stringToTerraform(struct!.checkStrategy),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineBootstrapCheckToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineBootstrapCheck | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    check_strategy: {
      value: cdktf.stringToHclTerraform(struct!.checkStrategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineBootstrapCheckOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineBootstrapCheck | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._checkStrategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.checkStrategy = this._checkStrategy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineBootstrapCheck | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._checkStrategy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._checkStrategy = value.checkStrategy;
    }
  }

  // check_strategy - computed: false, optional: true, required: false
  private _checkStrategy?: string; 
  public get checkStrategy() {
    return this.getStringAttribute('check_strategy');
  }
  public set checkStrategy(value: string) {
    this._checkStrategy = value;
  }
  public resetCheckStrategy() {
    this._checkStrategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get checkStrategyInput() {
    return this._checkStrategy;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpoints {
  /**
  * Current is the identifier of the snapshot created for this checkpoint.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#current DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#current}
  */
  readonly current: string;
  /**
  * Previous is the identifier of the snapshot from the previous checkpoint.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#previous DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#previous}
  */
  readonly previous: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpointsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpoints | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    current: cdktf.stringToTerraform(struct!.current),
    previous: cdktf.stringToTerraform(struct!.previous),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpointsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpoints | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    current: {
      value: cdktf.stringToHclTerraform(struct!.current),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    previous: {
      value: cdktf.stringToHclTerraform(struct!.previous),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpointsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpoints | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._current !== undefined) {
      hasAnyValues = true;
      internalValueResult.current = this._current;
    }
    if (this._previous !== undefined) {
      hasAnyValues = true;
      internalValueResult.previous = this._previous;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpoints | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._current = undefined;
      this._previous = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._current = value.current;
      this._previous = value.previous;
    }
  }

  // current - computed: false, optional: false, required: true
  private _current?: string; 
  public get current() {
    return this.getStringAttribute('current');
  }
  public set current(value: string) {
    this._current = value;
  }
  // Temporarily expose input value. Use with caution.
  public get currentInput() {
    return this._current;
  }

  // previous - computed: false, optional: false, required: true
  private _previous?: string; 
  public get previous() {
    return this.getStringAttribute('previous');
  }
  public set previous(value: string) {
    this._previous = value;
  }
  // Temporarily expose input value. Use with caution.
  public get previousInput() {
    return this._previous;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpointsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpoints[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpointsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpointsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSource {
  /**
  * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#api_group DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#api_group}
  */
  readonly apiGroup?: string;
  /**
  * Kind is the type of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kind DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kind}
  */
  readonly kind: string;
  /**
  * Name is the name of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_group: cdktf.stringToTerraform(struct!.apiGroup),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_group: {
      value: cdktf.stringToHclTerraform(struct!.apiGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiGroup = this._apiGroup;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiGroup = undefined;
      this._kind = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiGroup = value.apiGroup;
      this._kind = value.kind;
      this._name = value.name;
    }
  }

  // api_group - computed: false, optional: true, required: false
  private _apiGroup?: string; 
  public get apiGroup() {
    return this.getStringAttribute('api_group');
  }
  public set apiGroup(value: string) {
    this._apiGroup = value;
  }
  public resetApiGroup() {
    this._apiGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiGroupInput() {
    return this._apiGroup;
  }

  // kind - computed: false, optional: false, required: true
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRef {
  /**
  * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#api_group DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#api_group}
  */
  readonly apiGroup?: string;
  /**
  * Kind is the type of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kind DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kind}
  */
  readonly kind: string;
  /**
  * Name is the name of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespace DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRefToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_group: cdktf.stringToTerraform(struct!.apiGroup),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRefToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_group: {
      value: cdktf.stringToHclTerraform(struct!.apiGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiGroup = this._apiGroup;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiGroup = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiGroup = value.apiGroup;
      this._kind = value.kind;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // api_group - computed: false, optional: true, required: false
  private _apiGroup?: string; 
  public get apiGroup() {
    return this.getStringAttribute('api_group');
  }
  public set apiGroup(value: string) {
    this._apiGroup = value;
  }
  public resetApiGroup() {
    this._apiGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiGroupInput() {
    return this._apiGroup;
  }

  // kind - computed: false, optional: false, required: true
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResources {
  /**
  * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#limits DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#limits}
  */
  readonly limits?: { [key: string]: string };
  /**
  * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#requests DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#requests}
  */
  readonly requests?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResourcesToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    limits: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.limits),
    requests: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requests),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResourcesToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    limits: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.limits),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    requests: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requests),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._limits !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits;
    }
    if (this._requests !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._limits = undefined;
      this._requests = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._limits = value.limits;
      this._requests = value.requests;
    }
  }

  // limits - computed: false, optional: true, required: false
  private _limits?: { [key: string]: string }; 
  public get limits() {
    return this.getStringMapAttribute('limits');
  }
  public set limits(value: { [key: string]: string }) {
    this._limits = value;
  }
  public resetLimits() {
    this._limits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits;
  }

  // requests - computed: false, optional: true, required: false
  private _requests?: { [key: string]: string }; 
  public get requests() {
    return this.getStringMapAttribute('requests');
  }
  public set requests(value: { [key: string]: string }) {
    this._requests = value;
  }
  public resetRequests() {
    this._requests = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_labels DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvc {
  /**
  * accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#access_modes DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#access_modes}
  */
  readonly accessModes?: string[];
  /**
  * dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#data_source DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#data_source}
  */
  readonly dataSource?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSource;
  /**
  * dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef preserves all values, and generates an error if a disallowed value is specified. * While dataSource only allows local objects, dataSourceRef allows objects in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#data_source_ref DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#data_source_ref}
  */
  readonly dataSourceRef?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRef;
  /**
  * resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#resources DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResources;
  /**
  * selector is a label query over volumes to consider for binding.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#selector DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#selector}
  */
  readonly selector?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelector;
  /**
  * storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#storage_class_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#storage_class_name}
  */
  readonly storageClassName?: string;
  /**
  * volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#volume_attributes_class_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#volume_attributes_class_name}
  */
  readonly volumeAttributesClassName?: string;
  /**
  * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#volume_mode DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#volume_mode}
  */
  readonly volumeMode?: string;
  /**
  * volumeName is the binding reference to the PersistentVolume backing this claim.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#volume_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#volume_name}
  */
  readonly volumeName?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_modes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.accessModes),
    data_source: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceToTerraform(struct!.dataSource),
    data_source_ref: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRefToTerraform(struct!.dataSourceRef),
    resources: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResourcesToTerraform(struct!.resources),
    selector: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorToTerraform(struct!.selector),
    storage_class_name: cdktf.stringToTerraform(struct!.storageClassName),
    volume_attributes_class_name: cdktf.stringToTerraform(struct!.volumeAttributesClassName),
    volume_mode: cdktf.stringToTerraform(struct!.volumeMode),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_modes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.accessModes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    data_source: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceToHclTerraform(struct!.dataSource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSource",
    },
    data_source_ref: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRefToHclTerraform(struct!.dataSourceRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRef",
    },
    resources: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResources",
    },
    selector: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelector",
    },
    storage_class_name: {
      value: cdktf.stringToHclTerraform(struct!.storageClassName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_attributes_class_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeAttributesClassName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_mode: {
      value: cdktf.stringToHclTerraform(struct!.volumeMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessModes !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessModes = this._accessModes;
    }
    if (this._dataSource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSource = this._dataSource?.internalValue;
    }
    if (this._dataSourceRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceRef = this._dataSourceRef?.internalValue;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._storageClassName !== undefined) {
      hasAnyValues = true;
      internalValueResult.storageClassName = this._storageClassName;
    }
    if (this._volumeAttributesClassName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeAttributesClassName = this._volumeAttributesClassName;
    }
    if (this._volumeMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMode = this._volumeMode;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessModes = undefined;
      this._dataSource.internalValue = undefined;
      this._dataSourceRef.internalValue = undefined;
      this._resources.internalValue = undefined;
      this._selector.internalValue = undefined;
      this._storageClassName = undefined;
      this._volumeAttributesClassName = undefined;
      this._volumeMode = undefined;
      this._volumeName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessModes = value.accessModes;
      this._dataSource.internalValue = value.dataSource;
      this._dataSourceRef.internalValue = value.dataSourceRef;
      this._resources.internalValue = value.resources;
      this._selector.internalValue = value.selector;
      this._storageClassName = value.storageClassName;
      this._volumeAttributesClassName = value.volumeAttributesClassName;
      this._volumeMode = value.volumeMode;
      this._volumeName = value.volumeName;
    }
  }

  // access_modes - computed: false, optional: true, required: false
  private _accessModes?: string[]; 
  public get accessModes() {
    return this.getListAttribute('access_modes');
  }
  public set accessModes(value: string[]) {
    this._accessModes = value;
  }
  public resetAccessModes() {
    this._accessModes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessModesInput() {
    return this._accessModes;
  }

  // data_source - computed: false, optional: true, required: false
  private _dataSource = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceOutputReference(this, "data_source");
  public get dataSource() {
    return this._dataSource;
  }
  public putDataSource(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSource) {
    this._dataSource.internalValue = value;
  }
  public resetDataSource() {
    this._dataSource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceInput() {
    return this._dataSource.internalValue;
  }

  // data_source_ref - computed: false, optional: true, required: false
  private _dataSourceRef = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRefOutputReference(this, "data_source_ref");
  public get dataSourceRef() {
    return this._dataSourceRef;
  }
  public putDataSourceRef(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcDataSourceRef) {
    this._dataSourceRef.internalValue = value;
  }
  public resetDataSourceRef() {
    this._dataSourceRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceRefInput() {
    return this._dataSourceRef.internalValue;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // selector - computed: false, optional: true, required: false
  private _selector = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcSelector) {
    this._selector.internalValue = value;
  }
  public resetSelector() {
    this._selector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // storage_class_name - computed: false, optional: true, required: false
  private _storageClassName?: string; 
  public get storageClassName() {
    return this.getStringAttribute('storage_class_name');
  }
  public set storageClassName(value: string) {
    this._storageClassName = value;
  }
  public resetStorageClassName() {
    this._storageClassName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageClassNameInput() {
    return this._storageClassName;
  }

  // volume_attributes_class_name - computed: false, optional: true, required: false
  private _volumeAttributesClassName?: string; 
  public get volumeAttributesClassName() {
    return this.getStringAttribute('volume_attributes_class_name');
  }
  public set volumeAttributesClassName(value: string) {
    this._volumeAttributesClassName = value;
  }
  public resetVolumeAttributesClassName() {
    this._volumeAttributesClassName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeAttributesClassNameInput() {
    return this._volumeAttributesClassName;
  }

  // volume_mode - computed: false, optional: true, required: false
  private _volumeMode?: string; 
  public get volumeMode() {
    return this.getStringAttribute('volume_mode');
  }
  public set volumeMode(value: string) {
    this._volumeMode = value;
  }
  public resetVolumeMode() {
    this._volumeMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeModeInput() {
    return this._volumeMode;
  }

  // volume_name - computed: false, optional: true, required: false
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  public resetVolumeName() {
    this._volumeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcs {
  /**
  * SecretRef provides the secret reference needed to access the GCS source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secret_ref DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: string;
  /**
  * URL is the url of the GCS source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#url DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#url}
  */
  readonly url: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_ref: cdktf.stringToTerraform(struct!.secretRef),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_ref: {
      value: cdktf.stringToHclTerraform(struct!.secretRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretRef = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretRef = value.secretRef;
      this._url = value.url;
    }
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef?: string; 
  public get secretRef() {
    return this.getStringAttribute('secret_ref');
  }
  public set secretRef(value: string) {
    this._secretRef = value;
  }
  public resetSecretRef() {
    this._secretRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef;
  }

  // url - computed: false, optional: false, required: true
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttp {
  /**
  * CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#cert_config_map DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#cert_config_map}
  */
  readonly certConfigMap?: string;
  /**
  * ExtraHeaders is a list of strings containing extra headers to include with HTTP transfer requests
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#extra_headers DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#extra_headers}
  */
  readonly extraHeaders?: string[];
  /**
  * SecretExtraHeaders is a list of Secret references, each containing an extra HTTP header that may include sensitive information
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secret_extra_headers DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secret_extra_headers}
  */
  readonly secretExtraHeaders?: string[];
  /**
  * SecretRef A Secret reference, the secret should contain accessKeyId (user name) base64 encoded, and secretKey (password) also base64 encoded
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secret_ref DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: string;
  /**
  * URL is the URL of the http(s) endpoint
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#url DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#url}
  */
  readonly url: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttpToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cert_config_map: cdktf.stringToTerraform(struct!.certConfigMap),
    extra_headers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.extraHeaders),
    secret_extra_headers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.secretExtraHeaders),
    secret_ref: cdktf.stringToTerraform(struct!.secretRef),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttpToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cert_config_map: {
      value: cdktf.stringToHclTerraform(struct!.certConfigMap),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    extra_headers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.extraHeaders),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    secret_extra_headers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.secretExtraHeaders),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    secret_ref: {
      value: cdktf.stringToHclTerraform(struct!.secretRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._certConfigMap !== undefined) {
      hasAnyValues = true;
      internalValueResult.certConfigMap = this._certConfigMap;
    }
    if (this._extraHeaders !== undefined) {
      hasAnyValues = true;
      internalValueResult.extraHeaders = this._extraHeaders;
    }
    if (this._secretExtraHeaders !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretExtraHeaders = this._secretExtraHeaders;
    }
    if (this._secretRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._certConfigMap = undefined;
      this._extraHeaders = undefined;
      this._secretExtraHeaders = undefined;
      this._secretRef = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._certConfigMap = value.certConfigMap;
      this._extraHeaders = value.extraHeaders;
      this._secretExtraHeaders = value.secretExtraHeaders;
      this._secretRef = value.secretRef;
      this._url = value.url;
    }
  }

  // cert_config_map - computed: false, optional: true, required: false
  private _certConfigMap?: string; 
  public get certConfigMap() {
    return this.getStringAttribute('cert_config_map');
  }
  public set certConfigMap(value: string) {
    this._certConfigMap = value;
  }
  public resetCertConfigMap() {
    this._certConfigMap = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get certConfigMapInput() {
    return this._certConfigMap;
  }

  // extra_headers - computed: false, optional: true, required: false
  private _extraHeaders?: string[]; 
  public get extraHeaders() {
    return this.getListAttribute('extra_headers');
  }
  public set extraHeaders(value: string[]) {
    this._extraHeaders = value;
  }
  public resetExtraHeaders() {
    this._extraHeaders = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extraHeadersInput() {
    return this._extraHeaders;
  }

  // secret_extra_headers - computed: false, optional: true, required: false
  private _secretExtraHeaders?: string[]; 
  public get secretExtraHeaders() {
    return this.getListAttribute('secret_extra_headers');
  }
  public set secretExtraHeaders(value: string[]) {
    this._secretExtraHeaders = value;
  }
  public resetSecretExtraHeaders() {
    this._secretExtraHeaders = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretExtraHeadersInput() {
    return this._secretExtraHeaders;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef?: string; 
  public get secretRef() {
    return this.getStringAttribute('secret_ref');
  }
  public set secretRef(value: string) {
    this._secretRef = value;
  }
  public resetSecretRef() {
    this._secretRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef;
  }

  // url - computed: false, optional: false, required: true
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageio {
  /**
  * CertConfigMap provides a reference to the CA cert
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#cert_config_map DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#cert_config_map}
  */
  readonly certConfigMap?: string;
  /**
  * DiskID provides id of a disk to be imported
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#disk_id DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#disk_id}
  */
  readonly diskId: string;
  /**
  * SecretRef provides the secret reference needed to access the ovirt-engine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secret_ref DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: string;
  /**
  * URL is the URL of the ovirt-engine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#url DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#url}
  */
  readonly url: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageioToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageio | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cert_config_map: cdktf.stringToTerraform(struct!.certConfigMap),
    disk_id: cdktf.stringToTerraform(struct!.diskId),
    secret_ref: cdktf.stringToTerraform(struct!.secretRef),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageioToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageio | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cert_config_map: {
      value: cdktf.stringToHclTerraform(struct!.certConfigMap),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disk_id: {
      value: cdktf.stringToHclTerraform(struct!.diskId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_ref: {
      value: cdktf.stringToHclTerraform(struct!.secretRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageioOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageio | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._certConfigMap !== undefined) {
      hasAnyValues = true;
      internalValueResult.certConfigMap = this._certConfigMap;
    }
    if (this._diskId !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskId = this._diskId;
    }
    if (this._secretRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageio | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._certConfigMap = undefined;
      this._diskId = undefined;
      this._secretRef = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._certConfigMap = value.certConfigMap;
      this._diskId = value.diskId;
      this._secretRef = value.secretRef;
      this._url = value.url;
    }
  }

  // cert_config_map - computed: false, optional: true, required: false
  private _certConfigMap?: string; 
  public get certConfigMap() {
    return this.getStringAttribute('cert_config_map');
  }
  public set certConfigMap(value: string) {
    this._certConfigMap = value;
  }
  public resetCertConfigMap() {
    this._certConfigMap = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get certConfigMapInput() {
    return this._certConfigMap;
  }

  // disk_id - computed: false, optional: false, required: true
  private _diskId?: string; 
  public get diskId() {
    return this.getStringAttribute('disk_id');
  }
  public set diskId(value: string) {
    this._diskId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get diskIdInput() {
    return this._diskId;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef?: string; 
  public get secretRef() {
    return this.getStringAttribute('secret_ref');
  }
  public set secretRef(value: string) {
    this._secretRef = value;
  }
  public resetSecretRef() {
    this._secretRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef;
  }

  // url - computed: false, optional: false, required: true
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvc {
  /**
  * The name of the source PVC
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * The namespace of the source PVC
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespace DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespace}
  */
  readonly namespace: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvcToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvcToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: false, required: true
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistry {
  /**
  * CertConfigMap provides a reference to the Registry certs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#cert_config_map DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#cert_config_map}
  */
  readonly certConfigMap?: string;
  /**
  * ImageStream is the name of image stream for import
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#image_stream DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#image_stream}
  */
  readonly imageStream?: string;
  /**
  * PullMethod can be either 'pod' (default import), or 'node' (node docker cache based import)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pull_method DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pull_method}
  */
  readonly pullMethod?: string;
  /**
  * SecretRef provides the secret reference needed to access the Registry source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secret_ref DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: string;
  /**
  * URL is the url of the registry source (starting with the scheme: docker, oci-archive)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#url DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#url}
  */
  readonly url?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistryToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistry | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cert_config_map: cdktf.stringToTerraform(struct!.certConfigMap),
    image_stream: cdktf.stringToTerraform(struct!.imageStream),
    pull_method: cdktf.stringToTerraform(struct!.pullMethod),
    secret_ref: cdktf.stringToTerraform(struct!.secretRef),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistryToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistry | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cert_config_map: {
      value: cdktf.stringToHclTerraform(struct!.certConfigMap),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_stream: {
      value: cdktf.stringToHclTerraform(struct!.imageStream),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pull_method: {
      value: cdktf.stringToHclTerraform(struct!.pullMethod),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_ref: {
      value: cdktf.stringToHclTerraform(struct!.secretRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistryOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistry | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._certConfigMap !== undefined) {
      hasAnyValues = true;
      internalValueResult.certConfigMap = this._certConfigMap;
    }
    if (this._imageStream !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageStream = this._imageStream;
    }
    if (this._pullMethod !== undefined) {
      hasAnyValues = true;
      internalValueResult.pullMethod = this._pullMethod;
    }
    if (this._secretRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistry | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._certConfigMap = undefined;
      this._imageStream = undefined;
      this._pullMethod = undefined;
      this._secretRef = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._certConfigMap = value.certConfigMap;
      this._imageStream = value.imageStream;
      this._pullMethod = value.pullMethod;
      this._secretRef = value.secretRef;
      this._url = value.url;
    }
  }

  // cert_config_map - computed: false, optional: true, required: false
  private _certConfigMap?: string; 
  public get certConfigMap() {
    return this.getStringAttribute('cert_config_map');
  }
  public set certConfigMap(value: string) {
    this._certConfigMap = value;
  }
  public resetCertConfigMap() {
    this._certConfigMap = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get certConfigMapInput() {
    return this._certConfigMap;
  }

  // image_stream - computed: false, optional: true, required: false
  private _imageStream?: string; 
  public get imageStream() {
    return this.getStringAttribute('image_stream');
  }
  public set imageStream(value: string) {
    this._imageStream = value;
  }
  public resetImageStream() {
    this._imageStream = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageStreamInput() {
    return this._imageStream;
  }

  // pull_method - computed: false, optional: true, required: false
  private _pullMethod?: string; 
  public get pullMethod() {
    return this.getStringAttribute('pull_method');
  }
  public set pullMethod(value: string) {
    this._pullMethod = value;
  }
  public resetPullMethod() {
    this._pullMethod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pullMethodInput() {
    return this._pullMethod;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef?: string; 
  public get secretRef() {
    return this.getStringAttribute('secret_ref');
  }
  public set secretRef(value: string) {
    this._secretRef = value;
  }
  public resetSecretRef() {
    this._secretRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef;
  }

  // url - computed: false, optional: true, required: false
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  public resetUrl() {
    this._url = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3 {
  /**
  * CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#cert_config_map DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#cert_config_map}
  */
  readonly certConfigMap?: string;
  /**
  * SecretRef provides the secret reference needed to access the S3 source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secret_ref DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: string;
  /**
  * URL is the url of the S3 source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#url DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#url}
  */
  readonly url: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3ToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cert_config_map: cdktf.stringToTerraform(struct!.certConfigMap),
    secret_ref: cdktf.stringToTerraform(struct!.secretRef),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3ToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cert_config_map: {
      value: cdktf.stringToHclTerraform(struct!.certConfigMap),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_ref: {
      value: cdktf.stringToHclTerraform(struct!.secretRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3 | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._certConfigMap !== undefined) {
      hasAnyValues = true;
      internalValueResult.certConfigMap = this._certConfigMap;
    }
    if (this._secretRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3 | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._certConfigMap = undefined;
      this._secretRef = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._certConfigMap = value.certConfigMap;
      this._secretRef = value.secretRef;
      this._url = value.url;
    }
  }

  // cert_config_map - computed: false, optional: true, required: false
  private _certConfigMap?: string; 
  public get certConfigMap() {
    return this.getStringAttribute('cert_config_map');
  }
  public set certConfigMap(value: string) {
    this._certConfigMap = value;
  }
  public resetCertConfigMap() {
    this._certConfigMap = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get certConfigMapInput() {
    return this._certConfigMap;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef?: string; 
  public get secretRef() {
    return this.getStringAttribute('secret_ref');
  }
  public set secretRef(value: string) {
    this._secretRef = value;
  }
  public resetSecretRef() {
    this._secretRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef;
  }

  // url - computed: false, optional: false, required: true
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshot {
  /**
  * The name of the source VolumeSnapshot
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * The namespace of the source VolumeSnapshot
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespace DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespace}
  */
  readonly namespace: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshotToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshot | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshotToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshot | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshotOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshot | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshot | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: false, required: true
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddk {
  /**
  * BackingFile is the path to the virtual hard disk to migrate from vCenter/ESXi
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#backing_file DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#backing_file}
  */
  readonly backingFile?: string;
  /**
  * InitImageURL is an optional URL to an image containing an extracted VDDK library, overrides v2v-vmware config map
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#init_image_url DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#init_image_url}
  */
  readonly initImageUrl?: string;
  /**
  * SecretRef provides a reference to a secret containing the username and password needed to access the vCenter or ESXi host
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secret_ref DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: string;
  /**
  * Thumbprint is the certificate thumbprint of the vCenter or ESXi host
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#thumbprint DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#thumbprint}
  */
  readonly thumbprint?: string;
  /**
  * URL is the URL of the vCenter or ESXi host with the VM to migrate
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#url DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#url}
  */
  readonly url?: string;
  /**
  * UUID is the UUID of the virtual machine that the backing file is attached to in vCenter/ESXi
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#uuid DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#uuid}
  */
  readonly uuid?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddkToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    backing_file: cdktf.stringToTerraform(struct!.backingFile),
    init_image_url: cdktf.stringToTerraform(struct!.initImageUrl),
    secret_ref: cdktf.stringToTerraform(struct!.secretRef),
    thumbprint: cdktf.stringToTerraform(struct!.thumbprint),
    url: cdktf.stringToTerraform(struct!.url),
    uuid: cdktf.stringToTerraform(struct!.uuid),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddkToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    backing_file: {
      value: cdktf.stringToHclTerraform(struct!.backingFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    init_image_url: {
      value: cdktf.stringToHclTerraform(struct!.initImageUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_ref: {
      value: cdktf.stringToHclTerraform(struct!.secretRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    thumbprint: {
      value: cdktf.stringToHclTerraform(struct!.thumbprint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uuid: {
      value: cdktf.stringToHclTerraform(struct!.uuid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddkOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._backingFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.backingFile = this._backingFile;
    }
    if (this._initImageUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.initImageUrl = this._initImageUrl;
    }
    if (this._secretRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef;
    }
    if (this._thumbprint !== undefined) {
      hasAnyValues = true;
      internalValueResult.thumbprint = this._thumbprint;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    if (this._uuid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uuid = this._uuid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._backingFile = undefined;
      this._initImageUrl = undefined;
      this._secretRef = undefined;
      this._thumbprint = undefined;
      this._url = undefined;
      this._uuid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._backingFile = value.backingFile;
      this._initImageUrl = value.initImageUrl;
      this._secretRef = value.secretRef;
      this._thumbprint = value.thumbprint;
      this._url = value.url;
      this._uuid = value.uuid;
    }
  }

  // backing_file - computed: false, optional: true, required: false
  private _backingFile?: string; 
  public get backingFile() {
    return this.getStringAttribute('backing_file');
  }
  public set backingFile(value: string) {
    this._backingFile = value;
  }
  public resetBackingFile() {
    this._backingFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get backingFileInput() {
    return this._backingFile;
  }

  // init_image_url - computed: false, optional: true, required: false
  private _initImageUrl?: string; 
  public get initImageUrl() {
    return this.getStringAttribute('init_image_url');
  }
  public set initImageUrl(value: string) {
    this._initImageUrl = value;
  }
  public resetInitImageUrl() {
    this._initImageUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initImageUrlInput() {
    return this._initImageUrl;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef?: string; 
  public get secretRef() {
    return this.getStringAttribute('secret_ref');
  }
  public set secretRef(value: string) {
    this._secretRef = value;
  }
  public resetSecretRef() {
    this._secretRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef;
  }

  // thumbprint - computed: false, optional: true, required: false
  private _thumbprint?: string; 
  public get thumbprint() {
    return this.getStringAttribute('thumbprint');
  }
  public set thumbprint(value: string) {
    this._thumbprint = value;
  }
  public resetThumbprint() {
    this._thumbprint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get thumbprintInput() {
    return this._thumbprint;
  }

  // url - computed: false, optional: true, required: false
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  public resetUrl() {
    this._url = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }

  // uuid - computed: false, optional: true, required: false
  private _uuid?: string; 
  public get uuid() {
    return this.getStringAttribute('uuid');
  }
  public set uuid(value: string) {
    this._uuid = value;
  }
  public resetUuid() {
    this._uuid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uuidInput() {
    return this._uuid;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSource {
  /**
  * DataVolumeBlankImage provides the parameters to create a new raw blank image for the PVC
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#blank DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#blank}
  */
  readonly blank?: { [key: string]: string };
  /**
  * DataVolumeSourceGCS provides the parameters to create a Data Volume from an GCS source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#gcs DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#gcs}
  */
  readonly gcs?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcs;
  /**
  * DataVolumeSourceHTTP can be either an http or https endpoint, with an optional basic auth user name and password, and an optional configmap containing additional CAs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#http DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#http}
  */
  readonly http?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttp;
  /**
  * DataVolumeSourceImageIO provides the parameters to create a Data Volume from an imageio source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#imageio DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#imageio}
  */
  readonly imageio?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageio;
  /**
  * DataVolumeSourcePVC provides the parameters to create a Data Volume from an existing PVC
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pvc DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pvc}
  */
  readonly pvc?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvc;
  /**
  * DataVolumeSourceRegistry provides the parameters to create a Data Volume from an registry source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#registry DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#registry}
  */
  readonly registry?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistry;
  /**
  * DataVolumeSourceS3 provides the parameters to create a Data Volume from an S3 source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#s3 DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#s3}
  */
  readonly s3?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3;
  /**
  * DataVolumeSourceSnapshot provides the parameters to create a Data Volume from an existing VolumeSnapshot
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#snapshot DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#snapshot}
  */
  readonly snapshot?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshot;
  /**
  * DataVolumeSourceUpload provides the parameters to create a Data Volume by uploading the source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#upload DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#upload}
  */
  readonly upload?: { [key: string]: string };
  /**
  * DataVolumeSourceVDDK provides the parameters to create a Data Volume from a Vmware source
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#vddk DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#vddk}
  */
  readonly vddk?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddk;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    blank: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.blank),
    gcs: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcsToTerraform(struct!.gcs),
    http: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttpToTerraform(struct!.http),
    imageio: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageioToTerraform(struct!.imageio),
    pvc: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvcToTerraform(struct!.pvc),
    registry: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistryToTerraform(struct!.registry),
    s3: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3ToTerraform(struct!.s3),
    snapshot: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshotToTerraform(struct!.snapshot),
    upload: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.upload),
    vddk: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddkToTerraform(struct!.vddk),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    blank: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.blank),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    gcs: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcsToHclTerraform(struct!.gcs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcs",
    },
    http: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttpToHclTerraform(struct!.http),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttp",
    },
    imageio: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageioToHclTerraform(struct!.imageio),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageio",
    },
    pvc: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvcToHclTerraform(struct!.pvc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvc",
    },
    registry: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistryToHclTerraform(struct!.registry),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistry",
    },
    s3: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3ToHclTerraform(struct!.s3),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3",
    },
    snapshot: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshotToHclTerraform(struct!.snapshot),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshot",
    },
    upload: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.upload),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    vddk: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddkToHclTerraform(struct!.vddk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddk",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._blank !== undefined) {
      hasAnyValues = true;
      internalValueResult.blank = this._blank;
    }
    if (this._gcs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.gcs = this._gcs?.internalValue;
    }
    if (this._http?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.http = this._http?.internalValue;
    }
    if (this._imageio?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageio = this._imageio?.internalValue;
    }
    if (this._pvc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.pvc = this._pvc?.internalValue;
    }
    if (this._registry?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.registry = this._registry?.internalValue;
    }
    if (this._s3?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.s3 = this._s3?.internalValue;
    }
    if (this._snapshot?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.snapshot = this._snapshot?.internalValue;
    }
    if (this._upload !== undefined) {
      hasAnyValues = true;
      internalValueResult.upload = this._upload;
    }
    if (this._vddk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vddk = this._vddk?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._blank = undefined;
      this._gcs.internalValue = undefined;
      this._http.internalValue = undefined;
      this._imageio.internalValue = undefined;
      this._pvc.internalValue = undefined;
      this._registry.internalValue = undefined;
      this._s3.internalValue = undefined;
      this._snapshot.internalValue = undefined;
      this._upload = undefined;
      this._vddk.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._blank = value.blank;
      this._gcs.internalValue = value.gcs;
      this._http.internalValue = value.http;
      this._imageio.internalValue = value.imageio;
      this._pvc.internalValue = value.pvc;
      this._registry.internalValue = value.registry;
      this._s3.internalValue = value.s3;
      this._snapshot.internalValue = value.snapshot;
      this._upload = value.upload;
      this._vddk.internalValue = value.vddk;
    }
  }

  // blank - computed: false, optional: true, required: false
  private _blank?: { [key: string]: string }; 
  public get blank() {
    return this.getStringMapAttribute('blank');
  }
  public set blank(value: { [key: string]: string }) {
    this._blank = value;
  }
  public resetBlank() {
    this._blank = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blankInput() {
    return this._blank;
  }

  // gcs - computed: false, optional: true, required: false
  private _gcs = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcsOutputReference(this, "gcs");
  public get gcs() {
    return this._gcs;
  }
  public putGcs(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceGcs) {
    this._gcs.internalValue = value;
  }
  public resetGcs() {
    this._gcs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gcsInput() {
    return this._gcs.internalValue;
  }

  // http - computed: false, optional: true, required: false
  private _http = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttpOutputReference(this, "http");
  public get http() {
    return this._http;
  }
  public putHttp(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceHttp) {
    this._http.internalValue = value;
  }
  public resetHttp() {
    this._http.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpInput() {
    return this._http.internalValue;
  }

  // imageio - computed: false, optional: true, required: false
  private _imageio = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageioOutputReference(this, "imageio");
  public get imageio() {
    return this._imageio;
  }
  public putImageio(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceImageio) {
    this._imageio.internalValue = value;
  }
  public resetImageio() {
    this._imageio.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageioInput() {
    return this._imageio.internalValue;
  }

  // pvc - computed: false, optional: true, required: false
  private _pvc = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvcOutputReference(this, "pvc");
  public get pvc() {
    return this._pvc;
  }
  public putPvc(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourcePvc) {
    this._pvc.internalValue = value;
  }
  public resetPvc() {
    this._pvc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pvcInput() {
    return this._pvc.internalValue;
  }

  // registry - computed: false, optional: true, required: false
  private _registry = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistryOutputReference(this, "registry");
  public get registry() {
    return this._registry;
  }
  public putRegistry(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRegistry) {
    this._registry.internalValue = value;
  }
  public resetRegistry() {
    this._registry.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registryInput() {
    return this._registry.internalValue;
  }

  // s3 - computed: false, optional: true, required: false
  private _s3 = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3OutputReference(this, "s3");
  public get s3() {
    return this._s3;
  }
  public putS3(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceS3) {
    this._s3.internalValue = value;
  }
  public resetS3() {
    this._s3.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get s3Input() {
    return this._s3.internalValue;
  }

  // snapshot - computed: false, optional: true, required: false
  private _snapshot = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshotOutputReference(this, "snapshot");
  public get snapshot() {
    return this._snapshot;
  }
  public putSnapshot(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceSnapshot) {
    this._snapshot.internalValue = value;
  }
  public resetSnapshot() {
    this._snapshot.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snapshotInput() {
    return this._snapshot.internalValue;
  }

  // upload - computed: false, optional: true, required: false
  private _upload?: { [key: string]: string }; 
  public get upload() {
    return this.getStringMapAttribute('upload');
  }
  public set upload(value: { [key: string]: string }) {
    this._upload = value;
  }
  public resetUpload() {
    this._upload = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uploadInput() {
    return this._upload;
  }

  // vddk - computed: false, optional: true, required: false
  private _vddk = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddkOutputReference(this, "vddk");
  public get vddk() {
    return this._vddk;
  }
  public putVddk(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceVddk) {
    this._vddk.internalValue = value;
  }
  public resetVddk() {
    this._vddk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vddkInput() {
    return this._vddk.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRef {
  /**
  * The kind of the source reference, currently only 'DataSource' is supported
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kind DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kind}
  */
  readonly kind: string;
  /**
  * The name of the source reference
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * The namespace of the source reference, defaults to the DataVolume namespace
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespace DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRefToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRefToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._kind = value.kind;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // kind - computed: false, optional: false, required: true
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSource {
  /**
  * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#api_group DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#api_group}
  */
  readonly apiGroup?: string;
  /**
  * Kind is the type of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kind DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kind}
  */
  readonly kind: string;
  /**
  * Name is the name of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_group: cdktf.stringToTerraform(struct!.apiGroup),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_group: {
      value: cdktf.stringToHclTerraform(struct!.apiGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiGroup = this._apiGroup;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiGroup = undefined;
      this._kind = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiGroup = value.apiGroup;
      this._kind = value.kind;
      this._name = value.name;
    }
  }

  // api_group - computed: false, optional: true, required: false
  private _apiGroup?: string; 
  public get apiGroup() {
    return this.getStringAttribute('api_group');
  }
  public set apiGroup(value: string) {
    this._apiGroup = value;
  }
  public resetApiGroup() {
    this._apiGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiGroupInput() {
    return this._apiGroup;
  }

  // kind - computed: false, optional: false, required: true
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRef {
  /**
  * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#api_group DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#api_group}
  */
  readonly apiGroup?: string;
  /**
  * Kind is the type of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kind DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kind}
  */
  readonly kind: string;
  /**
  * Name is the name of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespace DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRefToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_group: cdktf.stringToTerraform(struct!.apiGroup),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRefToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_group: {
      value: cdktf.stringToHclTerraform(struct!.apiGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiGroup = this._apiGroup;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiGroup = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiGroup = value.apiGroup;
      this._kind = value.kind;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // api_group - computed: false, optional: true, required: false
  private _apiGroup?: string; 
  public get apiGroup() {
    return this.getStringAttribute('api_group');
  }
  public set apiGroup(value: string) {
    this._apiGroup = value;
  }
  public resetApiGroup() {
    this._apiGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiGroupInput() {
    return this._apiGroup;
  }

  // kind - computed: false, optional: false, required: true
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaims {
  /**
  * Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaimsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaimsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaimsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaims | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaims | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaimsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaims[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaimsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaimsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResources {
  /**
  * Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. This field is immutable. It can only be set for containers.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#claims DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#claims}
  */
  readonly claims?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaims[] | cdktf.IResolvable;
  /**
  * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#limits DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#limits}
  */
  readonly limits?: { [key: string]: string };
  /**
  * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#requests DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#requests}
  */
  readonly requests?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    claims: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaimsToTerraform, false)(struct!.claims),
    limits: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.limits),
    requests: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requests),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    claims: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaimsToHclTerraform, false)(struct!.claims),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaimsList",
    },
    limits: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.limits),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    requests: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requests),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._claims?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.claims = this._claims?.internalValue;
    }
    if (this._limits !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits;
    }
    if (this._requests !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._claims.internalValue = undefined;
      this._limits = undefined;
      this._requests = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._claims.internalValue = value.claims;
      this._limits = value.limits;
      this._requests = value.requests;
    }
  }

  // claims - computed: false, optional: true, required: false
  private _claims = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaimsList(this, "claims", false);
  public get claims() {
    return this._claims;
  }
  public putClaims(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesClaims[] | cdktf.IResolvable) {
    this._claims.internalValue = value;
  }
  public resetClaims() {
    this._claims.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimsInput() {
    return this._claims.internalValue;
  }

  // limits - computed: false, optional: true, required: false
  private _limits?: { [key: string]: string }; 
  public get limits() {
    return this.getStringMapAttribute('limits');
  }
  public set limits(value: { [key: string]: string }) {
    this._limits = value;
  }
  public resetLimits() {
    this._limits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits;
  }

  // requests - computed: false, optional: true, required: false
  private _requests?: { [key: string]: string }; 
  public get requests() {
    return this.getStringMapAttribute('requests');
  }
  public set requests(value: { [key: string]: string }) {
    this._requests = value;
  }
  public resetRequests() {
    this._requests = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_labels DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorage {
  /**
  * AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#access_modes DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#access_modes}
  */
  readonly accessModes?: string[];
  /**
  * This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#data_source DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#data_source}
  */
  readonly dataSource?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSource;
  /**
  * Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#data_source_ref DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#data_source_ref}
  */
  readonly dataSourceRef?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRef;
  /**
  * Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#resources DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResources;
  /**
  * A label query over volumes to consider for binding.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#selector DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#selector}
  */
  readonly selector?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelector;
  /**
  * Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#storage_class_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#storage_class_name}
  */
  readonly storageClassName?: string;
  /**
  * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#volume_mode DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#volume_mode}
  */
  readonly volumeMode?: string;
  /**
  * VolumeName is the binding reference to the PersistentVolume backing this claim.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#volume_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#volume_name}
  */
  readonly volumeName?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorage | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_modes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.accessModes),
    data_source: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceToTerraform(struct!.dataSource),
    data_source_ref: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRefToTerraform(struct!.dataSourceRef),
    resources: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesToTerraform(struct!.resources),
    selector: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorToTerraform(struct!.selector),
    storage_class_name: cdktf.stringToTerraform(struct!.storageClassName),
    volume_mode: cdktf.stringToTerraform(struct!.volumeMode),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorage | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_modes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.accessModes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    data_source: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceToHclTerraform(struct!.dataSource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSource",
    },
    data_source_ref: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRefToHclTerraform(struct!.dataSourceRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRef",
    },
    resources: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResources",
    },
    selector: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelector",
    },
    storage_class_name: {
      value: cdktf.stringToHclTerraform(struct!.storageClassName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_mode: {
      value: cdktf.stringToHclTerraform(struct!.volumeMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorage | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessModes !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessModes = this._accessModes;
    }
    if (this._dataSource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSource = this._dataSource?.internalValue;
    }
    if (this._dataSourceRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceRef = this._dataSourceRef?.internalValue;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._storageClassName !== undefined) {
      hasAnyValues = true;
      internalValueResult.storageClassName = this._storageClassName;
    }
    if (this._volumeMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMode = this._volumeMode;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorage | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessModes = undefined;
      this._dataSource.internalValue = undefined;
      this._dataSourceRef.internalValue = undefined;
      this._resources.internalValue = undefined;
      this._selector.internalValue = undefined;
      this._storageClassName = undefined;
      this._volumeMode = undefined;
      this._volumeName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessModes = value.accessModes;
      this._dataSource.internalValue = value.dataSource;
      this._dataSourceRef.internalValue = value.dataSourceRef;
      this._resources.internalValue = value.resources;
      this._selector.internalValue = value.selector;
      this._storageClassName = value.storageClassName;
      this._volumeMode = value.volumeMode;
      this._volumeName = value.volumeName;
    }
  }

  // access_modes - computed: false, optional: true, required: false
  private _accessModes?: string[]; 
  public get accessModes() {
    return this.getListAttribute('access_modes');
  }
  public set accessModes(value: string[]) {
    this._accessModes = value;
  }
  public resetAccessModes() {
    this._accessModes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessModesInput() {
    return this._accessModes;
  }

  // data_source - computed: false, optional: true, required: false
  private _dataSource = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceOutputReference(this, "data_source");
  public get dataSource() {
    return this._dataSource;
  }
  public putDataSource(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSource) {
    this._dataSource.internalValue = value;
  }
  public resetDataSource() {
    this._dataSource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceInput() {
    return this._dataSource.internalValue;
  }

  // data_source_ref - computed: false, optional: true, required: false
  private _dataSourceRef = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRefOutputReference(this, "data_source_ref");
  public get dataSourceRef() {
    return this._dataSourceRef;
  }
  public putDataSourceRef(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageDataSourceRef) {
    this._dataSourceRef.internalValue = value;
  }
  public resetDataSourceRef() {
    this._dataSourceRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceRefInput() {
    return this._dataSourceRef.internalValue;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // selector - computed: false, optional: true, required: false
  private _selector = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageSelector) {
    this._selector.internalValue = value;
  }
  public resetSelector() {
    this._selector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // storage_class_name - computed: false, optional: true, required: false
  private _storageClassName?: string; 
  public get storageClassName() {
    return this.getStringAttribute('storage_class_name');
  }
  public set storageClassName(value: string) {
    this._storageClassName = value;
  }
  public resetStorageClassName() {
    this._storageClassName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageClassNameInput() {
    return this._storageClassName;
  }

  // volume_mode - computed: false, optional: true, required: false
  private _volumeMode?: string; 
  public get volumeMode() {
    return this.getStringAttribute('volume_mode');
  }
  public set volumeMode(value: string) {
    this._volumeMode = value;
  }
  public resetVolumeMode() {
    this._volumeMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeModeInput() {
    return this._volumeMode;
  }

  // volume_name - computed: false, optional: true, required: false
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  public resetVolumeName() {
    this._volumeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpec {
  /**
  * Checkpoints is a list of DataVolumeCheckpoints, representing stages in a multistage import.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#checkpoints DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#checkpoints}
  */
  readonly checkpoints?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpoints[] | cdktf.IResolvable;
  /**
  * DataVolumeContentType options: 'kubevirt', 'archive'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#content_type DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#content_type}
  */
  readonly contentType?: string;
  /**
  * FinalCheckpoint indicates whether the current DataVolumeCheckpoint is the final checkpoint.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#final_checkpoint DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#final_checkpoint}
  */
  readonly finalCheckpoint?: boolean | cdktf.IResolvable;
  /**
  * Preallocation controls whether storage for DataVolumes should be allocated in advance.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#preallocation DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#preallocation}
  */
  readonly preallocation?: boolean | cdktf.IResolvable;
  /**
  * PriorityClassName for Importer, Cloner and Uploader pod
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#priority_class_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#priority_class_name}
  */
  readonly priorityClassName?: string;
  /**
  * PVC is the PVC specification
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pvc DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pvc}
  */
  readonly pvc?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvc;
  /**
  * Source is the src of the data for the requested DataVolume
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#source DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#source}
  */
  readonly source?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSource;
  /**
  * SourceRef is an indirect reference to the source of data for the requested DataVolume
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#source_ref DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#source_ref}
  */
  readonly sourceRef?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRef;
  /**
  * Storage is the requested storage specification
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#storage DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#storage}
  */
  readonly storage?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorage;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    checkpoints: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpointsToTerraform, false)(struct!.checkpoints),
    content_type: cdktf.stringToTerraform(struct!.contentType),
    final_checkpoint: cdktf.booleanToTerraform(struct!.finalCheckpoint),
    preallocation: cdktf.booleanToTerraform(struct!.preallocation),
    priority_class_name: cdktf.stringToTerraform(struct!.priorityClassName),
    pvc: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcToTerraform(struct!.pvc),
    source: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceToTerraform(struct!.source),
    source_ref: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRefToTerraform(struct!.sourceRef),
    storage: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageToTerraform(struct!.storage),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    checkpoints: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpointsToHclTerraform, false)(struct!.checkpoints),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpointsList",
    },
    content_type: {
      value: cdktf.stringToHclTerraform(struct!.contentType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    final_checkpoint: {
      value: cdktf.booleanToHclTerraform(struct!.finalCheckpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    preallocation: {
      value: cdktf.booleanToHclTerraform(struct!.preallocation),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    priority_class_name: {
      value: cdktf.stringToHclTerraform(struct!.priorityClassName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pvc: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcToHclTerraform(struct!.pvc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvc",
    },
    source: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceToHclTerraform(struct!.source),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSource",
    },
    source_ref: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRefToHclTerraform(struct!.sourceRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRef",
    },
    storage: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageToHclTerraform(struct!.storage),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorage",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._checkpoints?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.checkpoints = this._checkpoints?.internalValue;
    }
    if (this._contentType !== undefined) {
      hasAnyValues = true;
      internalValueResult.contentType = this._contentType;
    }
    if (this._finalCheckpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.finalCheckpoint = this._finalCheckpoint;
    }
    if (this._preallocation !== undefined) {
      hasAnyValues = true;
      internalValueResult.preallocation = this._preallocation;
    }
    if (this._priorityClassName !== undefined) {
      hasAnyValues = true;
      internalValueResult.priorityClassName = this._priorityClassName;
    }
    if (this._pvc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.pvc = this._pvc?.internalValue;
    }
    if (this._source?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.source = this._source?.internalValue;
    }
    if (this._sourceRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceRef = this._sourceRef?.internalValue;
    }
    if (this._storage?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.storage = this._storage?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._checkpoints.internalValue = undefined;
      this._contentType = undefined;
      this._finalCheckpoint = undefined;
      this._preallocation = undefined;
      this._priorityClassName = undefined;
      this._pvc.internalValue = undefined;
      this._source.internalValue = undefined;
      this._sourceRef.internalValue = undefined;
      this._storage.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._checkpoints.internalValue = value.checkpoints;
      this._contentType = value.contentType;
      this._finalCheckpoint = value.finalCheckpoint;
      this._preallocation = value.preallocation;
      this._priorityClassName = value.priorityClassName;
      this._pvc.internalValue = value.pvc;
      this._source.internalValue = value.source;
      this._sourceRef.internalValue = value.sourceRef;
      this._storage.internalValue = value.storage;
    }
  }

  // checkpoints - computed: false, optional: true, required: false
  private _checkpoints = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpointsList(this, "checkpoints", false);
  public get checkpoints() {
    return this._checkpoints;
  }
  public putCheckpoints(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecCheckpoints[] | cdktf.IResolvable) {
    this._checkpoints.internalValue = value;
  }
  public resetCheckpoints() {
    this._checkpoints.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get checkpointsInput() {
    return this._checkpoints.internalValue;
  }

  // content_type - computed: false, optional: true, required: false
  private _contentType?: string; 
  public get contentType() {
    return this.getStringAttribute('content_type');
  }
  public set contentType(value: string) {
    this._contentType = value;
  }
  public resetContentType() {
    this._contentType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contentTypeInput() {
    return this._contentType;
  }

  // final_checkpoint - computed: false, optional: true, required: false
  private _finalCheckpoint?: boolean | cdktf.IResolvable; 
  public get finalCheckpoint() {
    return this.getBooleanAttribute('final_checkpoint');
  }
  public set finalCheckpoint(value: boolean | cdktf.IResolvable) {
    this._finalCheckpoint = value;
  }
  public resetFinalCheckpoint() {
    this._finalCheckpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get finalCheckpointInput() {
    return this._finalCheckpoint;
  }

  // preallocation - computed: false, optional: true, required: false
  private _preallocation?: boolean | cdktf.IResolvable; 
  public get preallocation() {
    return this.getBooleanAttribute('preallocation');
  }
  public set preallocation(value: boolean | cdktf.IResolvable) {
    this._preallocation = value;
  }
  public resetPreallocation() {
    this._preallocation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preallocationInput() {
    return this._preallocation;
  }

  // priority_class_name - computed: false, optional: true, required: false
  private _priorityClassName?: string; 
  public get priorityClassName() {
    return this.getStringAttribute('priority_class_name');
  }
  public set priorityClassName(value: string) {
    this._priorityClassName = value;
  }
  public resetPriorityClassName() {
    this._priorityClassName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityClassNameInput() {
    return this._priorityClassName;
  }

  // pvc - computed: false, optional: true, required: false
  private _pvc = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvcOutputReference(this, "pvc");
  public get pvc() {
    return this._pvc;
  }
  public putPvc(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecPvc) {
    this._pvc.internalValue = value;
  }
  public resetPvc() {
    this._pvc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pvcInput() {
    return this._pvc.internalValue;
  }

  // source - computed: false, optional: true, required: false
  private _source = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceOutputReference(this, "source");
  public get source() {
    return this._source;
  }
  public putSource(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSource) {
    this._source.internalValue = value;
  }
  public resetSource() {
    this._source.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceInput() {
    return this._source.internalValue;
  }

  // source_ref - computed: false, optional: true, required: false
  private _sourceRef = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRefOutputReference(this, "source_ref");
  public get sourceRef() {
    return this._sourceRef;
  }
  public putSourceRef(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecSourceRef) {
    this._sourceRef.internalValue = value;
  }
  public resetSourceRef() {
    this._sourceRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceRefInput() {
    return this._sourceRef.internalValue;
  }

  // storage - computed: false, optional: true, required: false
  private _storage = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorageOutputReference(this, "storage");
  public get storage() {
    return this._storage;
  }
  public putStorage(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecStorage) {
    this._storage.internalValue = value;
  }
  public resetStorage() {
    this._storage.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageInput() {
    return this._storage.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplates {
  /**
  * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#api_version DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kind DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#metadata DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#metadata}
  */
  readonly metadata?: { [key: string]: string };
  /**
  * DataVolumeSpec contains the DataVolume specification.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#spec DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#spec}
  */
  readonly spec: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpec;
  /**
  * DataVolumeTemplateDummyStatus is here simply for backwards compatibility with a previous API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#status DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#status}
  */
  readonly status?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    kind: cdktf.stringToTerraform(struct!.kind),
    metadata: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.metadata),
    spec: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecToTerraform(struct!.spec),
    status: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.status),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.metadata),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    spec: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpec",
    },
    status: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.status),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplates | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._metadata !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    if (this._status !== undefined) {
      hasAnyValues = true;
      internalValueResult.status = this._status;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplates | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._kind = undefined;
      this._metadata = undefined;
      this._spec.internalValue = undefined;
      this._status = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._kind = value.kind;
      this._metadata = value.metadata;
      this._spec.internalValue = value.spec;
      this._status = value.status;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata?: { [key: string]: string }; 
  public get metadata() {
    return this.getStringMapAttribute('metadata');
  }
  public set metadata(value: { [key: string]: string }) {
    this._metadata = value;
  }
  public resetMetadata() {
    this._metadata = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata;
  }

  // spec - computed: false, optional: false, required: true
  private _spec = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesSpec) {
    this._spec.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }

  // status - computed: false, optional: true, required: false
  private _status?: { [key: string]: string }; 
  public get status() {
    return this.getStringMapAttribute('status');
  }
  public set status(value: { [key: string]: string }) {
    this._status = value;
  }
  public resetStatus() {
    this._status = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get statusInput() {
    return this._status;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplates[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecDataVolumeTemplatesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecInstancetype {
  /**
  * InferFromVolume lists the name of a volume that should be used to infer or discover the instancetype to be used through known annotations on the underlying resource. Once applied to the InstancetypeMatcher this field is removed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#infer_from_volume DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#infer_from_volume}
  */
  readonly inferFromVolume?: string;
  /**
  * InferFromVolumeFailurePolicy controls what should happen on failure when inferring the instancetype. Allowed values are: 'RejectInferFromVolumeFailure' and 'IgnoreInferFromVolumeFailure'. If not specified, 'RejectInferFromVolumeFailure' is used by default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#infer_from_volume_failure_policy DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#infer_from_volume_failure_policy}
  */
  readonly inferFromVolumeFailurePolicy?: string;
  /**
  * Kind specifies which instancetype resource is referenced. Allowed values are: 'VirtualMachineInstancetype' and 'VirtualMachineClusterInstancetype'. If not specified, 'VirtualMachineClusterInstancetype' is used by default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kind DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Name is the name of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * RevisionName specifies a ControllerRevision containing a specific copy of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype to be used. This is initially captured the first time the instancetype is applied to the VirtualMachineInstance.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#revision_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#revision_name}
  */
  readonly revisionName?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecInstancetypeToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecInstancetype | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    infer_from_volume: cdktf.stringToTerraform(struct!.inferFromVolume),
    infer_from_volume_failure_policy: cdktf.stringToTerraform(struct!.inferFromVolumeFailurePolicy),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    revision_name: cdktf.stringToTerraform(struct!.revisionName),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecInstancetypeToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecInstancetype | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    infer_from_volume: {
      value: cdktf.stringToHclTerraform(struct!.inferFromVolume),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    infer_from_volume_failure_policy: {
      value: cdktf.stringToHclTerraform(struct!.inferFromVolumeFailurePolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    revision_name: {
      value: cdktf.stringToHclTerraform(struct!.revisionName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecInstancetypeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecInstancetype | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._inferFromVolume !== undefined) {
      hasAnyValues = true;
      internalValueResult.inferFromVolume = this._inferFromVolume;
    }
    if (this._inferFromVolumeFailurePolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.inferFromVolumeFailurePolicy = this._inferFromVolumeFailurePolicy;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._revisionName !== undefined) {
      hasAnyValues = true;
      internalValueResult.revisionName = this._revisionName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecInstancetype | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._inferFromVolume = undefined;
      this._inferFromVolumeFailurePolicy = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._revisionName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._inferFromVolume = value.inferFromVolume;
      this._inferFromVolumeFailurePolicy = value.inferFromVolumeFailurePolicy;
      this._kind = value.kind;
      this._name = value.name;
      this._revisionName = value.revisionName;
    }
  }

  // infer_from_volume - computed: false, optional: true, required: false
  private _inferFromVolume?: string; 
  public get inferFromVolume() {
    return this.getStringAttribute('infer_from_volume');
  }
  public set inferFromVolume(value: string) {
    this._inferFromVolume = value;
  }
  public resetInferFromVolume() {
    this._inferFromVolume = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get inferFromVolumeInput() {
    return this._inferFromVolume;
  }

  // infer_from_volume_failure_policy - computed: false, optional: true, required: false
  private _inferFromVolumeFailurePolicy?: string; 
  public get inferFromVolumeFailurePolicy() {
    return this.getStringAttribute('infer_from_volume_failure_policy');
  }
  public set inferFromVolumeFailurePolicy(value: string) {
    this._inferFromVolumeFailurePolicy = value;
  }
  public resetInferFromVolumeFailurePolicy() {
    this._inferFromVolumeFailurePolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get inferFromVolumeFailurePolicyInput() {
    return this._inferFromVolumeFailurePolicy;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // revision_name - computed: false, optional: true, required: false
  private _revisionName?: string; 
  public get revisionName() {
    return this.getStringAttribute('revision_name');
  }
  public set revisionName(value: string) {
    this._revisionName = value;
  }
  public resetRevisionName() {
    this._revisionName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get revisionNameInput() {
    return this._revisionName;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecPreference {
  /**
  * InferFromVolume lists the name of a volume that should be used to infer or discover the preference to be used through known annotations on the underlying resource. Once applied to the PreferenceMatcher this field is removed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#infer_from_volume DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#infer_from_volume}
  */
  readonly inferFromVolume?: string;
  /**
  * InferFromVolumeFailurePolicy controls what should happen on failure when preference the instancetype. Allowed values are: 'RejectInferFromVolumeFailure' and 'IgnoreInferFromVolumeFailure'. If not specified, 'RejectInferFromVolumeFailure' is used by default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#infer_from_volume_failure_policy DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#infer_from_volume_failure_policy}
  */
  readonly inferFromVolumeFailurePolicy?: string;
  /**
  * Kind specifies which preference resource is referenced. Allowed values are: 'VirtualMachinePreference' and 'VirtualMachineClusterPreference'. If not specified, 'VirtualMachineClusterPreference' is used by default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kind DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Name is the name of the VirtualMachinePreference or VirtualMachineClusterPreference
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * RevisionName specifies a ControllerRevision containing a specific copy of the VirtualMachinePreference or VirtualMachineClusterPreference to be used. This is initially captured the first time the instancetype is applied to the VirtualMachineInstance.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#revision_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#revision_name}
  */
  readonly revisionName?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecPreferenceToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecPreference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    infer_from_volume: cdktf.stringToTerraform(struct!.inferFromVolume),
    infer_from_volume_failure_policy: cdktf.stringToTerraform(struct!.inferFromVolumeFailurePolicy),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    revision_name: cdktf.stringToTerraform(struct!.revisionName),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecPreferenceToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecPreference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    infer_from_volume: {
      value: cdktf.stringToHclTerraform(struct!.inferFromVolume),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    infer_from_volume_failure_policy: {
      value: cdktf.stringToHclTerraform(struct!.inferFromVolumeFailurePolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    revision_name: {
      value: cdktf.stringToHclTerraform(struct!.revisionName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecPreferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecPreference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._inferFromVolume !== undefined) {
      hasAnyValues = true;
      internalValueResult.inferFromVolume = this._inferFromVolume;
    }
    if (this._inferFromVolumeFailurePolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.inferFromVolumeFailurePolicy = this._inferFromVolumeFailurePolicy;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._revisionName !== undefined) {
      hasAnyValues = true;
      internalValueResult.revisionName = this._revisionName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecPreference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._inferFromVolume = undefined;
      this._inferFromVolumeFailurePolicy = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._revisionName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._inferFromVolume = value.inferFromVolume;
      this._inferFromVolumeFailurePolicy = value.inferFromVolumeFailurePolicy;
      this._kind = value.kind;
      this._name = value.name;
      this._revisionName = value.revisionName;
    }
  }

  // infer_from_volume - computed: false, optional: true, required: false
  private _inferFromVolume?: string; 
  public get inferFromVolume() {
    return this.getStringAttribute('infer_from_volume');
  }
  public set inferFromVolume(value: string) {
    this._inferFromVolume = value;
  }
  public resetInferFromVolume() {
    this._inferFromVolume = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get inferFromVolumeInput() {
    return this._inferFromVolume;
  }

  // infer_from_volume_failure_policy - computed: false, optional: true, required: false
  private _inferFromVolumeFailurePolicy?: string; 
  public get inferFromVolumeFailurePolicy() {
    return this.getStringAttribute('infer_from_volume_failure_policy');
  }
  public set inferFromVolumeFailurePolicy(value: string) {
    this._inferFromVolumeFailurePolicy = value;
  }
  public resetInferFromVolumeFailurePolicy() {
    this._inferFromVolumeFailurePolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get inferFromVolumeFailurePolicyInput() {
    return this._inferFromVolumeFailurePolicy;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // revision_name - computed: false, optional: true, required: false
  private _revisionName?: string; 
  public get revisionName() {
    return this.getStringAttribute('revision_name');
  }
  public set revisionName(value: string) {
    this._revisionName = value;
  }
  public resetRevisionName() {
    this._revisionName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get revisionNameInput() {
    return this._revisionName;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgent {
  /**
  * Users represents a list of guest users that should have the ssh public keys added to their authorized_keys file.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#users DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#users}
  */
  readonly users: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgentToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgent | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    users: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.users),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgentToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgent | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    users: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.users),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgentOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgent | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._users !== undefined) {
      hasAnyValues = true;
      internalValueResult.users = this._users;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgent | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._users = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._users = value.users;
    }
  }

  // users - computed: false, optional: false, required: true
  private _users?: string[]; 
  public get users() {
    return this.getListAttribute('users');
  }
  public set users(value: string[]) {
    this._users = value;
  }
  // Temporarily expose input value. Use with caution.
  public get usersInput() {
    return this._users;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethod {
  /**
  * ConfigDrivePropagation means that the ssh public keys are injected into the VM using metadata using the configDrive cloud-init provider
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#config_drive DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#config_drive}
  */
  readonly configDrive?: { [key: string]: string };
  /**
  * NoCloudPropagation means that the ssh public keys are injected into the VM using metadata using the noCloud cloud-init provider
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#no_cloud DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#no_cloud}
  */
  readonly noCloud?: { [key: string]: string };
  /**
  * QemuGuestAgentAccessCredentailPropagation means ssh public keys are dynamically injected into the vm at runtime via the qemu guest agent. This feature requires the qemu guest agent to be running within the guest.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#qemu_guest_agent DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#qemu_guest_agent}
  */
  readonly qemuGuestAgent?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgent;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethod | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_drive: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configDrive),
    no_cloud: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.noCloud),
    qemu_guest_agent: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgentToTerraform(struct!.qemuGuestAgent),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethod | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_drive: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configDrive),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    no_cloud: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.noCloud),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    qemu_guest_agent: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgentToHclTerraform(struct!.qemuGuestAgent),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgent",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethod | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configDrive !== undefined) {
      hasAnyValues = true;
      internalValueResult.configDrive = this._configDrive;
    }
    if (this._noCloud !== undefined) {
      hasAnyValues = true;
      internalValueResult.noCloud = this._noCloud;
    }
    if (this._qemuGuestAgent?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.qemuGuestAgent = this._qemuGuestAgent?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethod | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configDrive = undefined;
      this._noCloud = undefined;
      this._qemuGuestAgent.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configDrive = value.configDrive;
      this._noCloud = value.noCloud;
      this._qemuGuestAgent.internalValue = value.qemuGuestAgent;
    }
  }

  // config_drive - computed: false, optional: true, required: false
  private _configDrive?: { [key: string]: string }; 
  public get configDrive() {
    return this.getStringMapAttribute('config_drive');
  }
  public set configDrive(value: { [key: string]: string }) {
    this._configDrive = value;
  }
  public resetConfigDrive() {
    this._configDrive = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configDriveInput() {
    return this._configDrive;
  }

  // no_cloud - computed: false, optional: true, required: false
  private _noCloud?: { [key: string]: string }; 
  public get noCloud() {
    return this.getStringMapAttribute('no_cloud');
  }
  public set noCloud(value: { [key: string]: string }) {
    this._noCloud = value;
  }
  public resetNoCloud() {
    this._noCloud = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get noCloudInput() {
    return this._noCloud;
  }

  // qemu_guest_agent - computed: false, optional: true, required: false
  private _qemuGuestAgent = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgentOutputReference(this, "qemu_guest_agent");
  public get qemuGuestAgent() {
    return this._qemuGuestAgent;
  }
  public putQemuGuestAgent(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodQemuGuestAgent) {
    this._qemuGuestAgent.internalValue = value;
  }
  public resetQemuGuestAgent() {
    this._qemuGuestAgent.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qemuGuestAgentInput() {
    return this._qemuGuestAgent.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecret {
  /**
  * SecretName represents the name of the secret in the VMI's namespace
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secret_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secret_name}
  */
  readonly secretName: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecretToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_name: cdktf.stringToTerraform(struct!.secretName),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecretToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecretOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecret | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecret | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretName = value.secretName;
    }
  }

  // secret_name - computed: false, optional: false, required: true
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySource {
  /**
  * Secret means that the access credential is pulled from a kubernetes secret
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secret DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secret}
  */
  readonly secret?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecret;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecretToTerraform(struct!.secret),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecretToHclTerraform(struct!.secret),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecret",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secret?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secret.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secret.internalValue = value.secret;
    }
  }

  // secret - computed: false, optional: true, required: false
  private _secret = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecretOutputReference(this, "secret");
  public get secret() {
    return this._secret;
  }
  public putSecret(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceSecret) {
    this._secret.internalValue = value;
  }
  public resetSecret() {
    this._secret.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKey {
  /**
  * PropagationMethod represents how the public key is injected into the vm guest.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#propagation_method DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#propagation_method}
  */
  readonly propagationMethod: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethod;
  /**
  * Source represents where the public keys are pulled from
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#source DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#source}
  */
  readonly source: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySource;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    propagation_method: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodToTerraform(struct!.propagationMethod),
    source: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceToTerraform(struct!.source),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    propagation_method: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodToHclTerraform(struct!.propagationMethod),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethod",
    },
    source: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceToHclTerraform(struct!.source),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySource",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._propagationMethod?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.propagationMethod = this._propagationMethod?.internalValue;
    }
    if (this._source?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.source = this._source?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._propagationMethod.internalValue = undefined;
      this._source.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._propagationMethod.internalValue = value.propagationMethod;
      this._source.internalValue = value.source;
    }
  }

  // propagation_method - computed: false, optional: false, required: true
  private _propagationMethod = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethodOutputReference(this, "propagation_method");
  public get propagationMethod() {
    return this._propagationMethod;
  }
  public putPropagationMethod(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyPropagationMethod) {
    this._propagationMethod.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get propagationMethodInput() {
    return this._propagationMethod.internalValue;
  }

  // source - computed: false, optional: false, required: true
  private _source = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySourceOutputReference(this, "source");
  public get source() {
    return this._source;
  }
  public putSource(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeySource) {
    this._source.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceInput() {
    return this._source.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethod {
  /**
  * QemuGuestAgentAccessCredentailPropagation means passwords are dynamically injected into the vm at runtime via the qemu guest agent. This feature requires the qemu guest agent to be running within the guest.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#qemu_guest_agent DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#qemu_guest_agent}
  */
  readonly qemuGuestAgent?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethodToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethod | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    qemu_guest_agent: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.qemuGuestAgent),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethodToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethod | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    qemu_guest_agent: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.qemuGuestAgent),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethodOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethod | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._qemuGuestAgent !== undefined) {
      hasAnyValues = true;
      internalValueResult.qemuGuestAgent = this._qemuGuestAgent;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethod | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._qemuGuestAgent = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._qemuGuestAgent = value.qemuGuestAgent;
    }
  }

  // qemu_guest_agent - computed: false, optional: true, required: false
  private _qemuGuestAgent?: { [key: string]: string }; 
  public get qemuGuestAgent() {
    return this.getStringMapAttribute('qemu_guest_agent');
  }
  public set qemuGuestAgent(value: { [key: string]: string }) {
    this._qemuGuestAgent = value;
  }
  public resetQemuGuestAgent() {
    this._qemuGuestAgent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qemuGuestAgentInput() {
    return this._qemuGuestAgent;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecret {
  /**
  * SecretName represents the name of the secret in the VMI's namespace
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secret_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secret_name}
  */
  readonly secretName: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecretToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret_name: cdktf.stringToTerraform(struct!.secretName),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecretToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecretOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecret | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecret | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secretName = value.secretName;
    }
  }

  // secret_name - computed: false, optional: false, required: true
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSource {
  /**
  * Secret means that the access credential is pulled from a kubernetes secret
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secret DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secret}
  */
  readonly secret?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecret;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    secret: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecretToTerraform(struct!.secret),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    secret: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecretToHclTerraform(struct!.secret),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecret",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._secret?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._secret.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._secret.internalValue = value.secret;
    }
  }

  // secret - computed: false, optional: true, required: false
  private _secret = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecretOutputReference(this, "secret");
  public get secret() {
    return this._secret;
  }
  public putSecret(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceSecret) {
    this._secret.internalValue = value;
  }
  public resetSecret() {
    this._secret.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPassword {
  /**
  * propagationMethod represents how the user passwords are injected into the vm guest.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#propagation_method DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#propagation_method}
  */
  readonly propagationMethod: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethod;
  /**
  * Source represents where the user passwords are pulled from
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#source DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#source}
  */
  readonly source: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSource;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    propagation_method: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethodToTerraform(struct!.propagationMethod),
    source: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceToTerraform(struct!.source),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPassword | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    propagation_method: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethodToHclTerraform(struct!.propagationMethod),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethod",
    },
    source: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceToHclTerraform(struct!.source),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSource",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPassword | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._propagationMethod?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.propagationMethod = this._propagationMethod?.internalValue;
    }
    if (this._source?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.source = this._source?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPassword | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._propagationMethod.internalValue = undefined;
      this._source.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._propagationMethod.internalValue = value.propagationMethod;
      this._source.internalValue = value.source;
    }
  }

  // propagation_method - computed: false, optional: false, required: true
  private _propagationMethod = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethodOutputReference(this, "propagation_method");
  public get propagationMethod() {
    return this._propagationMethod;
  }
  public putPropagationMethod(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordPropagationMethod) {
    this._propagationMethod.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get propagationMethodInput() {
    return this._propagationMethod.internalValue;
  }

  // source - computed: false, optional: false, required: true
  private _source = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSourceOutputReference(this, "source");
  public get source() {
    return this._source;
  }
  public putSource(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordSource) {
    this._source.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceInput() {
    return this._source.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentials {
  /**
  * SSHPublicKey represents the source and method of applying a ssh public key into a guest virtual machine.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#ssh_public_key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#ssh_public_key}
  */
  readonly sshPublicKey?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKey;
  /**
  * UserPassword represents the source and method for applying a guest user's password
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#user_password DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#user_password}
  */
  readonly userPassword?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPassword;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ssh_public_key: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyToTerraform(struct!.sshPublicKey),
    user_password: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordToTerraform(struct!.userPassword),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ssh_public_key: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyToHclTerraform(struct!.sshPublicKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKey",
    },
    user_password: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordToHclTerraform(struct!.userPassword),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPassword",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentials | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._sshPublicKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sshPublicKey = this._sshPublicKey?.internalValue;
    }
    if (this._userPassword?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.userPassword = this._userPassword?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentials | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._sshPublicKey.internalValue = undefined;
      this._userPassword.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._sshPublicKey.internalValue = value.sshPublicKey;
      this._userPassword.internalValue = value.userPassword;
    }
  }

  // ssh_public_key - computed: false, optional: true, required: false
  private _sshPublicKey = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKeyOutputReference(this, "ssh_public_key");
  public get sshPublicKey() {
    return this._sshPublicKey;
  }
  public putSshPublicKey(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsSshPublicKey) {
    this._sshPublicKey.internalValue = value;
  }
  public resetSshPublicKey() {
    this._sshPublicKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sshPublicKeyInput() {
    return this._sshPublicKey.internalValue;
  }

  // user_password - computed: false, optional: true, required: false
  private _userPassword = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPasswordOutputReference(this, "user_password");
  public get userPassword() {
    return this._userPassword;
  }
  public putUserPassword(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsUserPassword) {
    this._userPassword.internalValue = value;
  }
  public resetUserPassword() {
    this._userPassword.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userPasswordInput() {
    return this._userPassword.internalValue;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentials[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAccessCredentialsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
  * The label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
  * The label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
  * A list of node selector requirements by node's labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[] | cdktf.IResolvable;
  /**
  * A list of node selector requirements by node's fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_fields DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_fields}
  */
  readonly matchFields?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[] | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_fields: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToTerraform, false)(struct!.matchFields),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsList",
    },
    match_fields: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToHclTerraform, false)(struct!.matchFields),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchFields?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchFields = this._matchFields?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchFields.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchFields.internalValue = value.matchFields;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_fields - computed: false, optional: true, required: false
  private _matchFields = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsList(this, "match_fields", false);
  public get matchFields() {
    return this._matchFields;
  }
  public putMatchFields(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[] | cdktf.IResolvable) {
    this._matchFields.internalValue = value;
  }
  public resetMatchFields() {
    this._matchFields.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchFieldsInput() {
    return this._matchFields.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
  * A node selector term, associated with the corresponding weight.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#preference DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#preference}
  */
  readonly preference: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
  /**
  * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#weight DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#weight}
  */
  readonly weight: number;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preference: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToTerraform(struct!.preference),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preference: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToHclTerraform(struct!.preference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preference = this._preference?.internalValue;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preference.internalValue = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preference.internalValue = value.preference;
      this._weight = value.weight;
    }
  }

  // preference - computed: false, optional: false, required: true
  private _preference = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputReference(this, "preference");
  public get preference() {
    return this._preference;
  }
  public putPreference(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) {
    this._preference.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get preferenceInput() {
    return this._preference.internalValue;
  }

  // weight - computed: false, optional: false, required: true
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
  * The label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
  * The label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
  * A list of node selector requirements by node's labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[] | cdktf.IResolvable;
  /**
  * A list of node selector requirements by node's fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_fields DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_fields}
  */
  readonly matchFields?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[] | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_fields: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToTerraform, false)(struct!.matchFields),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsList",
    },
    match_fields: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToHclTerraform, false)(struct!.matchFields),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchFields?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchFields = this._matchFields?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchFields.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchFields.internalValue = value.matchFields;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_fields - computed: false, optional: true, required: false
  private _matchFields = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsList(this, "match_fields", false);
  public get matchFields() {
    return this._matchFields;
  }
  public putMatchFields(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[] | cdktf.IResolvable) {
    this._matchFields.internalValue = value;
  }
  public resetMatchFields() {
    this._matchFields.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchFieldsInput() {
    return this._matchFields.internalValue;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
  * Required. A list of node selector terms. The terms are ORed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#node_selector_terms DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#node_selector_terms}
  */
  readonly nodeSelectorTerms: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[] | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    node_selector_terms: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToTerraform, false)(struct!.nodeSelectorTerms),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    node_selector_terms: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToHclTerraform, false)(struct!.nodeSelectorTerms),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nodeSelectorTerms?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectorTerms = this._nodeSelectorTerms?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nodeSelectorTerms.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nodeSelectorTerms.internalValue = value.nodeSelectorTerms;
    }
  }

  // node_selector_terms - computed: false, optional: false, required: true
  private _nodeSelectorTerms = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsList(this, "node_selector_terms", false);
  public get nodeSelectorTerms() {
    return this._nodeSelectorTerms;
  }
  public putNodeSelectorTerms(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[] | cdktf.IResolvable) {
    this._nodeSelectorTerms.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorTermsInput() {
    return this._nodeSelectorTerms.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinity {
  /**
  * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#preferred_during_scheduling_ignored_during_execution DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#preferred_during_scheduling_ignored_during_execution}
  */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
  /**
  * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#required_during_scheduling_ignored_during_execution DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#required_during_scheduling_ignored_during_execution}
  */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preferred_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
    required_during_scheduling_ignored_during_execution: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct!.requiredDuringSchedulingIgnoredDuringExecution),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preferred_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionList",
    },
    required_during_scheduling_ignored_during_execution: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct!.requiredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preferredDuringSchedulingIgnoredDuringExecution = this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    if (this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredDuringSchedulingIgnoredDuringExecution = this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value.preferredDuringSchedulingIgnoredDuringExecution;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value.requiredDuringSchedulingIgnoredDuringExecution;
    }
  }

  // preferred_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _preferredDuringSchedulingIgnoredDuringExecution = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionList(this, "preferred_during_scheduling_ignored_during_execution", false);
  public get preferredDuringSchedulingIgnoredDuringExecution() {
    return this._preferredDuringSchedulingIgnoredDuringExecution;
  }
  public putPreferredDuringSchedulingIgnoredDuringExecution(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetPreferredDuringSchedulingIgnoredDuringExecution() {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._preferredDuringSchedulingIgnoredDuringExecution.internalValue;
  }

  // required_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _requiredDuringSchedulingIgnoredDuringExecution = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference(this, "required_during_scheduling_ignored_during_execution");
  public get requiredDuringSchedulingIgnoredDuringExecution() {
    return this._requiredDuringSchedulingIgnoredDuringExecution;
  }
  public putRequiredDuringSchedulingIgnoredDuringExecution(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetRequiredDuringSchedulingIgnoredDuringExecution() {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._requiredDuringSchedulingIgnoredDuringExecution.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_labels DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_labels DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
  * A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#label_selector DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
  /**
  * MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with 'labelSelector' as 'key in (value)' to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_label_keys DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_label_keys}
  */
  readonly matchLabelKeys?: string[];
  /**
  * MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with 'labelSelector' as 'key notin (value)' to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#mismatch_label_keys DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#mismatch_label_keys}
  */
  readonly mismatchLabelKeys?: string[];
  /**
  * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means 'this pod's namespace'. An empty selector ({}) matches all namespaces.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespace_selector DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;
  /**
  * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means 'this pod's namespace'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespaces DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#topology_key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#topology_key}
  */
  readonly topologyKey: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct!.labelSelector),
    match_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.matchLabelKeys),
    mismatch_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.mismatchLabelKeys),
    namespace_selector: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
    },
    match_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.matchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    mismatch_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.mismatchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    namespace_selector: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._matchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabelKeys = this._matchLabelKeys;
    }
    if (this._mismatchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.mismatchLabelKeys = this._mismatchLabelKeys;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._matchLabelKeys = undefined;
      this._mismatchLabelKeys = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._matchLabelKeys = value.matchLabelKeys;
      this._mismatchLabelKeys = value.mismatchLabelKeys;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // match_label_keys - computed: false, optional: true, required: false
  private _matchLabelKeys?: string[]; 
  public get matchLabelKeys() {
    return this.getListAttribute('match_label_keys');
  }
  public set matchLabelKeys(value: string[]) {
    this._matchLabelKeys = value;
  }
  public resetMatchLabelKeys() {
    this._matchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelKeysInput() {
    return this._matchLabelKeys;
  }

  // mismatch_label_keys - computed: false, optional: true, required: false
  private _mismatchLabelKeys?: string[]; 
  public get mismatchLabelKeys() {
    return this.getListAttribute('mismatch_label_keys');
  }
  public set mismatchLabelKeys(value: string[]) {
    this._mismatchLabelKeys = value;
  }
  public resetMismatchLabelKeys() {
    this._mismatchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mismatchLabelKeysInput() {
    return this._mismatchLabelKeys;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: false, required: true
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
  * Required. A pod affinity term, associated with the corresponding weight.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pod_affinity_term DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pod_affinity_term}
  */
  readonly podAffinityTerm: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
  /**
  * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#weight DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#weight}
  */
  readonly weight: number;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    pod_affinity_term: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct!.podAffinityTerm),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    pod_affinity_term: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct!.podAffinityTerm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._podAffinityTerm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAffinityTerm = this._podAffinityTerm?.internalValue;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = value.podAffinityTerm;
      this._weight = value.weight;
    }
  }

  // pod_affinity_term - computed: false, optional: false, required: true
  private _podAffinityTerm = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference(this, "pod_affinity_term");
  public get podAffinityTerm() {
    return this._podAffinityTerm;
  }
  public putPodAffinityTerm(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) {
    this._podAffinityTerm.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get podAffinityTermInput() {
    return this._podAffinityTerm.internalValue;
  }

  // weight - computed: false, optional: false, required: true
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_labels DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_labels DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
  * A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#label_selector DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
  /**
  * MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with 'labelSelector' as 'key in (value)' to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_label_keys DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_label_keys}
  */
  readonly matchLabelKeys?: string[];
  /**
  * MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with 'labelSelector' as 'key notin (value)' to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#mismatch_label_keys DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#mismatch_label_keys}
  */
  readonly mismatchLabelKeys?: string[];
  /**
  * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means 'this pod's namespace'. An empty selector ({}) matches all namespaces.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespace_selector DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;
  /**
  * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means 'this pod's namespace'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespaces DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#topology_key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#topology_key}
  */
  readonly topologyKey: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct!.labelSelector),
    match_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.matchLabelKeys),
    mismatch_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.mismatchLabelKeys),
    namespace_selector: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
    },
    match_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.matchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    mismatch_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.mismatchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    namespace_selector: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._matchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabelKeys = this._matchLabelKeys;
    }
    if (this._mismatchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.mismatchLabelKeys = this._mismatchLabelKeys;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._matchLabelKeys = undefined;
      this._mismatchLabelKeys = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._matchLabelKeys = value.matchLabelKeys;
      this._mismatchLabelKeys = value.mismatchLabelKeys;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // match_label_keys - computed: false, optional: true, required: false
  private _matchLabelKeys?: string[]; 
  public get matchLabelKeys() {
    return this.getListAttribute('match_label_keys');
  }
  public set matchLabelKeys(value: string[]) {
    this._matchLabelKeys = value;
  }
  public resetMatchLabelKeys() {
    this._matchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelKeysInput() {
    return this._matchLabelKeys;
  }

  // mismatch_label_keys - computed: false, optional: true, required: false
  private _mismatchLabelKeys?: string[]; 
  public get mismatchLabelKeys() {
    return this.getListAttribute('mismatch_label_keys');
  }
  public set mismatchLabelKeys(value: string[]) {
    this._mismatchLabelKeys = value;
  }
  public resetMismatchLabelKeys() {
    this._mismatchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mismatchLabelKeysInput() {
    return this._mismatchLabelKeys;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: false, required: true
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinity {
  /**
  * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#preferred_during_scheduling_ignored_during_execution DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#preferred_during_scheduling_ignored_during_execution}
  */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
  /**
  * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#required_during_scheduling_ignored_during_execution DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#required_during_scheduling_ignored_during_execution}
  */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preferred_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
    required_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preferred_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionList",
    },
    required_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preferredDuringSchedulingIgnoredDuringExecution = this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    if (this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredDuringSchedulingIgnoredDuringExecution = this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value.preferredDuringSchedulingIgnoredDuringExecution;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value.requiredDuringSchedulingIgnoredDuringExecution;
    }
  }

  // preferred_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _preferredDuringSchedulingIgnoredDuringExecution = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionList(this, "preferred_during_scheduling_ignored_during_execution", false);
  public get preferredDuringSchedulingIgnoredDuringExecution() {
    return this._preferredDuringSchedulingIgnoredDuringExecution;
  }
  public putPreferredDuringSchedulingIgnoredDuringExecution(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetPreferredDuringSchedulingIgnoredDuringExecution() {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._preferredDuringSchedulingIgnoredDuringExecution.internalValue;
  }

  // required_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _requiredDuringSchedulingIgnoredDuringExecution = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionList(this, "required_during_scheduling_ignored_during_execution", false);
  public get requiredDuringSchedulingIgnoredDuringExecution() {
    return this._requiredDuringSchedulingIgnoredDuringExecution;
  }
  public putRequiredDuringSchedulingIgnoredDuringExecution(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetRequiredDuringSchedulingIgnoredDuringExecution() {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._requiredDuringSchedulingIgnoredDuringExecution.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_labels DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_labels DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
  * A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#label_selector DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
  /**
  * MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with 'labelSelector' as 'key in (value)' to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_label_keys DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_label_keys}
  */
  readonly matchLabelKeys?: string[];
  /**
  * MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with 'labelSelector' as 'key notin (value)' to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#mismatch_label_keys DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#mismatch_label_keys}
  */
  readonly mismatchLabelKeys?: string[];
  /**
  * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means 'this pod's namespace'. An empty selector ({}) matches all namespaces.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespace_selector DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;
  /**
  * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means 'this pod's namespace'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespaces DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#topology_key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#topology_key}
  */
  readonly topologyKey: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct!.labelSelector),
    match_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.matchLabelKeys),
    mismatch_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.mismatchLabelKeys),
    namespace_selector: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
    },
    match_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.matchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    mismatch_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.mismatchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    namespace_selector: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._matchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabelKeys = this._matchLabelKeys;
    }
    if (this._mismatchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.mismatchLabelKeys = this._mismatchLabelKeys;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._matchLabelKeys = undefined;
      this._mismatchLabelKeys = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._matchLabelKeys = value.matchLabelKeys;
      this._mismatchLabelKeys = value.mismatchLabelKeys;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // match_label_keys - computed: false, optional: true, required: false
  private _matchLabelKeys?: string[]; 
  public get matchLabelKeys() {
    return this.getListAttribute('match_label_keys');
  }
  public set matchLabelKeys(value: string[]) {
    this._matchLabelKeys = value;
  }
  public resetMatchLabelKeys() {
    this._matchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelKeysInput() {
    return this._matchLabelKeys;
  }

  // mismatch_label_keys - computed: false, optional: true, required: false
  private _mismatchLabelKeys?: string[]; 
  public get mismatchLabelKeys() {
    return this.getListAttribute('mismatch_label_keys');
  }
  public set mismatchLabelKeys(value: string[]) {
    this._mismatchLabelKeys = value;
  }
  public resetMismatchLabelKeys() {
    this._mismatchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mismatchLabelKeysInput() {
    return this._mismatchLabelKeys;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: false, required: true
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
  * Required. A pod affinity term, associated with the corresponding weight.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pod_affinity_term DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pod_affinity_term}
  */
  readonly podAffinityTerm: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
  /**
  * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#weight DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#weight}
  */
  readonly weight: number;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    pod_affinity_term: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct!.podAffinityTerm),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    pod_affinity_term: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct!.podAffinityTerm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._podAffinityTerm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAffinityTerm = this._podAffinityTerm?.internalValue;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = value.podAffinityTerm;
      this._weight = value.weight;
    }
  }

  // pod_affinity_term - computed: false, optional: false, required: true
  private _podAffinityTerm = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference(this, "pod_affinity_term");
  public get podAffinityTerm() {
    return this._podAffinityTerm;
  }
  public putPodAffinityTerm(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) {
    this._podAffinityTerm.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get podAffinityTermInput() {
    return this._podAffinityTerm.internalValue;
  }

  // weight - computed: false, optional: false, required: true
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_labels DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#operator DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#values DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_expressions DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_labels DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
  * A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#label_selector DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
  /**
  * MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with 'labelSelector' as 'key in (value)' to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_label_keys DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_label_keys}
  */
  readonly matchLabelKeys?: string[];
  /**
  * MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with 'labelSelector' as 'key notin (value)' to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#mismatch_label_keys DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#mismatch_label_keys}
  */
  readonly mismatchLabelKeys?: string[];
  /**
  * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means 'this pod's namespace'. An empty selector ({}) matches all namespaces.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespace_selector DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;
  /**
  * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means 'this pod's namespace'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#namespaces DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#topology_key DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#topology_key}
  */
  readonly topologyKey: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct!.labelSelector),
    match_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.matchLabelKeys),
    mismatch_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.mismatchLabelKeys),
    namespace_selector: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
    },
    match_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.matchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    mismatch_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.mismatchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    namespace_selector: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._matchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabelKeys = this._matchLabelKeys;
    }
    if (this._mismatchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.mismatchLabelKeys = this._mismatchLabelKeys;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._matchLabelKeys = undefined;
      this._mismatchLabelKeys = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._matchLabelKeys = value.matchLabelKeys;
      this._mismatchLabelKeys = value.mismatchLabelKeys;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // match_label_keys - computed: false, optional: true, required: false
  private _matchLabelKeys?: string[]; 
  public get matchLabelKeys() {
    return this.getListAttribute('match_label_keys');
  }
  public set matchLabelKeys(value: string[]) {
    this._matchLabelKeys = value;
  }
  public resetMatchLabelKeys() {
    this._matchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelKeysInput() {
    return this._matchLabelKeys;
  }

  // mismatch_label_keys - computed: false, optional: true, required: false
  private _mismatchLabelKeys?: string[]; 
  public get mismatchLabelKeys() {
    return this.getListAttribute('mismatch_label_keys');
  }
  public set mismatchLabelKeys(value: string[]) {
    this._mismatchLabelKeys = value;
  }
  public resetMismatchLabelKeys() {
    this._mismatchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mismatchLabelKeysInput() {
    return this._mismatchLabelKeys;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: false, required: true
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinity {
  /**
  * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#preferred_during_scheduling_ignored_during_execution DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#preferred_during_scheduling_ignored_during_execution}
  */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
  /**
  * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#required_during_scheduling_ignored_during_execution DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#required_during_scheduling_ignored_during_execution}
  */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preferred_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
    required_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preferred_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionList",
    },
    required_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preferredDuringSchedulingIgnoredDuringExecution = this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    if (this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredDuringSchedulingIgnoredDuringExecution = this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value.preferredDuringSchedulingIgnoredDuringExecution;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value.requiredDuringSchedulingIgnoredDuringExecution;
    }
  }

  // preferred_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _preferredDuringSchedulingIgnoredDuringExecution = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionList(this, "preferred_during_scheduling_ignored_during_execution", false);
  public get preferredDuringSchedulingIgnoredDuringExecution() {
    return this._preferredDuringSchedulingIgnoredDuringExecution;
  }
  public putPreferredDuringSchedulingIgnoredDuringExecution(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetPreferredDuringSchedulingIgnoredDuringExecution() {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._preferredDuringSchedulingIgnoredDuringExecution.internalValue;
  }

  // required_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _requiredDuringSchedulingIgnoredDuringExecution = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionList(this, "required_during_scheduling_ignored_during_execution", false);
  public get requiredDuringSchedulingIgnoredDuringExecution() {
    return this._requiredDuringSchedulingIgnoredDuringExecution;
  }
  public putRequiredDuringSchedulingIgnoredDuringExecution(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetRequiredDuringSchedulingIgnoredDuringExecution() {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._requiredDuringSchedulingIgnoredDuringExecution.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinity {
  /**
  * Describes node affinity scheduling rules for the pod.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#node_affinity DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#node_affinity}
  */
  readonly nodeAffinity?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinity;
  /**
  * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pod_affinity DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pod_affinity}
  */
  readonly podAffinity?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinity;
  /**
  * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pod_anti_affinity DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pod_anti_affinity}
  */
  readonly podAntiAffinity?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinity;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    node_affinity: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityToTerraform(struct!.nodeAffinity),
    pod_affinity: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityToTerraform(struct!.podAffinity),
    pod_anti_affinity: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityToTerraform(struct!.podAntiAffinity),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    node_affinity: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityToHclTerraform(struct!.nodeAffinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinity",
    },
    pod_affinity: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityToHclTerraform(struct!.podAffinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinity",
    },
    pod_anti_affinity: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityToHclTerraform(struct!.podAntiAffinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinity",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nodeAffinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeAffinity = this._nodeAffinity?.internalValue;
    }
    if (this._podAffinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAffinity = this._podAffinity?.internalValue;
    }
    if (this._podAntiAffinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAntiAffinity = this._podAntiAffinity?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nodeAffinity.internalValue = undefined;
      this._podAffinity.internalValue = undefined;
      this._podAntiAffinity.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nodeAffinity.internalValue = value.nodeAffinity;
      this._podAffinity.internalValue = value.podAffinity;
      this._podAntiAffinity.internalValue = value.podAntiAffinity;
    }
  }

  // node_affinity - computed: false, optional: true, required: false
  private _nodeAffinity = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinityOutputReference(this, "node_affinity");
  public get nodeAffinity() {
    return this._nodeAffinity;
  }
  public putNodeAffinity(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityNodeAffinity) {
    this._nodeAffinity.internalValue = value;
  }
  public resetNodeAffinity() {
    this._nodeAffinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeAffinityInput() {
    return this._nodeAffinity.internalValue;
  }

  // pod_affinity - computed: false, optional: true, required: false
  private _podAffinity = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinityOutputReference(this, "pod_affinity");
  public get podAffinity() {
    return this._podAffinity;
  }
  public putPodAffinity(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAffinity) {
    this._podAffinity.internalValue = value;
  }
  public resetPodAffinity() {
    this._podAffinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAffinityInput() {
    return this._podAffinity.internalValue;
  }

  // pod_anti_affinity - computed: false, optional: true, required: false
  private _podAntiAffinity = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinityOutputReference(this, "pod_anti_affinity");
  public get podAntiAffinity() {
    return this._podAntiAffinity;
  }
  public putPodAntiAffinity(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecAffinityPodAntiAffinity) {
    this._podAntiAffinity.internalValue = value;
  }
  public resetPodAntiAffinity() {
    this._podAntiAffinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAntiAffinityInput() {
    return this._podAntiAffinity.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptions {
  /**
  * Required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#value DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfig {
  /**
  * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#nameservers DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#nameservers}
  */
  readonly nameservers?: string[];
  /**
  * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#options DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#options}
  */
  readonly options?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptions[] | cdktf.IResolvable;
  /**
  * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#searches DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#searches}
  */
  readonly searches?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nameservers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameservers),
    options: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptionsToTerraform, false)(struct!.options),
    searches: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.searches),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nameservers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameservers),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    options: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptionsToHclTerraform, false)(struct!.options),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptionsList",
    },
    searches: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.searches),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nameservers !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameservers = this._nameservers;
    }
    if (this._options?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.options = this._options?.internalValue;
    }
    if (this._searches !== undefined) {
      hasAnyValues = true;
      internalValueResult.searches = this._searches;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nameservers = undefined;
      this._options.internalValue = undefined;
      this._searches = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nameservers = value.nameservers;
      this._options.internalValue = value.options;
      this._searches = value.searches;
    }
  }

  // nameservers - computed: false, optional: true, required: false
  private _nameservers?: string[]; 
  public get nameservers() {
    return this.getListAttribute('nameservers');
  }
  public set nameservers(value: string[]) {
    this._nameservers = value;
  }
  public resetNameservers() {
    this._nameservers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameserversInput() {
    return this._nameservers;
  }

  // options - computed: false, optional: true, required: false
  private _options = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptionsList(this, "options", false);
  public get options() {
    return this._options;
  }
  public putOptions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDnsConfigOptions[] | cdktf.IResolvable) {
    this._options.internalValue = value;
  }
  public resetOptions() {
    this._options.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionsInput() {
    return this._options.internalValue;
  }

  // searches - computed: false, optional: true, required: false
  private _searches?: string[]; 
  public get searches() {
    return this.getListAttribute('searches');
  }
  public set searches(value: string[]) {
    this._searches = value;
  }
  public resetSearches() {
    this._searches = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get searchesInput() {
    return this._searches;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassis {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#asset DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#asset}
  */
  readonly asset?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#manufacturer DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#manufacturer}
  */
  readonly manufacturer?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#serial DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#serial}
  */
  readonly serial?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#sku DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#sku}
  */
  readonly sku?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#version DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#version}
  */
  readonly version?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassisToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassis | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    asset: cdktf.stringToTerraform(struct!.asset),
    manufacturer: cdktf.stringToTerraform(struct!.manufacturer),
    serial: cdktf.stringToTerraform(struct!.serial),
    sku: cdktf.stringToTerraform(struct!.sku),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassisToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassis | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    asset: {
      value: cdktf.stringToHclTerraform(struct!.asset),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    manufacturer: {
      value: cdktf.stringToHclTerraform(struct!.manufacturer),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    serial: {
      value: cdktf.stringToHclTerraform(struct!.serial),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sku: {
      value: cdktf.stringToHclTerraform(struct!.sku),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassisOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassis | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._asset !== undefined) {
      hasAnyValues = true;
      internalValueResult.asset = this._asset;
    }
    if (this._manufacturer !== undefined) {
      hasAnyValues = true;
      internalValueResult.manufacturer = this._manufacturer;
    }
    if (this._serial !== undefined) {
      hasAnyValues = true;
      internalValueResult.serial = this._serial;
    }
    if (this._sku !== undefined) {
      hasAnyValues = true;
      internalValueResult.sku = this._sku;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassis | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._asset = undefined;
      this._manufacturer = undefined;
      this._serial = undefined;
      this._sku = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._asset = value.asset;
      this._manufacturer = value.manufacturer;
      this._serial = value.serial;
      this._sku = value.sku;
      this._version = value.version;
    }
  }

  // asset - computed: false, optional: true, required: false
  private _asset?: string; 
  public get asset() {
    return this.getStringAttribute('asset');
  }
  public set asset(value: string) {
    this._asset = value;
  }
  public resetAsset() {
    this._asset = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get assetInput() {
    return this._asset;
  }

  // manufacturer - computed: false, optional: true, required: false
  private _manufacturer?: string; 
  public get manufacturer() {
    return this.getStringAttribute('manufacturer');
  }
  public set manufacturer(value: string) {
    this._manufacturer = value;
  }
  public resetManufacturer() {
    this._manufacturer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get manufacturerInput() {
    return this._manufacturer;
  }

  // serial - computed: false, optional: true, required: false
  private _serial?: string; 
  public get serial() {
    return this.getStringAttribute('serial');
  }
  public set serial(value: string) {
    this._serial = value;
  }
  public resetSerial() {
    this._serial = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serialInput() {
    return this._serial;
  }

  // sku - computed: false, optional: true, required: false
  private _sku?: string; 
  public get sku() {
    return this.getStringAttribute('sku');
  }
  public set sku(value: string) {
    this._sku = value;
  }
  public resetSku() {
    this._sku = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get skuInput() {
    return this._sku;
  }

  // version - computed: false, optional: true, required: false
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  public resetVersion() {
    this._version = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpet {
  /**
  * Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#present DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#present}
  */
  readonly present?: boolean | cdktf.IResolvable;
  /**
  * TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of 'delay', 'catchup', 'merge', 'discard'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tick_policy DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tick_policy}
  */
  readonly tickPolicy?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpetToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    present: cdktf.booleanToTerraform(struct!.present),
    tick_policy: cdktf.stringToTerraform(struct!.tickPolicy),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpetToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    present: {
      value: cdktf.booleanToHclTerraform(struct!.present),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tick_policy: {
      value: cdktf.stringToHclTerraform(struct!.tickPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._present !== undefined) {
      hasAnyValues = true;
      internalValueResult.present = this._present;
    }
    if (this._tickPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.tickPolicy = this._tickPolicy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._present = undefined;
      this._tickPolicy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._present = value.present;
      this._tickPolicy = value.tickPolicy;
    }
  }

  // present - computed: false, optional: true, required: false
  private _present?: boolean | cdktf.IResolvable; 
  public get present() {
    return this.getBooleanAttribute('present');
  }
  public set present(value: boolean | cdktf.IResolvable) {
    this._present = value;
  }
  public resetPresent() {
    this._present = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get presentInput() {
    return this._present;
  }

  // tick_policy - computed: false, optional: true, required: false
  private _tickPolicy?: string; 
  public get tickPolicy() {
    return this.getStringAttribute('tick_policy');
  }
  public set tickPolicy(value: string) {
    this._tickPolicy = value;
  }
  public resetTickPolicy() {
    this._tickPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tickPolicyInput() {
    return this._tickPolicy;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHyperv {
  /**
  * Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#present DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#present}
  */
  readonly present?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHypervToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHyperv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    present: cdktf.booleanToTerraform(struct!.present),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHypervToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHyperv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    present: {
      value: cdktf.booleanToHclTerraform(struct!.present),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHypervOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHyperv | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._present !== undefined) {
      hasAnyValues = true;
      internalValueResult.present = this._present;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHyperv | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._present = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._present = value.present;
    }
  }

  // present - computed: false, optional: true, required: false
  private _present?: boolean | cdktf.IResolvable; 
  public get present() {
    return this.getBooleanAttribute('present');
  }
  public set present(value: boolean | cdktf.IResolvable) {
    this._present = value;
  }
  public resetPresent() {
    this._present = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get presentInput() {
    return this._present;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvm {
  /**
  * Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#present DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#present}
  */
  readonly present?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvmToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    present: cdktf.booleanToTerraform(struct!.present),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvmToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    present: {
      value: cdktf.booleanToHclTerraform(struct!.present),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._present !== undefined) {
      hasAnyValues = true;
      internalValueResult.present = this._present;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._present = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._present = value.present;
    }
  }

  // present - computed: false, optional: true, required: false
  private _present?: boolean | cdktf.IResolvable; 
  public get present() {
    return this.getBooleanAttribute('present');
  }
  public set present(value: boolean | cdktf.IResolvable) {
    this._present = value;
  }
  public resetPresent() {
    this._present = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get presentInput() {
    return this._present;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPit {
  /**
  * Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#present DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#present}
  */
  readonly present?: boolean | cdktf.IResolvable;
  /**
  * TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of 'delay', 'catchup', 'discard'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tick_policy DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tick_policy}
  */
  readonly tickPolicy?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPitToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    present: cdktf.booleanToTerraform(struct!.present),
    tick_policy: cdktf.stringToTerraform(struct!.tickPolicy),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPitToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    present: {
      value: cdktf.booleanToHclTerraform(struct!.present),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tick_policy: {
      value: cdktf.stringToHclTerraform(struct!.tickPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._present !== undefined) {
      hasAnyValues = true;
      internalValueResult.present = this._present;
    }
    if (this._tickPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.tickPolicy = this._tickPolicy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._present = undefined;
      this._tickPolicy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._present = value.present;
      this._tickPolicy = value.tickPolicy;
    }
  }

  // present - computed: false, optional: true, required: false
  private _present?: boolean | cdktf.IResolvable; 
  public get present() {
    return this.getBooleanAttribute('present');
  }
  public set present(value: boolean | cdktf.IResolvable) {
    this._present = value;
  }
  public resetPresent() {
    this._present = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get presentInput() {
    return this._present;
  }

  // tick_policy - computed: false, optional: true, required: false
  private _tickPolicy?: string; 
  public get tickPolicy() {
    return this.getStringAttribute('tick_policy');
  }
  public set tickPolicy(value: string) {
    this._tickPolicy = value;
  }
  public resetTickPolicy() {
    this._tickPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tickPolicyInput() {
    return this._tickPolicy;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtc {
  /**
  * Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#present DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#present}
  */
  readonly present?: boolean | cdktf.IResolvable;
  /**
  * TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of 'delay', 'catchup'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tick_policy DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tick_policy}
  */
  readonly tickPolicy?: string;
  /**
  * Track the guest or the wall clock.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#track DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#track}
  */
  readonly track?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtcToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    present: cdktf.booleanToTerraform(struct!.present),
    tick_policy: cdktf.stringToTerraform(struct!.tickPolicy),
    track: cdktf.stringToTerraform(struct!.track),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtcToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    present: {
      value: cdktf.booleanToHclTerraform(struct!.present),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tick_policy: {
      value: cdktf.stringToHclTerraform(struct!.tickPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    track: {
      value: cdktf.stringToHclTerraform(struct!.track),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._present !== undefined) {
      hasAnyValues = true;
      internalValueResult.present = this._present;
    }
    if (this._tickPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.tickPolicy = this._tickPolicy;
    }
    if (this._track !== undefined) {
      hasAnyValues = true;
      internalValueResult.track = this._track;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._present = undefined;
      this._tickPolicy = undefined;
      this._track = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._present = value.present;
      this._tickPolicy = value.tickPolicy;
      this._track = value.track;
    }
  }

  // present - computed: false, optional: true, required: false
  private _present?: boolean | cdktf.IResolvable; 
  public get present() {
    return this.getBooleanAttribute('present');
  }
  public set present(value: boolean | cdktf.IResolvable) {
    this._present = value;
  }
  public resetPresent() {
    this._present = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get presentInput() {
    return this._present;
  }

  // tick_policy - computed: false, optional: true, required: false
  private _tickPolicy?: string; 
  public get tickPolicy() {
    return this.getStringAttribute('tick_policy');
  }
  public set tickPolicy(value: string) {
    this._tickPolicy = value;
  }
  public resetTickPolicy() {
    this._tickPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tickPolicyInput() {
    return this._tickPolicy;
  }

  // track - computed: false, optional: true, required: false
  private _track?: string; 
  public get track() {
    return this.getStringAttribute('track');
  }
  public set track(value: string) {
    this._track = value;
  }
  public resetTrack() {
    this._track = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get trackInput() {
    return this._track;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimer {
  /**
  * HPET (High Precision Event Timer) - multiple timers with periodic interrupts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#hpet DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#hpet}
  */
  readonly hpet?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpet;
  /**
  * Hyperv (Hypervclock) - lets guests read the host’s wall clock time (paravirtualized). For windows guests.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#hyperv DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#hyperv}
  */
  readonly hyperv?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHyperv;
  /**
  * KVM (KVM clock) - lets guests read the host’s wall clock time (paravirtualized). For linux guests.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kvm DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kvm}
  */
  readonly kvm?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvm;
  /**
  * PIT (Programmable Interval Timer) - a timer with periodic interrupts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pit DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pit}
  */
  readonly pit?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPit;
  /**
  * RTC (Real Time Clock) - a continuously running timer with periodic interrupts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#rtc DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#rtc}
  */
  readonly rtc?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtc;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    hpet: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpetToTerraform(struct!.hpet),
    hyperv: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHypervToTerraform(struct!.hyperv),
    kvm: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvmToTerraform(struct!.kvm),
    pit: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPitToTerraform(struct!.pit),
    rtc: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtcToTerraform(struct!.rtc),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    hpet: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpetToHclTerraform(struct!.hpet),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpet",
    },
    hyperv: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHypervToHclTerraform(struct!.hyperv),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHyperv",
    },
    kvm: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvmToHclTerraform(struct!.kvm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvm",
    },
    pit: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPitToHclTerraform(struct!.pit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPit",
    },
    rtc: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtcToHclTerraform(struct!.rtc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtc",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._hpet?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hpet = this._hpet?.internalValue;
    }
    if (this._hyperv?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hyperv = this._hyperv?.internalValue;
    }
    if (this._kvm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kvm = this._kvm?.internalValue;
    }
    if (this._pit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.pit = this._pit?.internalValue;
    }
    if (this._rtc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rtc = this._rtc?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._hpet.internalValue = undefined;
      this._hyperv.internalValue = undefined;
      this._kvm.internalValue = undefined;
      this._pit.internalValue = undefined;
      this._rtc.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._hpet.internalValue = value.hpet;
      this._hyperv.internalValue = value.hyperv;
      this._kvm.internalValue = value.kvm;
      this._pit.internalValue = value.pit;
      this._rtc.internalValue = value.rtc;
    }
  }

  // hpet - computed: false, optional: true, required: false
  private _hpet = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpetOutputReference(this, "hpet");
  public get hpet() {
    return this._hpet;
  }
  public putHpet(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHpet) {
    this._hpet.internalValue = value;
  }
  public resetHpet() {
    this._hpet.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hpetInput() {
    return this._hpet.internalValue;
  }

  // hyperv - computed: false, optional: true, required: false
  private _hyperv = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHypervOutputReference(this, "hyperv");
  public get hyperv() {
    return this._hyperv;
  }
  public putHyperv(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerHyperv) {
    this._hyperv.internalValue = value;
  }
  public resetHyperv() {
    this._hyperv.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hypervInput() {
    return this._hyperv.internalValue;
  }

  // kvm - computed: false, optional: true, required: false
  private _kvm = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvmOutputReference(this, "kvm");
  public get kvm() {
    return this._kvm;
  }
  public putKvm(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerKvm) {
    this._kvm.internalValue = value;
  }
  public resetKvm() {
    this._kvm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kvmInput() {
    return this._kvm.internalValue;
  }

  // pit - computed: false, optional: true, required: false
  private _pit = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPitOutputReference(this, "pit");
  public get pit() {
    return this._pit;
  }
  public putPit(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerPit) {
    this._pit.internalValue = value;
  }
  public resetPit() {
    this._pit.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pitInput() {
    return this._pit.internalValue;
  }

  // rtc - computed: false, optional: true, required: false
  private _rtc = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtcOutputReference(this, "rtc");
  public get rtc() {
    return this._rtc;
  }
  public putRtc(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerRtc) {
    this._rtc.internalValue = value;
  }
  public resetRtc() {
    this._rtc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rtcInput() {
    return this._rtc.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtc {
  /**
  * OffsetSeconds specifies an offset in seconds, relative to UTC. If set, guest changes to the clock will be kept during reboots and not reset.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#offset_seconds DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#offset_seconds}
  */
  readonly offsetSeconds?: number;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtcToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    offset_seconds: cdktf.numberToTerraform(struct!.offsetSeconds),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtcToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    offset_seconds: {
      value: cdktf.numberToHclTerraform(struct!.offsetSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._offsetSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.offsetSeconds = this._offsetSeconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._offsetSeconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._offsetSeconds = value.offsetSeconds;
    }
  }

  // offset_seconds - computed: false, optional: true, required: false
  private _offsetSeconds?: number; 
  public get offsetSeconds() {
    return this.getNumberAttribute('offset_seconds');
  }
  public set offsetSeconds(value: number) {
    this._offsetSeconds = value;
  }
  public resetOffsetSeconds() {
    this._offsetSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offsetSecondsInput() {
    return this._offsetSeconds;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClock {
  /**
  * Timer specifies whih timers are attached to the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#timer DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#timer}
  */
  readonly timer?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimer;
  /**
  * Timezone sets the guest clock to the specified timezone. Zone name follows the TZ environment variable format (e.g. 'America/New_York').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#timezone DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#timezone}
  */
  readonly timezone?: string;
  /**
  * UTC sets the guest clock to UTC on each boot. If an offset is specified, guest changes to the clock will be kept during reboots and are not reset.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#utc DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#utc}
  */
  readonly utc?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtc;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClock | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    timer: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerToTerraform(struct!.timer),
    timezone: cdktf.stringToTerraform(struct!.timezone),
    utc: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtcToTerraform(struct!.utc),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClock | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    timer: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerToHclTerraform(struct!.timer),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimer",
    },
    timezone: {
      value: cdktf.stringToHclTerraform(struct!.timezone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    utc: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtcToHclTerraform(struct!.utc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtc",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClock | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._timer?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.timer = this._timer?.internalValue;
    }
    if (this._timezone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timezone = this._timezone;
    }
    if (this._utc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.utc = this._utc?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClock | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._timer.internalValue = undefined;
      this._timezone = undefined;
      this._utc.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._timer.internalValue = value.timer;
      this._timezone = value.timezone;
      this._utc.internalValue = value.utc;
    }
  }

  // timer - computed: false, optional: true, required: false
  private _timer = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimerOutputReference(this, "timer");
  public get timer() {
    return this._timer;
  }
  public putTimer(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockTimer) {
    this._timer.internalValue = value;
  }
  public resetTimer() {
    this._timer.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timerInput() {
    return this._timer.internalValue;
  }

  // timezone - computed: false, optional: true, required: false
  private _timezone?: string; 
  public get timezone() {
    return this.getStringAttribute('timezone');
  }
  public set timezone(value: string) {
    this._timezone = value;
  }
  public resetTimezone() {
    this._timezone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timezoneInput() {
    return this._timezone;
  }

  // utc - computed: false, optional: true, required: false
  private _utc = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtcOutputReference(this, "utc");
  public get utc() {
    return this._utc;
  }
  public putUtc(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockUtc) {
    this._utc.internalValue = value;
  }
  public resetUtc() {
    this._utc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get utcInput() {
    return this._utc.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeatures {
  /**
  * Name of the CPU feature
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Policy is the CPU feature attribute which can have the following attributes: force - The virtual CPU will claim the feature is supported regardless of it being supported by host CPU. require - Guest creation will fail unless the feature is supported by the host CPU or the hypervisor is able to emulate it. optional - The feature will be supported by virtual CPU if and only if it is supported by host CPU. disable - The feature will not be supported by virtual CPU. forbid - Guest creation will fail if the feature is supported by host CPU. Defaults to require
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#policy DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#policy}
  */
  readonly policy?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeaturesToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeatures | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    policy: cdktf.stringToTerraform(struct!.policy),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeaturesToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeatures | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    policy: {
      value: cdktf.stringToHclTerraform(struct!.policy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeaturesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeatures | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._policy !== undefined) {
      hasAnyValues = true;
      internalValueResult.policy = this._policy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeatures | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._policy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._policy = value.policy;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // policy - computed: false, optional: true, required: false
  private _policy?: string; 
  public get policy() {
    return this.getStringAttribute('policy');
  }
  public set policy(value: string) {
    this._policy = value;
  }
  public resetPolicy() {
    this._policy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policyInput() {
    return this._policy;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeaturesList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeatures[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeaturesOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeaturesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNuma {
  /**
  * GuestMappingPassthrough will create an efficient guest topology based on host CPUs exclusively assigned to a pod. The created topology ensures that memory and CPUs on the virtual numa nodes never cross boundaries of host numa nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#guest_mapping_passthrough DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#guest_mapping_passthrough}
  */
  readonly guestMappingPassthrough?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNumaToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNuma | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    guest_mapping_passthrough: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.guestMappingPassthrough),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNumaToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNuma | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    guest_mapping_passthrough: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.guestMappingPassthrough),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNumaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNuma | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._guestMappingPassthrough !== undefined) {
      hasAnyValues = true;
      internalValueResult.guestMappingPassthrough = this._guestMappingPassthrough;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNuma | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._guestMappingPassthrough = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._guestMappingPassthrough = value.guestMappingPassthrough;
    }
  }

  // guest_mapping_passthrough - computed: false, optional: true, required: false
  private _guestMappingPassthrough?: { [key: string]: string }; 
  public get guestMappingPassthrough() {
    return this.getStringMapAttribute('guest_mapping_passthrough');
  }
  public set guestMappingPassthrough(value: { [key: string]: string }) {
    this._guestMappingPassthrough = value;
  }
  public resetGuestMappingPassthrough() {
    this._guestMappingPassthrough = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get guestMappingPassthroughInput() {
    return this._guestMappingPassthrough;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtime {
  /**
  * Mask defines the vcpu mask expression that defines which vcpus are used for realtime. Format matches libvirt's expressions. Example: '0-3,^1','0,2,3','2-3'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#mask DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#mask}
  */
  readonly mask?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtimeToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    mask: cdktf.stringToTerraform(struct!.mask),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtimeToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    mask: {
      value: cdktf.stringToHclTerraform(struct!.mask),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtimeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtime | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mask !== undefined) {
      hasAnyValues = true;
      internalValueResult.mask = this._mask;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtime | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mask = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mask = value.mask;
    }
  }

  // mask - computed: false, optional: true, required: false
  private _mask?: string; 
  public get mask() {
    return this.getStringAttribute('mask');
  }
  public set mask(value: string) {
    this._mask = value;
  }
  public resetMask() {
    this._mask = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maskInput() {
    return this._mask;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpu {
  /**
  * Cores specifies the number of cores inside the vmi. Must be a value greater or equal 1.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#cores DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#cores}
  */
  readonly cores?: number;
  /**
  * DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance on a node with enough dedicated pCPUs and pin the vCPUs to it.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#dedicated_cpu_placement DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#dedicated_cpu_placement}
  */
  readonly dedicatedCpuPlacement?: boolean | cdktf.IResolvable;
  /**
  * Features specifies the CPU features list inside the VMI.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#features DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#features}
  */
  readonly features?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeatures[] | cdktf.IResolvable;
  /**
  * IsolateEmulatorThread requests one more dedicated pCPU to be allocated for the VMI to place the emulator thread on it.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#isolate_emulator_thread DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#isolate_emulator_thread}
  */
  readonly isolateEmulatorThread?: boolean | cdktf.IResolvable;
  /**
  * MaxSockets specifies the maximum amount of sockets that can be hotplugged
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#max_sockets DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#max_sockets}
  */
  readonly maxSockets?: number;
  /**
  * Model specifies the CPU model inside the VMI. List of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map. It is possible to specify special cases like 'host-passthrough' to get the same CPU as the node and 'host-model' to get CPU closest to the node one. Defaults to host-model.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#model DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#model}
  */
  readonly model?: string;
  /**
  * NUMA allows specifying settings for the guest NUMA topology
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#numa DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#numa}
  */
  readonly numa?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNuma;
  /**
  * Realtime instructs the virt-launcher to tune the VMI for lower latency, optional for real time workloads
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#realtime DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#realtime}
  */
  readonly realtime?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtime;
  /**
  * Sockets specifies the number of sockets inside the vmi. Must be a value greater or equal 1.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#sockets DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#sockets}
  */
  readonly sockets?: number;
  /**
  * Threads specifies the number of threads inside the vmi. Must be a value greater or equal 1.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#threads DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#threads}
  */
  readonly threads?: number;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpu | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cores: cdktf.numberToTerraform(struct!.cores),
    dedicated_cpu_placement: cdktf.booleanToTerraform(struct!.dedicatedCpuPlacement),
    features: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeaturesToTerraform, false)(struct!.features),
    isolate_emulator_thread: cdktf.booleanToTerraform(struct!.isolateEmulatorThread),
    max_sockets: cdktf.numberToTerraform(struct!.maxSockets),
    model: cdktf.stringToTerraform(struct!.model),
    numa: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNumaToTerraform(struct!.numa),
    realtime: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtimeToTerraform(struct!.realtime),
    sockets: cdktf.numberToTerraform(struct!.sockets),
    threads: cdktf.numberToTerraform(struct!.threads),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpu | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cores: {
      value: cdktf.numberToHclTerraform(struct!.cores),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    dedicated_cpu_placement: {
      value: cdktf.booleanToHclTerraform(struct!.dedicatedCpuPlacement),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    features: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeaturesToHclTerraform, false)(struct!.features),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeaturesList",
    },
    isolate_emulator_thread: {
      value: cdktf.booleanToHclTerraform(struct!.isolateEmulatorThread),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    max_sockets: {
      value: cdktf.numberToHclTerraform(struct!.maxSockets),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    model: {
      value: cdktf.stringToHclTerraform(struct!.model),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    numa: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNumaToHclTerraform(struct!.numa),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNuma",
    },
    realtime: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtimeToHclTerraform(struct!.realtime),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtime",
    },
    sockets: {
      value: cdktf.numberToHclTerraform(struct!.sockets),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    threads: {
      value: cdktf.numberToHclTerraform(struct!.threads),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpu | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cores !== undefined) {
      hasAnyValues = true;
      internalValueResult.cores = this._cores;
    }
    if (this._dedicatedCpuPlacement !== undefined) {
      hasAnyValues = true;
      internalValueResult.dedicatedCpuPlacement = this._dedicatedCpuPlacement;
    }
    if (this._features?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.features = this._features?.internalValue;
    }
    if (this._isolateEmulatorThread !== undefined) {
      hasAnyValues = true;
      internalValueResult.isolateEmulatorThread = this._isolateEmulatorThread;
    }
    if (this._maxSockets !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxSockets = this._maxSockets;
    }
    if (this._model !== undefined) {
      hasAnyValues = true;
      internalValueResult.model = this._model;
    }
    if (this._numa?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.numa = this._numa?.internalValue;
    }
    if (this._realtime?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.realtime = this._realtime?.internalValue;
    }
    if (this._sockets !== undefined) {
      hasAnyValues = true;
      internalValueResult.sockets = this._sockets;
    }
    if (this._threads !== undefined) {
      hasAnyValues = true;
      internalValueResult.threads = this._threads;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpu | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cores = undefined;
      this._dedicatedCpuPlacement = undefined;
      this._features.internalValue = undefined;
      this._isolateEmulatorThread = undefined;
      this._maxSockets = undefined;
      this._model = undefined;
      this._numa.internalValue = undefined;
      this._realtime.internalValue = undefined;
      this._sockets = undefined;
      this._threads = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cores = value.cores;
      this._dedicatedCpuPlacement = value.dedicatedCpuPlacement;
      this._features.internalValue = value.features;
      this._isolateEmulatorThread = value.isolateEmulatorThread;
      this._maxSockets = value.maxSockets;
      this._model = value.model;
      this._numa.internalValue = value.numa;
      this._realtime.internalValue = value.realtime;
      this._sockets = value.sockets;
      this._threads = value.threads;
    }
  }

  // cores - computed: false, optional: true, required: false
  private _cores?: number; 
  public get cores() {
    return this.getNumberAttribute('cores');
  }
  public set cores(value: number) {
    this._cores = value;
  }
  public resetCores() {
    this._cores = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get coresInput() {
    return this._cores;
  }

  // dedicated_cpu_placement - computed: false, optional: true, required: false
  private _dedicatedCpuPlacement?: boolean | cdktf.IResolvable; 
  public get dedicatedCpuPlacement() {
    return this.getBooleanAttribute('dedicated_cpu_placement');
  }
  public set dedicatedCpuPlacement(value: boolean | cdktf.IResolvable) {
    this._dedicatedCpuPlacement = value;
  }
  public resetDedicatedCpuPlacement() {
    this._dedicatedCpuPlacement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dedicatedCpuPlacementInput() {
    return this._dedicatedCpuPlacement;
  }

  // features - computed: false, optional: true, required: false
  private _features = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeaturesList(this, "features", false);
  public get features() {
    return this._features;
  }
  public putFeatures(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuFeatures[] | cdktf.IResolvable) {
    this._features.internalValue = value;
  }
  public resetFeatures() {
    this._features.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get featuresInput() {
    return this._features.internalValue;
  }

  // isolate_emulator_thread - computed: false, optional: true, required: false
  private _isolateEmulatorThread?: boolean | cdktf.IResolvable; 
  public get isolateEmulatorThread() {
    return this.getBooleanAttribute('isolate_emulator_thread');
  }
  public set isolateEmulatorThread(value: boolean | cdktf.IResolvable) {
    this._isolateEmulatorThread = value;
  }
  public resetIsolateEmulatorThread() {
    this._isolateEmulatorThread = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get isolateEmulatorThreadInput() {
    return this._isolateEmulatorThread;
  }

  // max_sockets - computed: false, optional: true, required: false
  private _maxSockets?: number; 
  public get maxSockets() {
    return this.getNumberAttribute('max_sockets');
  }
  public set maxSockets(value: number) {
    this._maxSockets = value;
  }
  public resetMaxSockets() {
    this._maxSockets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxSocketsInput() {
    return this._maxSockets;
  }

  // model - computed: false, optional: true, required: false
  private _model?: string; 
  public get model() {
    return this.getStringAttribute('model');
  }
  public set model(value: string) {
    this._model = value;
  }
  public resetModel() {
    this._model = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modelInput() {
    return this._model;
  }

  // numa - computed: false, optional: true, required: false
  private _numa = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNumaOutputReference(this, "numa");
  public get numa() {
    return this._numa;
  }
  public putNuma(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuNuma) {
    this._numa.internalValue = value;
  }
  public resetNuma() {
    this._numa.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get numaInput() {
    return this._numa.internalValue;
  }

  // realtime - computed: false, optional: true, required: false
  private _realtime = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtimeOutputReference(this, "realtime");
  public get realtime() {
    return this._realtime;
  }
  public putRealtime(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuRealtime) {
    this._realtime.internalValue = value;
  }
  public resetRealtime() {
    this._realtime.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get realtimeInput() {
    return this._realtime.internalValue;
  }

  // sockets - computed: false, optional: true, required: false
  private _sockets?: number; 
  public get sockets() {
    return this.getNumberAttribute('sockets');
  }
  public set sockets(value: number) {
    this._sockets = value;
  }
  public resetSockets() {
    this._sockets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socketsInput() {
    return this._sockets;
  }

  // threads - computed: false, optional: true, required: false
  private _threads?: number; 
  public get threads() {
    return this.getNumberAttribute('threads');
  }
  public set threads(value: number) {
    this._threads = value;
  }
  public resetThreads() {
    this._threads = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get threadsInput() {
    return this._threads;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#logical DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#logical}
  */
  readonly logical: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#physical DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#physical}
  */
  readonly physical: number;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustomToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    logical: cdktf.numberToTerraform(struct!.logical),
    physical: cdktf.numberToTerraform(struct!.physical),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustomToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    logical: {
      value: cdktf.numberToHclTerraform(struct!.logical),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    physical: {
      value: cdktf.numberToHclTerraform(struct!.physical),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustomOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._logical !== undefined) {
      hasAnyValues = true;
      internalValueResult.logical = this._logical;
    }
    if (this._physical !== undefined) {
      hasAnyValues = true;
      internalValueResult.physical = this._physical;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._logical = undefined;
      this._physical = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._logical = value.logical;
      this._physical = value.physical;
    }
  }

  // logical - computed: false, optional: false, required: true
  private _logical?: number; 
  public get logical() {
    return this.getNumberAttribute('logical');
  }
  public set logical(value: number) {
    this._logical = value;
  }
  // Temporarily expose input value. Use with caution.
  public get logicalInput() {
    return this._logical;
  }

  // physical - computed: false, optional: false, required: true
  private _physical?: number; 
  public get physical() {
    return this.getNumberAttribute('physical');
  }
  public set physical(value: number) {
    this._physical = value;
  }
  // Temporarily expose input value. Use with caution.
  public get physicalInput() {
    return this._physical;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolume {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolumeToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolumeToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolumeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolume | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolume | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSize {
  /**
  * CustomBlockSize represents the desired logical and physical block size for a VM disk.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#custom DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#custom}
  */
  readonly custom?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustom;
  /**
  * Represents if a feature is enabled or disabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#match_volume DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#match_volume}
  */
  readonly matchVolume?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolume;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSize | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustomToTerraform(struct!.custom),
    match_volume: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolumeToTerraform(struct!.matchVolume),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSize | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustomToHclTerraform(struct!.custom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustom",
    },
    match_volume: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolumeToHclTerraform(struct!.matchVolume),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolume",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSize | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._custom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.custom = this._custom?.internalValue;
    }
    if (this._matchVolume?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchVolume = this._matchVolume?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSize | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._custom.internalValue = undefined;
      this._matchVolume.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._custom.internalValue = value.custom;
      this._matchVolume.internalValue = value.matchVolume;
    }
  }

  // custom - computed: false, optional: true, required: false
  private _custom = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustomOutputReference(this, "custom");
  public get custom() {
    return this._custom;
  }
  public putCustom(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeCustom) {
    this._custom.internalValue = value;
  }
  public resetCustom() {
    this._custom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customInput() {
    return this._custom.internalValue;
  }

  // match_volume - computed: false, optional: true, required: false
  private _matchVolume = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolumeOutputReference(this, "match_volume");
  public get matchVolume() {
    return this._matchVolume;
  }
  public putMatchVolume(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeMatchVolume) {
    this._matchVolume.internalValue = value;
  }
  public resetMatchVolume() {
    this._matchVolume.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchVolumeInput() {
    return this._matchVolume.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdrom {
  /**
  * Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#bus DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#bus}
  */
  readonly bus?: string;
  /**
  * ReadOnly. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#readonly DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#readonly}
  */
  readonly readonly?: boolean | cdktf.IResolvable;
  /**
  * Tray indicates if the tray of the device is open or closed. Allowed values are 'open' and 'closed'. Defaults to closed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tray DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tray}
  */
  readonly tray?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdromToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bus: cdktf.stringToTerraform(struct!.bus),
    readonly: cdktf.booleanToTerraform(struct!.readonly),
    tray: cdktf.stringToTerraform(struct!.tray),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdromToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bus: {
      value: cdktf.stringToHclTerraform(struct!.bus),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    readonly: {
      value: cdktf.booleanToHclTerraform(struct!.readonly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tray: {
      value: cdktf.stringToHclTerraform(struct!.tray),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bus !== undefined) {
      hasAnyValues = true;
      internalValueResult.bus = this._bus;
    }
    if (this._readonly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readonly = this._readonly;
    }
    if (this._tray !== undefined) {
      hasAnyValues = true;
      internalValueResult.tray = this._tray;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._bus = undefined;
      this._readonly = undefined;
      this._tray = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._bus = value.bus;
      this._readonly = value.readonly;
      this._tray = value.tray;
    }
  }

  // bus - computed: false, optional: true, required: false
  private _bus?: string; 
  public get bus() {
    return this.getStringAttribute('bus');
  }
  public set bus(value: string) {
    this._bus = value;
  }
  public resetBus() {
    this._bus = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get busInput() {
    return this._bus;
  }

  // readonly - computed: false, optional: true, required: false
  private _readonly?: boolean | cdktf.IResolvable; 
  public get readonly() {
    return this.getBooleanAttribute('readonly');
  }
  public set readonly(value: boolean | cdktf.IResolvable) {
    this._readonly = value;
  }
  public resetReadonly() {
    this._readonly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readonlyInput() {
    return this._readonly;
  }

  // tray - computed: false, optional: true, required: false
  private _tray?: string; 
  public get tray() {
    return this.getStringAttribute('tray');
  }
  public set tray(value: string) {
    this._tray = value;
  }
  public resetTray() {
    this._tray = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get trayInput() {
    return this._tray;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDisk {
  /**
  * Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi, usb.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#bus DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#bus}
  */
  readonly bus?: string;
  /**
  * If specified, the virtual disk will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pci_address DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pci_address}
  */
  readonly pciAddress?: string;
  /**
  * ReadOnly. Defaults to false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#readonly DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#readonly}
  */
  readonly readonly?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDiskToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bus: cdktf.stringToTerraform(struct!.bus),
    pci_address: cdktf.stringToTerraform(struct!.pciAddress),
    readonly: cdktf.booleanToTerraform(struct!.readonly),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDiskToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bus: {
      value: cdktf.stringToHclTerraform(struct!.bus),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pci_address: {
      value: cdktf.stringToHclTerraform(struct!.pciAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    readonly: {
      value: cdktf.booleanToHclTerraform(struct!.readonly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bus !== undefined) {
      hasAnyValues = true;
      internalValueResult.bus = this._bus;
    }
    if (this._pciAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.pciAddress = this._pciAddress;
    }
    if (this._readonly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readonly = this._readonly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._bus = undefined;
      this._pciAddress = undefined;
      this._readonly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._bus = value.bus;
      this._pciAddress = value.pciAddress;
      this._readonly = value.readonly;
    }
  }

  // bus - computed: false, optional: true, required: false
  private _bus?: string; 
  public get bus() {
    return this.getStringAttribute('bus');
  }
  public set bus(value: string) {
    this._bus = value;
  }
  public resetBus() {
    this._bus = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get busInput() {
    return this._bus;
  }

  // pci_address - computed: false, optional: true, required: false
  private _pciAddress?: string; 
  public get pciAddress() {
    return this.getStringAttribute('pci_address');
  }
  public set pciAddress(value: string) {
    this._pciAddress = value;
  }
  public resetPciAddress() {
    this._pciAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pciAddressInput() {
    return this._pciAddress;
  }

  // readonly - computed: false, optional: true, required: false
  private _readonly?: boolean | cdktf.IResolvable; 
  public get readonly() {
    return this.getBooleanAttribute('readonly');
  }
  public set readonly(value: boolean | cdktf.IResolvable) {
    this._readonly = value;
  }
  public resetReadonly() {
    this._readonly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readonlyInput() {
    return this._readonly;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLun {
  /**
  * Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#bus DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#bus}
  */
  readonly bus?: string;
  /**
  * ReadOnly. Defaults to false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#readonly DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#readonly}
  */
  readonly readonly?: boolean | cdktf.IResolvable;
  /**
  * Reservation indicates if the disk needs to support the persistent reservation for the SCSI disk
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#reservation DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#reservation}
  */
  readonly reservation?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLunToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLun | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bus: cdktf.stringToTerraform(struct!.bus),
    readonly: cdktf.booleanToTerraform(struct!.readonly),
    reservation: cdktf.booleanToTerraform(struct!.reservation),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLunToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLun | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bus: {
      value: cdktf.stringToHclTerraform(struct!.bus),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    readonly: {
      value: cdktf.booleanToHclTerraform(struct!.readonly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    reservation: {
      value: cdktf.booleanToHclTerraform(struct!.reservation),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLunOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLun | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bus !== undefined) {
      hasAnyValues = true;
      internalValueResult.bus = this._bus;
    }
    if (this._readonly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readonly = this._readonly;
    }
    if (this._reservation !== undefined) {
      hasAnyValues = true;
      internalValueResult.reservation = this._reservation;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLun | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._bus = undefined;
      this._readonly = undefined;
      this._reservation = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._bus = value.bus;
      this._readonly = value.readonly;
      this._reservation = value.reservation;
    }
  }

  // bus - computed: false, optional: true, required: false
  private _bus?: string; 
  public get bus() {
    return this.getStringAttribute('bus');
  }
  public set bus(value: string) {
    this._bus = value;
  }
  public resetBus() {
    this._bus = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get busInput() {
    return this._bus;
  }

  // readonly - computed: false, optional: true, required: false
  private _readonly?: boolean | cdktf.IResolvable; 
  public get readonly() {
    return this.getBooleanAttribute('readonly');
  }
  public set readonly(value: boolean | cdktf.IResolvable) {
    this._readonly = value;
  }
  public resetReadonly() {
    this._readonly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readonlyInput() {
    return this._readonly;
  }

  // reservation - computed: false, optional: true, required: false
  private _reservation?: boolean | cdktf.IResolvable; 
  public get reservation() {
    return this.getBooleanAttribute('reservation');
  }
  public set reservation(value: boolean | cdktf.IResolvable) {
    this._reservation = value;
  }
  public resetReservation() {
    this._reservation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reservationInput() {
    return this._reservation;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisks {
  /**
  * If specified, the virtual disk will be presented with the given block sizes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#block_size DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#block_size}
  */
  readonly blockSize?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSize;
  /**
  * BootOrder is an integer value > 0, used to determine ordering of boot devices. Lower values take precedence. Each disk or interface that has a boot order must have a unique value. Disks without a boot order are not tried if a disk with a boot order exists.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#boot_order DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#boot_order}
  */
  readonly bootOrder?: number;
  /**
  * Cache specifies which kvm disk cache mode should be used. Supported values are: CacheNone, CacheWriteThrough.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#cache DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#cache}
  */
  readonly cache?: string;
  /**
  * Attach a volume as a cdrom to the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#cdrom DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#cdrom}
  */
  readonly cdrom?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdrom;
  /**
  * dedicatedIOThread indicates this disk should have an exclusive IO Thread. Enabling this implies useIOThreads = true. Defaults to false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#dedicated_io_thread DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#dedicated_io_thread}
  */
  readonly dedicatedIoThread?: boolean | cdktf.IResolvable;
  /**
  * Attach a volume as a disk to the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#disk DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#disk}
  */
  readonly disk?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDisk;
  /**
  * If specified, it can change the default error policy (stop) for the disk
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#error_policy DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#error_policy}
  */
  readonly errorPolicy?: string;
  /**
  * IO specifies which QEMU disk IO mode should be used. Supported values are: native, default, threads.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#io DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#io}
  */
  readonly io?: string;
  /**
  * Attach a volume as a LUN to the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#lun DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#lun}
  */
  readonly lun?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLun;
  /**
  * Name is the device name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Serial provides the ability to specify a serial number for the disk device.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#serial DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#serial}
  */
  readonly serial?: string;
  /**
  * If specified the disk is made sharable and multiple write from different VMs are permitted
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#shareable DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#shareable}
  */
  readonly shareable?: boolean | cdktf.IResolvable;
  /**
  * If specified, disk address and its tag will be provided to the guest via config drive metadata
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tag DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tag}
  */
  readonly tag?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    block_size: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeToTerraform(struct!.blockSize),
    boot_order: cdktf.numberToTerraform(struct!.bootOrder),
    cache: cdktf.stringToTerraform(struct!.cache),
    cdrom: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdromToTerraform(struct!.cdrom),
    dedicated_io_thread: cdktf.booleanToTerraform(struct!.dedicatedIoThread),
    disk: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDiskToTerraform(struct!.disk),
    error_policy: cdktf.stringToTerraform(struct!.errorPolicy),
    io: cdktf.stringToTerraform(struct!.io),
    lun: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLunToTerraform(struct!.lun),
    name: cdktf.stringToTerraform(struct!.name),
    serial: cdktf.stringToTerraform(struct!.serial),
    shareable: cdktf.booleanToTerraform(struct!.shareable),
    tag: cdktf.stringToTerraform(struct!.tag),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    block_size: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeToHclTerraform(struct!.blockSize),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSize",
    },
    boot_order: {
      value: cdktf.numberToHclTerraform(struct!.bootOrder),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    cache: {
      value: cdktf.stringToHclTerraform(struct!.cache),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    cdrom: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdromToHclTerraform(struct!.cdrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdrom",
    },
    dedicated_io_thread: {
      value: cdktf.booleanToHclTerraform(struct!.dedicatedIoThread),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disk: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDiskToHclTerraform(struct!.disk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDisk",
    },
    error_policy: {
      value: cdktf.stringToHclTerraform(struct!.errorPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    io: {
      value: cdktf.stringToHclTerraform(struct!.io),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    lun: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLunToHclTerraform(struct!.lun),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLun",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    serial: {
      value: cdktf.stringToHclTerraform(struct!.serial),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    shareable: {
      value: cdktf.booleanToHclTerraform(struct!.shareable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    tag: {
      value: cdktf.stringToHclTerraform(struct!.tag),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisks | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._blockSize?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.blockSize = this._blockSize?.internalValue;
    }
    if (this._bootOrder !== undefined) {
      hasAnyValues = true;
      internalValueResult.bootOrder = this._bootOrder;
    }
    if (this._cache !== undefined) {
      hasAnyValues = true;
      internalValueResult.cache = this._cache;
    }
    if (this._cdrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cdrom = this._cdrom?.internalValue;
    }
    if (this._dedicatedIoThread !== undefined) {
      hasAnyValues = true;
      internalValueResult.dedicatedIoThread = this._dedicatedIoThread;
    }
    if (this._disk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.disk = this._disk?.internalValue;
    }
    if (this._errorPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.errorPolicy = this._errorPolicy;
    }
    if (this._io !== undefined) {
      hasAnyValues = true;
      internalValueResult.io = this._io;
    }
    if (this._lun?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.lun = this._lun?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._serial !== undefined) {
      hasAnyValues = true;
      internalValueResult.serial = this._serial;
    }
    if (this._shareable !== undefined) {
      hasAnyValues = true;
      internalValueResult.shareable = this._shareable;
    }
    if (this._tag !== undefined) {
      hasAnyValues = true;
      internalValueResult.tag = this._tag;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisks | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._blockSize.internalValue = undefined;
      this._bootOrder = undefined;
      this._cache = undefined;
      this._cdrom.internalValue = undefined;
      this._dedicatedIoThread = undefined;
      this._disk.internalValue = undefined;
      this._errorPolicy = undefined;
      this._io = undefined;
      this._lun.internalValue = undefined;
      this._name = undefined;
      this._serial = undefined;
      this._shareable = undefined;
      this._tag = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._blockSize.internalValue = value.blockSize;
      this._bootOrder = value.bootOrder;
      this._cache = value.cache;
      this._cdrom.internalValue = value.cdrom;
      this._dedicatedIoThread = value.dedicatedIoThread;
      this._disk.internalValue = value.disk;
      this._errorPolicy = value.errorPolicy;
      this._io = value.io;
      this._lun.internalValue = value.lun;
      this._name = value.name;
      this._serial = value.serial;
      this._shareable = value.shareable;
      this._tag = value.tag;
    }
  }

  // block_size - computed: false, optional: true, required: false
  private _blockSize = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSizeOutputReference(this, "block_size");
  public get blockSize() {
    return this._blockSize;
  }
  public putBlockSize(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksBlockSize) {
    this._blockSize.internalValue = value;
  }
  public resetBlockSize() {
    this._blockSize.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blockSizeInput() {
    return this._blockSize.internalValue;
  }

  // boot_order - computed: false, optional: true, required: false
  private _bootOrder?: number; 
  public get bootOrder() {
    return this.getNumberAttribute('boot_order');
  }
  public set bootOrder(value: number) {
    this._bootOrder = value;
  }
  public resetBootOrder() {
    this._bootOrder = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bootOrderInput() {
    return this._bootOrder;
  }

  // cache - computed: false, optional: true, required: false
  private _cache?: string; 
  public get cache() {
    return this.getStringAttribute('cache');
  }
  public set cache(value: string) {
    this._cache = value;
  }
  public resetCache() {
    this._cache = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheInput() {
    return this._cache;
  }

  // cdrom - computed: false, optional: true, required: false
  private _cdrom = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdromOutputReference(this, "cdrom");
  public get cdrom() {
    return this._cdrom;
  }
  public putCdrom(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksCdrom) {
    this._cdrom.internalValue = value;
  }
  public resetCdrom() {
    this._cdrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cdromInput() {
    return this._cdrom.internalValue;
  }

  // dedicated_io_thread - computed: false, optional: true, required: false
  private _dedicatedIoThread?: boolean | cdktf.IResolvable; 
  public get dedicatedIoThread() {
    return this.getBooleanAttribute('dedicated_io_thread');
  }
  public set dedicatedIoThread(value: boolean | cdktf.IResolvable) {
    this._dedicatedIoThread = value;
  }
  public resetDedicatedIoThread() {
    this._dedicatedIoThread = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dedicatedIoThreadInput() {
    return this._dedicatedIoThread;
  }

  // disk - computed: false, optional: true, required: false
  private _disk = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDiskOutputReference(this, "disk");
  public get disk() {
    return this._disk;
  }
  public putDisk(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksDisk) {
    this._disk.internalValue = value;
  }
  public resetDisk() {
    this._disk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskInput() {
    return this._disk.internalValue;
  }

  // error_policy - computed: false, optional: true, required: false
  private _errorPolicy?: string; 
  public get errorPolicy() {
    return this.getStringAttribute('error_policy');
  }
  public set errorPolicy(value: string) {
    this._errorPolicy = value;
  }
  public resetErrorPolicy() {
    this._errorPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get errorPolicyInput() {
    return this._errorPolicy;
  }

  // io - computed: false, optional: true, required: false
  private _io?: string; 
  public get io() {
    return this.getStringAttribute('io');
  }
  public set io(value: string) {
    this._io = value;
  }
  public resetIo() {
    this._io = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ioInput() {
    return this._io;
  }

  // lun - computed: false, optional: true, required: false
  private _lun = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLunOutputReference(this, "lun");
  public get lun() {
    return this._lun;
  }
  public putLun(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksLun) {
    this._lun.internalValue = value;
  }
  public resetLun() {
    this._lun.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lunInput() {
    return this._lun.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // serial - computed: false, optional: true, required: false
  private _serial?: string; 
  public get serial() {
    return this.getStringAttribute('serial');
  }
  public set serial(value: string) {
    this._serial = value;
  }
  public resetSerial() {
    this._serial = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serialInput() {
    return this._serial;
  }

  // shareable - computed: false, optional: true, required: false
  private _shareable?: boolean | cdktf.IResolvable; 
  public get shareable() {
    return this.getBooleanAttribute('shareable');
  }
  public set shareable(value: boolean | cdktf.IResolvable) {
    this._shareable = value;
  }
  public resetShareable() {
    this._shareable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get shareableInput() {
    return this._shareable;
  }

  // tag - computed: false, optional: true, required: false
  private _tag?: string; 
  public get tag() {
    return this.getStringAttribute('tag');
  }
  public set tag(value: string) {
    this._tag = value;
  }
  public resetTag() {
    this._tag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagInput() {
    return this._tag;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisks[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystems {
  /**
  * Name is the device name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Virtiofs is supported
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#virtiofs DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#virtiofs}
  */
  readonly virtiofs: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystemsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    virtiofs: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.virtiofs),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystemsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    virtiofs: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.virtiofs),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._virtiofs !== undefined) {
      hasAnyValues = true;
      internalValueResult.virtiofs = this._virtiofs;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._virtiofs = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._virtiofs = value.virtiofs;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // virtiofs - computed: false, optional: false, required: true
  private _virtiofs?: { [key: string]: string }; 
  public get virtiofs() {
    return this.getStringMapAttribute('virtiofs');
  }
  public set virtiofs(value: { [key: string]: string }) {
    this._virtiofs = value;
  }
  // Temporarily expose input value. Use with caution.
  public get virtiofsInput() {
    return this._virtiofs;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystemsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFb {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFbToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFbToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFbOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFb | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFb | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplay {
  /**
  * Enabled determines if a display addapter backed by a vGPU should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Enables a boot framebuffer, until the guest OS loads a real GPU driver Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#ram_fb DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#ram_fb}
  */
  readonly ramFb?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFb;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    ram_fb: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFbToTerraform(struct!.ramFb),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    ram_fb: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFbToHclTerraform(struct!.ramFb),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFb",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplay | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._ramFb?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ramFb = this._ramFb?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplay | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
      this._ramFb.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
      this._ramFb.internalValue = value.ramFb;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // ram_fb - computed: false, optional: true, required: false
  private _ramFb = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFbOutputReference(this, "ram_fb");
  public get ramFb() {
    return this._ramFb;
  }
  public putRamFb(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayRamFb) {
    this._ramFb.internalValue = value;
  }
  public resetRamFb() {
    this._ramFb.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ramFbInput() {
    return this._ramFb.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#display DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#display}
  */
  readonly display?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplay;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayToTerraform(struct!.display),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayToHclTerraform(struct!.display),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplay",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._display?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.display = this._display?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._display.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._display.internalValue = value.display;
    }
  }

  // display - computed: false, optional: true, required: false
  private _display = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplayOutputReference(this, "display");
  public get display() {
    return this._display;
  }
  public putDisplay(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsDisplay) {
    this._display.internalValue = value;
  }
  public resetDisplay() {
    this._display.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayInput() {
    return this._display.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpus {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#device_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#device_name}
  */
  readonly deviceName: string;
  /**
  * Name of the GPU device as exposed by a device plugin
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * If specified, the virtual network interface address and its tag will be provided to the guest via config drive
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tag DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tag}
  */
  readonly tag?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#virtual_gpu_options DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#virtual_gpu_options}
  */
  readonly virtualGpuOptions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptions;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpus | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    device_name: cdktf.stringToTerraform(struct!.deviceName),
    name: cdktf.stringToTerraform(struct!.name),
    tag: cdktf.stringToTerraform(struct!.tag),
    virtual_gpu_options: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsToTerraform(struct!.virtualGpuOptions),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpus | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    device_name: {
      value: cdktf.stringToHclTerraform(struct!.deviceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tag: {
      value: cdktf.stringToHclTerraform(struct!.tag),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    virtual_gpu_options: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsToHclTerraform(struct!.virtualGpuOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptions",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpus | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._deviceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceName = this._deviceName;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._tag !== undefined) {
      hasAnyValues = true;
      internalValueResult.tag = this._tag;
    }
    if (this._virtualGpuOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.virtualGpuOptions = this._virtualGpuOptions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpus | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._deviceName = undefined;
      this._name = undefined;
      this._tag = undefined;
      this._virtualGpuOptions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._deviceName = value.deviceName;
      this._name = value.name;
      this._tag = value.tag;
      this._virtualGpuOptions.internalValue = value.virtualGpuOptions;
    }
  }

  // device_name - computed: false, optional: false, required: true
  private _deviceName?: string; 
  public get deviceName() {
    return this.getStringAttribute('device_name');
  }
  public set deviceName(value: string) {
    this._deviceName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceNameInput() {
    return this._deviceName;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // tag - computed: false, optional: true, required: false
  private _tag?: string; 
  public get tag() {
    return this.getStringAttribute('tag');
  }
  public set tag(value: string) {
    this._tag = value;
  }
  public resetTag() {
    this._tag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagInput() {
    return this._tag;
  }

  // virtual_gpu_options - computed: false, optional: true, required: false
  private _virtualGpuOptions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptionsOutputReference(this, "virtual_gpu_options");
  public get virtualGpuOptions() {
    return this._virtualGpuOptions;
  }
  public putVirtualGpuOptions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusVirtualGpuOptions) {
    this._virtualGpuOptions.internalValue = value;
  }
  public resetVirtualGpuOptions() {
    this._virtualGpuOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get virtualGpuOptionsInput() {
    return this._virtualGpuOptions.internalValue;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpus[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevices {
  /**
  * DeviceName is the resource name of the host device exposed by a device plugin
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#device_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#device_name}
  */
  readonly deviceName: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * If specified, the virtual network interface address and its tag will be provided to the guest via config drive
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tag DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tag}
  */
  readonly tag?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevicesToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevices | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    device_name: cdktf.stringToTerraform(struct!.deviceName),
    name: cdktf.stringToTerraform(struct!.name),
    tag: cdktf.stringToTerraform(struct!.tag),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevicesToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevices | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    device_name: {
      value: cdktf.stringToHclTerraform(struct!.deviceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tag: {
      value: cdktf.stringToHclTerraform(struct!.tag),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevicesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevices | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._deviceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceName = this._deviceName;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._tag !== undefined) {
      hasAnyValues = true;
      internalValueResult.tag = this._tag;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevices | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._deviceName = undefined;
      this._name = undefined;
      this._tag = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._deviceName = value.deviceName;
      this._name = value.name;
      this._tag = value.tag;
    }
  }

  // device_name - computed: false, optional: false, required: true
  private _deviceName?: string; 
  public get deviceName() {
    return this.getStringAttribute('device_name');
  }
  public set deviceName(value: string) {
    this._deviceName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceNameInput() {
    return this._deviceName;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // tag - computed: false, optional: true, required: false
  private _tag?: string; 
  public get tag() {
    return this.getStringAttribute('tag');
  }
  public set tag(value: string) {
    this._tag = value;
  }
  public resetTag() {
    this._tag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagInput() {
    return this._tag;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevicesList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevices[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevicesOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevicesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputs {
  /**
  * Bus indicates the bus of input device to emulate. Supported values: virtio, usb.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#bus DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#bus}
  */
  readonly bus?: string;
  /**
  * Name is the device name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Type indicated the type of input device. Supported values: tablet.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#type DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#type}
  */
  readonly type: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bus: cdktf.stringToTerraform(struct!.bus),
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bus: {
      value: cdktf.stringToHclTerraform(struct!.bus),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bus !== undefined) {
      hasAnyValues = true;
      internalValueResult.bus = this._bus;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._bus = undefined;
      this._name = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._bus = value.bus;
      this._name = value.name;
      this._type = value.type;
    }
  }

  // bus - computed: false, optional: true, required: false
  private _bus?: string; 
  public get bus() {
    return this.getStringAttribute('bus');
  }
  public set bus(value: string) {
    this._bus = value;
  }
  public resetBus() {
    this._bus = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get busInput() {
    return this._bus;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputs[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBinding {
  /**
  * Name references to the binding name as denined in the kubevirt CR. version: 1alphav1
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBindingToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBinding | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBindingToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBinding | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBindingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBinding | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBinding | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptions {
  /**
  * Option is an Integer value from 224-254 Required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#option DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#option}
  */
  readonly option: number;
  /**
  * Value is a String value for the Option provided Required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#value DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#value}
  */
  readonly value: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    option: cdktf.numberToTerraform(struct!.option),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    option: {
      value: cdktf.numberToHclTerraform(struct!.option),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._option !== undefined) {
      hasAnyValues = true;
      internalValueResult.option = this._option;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._option = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._option = value.option;
      this._value = value.value;
    }
  }

  // option - computed: false, optional: false, required: true
  private _option?: number; 
  public get option() {
    return this.getNumberAttribute('option');
  }
  public set option(value: number) {
    this._option = value;
  }
  // Temporarily expose input value. Use with caution.
  public get optionInput() {
    return this._option;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptionsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptions {
  /**
  * If specified will pass option 67 to interface's DHCP server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#boot_file_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#boot_file_name}
  */
  readonly bootFileName?: string;
  /**
  * If specified will pass the configured NTP server to the VM via DHCP option 042.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#ntp_servers DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#ntp_servers}
  */
  readonly ntpServers?: string[];
  /**
  * If specified will pass extra DHCP options for private use, range: 224-254
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#private_options DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#private_options}
  */
  readonly privateOptions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptions[] | cdktf.IResolvable;
  /**
  * If specified will pass option 66 to interface's DHCP server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tftp_server_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tftp_server_name}
  */
  readonly tftpServerName?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    boot_file_name: cdktf.stringToTerraform(struct!.bootFileName),
    ntp_servers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.ntpServers),
    private_options: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptionsToTerraform, false)(struct!.privateOptions),
    tftp_server_name: cdktf.stringToTerraform(struct!.tftpServerName),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    boot_file_name: {
      value: cdktf.stringToHclTerraform(struct!.bootFileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ntp_servers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.ntpServers),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    private_options: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptionsToHclTerraform, false)(struct!.privateOptions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptionsList",
    },
    tftp_server_name: {
      value: cdktf.stringToHclTerraform(struct!.tftpServerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bootFileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.bootFileName = this._bootFileName;
    }
    if (this._ntpServers !== undefined) {
      hasAnyValues = true;
      internalValueResult.ntpServers = this._ntpServers;
    }
    if (this._privateOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.privateOptions = this._privateOptions?.internalValue;
    }
    if (this._tftpServerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.tftpServerName = this._tftpServerName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._bootFileName = undefined;
      this._ntpServers = undefined;
      this._privateOptions.internalValue = undefined;
      this._tftpServerName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._bootFileName = value.bootFileName;
      this._ntpServers = value.ntpServers;
      this._privateOptions.internalValue = value.privateOptions;
      this._tftpServerName = value.tftpServerName;
    }
  }

  // boot_file_name - computed: false, optional: true, required: false
  private _bootFileName?: string; 
  public get bootFileName() {
    return this.getStringAttribute('boot_file_name');
  }
  public set bootFileName(value: string) {
    this._bootFileName = value;
  }
  public resetBootFileName() {
    this._bootFileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bootFileNameInput() {
    return this._bootFileName;
  }

  // ntp_servers - computed: false, optional: true, required: false
  private _ntpServers?: string[]; 
  public get ntpServers() {
    return this.getListAttribute('ntp_servers');
  }
  public set ntpServers(value: string[]) {
    this._ntpServers = value;
  }
  public resetNtpServers() {
    this._ntpServers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ntpServersInput() {
    return this._ntpServers;
  }

  // private_options - computed: false, optional: true, required: false
  private _privateOptions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptionsList(this, "private_options", false);
  public get privateOptions() {
    return this._privateOptions;
  }
  public putPrivateOptions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsPrivateOptions[] | cdktf.IResolvable) {
    this._privateOptions.internalValue = value;
  }
  public resetPrivateOptions() {
    this._privateOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privateOptionsInput() {
    return this._privateOptions.internalValue;
  }

  // tftp_server_name - computed: false, optional: true, required: false
  private _tftpServerName?: string; 
  public get tftpServerName() {
    return this.getStringAttribute('tftp_server_name');
  }
  public set tftpServerName(value: string) {
    this._tftpServerName = value;
  }
  public resetTftpServerName() {
    this._tftpServerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tftpServerNameInput() {
    return this._tftpServerName;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPorts {
  /**
  * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Number of port to expose for the virtual machine. This must be a valid port number, 0 < x < 65536.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#port DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#port}
  */
  readonly port: number;
  /**
  * Protocol for port. Must be UDP or TCP. Defaults to 'TCP'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#protocol DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPortsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPorts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    port: cdktf.numberToTerraform(struct!.port),
    protocol: cdktf.stringToTerraform(struct!.protocol),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPortsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPorts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPortsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPorts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPorts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._port = undefined;
      this._protocol = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._port = value.port;
      this._protocol = value.protocol;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // port - computed: false, optional: false, required: true
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPortsList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPorts[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPortsOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPortsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfaces {
  /**
  * If specified, the ACPI index is used to provide network interface device naming, that is stable across changes in PCI addresses assigned to the device. This value is required to be unique across all devices and be between 1 and (16*1024-1).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#acpi_index DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#acpi_index}
  */
  readonly acpiIndex?: number;
  /**
  * Binding specifies the binding plugin that will be used to connect the interface to the guest. It provides an alternative to InterfaceBindingMethod. version: 1alphav1
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#binding DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#binding}
  */
  readonly binding?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBinding;
  /**
  * BootOrder is an integer value > 0, used to determine ordering of boot devices. Lower values take precedence. Each interface or disk that has a boot order must have a unique value. Interfaces without a boot order are not tried.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#boot_order DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#boot_order}
  */
  readonly bootOrder?: number;
  /**
  * InterfaceBridge connects to a given network via a linux bridge.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#bridge DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#bridge}
  */
  readonly bridge?: { [key: string]: string };
  /**
  * If specified the network interface will pass additional DHCP options to the VMI
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#dhcp_options DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#dhcp_options}
  */
  readonly dhcpOptions?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptions;
  /**
  * Interface MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#mac_address DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#mac_address}
  */
  readonly macAddress?: string;
  /**
  * Deprecated, please refer to Kubevirt user guide for alternatives.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#macvtap DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#macvtap}
  */
  readonly macvtap?: { [key: string]: string };
  /**
  * InterfaceMasquerade connects to a given network using netfilter rules to nat the traffic.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#masquerade DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#masquerade}
  */
  readonly masquerade?: { [key: string]: string };
  /**
  * Interface model. One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio. TODO:(ihar) switch to enums once opengen-api supports them. See: https://github.com/kubernetes/kube-openapi/issues/51
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#model DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#model}
  */
  readonly model?: string;
  /**
  * Logical name of the interface as well as a reference to the associated networks. Must match the Name of a Network.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Deprecated, please refer to Kubevirt user guide for alternatives.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#passt DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#passt}
  */
  readonly passt?: { [key: string]: string };
  /**
  * If specified, the virtual network interface will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pci_address DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pci_address}
  */
  readonly pciAddress?: string;
  /**
  * List of ports to be forwarded to the virtual machine.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#ports DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#ports}
  */
  readonly ports?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPorts[] | cdktf.IResolvable;
  /**
  * InterfaceSlirp connects to a given network using QEMU user networking mode.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#slirp DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#slirp}
  */
  readonly slirp?: { [key: string]: string };
  /**
  * InterfaceSRIOV connects to a given network by passing-through an SR-IOV PCI device via vfio.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#sriov DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#sriov}
  */
  readonly sriov?: { [key: string]: string };
  /**
  * State represents the requested operational state of the interface. The (only) value supported is 'absent', expressing a request to remove the interface.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#state DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#state}
  */
  readonly state?: string;
  /**
  * If specified, the virtual network interface address and its tag will be provided to the guest via config drive
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tag DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tag}
  */
  readonly tag?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfaces | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    acpi_index: cdktf.numberToTerraform(struct!.acpiIndex),
    binding: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBindingToTerraform(struct!.binding),
    boot_order: cdktf.numberToTerraform(struct!.bootOrder),
    bridge: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.bridge),
    dhcp_options: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsToTerraform(struct!.dhcpOptions),
    mac_address: cdktf.stringToTerraform(struct!.macAddress),
    macvtap: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.macvtap),
    masquerade: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.masquerade),
    model: cdktf.stringToTerraform(struct!.model),
    name: cdktf.stringToTerraform(struct!.name),
    passt: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.passt),
    pci_address: cdktf.stringToTerraform(struct!.pciAddress),
    ports: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPortsToTerraform, false)(struct!.ports),
    slirp: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.slirp),
    sriov: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.sriov),
    state: cdktf.stringToTerraform(struct!.state),
    tag: cdktf.stringToTerraform(struct!.tag),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfaces | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    acpi_index: {
      value: cdktf.numberToHclTerraform(struct!.acpiIndex),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    binding: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBindingToHclTerraform(struct!.binding),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBinding",
    },
    boot_order: {
      value: cdktf.numberToHclTerraform(struct!.bootOrder),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    bridge: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.bridge),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    dhcp_options: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsToHclTerraform(struct!.dhcpOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptions",
    },
    mac_address: {
      value: cdktf.stringToHclTerraform(struct!.macAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    macvtap: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.macvtap),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    masquerade: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.masquerade),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    model: {
      value: cdktf.stringToHclTerraform(struct!.model),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    passt: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.passt),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    pci_address: {
      value: cdktf.stringToHclTerraform(struct!.pciAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ports: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPortsToHclTerraform, false)(struct!.ports),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPortsList",
    },
    slirp: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.slirp),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    sriov: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.sriov),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    state: {
      value: cdktf.stringToHclTerraform(struct!.state),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tag: {
      value: cdktf.stringToHclTerraform(struct!.tag),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfaces | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._acpiIndex !== undefined) {
      hasAnyValues = true;
      internalValueResult.acpiIndex = this._acpiIndex;
    }
    if (this._binding?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.binding = this._binding?.internalValue;
    }
    if (this._bootOrder !== undefined) {
      hasAnyValues = true;
      internalValueResult.bootOrder = this._bootOrder;
    }
    if (this._bridge !== undefined) {
      hasAnyValues = true;
      internalValueResult.bridge = this._bridge;
    }
    if (this._dhcpOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dhcpOptions = this._dhcpOptions?.internalValue;
    }
    if (this._macAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.macAddress = this._macAddress;
    }
    if (this._macvtap !== undefined) {
      hasAnyValues = true;
      internalValueResult.macvtap = this._macvtap;
    }
    if (this._masquerade !== undefined) {
      hasAnyValues = true;
      internalValueResult.masquerade = this._masquerade;
    }
    if (this._model !== undefined) {
      hasAnyValues = true;
      internalValueResult.model = this._model;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._passt !== undefined) {
      hasAnyValues = true;
      internalValueResult.passt = this._passt;
    }
    if (this._pciAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.pciAddress = this._pciAddress;
    }
    if (this._ports?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ports = this._ports?.internalValue;
    }
    if (this._slirp !== undefined) {
      hasAnyValues = true;
      internalValueResult.slirp = this._slirp;
    }
    if (this._sriov !== undefined) {
      hasAnyValues = true;
      internalValueResult.sriov = this._sriov;
    }
    if (this._state !== undefined) {
      hasAnyValues = true;
      internalValueResult.state = this._state;
    }
    if (this._tag !== undefined) {
      hasAnyValues = true;
      internalValueResult.tag = this._tag;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfaces | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._acpiIndex = undefined;
      this._binding.internalValue = undefined;
      this._bootOrder = undefined;
      this._bridge = undefined;
      this._dhcpOptions.internalValue = undefined;
      this._macAddress = undefined;
      this._macvtap = undefined;
      this._masquerade = undefined;
      this._model = undefined;
      this._name = undefined;
      this._passt = undefined;
      this._pciAddress = undefined;
      this._ports.internalValue = undefined;
      this._slirp = undefined;
      this._sriov = undefined;
      this._state = undefined;
      this._tag = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._acpiIndex = value.acpiIndex;
      this._binding.internalValue = value.binding;
      this._bootOrder = value.bootOrder;
      this._bridge = value.bridge;
      this._dhcpOptions.internalValue = value.dhcpOptions;
      this._macAddress = value.macAddress;
      this._macvtap = value.macvtap;
      this._masquerade = value.masquerade;
      this._model = value.model;
      this._name = value.name;
      this._passt = value.passt;
      this._pciAddress = value.pciAddress;
      this._ports.internalValue = value.ports;
      this._slirp = value.slirp;
      this._sriov = value.sriov;
      this._state = value.state;
      this._tag = value.tag;
    }
  }

  // acpi_index - computed: false, optional: true, required: false
  private _acpiIndex?: number; 
  public get acpiIndex() {
    return this.getNumberAttribute('acpi_index');
  }
  public set acpiIndex(value: number) {
    this._acpiIndex = value;
  }
  public resetAcpiIndex() {
    this._acpiIndex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get acpiIndexInput() {
    return this._acpiIndex;
  }

  // binding - computed: false, optional: true, required: false
  private _binding = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBindingOutputReference(this, "binding");
  public get binding() {
    return this._binding;
  }
  public putBinding(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesBinding) {
    this._binding.internalValue = value;
  }
  public resetBinding() {
    this._binding.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bindingInput() {
    return this._binding.internalValue;
  }

  // boot_order - computed: false, optional: true, required: false
  private _bootOrder?: number; 
  public get bootOrder() {
    return this.getNumberAttribute('boot_order');
  }
  public set bootOrder(value: number) {
    this._bootOrder = value;
  }
  public resetBootOrder() {
    this._bootOrder = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bootOrderInput() {
    return this._bootOrder;
  }

  // bridge - computed: false, optional: true, required: false
  private _bridge?: { [key: string]: string }; 
  public get bridge() {
    return this.getStringMapAttribute('bridge');
  }
  public set bridge(value: { [key: string]: string }) {
    this._bridge = value;
  }
  public resetBridge() {
    this._bridge = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bridgeInput() {
    return this._bridge;
  }

  // dhcp_options - computed: false, optional: true, required: false
  private _dhcpOptions = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptionsOutputReference(this, "dhcp_options");
  public get dhcpOptions() {
    return this._dhcpOptions;
  }
  public putDhcpOptions(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesDhcpOptions) {
    this._dhcpOptions.internalValue = value;
  }
  public resetDhcpOptions() {
    this._dhcpOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dhcpOptionsInput() {
    return this._dhcpOptions.internalValue;
  }

  // mac_address - computed: false, optional: true, required: false
  private _macAddress?: string; 
  public get macAddress() {
    return this.getStringAttribute('mac_address');
  }
  public set macAddress(value: string) {
    this._macAddress = value;
  }
  public resetMacAddress() {
    this._macAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get macAddressInput() {
    return this._macAddress;
  }

  // macvtap - computed: false, optional: true, required: false
  private _macvtap?: { [key: string]: string }; 
  public get macvtap() {
    return this.getStringMapAttribute('macvtap');
  }
  public set macvtap(value: { [key: string]: string }) {
    this._macvtap = value;
  }
  public resetMacvtap() {
    this._macvtap = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get macvtapInput() {
    return this._macvtap;
  }

  // masquerade - computed: false, optional: true, required: false
  private _masquerade?: { [key: string]: string }; 
  public get masquerade() {
    return this.getStringMapAttribute('masquerade');
  }
  public set masquerade(value: { [key: string]: string }) {
    this._masquerade = value;
  }
  public resetMasquerade() {
    this._masquerade = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get masqueradeInput() {
    return this._masquerade;
  }

  // model - computed: false, optional: true, required: false
  private _model?: string; 
  public get model() {
    return this.getStringAttribute('model');
  }
  public set model(value: string) {
    this._model = value;
  }
  public resetModel() {
    this._model = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modelInput() {
    return this._model;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // passt - computed: false, optional: true, required: false
  private _passt?: { [key: string]: string }; 
  public get passt() {
    return this.getStringMapAttribute('passt');
  }
  public set passt(value: { [key: string]: string }) {
    this._passt = value;
  }
  public resetPasst() {
    this._passt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passtInput() {
    return this._passt;
  }

  // pci_address - computed: false, optional: true, required: false
  private _pciAddress?: string; 
  public get pciAddress() {
    return this.getStringAttribute('pci_address');
  }
  public set pciAddress(value: string) {
    this._pciAddress = value;
  }
  public resetPciAddress() {
    this._pciAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pciAddressInput() {
    return this._pciAddress;
  }

  // ports - computed: false, optional: true, required: false
  private _ports = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPortsList(this, "ports", false);
  public get ports() {
    return this._ports;
  }
  public putPorts(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesPorts[] | cdktf.IResolvable) {
    this._ports.internalValue = value;
  }
  public resetPorts() {
    this._ports.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portsInput() {
    return this._ports.internalValue;
  }

  // slirp - computed: false, optional: true, required: false
  private _slirp?: { [key: string]: string }; 
  public get slirp() {
    return this.getStringMapAttribute('slirp');
  }
  public set slirp(value: { [key: string]: string }) {
    this._slirp = value;
  }
  public resetSlirp() {
    this._slirp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get slirpInput() {
    return this._slirp;
  }

  // sriov - computed: false, optional: true, required: false
  private _sriov?: { [key: string]: string }; 
  public get sriov() {
    return this.getStringMapAttribute('sriov');
  }
  public set sriov(value: { [key: string]: string }) {
    this._sriov = value;
  }
  public resetSriov() {
    this._sriov = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sriovInput() {
    return this._sriov;
  }

  // state - computed: false, optional: true, required: false
  private _state?: string; 
  public get state() {
    return this.getStringAttribute('state');
  }
  public set state(value: string) {
    this._state = value;
  }
  public resetState() {
    this._state = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stateInput() {
    return this._state;
  }

  // tag - computed: false, optional: true, required: false
  private _tag?: string; 
  public get tag() {
    return this.getStringAttribute('tag');
  }
  public set tag(value: string) {
    this._tag = value;
  }
  public resetTag() {
    this._tag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tagInput() {
    return this._tag;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfaces[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSound {
  /**
  * We only support ich9 or ac97. If SoundDevice is not set: No sound card is emulated. If SoundDevice is set but Model is not: ich9
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#model DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#model}
  */
  readonly model?: string;
  /**
  * User's defined name for this sound device
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSoundToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSound | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    model: cdktf.stringToTerraform(struct!.model),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSoundToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSound | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    model: {
      value: cdktf.stringToHclTerraform(struct!.model),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSoundOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSound | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._model !== undefined) {
      hasAnyValues = true;
      internalValueResult.model = this._model;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSound | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._model = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._model = value.model;
      this._name = value.name;
    }
  }

  // model - computed: false, optional: true, required: false
  private _model?: string; 
  public get model() {
    return this.getStringAttribute('model');
  }
  public set model(value: string) {
    this._model = value;
  }
  public resetModel() {
    this._model = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modelInput() {
    return this._model;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpm {
  /**
  * Persistent indicates the state of the TPM device should be kept accross reboots Defaults to false
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#persistent DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#persistent}
  */
  readonly persistent?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpmToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    persistent: cdktf.booleanToTerraform(struct!.persistent),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpmToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    persistent: {
      value: cdktf.booleanToHclTerraform(struct!.persistent),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._persistent !== undefined) {
      hasAnyValues = true;
      internalValueResult.persistent = this._persistent;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._persistent = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._persistent = value.persistent;
    }
  }

  // persistent - computed: false, optional: true, required: false
  private _persistent?: boolean | cdktf.IResolvable; 
  public get persistent() {
    return this.getBooleanAttribute('persistent');
  }
  public set persistent(value: boolean | cdktf.IResolvable) {
    this._persistent = value;
  }
  public resetPersistent() {
    this._persistent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get persistentInput() {
    return this._persistent;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300Esb {
  /**
  * The action to take. Valid values are poweroff, reset, shutdown. Defaults to reset.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#action DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#action}
  */
  readonly action?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300EsbToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300Esb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300EsbToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300Esb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300EsbOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300Esb | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300Esb | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
    }
  }

  // action - computed: false, optional: true, required: false
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  public resetAction() {
    this._action = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdog {
  /**
  * i6300esb watchdog device.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#i6300esb DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#i6300esb}
  */
  readonly i6300Esb?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300Esb;
  /**
  * Name of the watchdog.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdog | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    i6300esb: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300EsbToTerraform(struct!.i6300Esb),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdog | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    i6300esb: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300EsbToHclTerraform(struct!.i6300Esb),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300Esb",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdog | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._i6300Esb?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.i6300Esb = this._i6300Esb?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdog | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._i6300Esb.internalValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._i6300Esb.internalValue = value.i6300Esb;
      this._name = value.name;
    }
  }

  // i6300esb - computed: false, optional: true, required: false
  private _i6300Esb = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300EsbOutputReference(this, "i6300esb");
  public get i6300Esb() {
    return this._i6300Esb;
  }
  public putI6300Esb(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogI6300Esb) {
    this._i6300Esb.internalValue = value;
  }
  public resetI6300Esb() {
    this._i6300Esb.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get i6300EsbInput() {
    return this._i6300Esb.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevices {
  /**
  * Whether to attach the default graphics device or not. VNC will not be available if set to false. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#autoattach_graphics_device DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#autoattach_graphics_device}
  */
  readonly autoattachGraphicsDevice?: boolean | cdktf.IResolvable;
  /**
  * Whether to attach an Input Device. Defaults to false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#autoattach_input_device DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#autoattach_input_device}
  */
  readonly autoattachInputDevice?: boolean | cdktf.IResolvable;
  /**
  * Whether to attach the Memory balloon device with default period. Period can be adjusted in virt-config. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#autoattach_mem_balloon DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#autoattach_mem_balloon}
  */
  readonly autoattachMemBalloon?: boolean | cdktf.IResolvable;
  /**
  * Whether to attach a pod network interface. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#autoattach_pod_interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#autoattach_pod_interface}
  */
  readonly autoattachPodInterface?: boolean | cdktf.IResolvable;
  /**
  * Whether to attach the default virtio-serial console or not. Serial console access will not be available if set to false. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#autoattach_serial_console DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#autoattach_serial_console}
  */
  readonly autoattachSerialConsole?: boolean | cdktf.IResolvable;
  /**
  * Whether to attach the VSOCK CID to the VM or not. VSOCK access will be available if set to true. Defaults to false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#autoattach_vsock DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#autoattach_vsock}
  */
  readonly autoattachVsock?: boolean | cdktf.IResolvable;
  /**
  * Whether or not to enable virtio multi-queue for block devices. Defaults to false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#block_multi_queue DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#block_multi_queue}
  */
  readonly blockMultiQueue?: boolean | cdktf.IResolvable;
  /**
  * To configure and access client devices such as redirecting USB
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#client_passthrough DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#client_passthrough}
  */
  readonly clientPassthrough?: { [key: string]: string };
  /**
  * DisableHotplug disabled the ability to hotplug disks.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#disable_hotplug DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#disable_hotplug}
  */
  readonly disableHotplug?: boolean | cdktf.IResolvable;
  /**
  * Disks describes disks, cdroms and luns which are connected to the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#disks DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#disks}
  */
  readonly disks?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisks[] | cdktf.IResolvable;
  /**
  * DownwardMetrics creates a virtio serials for exposing the downward metrics to the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#downward_metrics DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#downward_metrics}
  */
  readonly downwardMetrics?: { [key: string]: string };
  /**
  * Filesystems describes filesystem which is connected to the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#filesystems DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#filesystems}
  */
  readonly filesystems?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystems[] | cdktf.IResolvable;
  /**
  * Whether to attach a GPU device to the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#gpus DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#gpus}
  */
  readonly gpus?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpus[] | cdktf.IResolvable;
  /**
  * Whether to attach a host device to the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#host_devices DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#host_devices}
  */
  readonly hostDevices?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevices[] | cdktf.IResolvable;
  /**
  * Inputs describe input devices
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#inputs DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#inputs}
  */
  readonly inputs?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputs[] | cdktf.IResolvable;
  /**
  * Interfaces describe network interfaces which are added to the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#interfaces DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#interfaces}
  */
  readonly interfaces?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfaces[] | cdktf.IResolvable;
  /**
  * Whether to log the auto-attached default serial console or not. Serial console logs will be collect to a file and then streamed from a named 'guest-console-log'. Not relevant if autoattachSerialConsole is disabled. Defaults to cluster wide setting on VirtualMachineOptions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#log_serial_console DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#log_serial_console}
  */
  readonly logSerialConsole?: boolean | cdktf.IResolvable;
  /**
  * If specified, virtual network interfaces configured with a virtio bus will also enable the vhost multiqueue feature for network devices. The number of queues created depends on additional factors of the VirtualMachineInstance, like the number of guest CPUs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#network_interface_multiqueue DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#network_interface_multiqueue}
  */
  readonly networkInterfaceMultiqueue?: boolean | cdktf.IResolvable;
  /**
  * Whether to have random number generator from host
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#rng DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#rng}
  */
  readonly rng?: { [key: string]: string };
  /**
  * Whether to emulate a sound device.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#sound DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#sound}
  */
  readonly sound?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSound;
  /**
  * Whether to emulate a TPM device.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tpm DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tpm}
  */
  readonly tpm?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpm;
  /**
  * Fall back to legacy virtio 0.9 support if virtio bus is selected on devices. This is helpful for old machines like CentOS6 or RHEL6 which do not understand virtio_non_transitional (virtio 1.0).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#use_virtio_transitional DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#use_virtio_transitional}
  */
  readonly useVirtioTransitional?: boolean | cdktf.IResolvable;
  /**
  * Watchdog describes a watchdog device which can be added to the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#watchdog DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#watchdog}
  */
  readonly watchdog?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdog;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevices | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    autoattach_graphics_device: cdktf.booleanToTerraform(struct!.autoattachGraphicsDevice),
    autoattach_input_device: cdktf.booleanToTerraform(struct!.autoattachInputDevice),
    autoattach_mem_balloon: cdktf.booleanToTerraform(struct!.autoattachMemBalloon),
    autoattach_pod_interface: cdktf.booleanToTerraform(struct!.autoattachPodInterface),
    autoattach_serial_console: cdktf.booleanToTerraform(struct!.autoattachSerialConsole),
    autoattach_vsock: cdktf.booleanToTerraform(struct!.autoattachVsock),
    block_multi_queue: cdktf.booleanToTerraform(struct!.blockMultiQueue),
    client_passthrough: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.clientPassthrough),
    disable_hotplug: cdktf.booleanToTerraform(struct!.disableHotplug),
    disks: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksToTerraform, false)(struct!.disks),
    downward_metrics: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.downwardMetrics),
    filesystems: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystemsToTerraform, false)(struct!.filesystems),
    gpus: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusToTerraform, false)(struct!.gpus),
    host_devices: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevicesToTerraform, false)(struct!.hostDevices),
    inputs: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputsToTerraform, false)(struct!.inputs),
    interfaces: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesToTerraform, false)(struct!.interfaces),
    log_serial_console: cdktf.booleanToTerraform(struct!.logSerialConsole),
    network_interface_multiqueue: cdktf.booleanToTerraform(struct!.networkInterfaceMultiqueue),
    rng: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.rng),
    sound: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSoundToTerraform(struct!.sound),
    tpm: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpmToTerraform(struct!.tpm),
    use_virtio_transitional: cdktf.booleanToTerraform(struct!.useVirtioTransitional),
    watchdog: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogToTerraform(struct!.watchdog),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevices | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    autoattach_graphics_device: {
      value: cdktf.booleanToHclTerraform(struct!.autoattachGraphicsDevice),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    autoattach_input_device: {
      value: cdktf.booleanToHclTerraform(struct!.autoattachInputDevice),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    autoattach_mem_balloon: {
      value: cdktf.booleanToHclTerraform(struct!.autoattachMemBalloon),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    autoattach_pod_interface: {
      value: cdktf.booleanToHclTerraform(struct!.autoattachPodInterface),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    autoattach_serial_console: {
      value: cdktf.booleanToHclTerraform(struct!.autoattachSerialConsole),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    autoattach_vsock: {
      value: cdktf.booleanToHclTerraform(struct!.autoattachVsock),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    block_multi_queue: {
      value: cdktf.booleanToHclTerraform(struct!.blockMultiQueue),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    client_passthrough: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.clientPassthrough),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    disable_hotplug: {
      value: cdktf.booleanToHclTerraform(struct!.disableHotplug),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    disks: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksToHclTerraform, false)(struct!.disks),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksList",
    },
    downward_metrics: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.downwardMetrics),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    filesystems: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystemsToHclTerraform, false)(struct!.filesystems),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystemsList",
    },
    gpus: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusToHclTerraform, false)(struct!.gpus),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusList",
    },
    host_devices: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevicesToHclTerraform, false)(struct!.hostDevices),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevicesList",
    },
    inputs: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputsToHclTerraform, false)(struct!.inputs),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputsList",
    },
    interfaces: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesToHclTerraform, false)(struct!.interfaces),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesList",
    },
    log_serial_console: {
      value: cdktf.booleanToHclTerraform(struct!.logSerialConsole),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    network_interface_multiqueue: {
      value: cdktf.booleanToHclTerraform(struct!.networkInterfaceMultiqueue),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    rng: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.rng),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    sound: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSoundToHclTerraform(struct!.sound),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSound",
    },
    tpm: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpmToHclTerraform(struct!.tpm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpm",
    },
    use_virtio_transitional: {
      value: cdktf.booleanToHclTerraform(struct!.useVirtioTransitional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    watchdog: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogToHclTerraform(struct!.watchdog),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdog",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevices | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._autoattachGraphicsDevice !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoattachGraphicsDevice = this._autoattachGraphicsDevice;
    }
    if (this._autoattachInputDevice !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoattachInputDevice = this._autoattachInputDevice;
    }
    if (this._autoattachMemBalloon !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoattachMemBalloon = this._autoattachMemBalloon;
    }
    if (this._autoattachPodInterface !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoattachPodInterface = this._autoattachPodInterface;
    }
    if (this._autoattachSerialConsole !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoattachSerialConsole = this._autoattachSerialConsole;
    }
    if (this._autoattachVsock !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoattachVsock = this._autoattachVsock;
    }
    if (this._blockMultiQueue !== undefined) {
      hasAnyValues = true;
      internalValueResult.blockMultiQueue = this._blockMultiQueue;
    }
    if (this._clientPassthrough !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientPassthrough = this._clientPassthrough;
    }
    if (this._disableHotplug !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableHotplug = this._disableHotplug;
    }
    if (this._disks?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.disks = this._disks?.internalValue;
    }
    if (this._downwardMetrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.downwardMetrics = this._downwardMetrics;
    }
    if (this._filesystems?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.filesystems = this._filesystems?.internalValue;
    }
    if (this._gpus?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.gpus = this._gpus?.internalValue;
    }
    if (this._hostDevices?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostDevices = this._hostDevices?.internalValue;
    }
    if (this._inputs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.inputs = this._inputs?.internalValue;
    }
    if (this._interfaces?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.interfaces = this._interfaces?.internalValue;
    }
    if (this._logSerialConsole !== undefined) {
      hasAnyValues = true;
      internalValueResult.logSerialConsole = this._logSerialConsole;
    }
    if (this._networkInterfaceMultiqueue !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkInterfaceMultiqueue = this._networkInterfaceMultiqueue;
    }
    if (this._rng !== undefined) {
      hasAnyValues = true;
      internalValueResult.rng = this._rng;
    }
    if (this._sound?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sound = this._sound?.internalValue;
    }
    if (this._tpm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tpm = this._tpm?.internalValue;
    }
    if (this._useVirtioTransitional !== undefined) {
      hasAnyValues = true;
      internalValueResult.useVirtioTransitional = this._useVirtioTransitional;
    }
    if (this._watchdog?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.watchdog = this._watchdog?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevices | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._autoattachGraphicsDevice = undefined;
      this._autoattachInputDevice = undefined;
      this._autoattachMemBalloon = undefined;
      this._autoattachPodInterface = undefined;
      this._autoattachSerialConsole = undefined;
      this._autoattachVsock = undefined;
      this._blockMultiQueue = undefined;
      this._clientPassthrough = undefined;
      this._disableHotplug = undefined;
      this._disks.internalValue = undefined;
      this._downwardMetrics = undefined;
      this._filesystems.internalValue = undefined;
      this._gpus.internalValue = undefined;
      this._hostDevices.internalValue = undefined;
      this._inputs.internalValue = undefined;
      this._interfaces.internalValue = undefined;
      this._logSerialConsole = undefined;
      this._networkInterfaceMultiqueue = undefined;
      this._rng = undefined;
      this._sound.internalValue = undefined;
      this._tpm.internalValue = undefined;
      this._useVirtioTransitional = undefined;
      this._watchdog.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._autoattachGraphicsDevice = value.autoattachGraphicsDevice;
      this._autoattachInputDevice = value.autoattachInputDevice;
      this._autoattachMemBalloon = value.autoattachMemBalloon;
      this._autoattachPodInterface = value.autoattachPodInterface;
      this._autoattachSerialConsole = value.autoattachSerialConsole;
      this._autoattachVsock = value.autoattachVsock;
      this._blockMultiQueue = value.blockMultiQueue;
      this._clientPassthrough = value.clientPassthrough;
      this._disableHotplug = value.disableHotplug;
      this._disks.internalValue = value.disks;
      this._downwardMetrics = value.downwardMetrics;
      this._filesystems.internalValue = value.filesystems;
      this._gpus.internalValue = value.gpus;
      this._hostDevices.internalValue = value.hostDevices;
      this._inputs.internalValue = value.inputs;
      this._interfaces.internalValue = value.interfaces;
      this._logSerialConsole = value.logSerialConsole;
      this._networkInterfaceMultiqueue = value.networkInterfaceMultiqueue;
      this._rng = value.rng;
      this._sound.internalValue = value.sound;
      this._tpm.internalValue = value.tpm;
      this._useVirtioTransitional = value.useVirtioTransitional;
      this._watchdog.internalValue = value.watchdog;
    }
  }

  // autoattach_graphics_device - computed: false, optional: true, required: false
  private _autoattachGraphicsDevice?: boolean | cdktf.IResolvable; 
  public get autoattachGraphicsDevice() {
    return this.getBooleanAttribute('autoattach_graphics_device');
  }
  public set autoattachGraphicsDevice(value: boolean | cdktf.IResolvable) {
    this._autoattachGraphicsDevice = value;
  }
  public resetAutoattachGraphicsDevice() {
    this._autoattachGraphicsDevice = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoattachGraphicsDeviceInput() {
    return this._autoattachGraphicsDevice;
  }

  // autoattach_input_device - computed: false, optional: true, required: false
  private _autoattachInputDevice?: boolean | cdktf.IResolvable; 
  public get autoattachInputDevice() {
    return this.getBooleanAttribute('autoattach_input_device');
  }
  public set autoattachInputDevice(value: boolean | cdktf.IResolvable) {
    this._autoattachInputDevice = value;
  }
  public resetAutoattachInputDevice() {
    this._autoattachInputDevice = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoattachInputDeviceInput() {
    return this._autoattachInputDevice;
  }

  // autoattach_mem_balloon - computed: false, optional: true, required: false
  private _autoattachMemBalloon?: boolean | cdktf.IResolvable; 
  public get autoattachMemBalloon() {
    return this.getBooleanAttribute('autoattach_mem_balloon');
  }
  public set autoattachMemBalloon(value: boolean | cdktf.IResolvable) {
    this._autoattachMemBalloon = value;
  }
  public resetAutoattachMemBalloon() {
    this._autoattachMemBalloon = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoattachMemBalloonInput() {
    return this._autoattachMemBalloon;
  }

  // autoattach_pod_interface - computed: false, optional: true, required: false
  private _autoattachPodInterface?: boolean | cdktf.IResolvable; 
  public get autoattachPodInterface() {
    return this.getBooleanAttribute('autoattach_pod_interface');
  }
  public set autoattachPodInterface(value: boolean | cdktf.IResolvable) {
    this._autoattachPodInterface = value;
  }
  public resetAutoattachPodInterface() {
    this._autoattachPodInterface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoattachPodInterfaceInput() {
    return this._autoattachPodInterface;
  }

  // autoattach_serial_console - computed: false, optional: true, required: false
  private _autoattachSerialConsole?: boolean | cdktf.IResolvable; 
  public get autoattachSerialConsole() {
    return this.getBooleanAttribute('autoattach_serial_console');
  }
  public set autoattachSerialConsole(value: boolean | cdktf.IResolvable) {
    this._autoattachSerialConsole = value;
  }
  public resetAutoattachSerialConsole() {
    this._autoattachSerialConsole = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoattachSerialConsoleInput() {
    return this._autoattachSerialConsole;
  }

  // autoattach_vsock - computed: false, optional: true, required: false
  private _autoattachVsock?: boolean | cdktf.IResolvable; 
  public get autoattachVsock() {
    return this.getBooleanAttribute('autoattach_vsock');
  }
  public set autoattachVsock(value: boolean | cdktf.IResolvable) {
    this._autoattachVsock = value;
  }
  public resetAutoattachVsock() {
    this._autoattachVsock = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoattachVsockInput() {
    return this._autoattachVsock;
  }

  // block_multi_queue - computed: false, optional: true, required: false
  private _blockMultiQueue?: boolean | cdktf.IResolvable; 
  public get blockMultiQueue() {
    return this.getBooleanAttribute('block_multi_queue');
  }
  public set blockMultiQueue(value: boolean | cdktf.IResolvable) {
    this._blockMultiQueue = value;
  }
  public resetBlockMultiQueue() {
    this._blockMultiQueue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blockMultiQueueInput() {
    return this._blockMultiQueue;
  }

  // client_passthrough - computed: false, optional: true, required: false
  private _clientPassthrough?: { [key: string]: string }; 
  public get clientPassthrough() {
    return this.getStringMapAttribute('client_passthrough');
  }
  public set clientPassthrough(value: { [key: string]: string }) {
    this._clientPassthrough = value;
  }
  public resetClientPassthrough() {
    this._clientPassthrough = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientPassthroughInput() {
    return this._clientPassthrough;
  }

  // disable_hotplug - computed: false, optional: true, required: false
  private _disableHotplug?: boolean | cdktf.IResolvable; 
  public get disableHotplug() {
    return this.getBooleanAttribute('disable_hotplug');
  }
  public set disableHotplug(value: boolean | cdktf.IResolvable) {
    this._disableHotplug = value;
  }
  public resetDisableHotplug() {
    this._disableHotplug = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableHotplugInput() {
    return this._disableHotplug;
  }

  // disks - computed: false, optional: true, required: false
  private _disks = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisksList(this, "disks", false);
  public get disks() {
    return this._disks;
  }
  public putDisks(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesDisks[] | cdktf.IResolvable) {
    this._disks.internalValue = value;
  }
  public resetDisks() {
    this._disks.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disksInput() {
    return this._disks.internalValue;
  }

  // downward_metrics - computed: false, optional: true, required: false
  private _downwardMetrics?: { [key: string]: string }; 
  public get downwardMetrics() {
    return this.getStringMapAttribute('downward_metrics');
  }
  public set downwardMetrics(value: { [key: string]: string }) {
    this._downwardMetrics = value;
  }
  public resetDownwardMetrics() {
    this._downwardMetrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get downwardMetricsInput() {
    return this._downwardMetrics;
  }

  // filesystems - computed: false, optional: true, required: false
  private _filesystems = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystemsList(this, "filesystems", false);
  public get filesystems() {
    return this._filesystems;
  }
  public putFilesystems(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesFilesystems[] | cdktf.IResolvable) {
    this._filesystems.internalValue = value;
  }
  public resetFilesystems() {
    this._filesystems.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filesystemsInput() {
    return this._filesystems.internalValue;
  }

  // gpus - computed: false, optional: true, required: false
  private _gpus = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpusList(this, "gpus", false);
  public get gpus() {
    return this._gpus;
  }
  public putGpus(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesGpus[] | cdktf.IResolvable) {
    this._gpus.internalValue = value;
  }
  public resetGpus() {
    this._gpus.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gpusInput() {
    return this._gpus.internalValue;
  }

  // host_devices - computed: false, optional: true, required: false
  private _hostDevices = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevicesList(this, "host_devices", false);
  public get hostDevices() {
    return this._hostDevices;
  }
  public putHostDevices(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesHostDevices[] | cdktf.IResolvable) {
    this._hostDevices.internalValue = value;
  }
  public resetHostDevices() {
    this._hostDevices.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostDevicesInput() {
    return this._hostDevices.internalValue;
  }

  // inputs - computed: false, optional: true, required: false
  private _inputs = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputsList(this, "inputs", false);
  public get inputs() {
    return this._inputs;
  }
  public putInputs(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInputs[] | cdktf.IResolvable) {
    this._inputs.internalValue = value;
  }
  public resetInputs() {
    this._inputs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get inputsInput() {
    return this._inputs.internalValue;
  }

  // interfaces - computed: false, optional: true, required: false
  private _interfaces = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfacesList(this, "interfaces", false);
  public get interfaces() {
    return this._interfaces;
  }
  public putInterfaces(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesInterfaces[] | cdktf.IResolvable) {
    this._interfaces.internalValue = value;
  }
  public resetInterfaces() {
    this._interfaces.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get interfacesInput() {
    return this._interfaces.internalValue;
  }

  // log_serial_console - computed: false, optional: true, required: false
  private _logSerialConsole?: boolean | cdktf.IResolvable; 
  public get logSerialConsole() {
    return this.getBooleanAttribute('log_serial_console');
  }
  public set logSerialConsole(value: boolean | cdktf.IResolvable) {
    this._logSerialConsole = value;
  }
  public resetLogSerialConsole() {
    this._logSerialConsole = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logSerialConsoleInput() {
    return this._logSerialConsole;
  }

  // network_interface_multiqueue - computed: false, optional: true, required: false
  private _networkInterfaceMultiqueue?: boolean | cdktf.IResolvable; 
  public get networkInterfaceMultiqueue() {
    return this.getBooleanAttribute('network_interface_multiqueue');
  }
  public set networkInterfaceMultiqueue(value: boolean | cdktf.IResolvable) {
    this._networkInterfaceMultiqueue = value;
  }
  public resetNetworkInterfaceMultiqueue() {
    this._networkInterfaceMultiqueue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkInterfaceMultiqueueInput() {
    return this._networkInterfaceMultiqueue;
  }

  // rng - computed: false, optional: true, required: false
  private _rng?: { [key: string]: string }; 
  public get rng() {
    return this.getStringMapAttribute('rng');
  }
  public set rng(value: { [key: string]: string }) {
    this._rng = value;
  }
  public resetRng() {
    this._rng = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rngInput() {
    return this._rng;
  }

  // sound - computed: false, optional: true, required: false
  private _sound = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSoundOutputReference(this, "sound");
  public get sound() {
    return this._sound;
  }
  public putSound(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesSound) {
    this._sound.internalValue = value;
  }
  public resetSound() {
    this._sound.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get soundInput() {
    return this._sound.internalValue;
  }

  // tpm - computed: false, optional: true, required: false
  private _tpm = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpmOutputReference(this, "tpm");
  public get tpm() {
    return this._tpm;
  }
  public putTpm(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesTpm) {
    this._tpm.internalValue = value;
  }
  public resetTpm() {
    this._tpm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tpmInput() {
    return this._tpm.internalValue;
  }

  // use_virtio_transitional - computed: false, optional: true, required: false
  private _useVirtioTransitional?: boolean | cdktf.IResolvable; 
  public get useVirtioTransitional() {
    return this.getBooleanAttribute('use_virtio_transitional');
  }
  public set useVirtioTransitional(value: boolean | cdktf.IResolvable) {
    this._useVirtioTransitional = value;
  }
  public resetUseVirtioTransitional() {
    this._useVirtioTransitional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useVirtioTransitionalInput() {
    return this._useVirtioTransitional;
  }

  // watchdog - computed: false, optional: true, required: false
  private _watchdog = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdogOutputReference(this, "watchdog");
  public get watchdog() {
    return this._watchdog;
  }
  public putWatchdog(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesWatchdog) {
    this._watchdog.internalValue = value;
  }
  public resetWatchdog() {
    this._watchdog.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get watchdogInput() {
    return this._watchdog.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpi {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpiToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpiToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApic {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * EndOfInterrupt enables the end of interrupt notification in the guest. Defaults to false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#end_of_interrupt DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#end_of_interrupt}
  */
  readonly endOfInterrupt?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApicToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApic | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    end_of_interrupt: cdktf.booleanToTerraform(struct!.endOfInterrupt),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApicToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApic | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    end_of_interrupt: {
      value: cdktf.booleanToHclTerraform(struct!.endOfInterrupt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApicOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApic | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._endOfInterrupt !== undefined) {
      hasAnyValues = true;
      internalValueResult.endOfInterrupt = this._endOfInterrupt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApic | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
      this._endOfInterrupt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
      this._endOfInterrupt = value.endOfInterrupt;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // end_of_interrupt - computed: false, optional: true, required: false
  private _endOfInterrupt?: boolean | cdktf.IResolvable; 
  public get endOfInterrupt() {
    return this.getBooleanAttribute('end_of_interrupt');
  }
  public set endOfInterrupt(value: boolean | cdktf.IResolvable) {
    this._endOfInterrupt = value;
  }
  public resetEndOfInterrupt() {
    this._endOfInterrupt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endOfInterruptInput() {
    return this._endOfInterrupt;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcs {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcsToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcsToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequencies {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequenciesToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequencies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequenciesToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequencies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequenciesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequencies | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequencies | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpi {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpiToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpiToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenment {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenmentToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenment | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenmentToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenment | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenmentOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenment | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenment | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxed {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxedToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxed | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxedToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxed | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxed | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxed | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReset {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervResetToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReset | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervResetToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReset | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervResetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReset | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReset | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntime {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntimeToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntimeToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntimeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntime | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntime | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocks {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Retries indicates the number of retries. Must be a value greater or equal 4096. Defaults to 4096.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#spinlocks DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#spinlocks}
  */
  readonly spinlocks?: number;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocksToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    spinlocks: cdktf.numberToTerraform(struct!.spinlocks),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocksToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    spinlocks: {
      value: cdktf.numberToHclTerraform(struct!.spinlocks),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocksOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocks | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._spinlocks !== undefined) {
      hasAnyValues = true;
      internalValueResult.spinlocks = this._spinlocks;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocks | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
      this._spinlocks = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
      this._spinlocks = value.spinlocks;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // spinlocks - computed: false, optional: true, required: false
  private _spinlocks?: number; 
  public get spinlocks() {
    return this.getNumberAttribute('spinlocks');
  }
  public set spinlocks(value: number) {
    this._spinlocks = value;
  }
  public resetSpinlocks() {
    this._spinlocks = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get spinlocksInput() {
    return this._spinlocks;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynic {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynicToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynic | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynicToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynic | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynicOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynic | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynic | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirect {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirectToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirect | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirectToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirect | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirectOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirect | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirect | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimer {
  /**
  * Represents if a feature is enabled or disabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#direct DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#direct}
  */
  readonly direct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirect;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    direct: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirectToTerraform(struct!.direct),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    direct: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirectToHclTerraform(struct!.direct),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirect",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._direct?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.direct = this._direct?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._direct.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._direct.internalValue = value.direct;
      this._enabled = value.enabled;
    }
  }

  // direct - computed: false, optional: true, required: false
  private _direct = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirectOutputReference(this, "direct");
  public get direct() {
    return this._direct;
  }
  public putDirect(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerDirect) {
    this._direct.internalValue = value;
  }
  public resetDirect() {
    this._direct.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directInput() {
    return this._direct.internalValue;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflush {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflushToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflush | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflushToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflush | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflushOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflush | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflush | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapic {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapicToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapic | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapicToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapic | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapicOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapic | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapic | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendorid {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * VendorID sets the hypervisor vendor id, visible to the vmi. String up to twelve characters.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#vendorid DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#vendorid}
  */
  readonly vendorid?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendoridToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendorid | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    vendorid: cdktf.stringToTerraform(struct!.vendorid),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendoridToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendorid | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    vendorid: {
      value: cdktf.stringToHclTerraform(struct!.vendorid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendoridOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendorid | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._vendorid !== undefined) {
      hasAnyValues = true;
      internalValueResult.vendorid = this._vendorid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendorid | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
      this._vendorid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
      this._vendorid = value.vendorid;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // vendorid - computed: false, optional: true, required: false
  private _vendorid?: string; 
  public get vendorid() {
    return this.getStringAttribute('vendorid');
  }
  public set vendorid(value: string) {
    this._vendorid = value;
  }
  public resetVendorid() {
    this._vendorid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vendoridInput() {
    return this._vendorid;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindex {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindexToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindex | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindexToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindex | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindexOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindex | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindex | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHyperv {
  /**
  * EVMCS Speeds up L2 vmexits, but disables other virtualization features. Requires vapic. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#evmcs DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#evmcs}
  */
  readonly evmcs?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcs;
  /**
  * Frequencies improves the TSC clock source handling for Hyper-V on KVM. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#frequencies DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#frequencies}
  */
  readonly frequencies?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequencies;
  /**
  * IPI improves performances in overcommited environments. Requires vpindex. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#ipi DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#ipi}
  */
  readonly ipi?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpi;
  /**
  * Reenlightenment enables the notifications on TSC frequency changes. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#reenlightenment DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#reenlightenment}
  */
  readonly reenlightenment?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenment;
  /**
  * Relaxed instructs the guest OS to disable watchdog timeouts. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#relaxed DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#relaxed}
  */
  readonly relaxed?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxed;
  /**
  * Reset enables Hyperv reboot/reset for the vmi. Requires synic. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#reset DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#reset}
  */
  readonly reset?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReset;
  /**
  * Runtime improves the time accounting to improve scheduling in the guest. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#runtime DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#runtime}
  */
  readonly runtime?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntime;
  /**
  * Spinlocks allows to configure the spinlock retry attempts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#spinlocks DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#spinlocks}
  */
  readonly spinlocks?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocks;
  /**
  * SyNIC enables the Synthetic Interrupt Controller. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#synic DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#synic}
  */
  readonly synic?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynic;
  /**
  * SyNICTimer enables Synthetic Interrupt Controller Timers, reducing CPU load. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#synictimer DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#synictimer}
  */
  readonly synictimer?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimer;
  /**
  * TLBFlush improves performances in overcommited environments. Requires vpindex. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tlbflush DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tlbflush}
  */
  readonly tlbflush?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflush;
  /**
  * VAPIC improves the paravirtualized handling of interrupts. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#vapic DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#vapic}
  */
  readonly vapic?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapic;
  /**
  * VendorID allows setting the hypervisor vendor id. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#vendorid DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#vendorid}
  */
  readonly vendorid?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendorid;
  /**
  * VPIndex enables the Virtual Processor Index to help windows identifying virtual processors. Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#vpindex DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#vpindex}
  */
  readonly vpindex?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindex;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHyperv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    evmcs: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcsToTerraform(struct!.evmcs),
    frequencies: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequenciesToTerraform(struct!.frequencies),
    ipi: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpiToTerraform(struct!.ipi),
    reenlightenment: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenmentToTerraform(struct!.reenlightenment),
    relaxed: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxedToTerraform(struct!.relaxed),
    reset: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervResetToTerraform(struct!.reset),
    runtime: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntimeToTerraform(struct!.runtime),
    spinlocks: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocksToTerraform(struct!.spinlocks),
    synic: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynicToTerraform(struct!.synic),
    synictimer: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerToTerraform(struct!.synictimer),
    tlbflush: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflushToTerraform(struct!.tlbflush),
    vapic: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapicToTerraform(struct!.vapic),
    vendorid: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendoridToTerraform(struct!.vendorid),
    vpindex: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindexToTerraform(struct!.vpindex),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHyperv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    evmcs: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcsToHclTerraform(struct!.evmcs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcs",
    },
    frequencies: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequenciesToHclTerraform(struct!.frequencies),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequencies",
    },
    ipi: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpiToHclTerraform(struct!.ipi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpi",
    },
    reenlightenment: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenmentToHclTerraform(struct!.reenlightenment),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenment",
    },
    relaxed: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxedToHclTerraform(struct!.relaxed),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxed",
    },
    reset: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervResetToHclTerraform(struct!.reset),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReset",
    },
    runtime: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntimeToHclTerraform(struct!.runtime),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntime",
    },
    spinlocks: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocksToHclTerraform(struct!.spinlocks),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocks",
    },
    synic: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynicToHclTerraform(struct!.synic),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynic",
    },
    synictimer: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerToHclTerraform(struct!.synictimer),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimer",
    },
    tlbflush: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflushToHclTerraform(struct!.tlbflush),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflush",
    },
    vapic: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapicToHclTerraform(struct!.vapic),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapic",
    },
    vendorid: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendoridToHclTerraform(struct!.vendorid),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendorid",
    },
    vpindex: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindexToHclTerraform(struct!.vpindex),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindex",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHyperv | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._evmcs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.evmcs = this._evmcs?.internalValue;
    }
    if (this._frequencies?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.frequencies = this._frequencies?.internalValue;
    }
    if (this._ipi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipi = this._ipi?.internalValue;
    }
    if (this._reenlightenment?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.reenlightenment = this._reenlightenment?.internalValue;
    }
    if (this._relaxed?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.relaxed = this._relaxed?.internalValue;
    }
    if (this._reset?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.reset = this._reset?.internalValue;
    }
    if (this._runtime?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.runtime = this._runtime?.internalValue;
    }
    if (this._spinlocks?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spinlocks = this._spinlocks?.internalValue;
    }
    if (this._synic?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.synic = this._synic?.internalValue;
    }
    if (this._synictimer?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.synictimer = this._synictimer?.internalValue;
    }
    if (this._tlbflush?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlbflush = this._tlbflush?.internalValue;
    }
    if (this._vapic?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vapic = this._vapic?.internalValue;
    }
    if (this._vendorid?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vendorid = this._vendorid?.internalValue;
    }
    if (this._vpindex?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vpindex = this._vpindex?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHyperv | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._evmcs.internalValue = undefined;
      this._frequencies.internalValue = undefined;
      this._ipi.internalValue = undefined;
      this._reenlightenment.internalValue = undefined;
      this._relaxed.internalValue = undefined;
      this._reset.internalValue = undefined;
      this._runtime.internalValue = undefined;
      this._spinlocks.internalValue = undefined;
      this._synic.internalValue = undefined;
      this._synictimer.internalValue = undefined;
      this._tlbflush.internalValue = undefined;
      this._vapic.internalValue = undefined;
      this._vendorid.internalValue = undefined;
      this._vpindex.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._evmcs.internalValue = value.evmcs;
      this._frequencies.internalValue = value.frequencies;
      this._ipi.internalValue = value.ipi;
      this._reenlightenment.internalValue = value.reenlightenment;
      this._relaxed.internalValue = value.relaxed;
      this._reset.internalValue = value.reset;
      this._runtime.internalValue = value.runtime;
      this._spinlocks.internalValue = value.spinlocks;
      this._synic.internalValue = value.synic;
      this._synictimer.internalValue = value.synictimer;
      this._tlbflush.internalValue = value.tlbflush;
      this._vapic.internalValue = value.vapic;
      this._vendorid.internalValue = value.vendorid;
      this._vpindex.internalValue = value.vpindex;
    }
  }

  // evmcs - computed: false, optional: true, required: false
  private _evmcs = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcsOutputReference(this, "evmcs");
  public get evmcs() {
    return this._evmcs;
  }
  public putEvmcs(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervEvmcs) {
    this._evmcs.internalValue = value;
  }
  public resetEvmcs() {
    this._evmcs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get evmcsInput() {
    return this._evmcs.internalValue;
  }

  // frequencies - computed: false, optional: true, required: false
  private _frequencies = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequenciesOutputReference(this, "frequencies");
  public get frequencies() {
    return this._frequencies;
  }
  public putFrequencies(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervFrequencies) {
    this._frequencies.internalValue = value;
  }
  public resetFrequencies() {
    this._frequencies.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get frequenciesInput() {
    return this._frequencies.internalValue;
  }

  // ipi - computed: false, optional: true, required: false
  private _ipi = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpiOutputReference(this, "ipi");
  public get ipi() {
    return this._ipi;
  }
  public putIpi(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervIpi) {
    this._ipi.internalValue = value;
  }
  public resetIpi() {
    this._ipi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipiInput() {
    return this._ipi.internalValue;
  }

  // reenlightenment - computed: false, optional: true, required: false
  private _reenlightenment = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenmentOutputReference(this, "reenlightenment");
  public get reenlightenment() {
    return this._reenlightenment;
  }
  public putReenlightenment(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReenlightenment) {
    this._reenlightenment.internalValue = value;
  }
  public resetReenlightenment() {
    this._reenlightenment.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reenlightenmentInput() {
    return this._reenlightenment.internalValue;
  }

  // relaxed - computed: false, optional: true, required: false
  private _relaxed = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxedOutputReference(this, "relaxed");
  public get relaxed() {
    return this._relaxed;
  }
  public putRelaxed(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRelaxed) {
    this._relaxed.internalValue = value;
  }
  public resetRelaxed() {
    this._relaxed.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get relaxedInput() {
    return this._relaxed.internalValue;
  }

  // reset - computed: false, optional: true, required: false
  private _reset = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervResetOutputReference(this, "reset");
  public get reset() {
    return this._reset;
  }
  public putReset(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervReset) {
    this._reset.internalValue = value;
  }
  public resetReset() {
    this._reset.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resetInput() {
    return this._reset.internalValue;
  }

  // runtime - computed: false, optional: true, required: false
  private _runtime = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntimeOutputReference(this, "runtime");
  public get runtime() {
    return this._runtime;
  }
  public putRuntime(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervRuntime) {
    this._runtime.internalValue = value;
  }
  public resetRuntime() {
    this._runtime.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runtimeInput() {
    return this._runtime.internalValue;
  }

  // spinlocks - computed: false, optional: true, required: false
  private _spinlocks = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocksOutputReference(this, "spinlocks");
  public get spinlocks() {
    return this._spinlocks;
  }
  public putSpinlocks(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSpinlocks) {
    this._spinlocks.internalValue = value;
  }
  public resetSpinlocks() {
    this._spinlocks.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get spinlocksInput() {
    return this._spinlocks.internalValue;
  }

  // synic - computed: false, optional: true, required: false
  private _synic = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynicOutputReference(this, "synic");
  public get synic() {
    return this._synic;
  }
  public putSynic(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynic) {
    this._synic.internalValue = value;
  }
  public resetSynic() {
    this._synic.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get synicInput() {
    return this._synic.internalValue;
  }

  // synictimer - computed: false, optional: true, required: false
  private _synictimer = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimerOutputReference(this, "synictimer");
  public get synictimer() {
    return this._synictimer;
  }
  public putSynictimer(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervSynictimer) {
    this._synictimer.internalValue = value;
  }
  public resetSynictimer() {
    this._synictimer.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get synictimerInput() {
    return this._synictimer.internalValue;
  }

  // tlbflush - computed: false, optional: true, required: false
  private _tlbflush = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflushOutputReference(this, "tlbflush");
  public get tlbflush() {
    return this._tlbflush;
  }
  public putTlbflush(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervTlbflush) {
    this._tlbflush.internalValue = value;
  }
  public resetTlbflush() {
    this._tlbflush.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlbflushInput() {
    return this._tlbflush.internalValue;
  }

  // vapic - computed: false, optional: true, required: false
  private _vapic = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapicOutputReference(this, "vapic");
  public get vapic() {
    return this._vapic;
  }
  public putVapic(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVapic) {
    this._vapic.internalValue = value;
  }
  public resetVapic() {
    this._vapic.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vapicInput() {
    return this._vapic.internalValue;
  }

  // vendorid - computed: false, optional: true, required: false
  private _vendorid = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendoridOutputReference(this, "vendorid");
  public get vendorid() {
    return this._vendorid;
  }
  public putVendorid(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVendorid) {
    this._vendorid.internalValue = value;
  }
  public resetVendorid() {
    this._vendorid.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vendoridInput() {
    return this._vendorid.internalValue;
  }

  // vpindex - computed: false, optional: true, required: false
  private _vpindex = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindexOutputReference(this, "vpindex");
  public get vpindex() {
    return this._vpindex;
  }
  public putVpindex(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervVpindex) {
    this._vpindex.internalValue = value;
  }
  public resetVpindex() {
    this._vpindex.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vpindexInput() {
    return this._vpindex.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvm {
  /**
  * Hide the KVM hypervisor from standard MSR based discovery. Defaults to false
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#hidden DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#hidden}
  */
  readonly hidden?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvmToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    hidden: cdktf.booleanToTerraform(struct!.hidden),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvmToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    hidden: {
      value: cdktf.booleanToHclTerraform(struct!.hidden),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._hidden !== undefined) {
      hasAnyValues = true;
      internalValueResult.hidden = this._hidden;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._hidden = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._hidden = value.hidden;
    }
  }

  // hidden - computed: false, optional: true, required: false
  private _hidden?: boolean | cdktf.IResolvable; 
  public get hidden() {
    return this.getBooleanAttribute('hidden');
  }
  public set hidden(value: boolean | cdktf.IResolvable) {
    this._hidden = value;
  }
  public resetHidden() {
    this._hidden = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hiddenInput() {
    return this._hidden;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlock {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlockToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlock | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlockToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlock | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlockOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlock | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlock | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmm {
  /**
  * Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#enabled DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmmToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmmToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeatures {
  /**
  * ACPI enables/disables ACPI inside the guest. Defaults to enabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#acpi DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#acpi}
  */
  readonly acpi?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpi;
  /**
  * Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#apic DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#apic}
  */
  readonly apic?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApic;
  /**
  * Defaults to the machine type setting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#hyperv DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#hyperv}
  */
  readonly hyperv?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHyperv;
  /**
  * Configure how KVM presence is exposed to the guest.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kvm DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kvm}
  */
  readonly kvm?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvm;
  /**
  * Notify the guest that the host supports paravirtual spinlocks. For older kernels this feature should be explicitly disabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pvspinlock DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pvspinlock}
  */
  readonly pvspinlock?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlock;
  /**
  * SMM enables/disables System Management Mode. TSEG not yet implemented.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#smm DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#smm}
  */
  readonly smm?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmm;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeatures | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    acpi: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpiToTerraform(struct!.acpi),
    apic: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApicToTerraform(struct!.apic),
    hyperv: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervToTerraform(struct!.hyperv),
    kvm: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvmToTerraform(struct!.kvm),
    pvspinlock: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlockToTerraform(struct!.pvspinlock),
    smm: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmmToTerraform(struct!.smm),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeatures | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    acpi: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpiToHclTerraform(struct!.acpi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpi",
    },
    apic: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApicToHclTerraform(struct!.apic),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApic",
    },
    hyperv: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervToHclTerraform(struct!.hyperv),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHyperv",
    },
    kvm: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvmToHclTerraform(struct!.kvm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvm",
    },
    pvspinlock: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlockToHclTerraform(struct!.pvspinlock),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlock",
    },
    smm: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmmToHclTerraform(struct!.smm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmm",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeatures | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._acpi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.acpi = this._acpi?.internalValue;
    }
    if (this._apic?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.apic = this._apic?.internalValue;
    }
    if (this._hyperv?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hyperv = this._hyperv?.internalValue;
    }
    if (this._kvm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kvm = this._kvm?.internalValue;
    }
    if (this._pvspinlock?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.pvspinlock = this._pvspinlock?.internalValue;
    }
    if (this._smm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.smm = this._smm?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeatures | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._acpi.internalValue = undefined;
      this._apic.internalValue = undefined;
      this._hyperv.internalValue = undefined;
      this._kvm.internalValue = undefined;
      this._pvspinlock.internalValue = undefined;
      this._smm.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._acpi.internalValue = value.acpi;
      this._apic.internalValue = value.apic;
      this._hyperv.internalValue = value.hyperv;
      this._kvm.internalValue = value.kvm;
      this._pvspinlock.internalValue = value.pvspinlock;
      this._smm.internalValue = value.smm;
    }
  }

  // acpi - computed: false, optional: true, required: false
  private _acpi = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpiOutputReference(this, "acpi");
  public get acpi() {
    return this._acpi;
  }
  public putAcpi(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesAcpi) {
    this._acpi.internalValue = value;
  }
  public resetAcpi() {
    this._acpi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get acpiInput() {
    return this._acpi.internalValue;
  }

  // apic - computed: false, optional: true, required: false
  private _apic = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApicOutputReference(this, "apic");
  public get apic() {
    return this._apic;
  }
  public putApic(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesApic) {
    this._apic.internalValue = value;
  }
  public resetApic() {
    this._apic.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apicInput() {
    return this._apic.internalValue;
  }

  // hyperv - computed: false, optional: true, required: false
  private _hyperv = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHypervOutputReference(this, "hyperv");
  public get hyperv() {
    return this._hyperv;
  }
  public putHyperv(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesHyperv) {
    this._hyperv.internalValue = value;
  }
  public resetHyperv() {
    this._hyperv.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hypervInput() {
    return this._hyperv.internalValue;
  }

  // kvm - computed: false, optional: true, required: false
  private _kvm = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvmOutputReference(this, "kvm");
  public get kvm() {
    return this._kvm;
  }
  public putKvm(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesKvm) {
    this._kvm.internalValue = value;
  }
  public resetKvm() {
    this._kvm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kvmInput() {
    return this._kvm.internalValue;
  }

  // pvspinlock - computed: false, optional: true, required: false
  private _pvspinlock = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlockOutputReference(this, "pvspinlock");
  public get pvspinlock() {
    return this._pvspinlock;
  }
  public putPvspinlock(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesPvspinlock) {
    this._pvspinlock.internalValue = value;
  }
  public resetPvspinlock() {
    this._pvspinlock.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pvspinlockInput() {
    return this._pvspinlock.internalValue;
  }

  // smm - computed: false, optional: true, required: false
  private _smm = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmmOutputReference(this, "smm");
  public get smm() {
    return this._smm;
  }
  public putSmm(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesSmm) {
    this._smm.internalValue = value;
  }
  public resetSmm() {
    this._smm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get smmInput() {
    return this._smm.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpi {
  /**
  * SlicNameRef should match the volume name of a secret object. The data in the secret should be a binary blob that follows the ACPI SLIC standard, see: https://learn.microsoft.com/en-us/previous-versions/windows/hardware/design/dn653305(v=vs.85)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#slic_name_ref DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#slic_name_ref}
  */
  readonly slicNameRef?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpiToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    slic_name_ref: cdktf.stringToTerraform(struct!.slicNameRef),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpiToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    slic_name_ref: {
      value: cdktf.stringToHclTerraform(struct!.slicNameRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._slicNameRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.slicNameRef = this._slicNameRef;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._slicNameRef = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._slicNameRef = value.slicNameRef;
    }
  }

  // slic_name_ref - computed: false, optional: true, required: false
  private _slicNameRef?: string; 
  public get slicNameRef() {
    return this.getStringAttribute('slic_name_ref');
  }
  public set slicNameRef(value: string) {
    this._slicNameRef = value;
  }
  public resetSlicNameRef() {
    this._slicNameRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get slicNameRefInput() {
    return this._slicNameRef;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBios {
  /**
  * If set, the BIOS output will be transmitted over serial
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#use_serial DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#use_serial}
  */
  readonly useSerial?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBiosToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBios | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    use_serial: cdktf.booleanToTerraform(struct!.useSerial),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBiosToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBios | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    use_serial: {
      value: cdktf.booleanToHclTerraform(struct!.useSerial),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBiosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBios | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._useSerial !== undefined) {
      hasAnyValues = true;
      internalValueResult.useSerial = this._useSerial;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBios | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._useSerial = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._useSerial = value.useSerial;
    }
  }

  // use_serial - computed: false, optional: true, required: false
  private _useSerial?: boolean | cdktf.IResolvable; 
  public get useSerial() {
    return this.getBooleanAttribute('use_serial');
  }
  public set useSerial(value: boolean | cdktf.IResolvable) {
    this._useSerial = value;
  }
  public resetUseSerial() {
    this._useSerial = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useSerialInput() {
    return this._useSerial;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfi {
  /**
  * If set to true, Persistent will persist the EFI NVRAM across reboots. Defaults to false
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#persistent DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#persistent}
  */
  readonly persistent?: boolean | cdktf.IResolvable;
  /**
  * If set, SecureBoot will be enabled and the OVMF roms will be swapped for SecureBoot-enabled ones. Requires SMM to be enabled. Defaults to true
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#secure_boot DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#secure_boot}
  */
  readonly secureBoot?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfiToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    persistent: cdktf.booleanToTerraform(struct!.persistent),
    secure_boot: cdktf.booleanToTerraform(struct!.secureBoot),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfiToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    persistent: {
      value: cdktf.booleanToHclTerraform(struct!.persistent),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secure_boot: {
      value: cdktf.booleanToHclTerraform(struct!.secureBoot),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._persistent !== undefined) {
      hasAnyValues = true;
      internalValueResult.persistent = this._persistent;
    }
    if (this._secureBoot !== undefined) {
      hasAnyValues = true;
      internalValueResult.secureBoot = this._secureBoot;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._persistent = undefined;
      this._secureBoot = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._persistent = value.persistent;
      this._secureBoot = value.secureBoot;
    }
  }

  // persistent - computed: false, optional: true, required: false
  private _persistent?: boolean | cdktf.IResolvable; 
  public get persistent() {
    return this.getBooleanAttribute('persistent');
  }
  public set persistent(value: boolean | cdktf.IResolvable) {
    this._persistent = value;
  }
  public resetPersistent() {
    this._persistent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get persistentInput() {
    return this._persistent;
  }

  // secure_boot - computed: false, optional: true, required: false
  private _secureBoot?: boolean | cdktf.IResolvable; 
  public get secureBoot() {
    return this.getBooleanAttribute('secure_boot');
  }
  public set secureBoot(value: boolean | cdktf.IResolvable) {
    this._secureBoot = value;
  }
  public resetSecureBoot() {
    this._secureBoot = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secureBootInput() {
    return this._secureBoot;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloader {
  /**
  * If set (default), BIOS will be used.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#bios DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#bios}
  */
  readonly bios?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBios;
  /**
  * If set, EFI will be used instead of BIOS.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#efi DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#efi}
  */
  readonly efi?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfi;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bios: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBiosToTerraform(struct!.bios),
    efi: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfiToTerraform(struct!.efi),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bios: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBiosToHclTerraform(struct!.bios),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBios",
    },
    efi: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfiToHclTerraform(struct!.efi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfi",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bios?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bios = this._bios?.internalValue;
    }
    if (this._efi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.efi = this._efi?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._bios.internalValue = undefined;
      this._efi.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._bios.internalValue = value.bios;
      this._efi.internalValue = value.efi;
    }
  }

  // bios - computed: false, optional: true, required: false
  private _bios = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBiosOutputReference(this, "bios");
  public get bios() {
    return this._bios;
  }
  public putBios(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderBios) {
    this._bios.internalValue = value;
  }
  public resetBios() {
    this._bios.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get biosInput() {
    return this._bios.internalValue;
  }

  // efi - computed: false, optional: true, required: false
  private _efi = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfiOutputReference(this, "efi");
  public get efi() {
    return this._efi;
  }
  public putEfi(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderEfi) {
    this._efi.internalValue = value;
  }
  public resetEfi() {
    this._efi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get efiInput() {
    return this._efi.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainer {
  /**
  * Image that contains initrd / kernel files.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#image DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#image}
  */
  readonly image: string;
  /**
  * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#image_pull_policy DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#image_pull_policy}
  */
  readonly imagePullPolicy?: string;
  /**
  * ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#image_pull_secret DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#image_pull_secret}
  */
  readonly imagePullSecret?: string;
  /**
  * the fully-qualified path to the ramdisk image in the host OS
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#initrd_path DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#initrd_path}
  */
  readonly initrdPath?: string;
  /**
  * The fully-qualified path to the kernel image in the host OS
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kernel_path DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kernel_path}
  */
  readonly kernelPath?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainerToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    image: cdktf.stringToTerraform(struct!.image),
    image_pull_policy: cdktf.stringToTerraform(struct!.imagePullPolicy),
    image_pull_secret: cdktf.stringToTerraform(struct!.imagePullSecret),
    initrd_path: cdktf.stringToTerraform(struct!.initrdPath),
    kernel_path: cdktf.stringToTerraform(struct!.kernelPath),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainerToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_policy: {
      value: cdktf.stringToHclTerraform(struct!.imagePullPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secret: {
      value: cdktf.stringToHclTerraform(struct!.imagePullSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    initrd_path: {
      value: cdktf.stringToHclTerraform(struct!.initrdPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kernel_path: {
      value: cdktf.stringToHclTerraform(struct!.kernelPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._imagePullPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullPolicy = this._imagePullPolicy;
    }
    if (this._imagePullSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecret = this._imagePullSecret;
    }
    if (this._initrdPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.initrdPath = this._initrdPath;
    }
    if (this._kernelPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.kernelPath = this._kernelPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._image = undefined;
      this._imagePullPolicy = undefined;
      this._imagePullSecret = undefined;
      this._initrdPath = undefined;
      this._kernelPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._image = value.image;
      this._imagePullPolicy = value.imagePullPolicy;
      this._imagePullSecret = value.imagePullSecret;
      this._initrdPath = value.initrdPath;
      this._kernelPath = value.kernelPath;
    }
  }

  // image - computed: false, optional: false, required: true
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // image_pull_policy - computed: false, optional: true, required: false
  private _imagePullPolicy?: string; 
  public get imagePullPolicy() {
    return this.getStringAttribute('image_pull_policy');
  }
  public set imagePullPolicy(value: string) {
    this._imagePullPolicy = value;
  }
  public resetImagePullPolicy() {
    this._imagePullPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullPolicyInput() {
    return this._imagePullPolicy;
  }

  // image_pull_secret - computed: false, optional: true, required: false
  private _imagePullSecret?: string; 
  public get imagePullSecret() {
    return this.getStringAttribute('image_pull_secret');
  }
  public set imagePullSecret(value: string) {
    this._imagePullSecret = value;
  }
  public resetImagePullSecret() {
    this._imagePullSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretInput() {
    return this._imagePullSecret;
  }

  // initrd_path - computed: false, optional: true, required: false
  private _initrdPath?: string; 
  public get initrdPath() {
    return this.getStringAttribute('initrd_path');
  }
  public set initrdPath(value: string) {
    this._initrdPath = value;
  }
  public resetInitrdPath() {
    this._initrdPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initrdPathInput() {
    return this._initrdPath;
  }

  // kernel_path - computed: false, optional: true, required: false
  private _kernelPath?: string; 
  public get kernelPath() {
    return this.getStringAttribute('kernel_path');
  }
  public set kernelPath(value: string) {
    this._kernelPath = value;
  }
  public resetKernelPath() {
    this._kernelPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kernelPathInput() {
    return this._kernelPath;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBoot {
  /**
  * Container defines the container that containes kernel artifacts
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#container DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#container}
  */
  readonly container?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainer;
  /**
  * Arguments to be passed to the kernel at boot time
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kernel_args DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kernel_args}
  */
  readonly kernelArgs?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBoot | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainerToTerraform(struct!.container),
    kernel_args: cdktf.stringToTerraform(struct!.kernelArgs),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBoot | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainerToHclTerraform(struct!.container),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainer",
    },
    kernel_args: {
      value: cdktf.stringToHclTerraform(struct!.kernelArgs),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBoot | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._container?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.container = this._container?.internalValue;
    }
    if (this._kernelArgs !== undefined) {
      hasAnyValues = true;
      internalValueResult.kernelArgs = this._kernelArgs;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBoot | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._container.internalValue = undefined;
      this._kernelArgs = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._container.internalValue = value.container;
      this._kernelArgs = value.kernelArgs;
    }
  }

  // container - computed: false, optional: true, required: false
  private _container = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainerOutputReference(this, "container");
  public get container() {
    return this._container;
  }
  public putContainer(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootContainer) {
    this._container.internalValue = value;
  }
  public resetContainer() {
    this._container.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerInput() {
    return this._container.internalValue;
  }

  // kernel_args - computed: false, optional: true, required: false
  private _kernelArgs?: string; 
  public get kernelArgs() {
    return this.getStringAttribute('kernel_args');
  }
  public set kernelArgs(value: string) {
    this._kernelArgs = value;
  }
  public resetKernelArgs() {
    this._kernelArgs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kernelArgsInput() {
    return this._kernelArgs;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmware {
  /**
  * Information that can be set in the ACPI table
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#acpi DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#acpi}
  */
  readonly acpi?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpi;
  /**
  * Settings to control the bootloader that is used.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#bootloader DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#bootloader}
  */
  readonly bootloader?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloader;
  /**
  * Settings to set the kernel for booting.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#kernel_boot DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#kernel_boot}
  */
  readonly kernelBoot?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBoot;
  /**
  * The system-serial-number in SMBIOS
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#serial DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#serial}
  */
  readonly serial?: string;
  /**
  * UUID reported by the vmi bios. Defaults to a random generated uid.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#uuid DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#uuid}
  */
  readonly uuid?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmware | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    acpi: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpiToTerraform(struct!.acpi),
    bootloader: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderToTerraform(struct!.bootloader),
    kernel_boot: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootToTerraform(struct!.kernelBoot),
    serial: cdktf.stringToTerraform(struct!.serial),
    uuid: cdktf.stringToTerraform(struct!.uuid),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmware | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    acpi: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpiToHclTerraform(struct!.acpi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpi",
    },
    bootloader: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderToHclTerraform(struct!.bootloader),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloader",
    },
    kernel_boot: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootToHclTerraform(struct!.kernelBoot),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBoot",
    },
    serial: {
      value: cdktf.stringToHclTerraform(struct!.serial),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uuid: {
      value: cdktf.stringToHclTerraform(struct!.uuid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmware | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._acpi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.acpi = this._acpi?.internalValue;
    }
    if (this._bootloader?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bootloader = this._bootloader?.internalValue;
    }
    if (this._kernelBoot?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kernelBoot = this._kernelBoot?.internalValue;
    }
    if (this._serial !== undefined) {
      hasAnyValues = true;
      internalValueResult.serial = this._serial;
    }
    if (this._uuid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uuid = this._uuid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmware | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._acpi.internalValue = undefined;
      this._bootloader.internalValue = undefined;
      this._kernelBoot.internalValue = undefined;
      this._serial = undefined;
      this._uuid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._acpi.internalValue = value.acpi;
      this._bootloader.internalValue = value.bootloader;
      this._kernelBoot.internalValue = value.kernelBoot;
      this._serial = value.serial;
      this._uuid = value.uuid;
    }
  }

  // acpi - computed: false, optional: true, required: false
  private _acpi = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpiOutputReference(this, "acpi");
  public get acpi() {
    return this._acpi;
  }
  public putAcpi(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareAcpi) {
    this._acpi.internalValue = value;
  }
  public resetAcpi() {
    this._acpi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get acpiInput() {
    return this._acpi.internalValue;
  }

  // bootloader - computed: false, optional: true, required: false
  private _bootloader = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloaderOutputReference(this, "bootloader");
  public get bootloader() {
    return this._bootloader;
  }
  public putBootloader(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareBootloader) {
    this._bootloader.internalValue = value;
  }
  public resetBootloader() {
    this._bootloader.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bootloaderInput() {
    return this._bootloader.internalValue;
  }

  // kernel_boot - computed: false, optional: true, required: false
  private _kernelBoot = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBootOutputReference(this, "kernel_boot");
  public get kernelBoot() {
    return this._kernelBoot;
  }
  public putKernelBoot(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareKernelBoot) {
    this._kernelBoot.internalValue = value;
  }
  public resetKernelBoot() {
    this._kernelBoot.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kernelBootInput() {
    return this._kernelBoot.internalValue;
  }

  // serial - computed: false, optional: true, required: false
  private _serial?: string; 
  public get serial() {
    return this.getStringAttribute('serial');
  }
  public set serial(value: string) {
    this._serial = value;
  }
  public resetSerial() {
    this._serial = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serialInput() {
    return this._serial;
  }

  // uuid - computed: false, optional: true, required: false
  private _uuid?: string; 
  public get uuid() {
    return this.getStringAttribute('uuid');
  }
  public set uuid(value: string) {
    this._uuid = value;
  }
  public resetUuid() {
    this._uuid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uuidInput() {
    return this._uuid;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicy {
  /**
  * SEV-ES is required. Defaults to false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#encrypted_state DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#encrypted_state}
  */
  readonly encryptedState?: boolean | cdktf.IResolvable;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicyToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    encrypted_state: cdktf.booleanToTerraform(struct!.encryptedState),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicyToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    encrypted_state: {
      value: cdktf.booleanToHclTerraform(struct!.encryptedState),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._encryptedState !== undefined) {
      hasAnyValues = true;
      internalValueResult.encryptedState = this._encryptedState;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._encryptedState = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._encryptedState = value.encryptedState;
    }
  }

  // encrypted_state - computed: false, optional: true, required: false
  private _encryptedState?: boolean | cdktf.IResolvable; 
  public get encryptedState() {
    return this.getBooleanAttribute('encrypted_state');
  }
  public set encryptedState(value: boolean | cdktf.IResolvable) {
    this._encryptedState = value;
  }
  public resetEncryptedState() {
    this._encryptedState = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get encryptedStateInput() {
    return this._encryptedState;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySev {
  /**
  * If specified, run the attestation process for a vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#attestation DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#attestation}
  */
  readonly attestation?: { [key: string]: string };
  /**
  * Base64 encoded guest owner's Diffie-Hellman key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#dh_cert DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#dh_cert}
  */
  readonly dhCert?: string;
  /**
  * Guest policy flags as defined in AMD SEV API specification. Note: due to security reasons it is not allowed to enable guest debugging. Therefore NoDebug flag is not exposed to users and is always true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#policy DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#policy}
  */
  readonly policy?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicy;
  /**
  * Base64 encoded session blob.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#session DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#session}
  */
  readonly session?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySev | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    attestation: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.attestation),
    dh_cert: cdktf.stringToTerraform(struct!.dhCert),
    policy: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicyToTerraform(struct!.policy),
    session: cdktf.stringToTerraform(struct!.session),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySev | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    attestation: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.attestation),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    dh_cert: {
      value: cdktf.stringToHclTerraform(struct!.dhCert),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    policy: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicyToHclTerraform(struct!.policy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicy",
    },
    session: {
      value: cdktf.stringToHclTerraform(struct!.session),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySev | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._attestation !== undefined) {
      hasAnyValues = true;
      internalValueResult.attestation = this._attestation;
    }
    if (this._dhCert !== undefined) {
      hasAnyValues = true;
      internalValueResult.dhCert = this._dhCert;
    }
    if (this._policy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.policy = this._policy?.internalValue;
    }
    if (this._session !== undefined) {
      hasAnyValues = true;
      internalValueResult.session = this._session;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySev | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._attestation = undefined;
      this._dhCert = undefined;
      this._policy.internalValue = undefined;
      this._session = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._attestation = value.attestation;
      this._dhCert = value.dhCert;
      this._policy.internalValue = value.policy;
      this._session = value.session;
    }
  }

  // attestation - computed: false, optional: true, required: false
  private _attestation?: { [key: string]: string }; 
  public get attestation() {
    return this.getStringMapAttribute('attestation');
  }
  public set attestation(value: { [key: string]: string }) {
    this._attestation = value;
  }
  public resetAttestation() {
    this._attestation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attestationInput() {
    return this._attestation;
  }

  // dh_cert - computed: false, optional: true, required: false
  private _dhCert?: string; 
  public get dhCert() {
    return this.getStringAttribute('dh_cert');
  }
  public set dhCert(value: string) {
    this._dhCert = value;
  }
  public resetDhCert() {
    this._dhCert = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dhCertInput() {
    return this._dhCert;
  }

  // policy - computed: false, optional: true, required: false
  private _policy = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicyOutputReference(this, "policy");
  public get policy() {
    return this._policy;
  }
  public putPolicy(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevPolicy) {
    this._policy.internalValue = value;
  }
  public resetPolicy() {
    this._policy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policyInput() {
    return this._policy.internalValue;
  }

  // session - computed: false, optional: true, required: false
  private _session?: string; 
  public get session() {
    return this.getStringAttribute('session');
  }
  public set session(value: string) {
    this._session = value;
  }
  public resetSession() {
    this._session = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sessionInput() {
    return this._session;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurity {
  /**
  * AMD Secure Encrypted Virtualization (SEV).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#sev DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#sev}
  */
  readonly sev?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySev;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurityToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    sev: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevToTerraform(struct!.sev),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurityToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    sev: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevToHclTerraform(struct!.sev),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySev",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._sev?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sev = this._sev?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._sev.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._sev.internalValue = value.sev;
    }
  }

  // sev - computed: false, optional: true, required: false
  private _sev = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySevOutputReference(this, "sev");
  public get sev() {
    return this._sev;
  }
  public putSev(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecuritySev) {
    this._sev.internalValue = value;
  }
  public resetSev() {
    this._sev.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sevInput() {
    return this._sev.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachine {
  /**
  * QEMU machine type is the actual chipset of the VirtualMachineInstance.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#type DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachineToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachine | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachineToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachine | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachineOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachine | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachine | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._type = value.type;
    }
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepages {
  /**
  * PageSize specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#page_size DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#page_size}
  */
  readonly pageSize?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepagesToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepages | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    page_size: cdktf.stringToTerraform(struct!.pageSize),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepagesToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepages | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    page_size: {
      value: cdktf.stringToHclTerraform(struct!.pageSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepagesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepages | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._pageSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.pageSize = this._pageSize;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepages | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._pageSize = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._pageSize = value.pageSize;
    }
  }

  // page_size - computed: false, optional: true, required: false
  private _pageSize?: string; 
  public get pageSize() {
    return this.getStringAttribute('page_size');
  }
  public set pageSize(value: string) {
    this._pageSize = value;
  }
  public resetPageSize() {
    this._pageSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pageSizeInput() {
    return this._pageSize;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemory {
  /**
  * Guest allows to specifying the amount of memory which is visible inside the Guest OS. The Guest must lie between Requests and Limits from the resources section. Defaults to the requested memory in the resources section if not specified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#guest DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#guest}
  */
  readonly guest?: string;
  /**
  * Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#hugepages DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#hugepages}
  */
  readonly hugepages?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepages;
  /**
  * MaxGuest allows to specify the maximum amount of memory which is visible inside the Guest OS. The delta between MaxGuest and Guest is the amount of memory that can be hot(un)plugged.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#max_guest DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#max_guest}
  */
  readonly maxGuest?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemory | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    guest: cdktf.stringToTerraform(struct!.guest),
    hugepages: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepagesToTerraform(struct!.hugepages),
    max_guest: cdktf.stringToTerraform(struct!.maxGuest),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemory | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    guest: {
      value: cdktf.stringToHclTerraform(struct!.guest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hugepages: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepagesToHclTerraform(struct!.hugepages),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepages",
    },
    max_guest: {
      value: cdktf.stringToHclTerraform(struct!.maxGuest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemory | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._guest !== undefined) {
      hasAnyValues = true;
      internalValueResult.guest = this._guest;
    }
    if (this._hugepages?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hugepages = this._hugepages?.internalValue;
    }
    if (this._maxGuest !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxGuest = this._maxGuest;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemory | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._guest = undefined;
      this._hugepages.internalValue = undefined;
      this._maxGuest = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._guest = value.guest;
      this._hugepages.internalValue = value.hugepages;
      this._maxGuest = value.maxGuest;
    }
  }

  // guest - computed: false, optional: true, required: false
  private _guest?: string; 
  public get guest() {
    return this.getStringAttribute('guest');
  }
  public set guest(value: string) {
    this._guest = value;
  }
  public resetGuest() {
    this._guest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get guestInput() {
    return this._guest;
  }

  // hugepages - computed: false, optional: true, required: false
  private _hugepages = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepagesOutputReference(this, "hugepages");
  public get hugepages() {
    return this._hugepages;
  }
  public putHugepages(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryHugepages) {
    this._hugepages.internalValue = value;
  }
  public resetHugepages() {
    this._hugepages.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hugepagesInput() {
    return this._hugepages.internalValue;
  }

  // max_guest - computed: false, optional: true, required: false
  private _maxGuest?: string; 
  public get maxGuest() {
    return this.getStringAttribute('max_guest');
  }
  public set maxGuest(value: string) {
    this._maxGuest = value;
  }
  public resetMaxGuest() {
    this._maxGuest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxGuestInput() {
    return this._maxGuest;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResources {
  /**
  * Limits describes the maximum amount of compute resources allowed. Valid resource keys are 'memory' and 'cpu'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#limits DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#limits}
  */
  readonly limits?: { [key: string]: string };
  /**
  * Don't ask the scheduler to take the guest-management overhead into account. Instead put the overhead only into the container's memory limit. This can lead to crashes if all memory is in use on a node. Defaults to false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#overcommit_guest_overhead DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#overcommit_guest_overhead}
  */
  readonly overcommitGuestOverhead?: boolean | cdktf.IResolvable;
  /**
  * Requests is a description of the initial vmi resources. Valid resource keys are 'memory' and 'cpu'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#requests DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#requests}
  */
  readonly requests?: { [key: string]: string };
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResourcesToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    limits: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.limits),
    overcommit_guest_overhead: cdktf.booleanToTerraform(struct!.overcommitGuestOverhead),
    requests: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requests),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResourcesToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    limits: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.limits),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    overcommit_guest_overhead: {
      value: cdktf.booleanToHclTerraform(struct!.overcommitGuestOverhead),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    requests: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requests),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._limits !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits;
    }
    if (this._overcommitGuestOverhead !== undefined) {
      hasAnyValues = true;
      internalValueResult.overcommitGuestOverhead = this._overcommitGuestOverhead;
    }
    if (this._requests !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._limits = undefined;
      this._overcommitGuestOverhead = undefined;
      this._requests = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._limits = value.limits;
      this._overcommitGuestOverhead = value.overcommitGuestOverhead;
      this._requests = value.requests;
    }
  }

  // limits - computed: false, optional: true, required: false
  private _limits?: { [key: string]: string }; 
  public get limits() {
    return this.getStringMapAttribute('limits');
  }
  public set limits(value: { [key: string]: string }) {
    this._limits = value;
  }
  public resetLimits() {
    this._limits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits;
  }

  // overcommit_guest_overhead - computed: false, optional: true, required: false
  private _overcommitGuestOverhead?: boolean | cdktf.IResolvable; 
  public get overcommitGuestOverhead() {
    return this.getBooleanAttribute('overcommit_guest_overhead');
  }
  public set overcommitGuestOverhead(value: boolean | cdktf.IResolvable) {
    this._overcommitGuestOverhead = value;
  }
  public resetOvercommitGuestOverhead() {
    this._overcommitGuestOverhead = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get overcommitGuestOverheadInput() {
    return this._overcommitGuestOverhead;
  }

  // requests - computed: false, optional: true, required: false
  private _requests?: { [key: string]: string }; 
  public get requests() {
    return this.getStringMapAttribute('requests');
  }
  public set requests(value: { [key: string]: string }) {
    this._requests = value;
  }
  public resetRequests() {
    this._requests = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomain {
  /**
  * Chassis specifies the chassis info passed to the domain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#chassis DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#chassis}
  */
  readonly chassis?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassis;
  /**
  * Clock sets the clock and timers of the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#clock DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#clock}
  */
  readonly clock?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClock;
  /**
  * CPU allow specified the detailed CPU topology inside the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#cpu DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#cpu}
  */
  readonly cpu?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpu;
  /**
  * Devices allows adding disks, network interfaces, and others
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#devices DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#devices}
  */
  readonly devices: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevices;
  /**
  * Features like acpi, apic, hyperv, smm.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#features DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#features}
  */
  readonly features?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeatures;
  /**
  * Firmware.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#firmware DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#firmware}
  */
  readonly firmware?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmware;
  /**
  * Controls whether or not disks will share IOThreads. Omitting IOThreadsPolicy disables use of IOThreads. One of: shared, auto
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#io_threads_policy DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#io_threads_policy}
  */
  readonly ioThreadsPolicy?: string;
  /**
  * Launch Security setting of the vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#launch_security DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#launch_security}
  */
  readonly launchSecurity?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurity;
  /**
  * Machine type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#machine DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#machine}
  */
  readonly machine?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachine;
  /**
  * Memory allow specifying the VMI memory features.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#memory DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#memory}
  */
  readonly memory?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemory;
  /**
  * Resources describes the Compute Resources required by this vmi.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#resources DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResources;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    chassis: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassisToTerraform(struct!.chassis),
    clock: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockToTerraform(struct!.clock),
    cpu: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuToTerraform(struct!.cpu),
    devices: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesToTerraform(struct!.devices),
    features: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesToTerraform(struct!.features),
    firmware: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareToTerraform(struct!.firmware),
    io_threads_policy: cdktf.stringToTerraform(struct!.ioThreadsPolicy),
    launch_security: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurityToTerraform(struct!.launchSecurity),
    machine: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachineToTerraform(struct!.machine),
    memory: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryToTerraform(struct!.memory),
    resources: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResourcesToTerraform(struct!.resources),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    chassis: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassisToHclTerraform(struct!.chassis),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassis",
    },
    clock: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockToHclTerraform(struct!.clock),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClock",
    },
    cpu: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuToHclTerraform(struct!.cpu),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpu",
    },
    devices: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesToHclTerraform(struct!.devices),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevices",
    },
    features: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesToHclTerraform(struct!.features),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeatures",
    },
    firmware: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareToHclTerraform(struct!.firmware),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmware",
    },
    io_threads_policy: {
      value: cdktf.stringToHclTerraform(struct!.ioThreadsPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    launch_security: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurityToHclTerraform(struct!.launchSecurity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurity",
    },
    machine: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachineToHclTerraform(struct!.machine),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachine",
    },
    memory: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryToHclTerraform(struct!.memory),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemory",
    },
    resources: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResources",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomain | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._chassis?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.chassis = this._chassis?.internalValue;
    }
    if (this._clock?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clock = this._clock?.internalValue;
    }
    if (this._cpu?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cpu = this._cpu?.internalValue;
    }
    if (this._devices?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.devices = this._devices?.internalValue;
    }
    if (this._features?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.features = this._features?.internalValue;
    }
    if (this._firmware?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.firmware = this._firmware?.internalValue;
    }
    if (this._ioThreadsPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.ioThreadsPolicy = this._ioThreadsPolicy;
    }
    if (this._launchSecurity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.launchSecurity = this._launchSecurity?.internalValue;
    }
    if (this._machine?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.machine = this._machine?.internalValue;
    }
    if (this._memory?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.memory = this._memory?.internalValue;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomain | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._chassis.internalValue = undefined;
      this._clock.internalValue = undefined;
      this._cpu.internalValue = undefined;
      this._devices.internalValue = undefined;
      this._features.internalValue = undefined;
      this._firmware.internalValue = undefined;
      this._ioThreadsPolicy = undefined;
      this._launchSecurity.internalValue = undefined;
      this._machine.internalValue = undefined;
      this._memory.internalValue = undefined;
      this._resources.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._chassis.internalValue = value.chassis;
      this._clock.internalValue = value.clock;
      this._cpu.internalValue = value.cpu;
      this._devices.internalValue = value.devices;
      this._features.internalValue = value.features;
      this._firmware.internalValue = value.firmware;
      this._ioThreadsPolicy = value.ioThreadsPolicy;
      this._launchSecurity.internalValue = value.launchSecurity;
      this._machine.internalValue = value.machine;
      this._memory.internalValue = value.memory;
      this._resources.internalValue = value.resources;
    }
  }

  // chassis - computed: false, optional: true, required: false
  private _chassis = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassisOutputReference(this, "chassis");
  public get chassis() {
    return this._chassis;
  }
  public putChassis(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainChassis) {
    this._chassis.internalValue = value;
  }
  public resetChassis() {
    this._chassis.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get chassisInput() {
    return this._chassis.internalValue;
  }

  // clock - computed: false, optional: true, required: false
  private _clock = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClockOutputReference(this, "clock");
  public get clock() {
    return this._clock;
  }
  public putClock(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainClock) {
    this._clock.internalValue = value;
  }
  public resetClock() {
    this._clock.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clockInput() {
    return this._clock.internalValue;
  }

  // cpu - computed: false, optional: true, required: false
  private _cpu = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpuOutputReference(this, "cpu");
  public get cpu() {
    return this._cpu;
  }
  public putCpu(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainCpu) {
    this._cpu.internalValue = value;
  }
  public resetCpu() {
    this._cpu.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cpuInput() {
    return this._cpu.internalValue;
  }

  // devices - computed: false, optional: false, required: true
  private _devices = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevicesOutputReference(this, "devices");
  public get devices() {
    return this._devices;
  }
  public putDevices(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainDevices) {
    this._devices.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get devicesInput() {
    return this._devices.internalValue;
  }

  // features - computed: false, optional: true, required: false
  private _features = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeaturesOutputReference(this, "features");
  public get features() {
    return this._features;
  }
  public putFeatures(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFeatures) {
    this._features.internalValue = value;
  }
  public resetFeatures() {
    this._features.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get featuresInput() {
    return this._features.internalValue;
  }

  // firmware - computed: false, optional: true, required: false
  private _firmware = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmwareOutputReference(this, "firmware");
  public get firmware() {
    return this._firmware;
  }
  public putFirmware(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainFirmware) {
    this._firmware.internalValue = value;
  }
  public resetFirmware() {
    this._firmware.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get firmwareInput() {
    return this._firmware.internalValue;
  }

  // io_threads_policy - computed: false, optional: true, required: false
  private _ioThreadsPolicy?: string; 
  public get ioThreadsPolicy() {
    return this.getStringAttribute('io_threads_policy');
  }
  public set ioThreadsPolicy(value: string) {
    this._ioThreadsPolicy = value;
  }
  public resetIoThreadsPolicy() {
    this._ioThreadsPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ioThreadsPolicyInput() {
    return this._ioThreadsPolicy;
  }

  // launch_security - computed: false, optional: true, required: false
  private _launchSecurity = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurityOutputReference(this, "launch_security");
  public get launchSecurity() {
    return this._launchSecurity;
  }
  public putLaunchSecurity(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainLaunchSecurity) {
    this._launchSecurity.internalValue = value;
  }
  public resetLaunchSecurity() {
    this._launchSecurity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get launchSecurityInput() {
    return this._launchSecurity.internalValue;
  }

  // machine - computed: false, optional: true, required: false
  private _machine = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachineOutputReference(this, "machine");
  public get machine() {
    return this._machine;
  }
  public putMachine(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMachine) {
    this._machine.internalValue = value;
  }
  public resetMachine() {
    this._machine.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get machineInput() {
    return this._machine.internalValue;
  }

  // memory - computed: false, optional: true, required: false
  private _memory = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemoryOutputReference(this, "memory");
  public get memory() {
    return this._memory;
  }
  public putMemory(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainMemory) {
    this._memory.internalValue = value;
  }
  public resetMemory() {
    this._memory.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get memoryInput() {
    return this._memory.internalValue;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecDomainResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExec {
  /**
  * Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#command DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExecToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExecToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeaders {
  /**
  * The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * The header field value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#value DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#value}
  */
  readonly value: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeadersToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeadersToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeadersOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGet {
  /**
  * Host name to connect to, defaults to the pod IP. You probably want to set 'Host' in httpHeaders instead.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#host DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * Custom headers to set in the request. HTTP allows repeated headers.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#http_headers DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#http_headers}
  */
  readonly httpHeaders?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeaders[] | cdktf.IResolvable;
  /**
  * Path to access on the HTTP server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#path DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#port DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#port}
  */
  readonly port: string;
  /**
  * Scheme to use for connecting to the host. Defaults to HTTP.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#scheme DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    http_headers: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeadersToTerraform, false)(struct!.httpHeaders),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.stringToTerraform(struct!.port),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_headers: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeadersToHclTerraform, false)(struct!.httpHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeadersList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._httpHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpHeaders = this._httpHeaders?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._httpHeaders.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._httpHeaders.internalValue = value.httpHeaders;
      this._path = value.path;
      this._port = value.port;
      this._scheme = value.scheme;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // http_headers - computed: false, optional: true, required: false
  private _httpHeaders = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeadersList(this, "http_headers", false);
  public get httpHeaders() {
    return this._httpHeaders;
  }
  public putHttpHeaders(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetHttpHeaders[] | cdktf.IResolvable) {
    this._httpHeaders.internalValue = value;
  }
  public resetHttpHeaders() {
    this._httpHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpHeadersInput() {
    return this._httpHeaders.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: false, required: true
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocket {
  /**
  * Optional: Host name to connect to, defaults to the pod IP.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#host DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#port DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#port}
  */
  readonly port: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocketToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    port: cdktf.stringToTerraform(struct!.port),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocketToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._port = value.port;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // port - computed: false, optional: false, required: true
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbe {
  /**
  * One and only one of the following should be specified. Exec specifies the action to take, it will be executed on the guest through the qemu-guest-agent. If the guest agent is not available, this probe will fail.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#exec DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#exec}
  */
  readonly exec?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExec;
  /**
  * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#failure_threshold DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#failure_threshold}
  */
  readonly failureThreshold?: number;
  /**
  * GuestAgentPing contacts the qemu-guest-agent for availability checks.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#guest_agent_ping DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#guest_agent_ping}
  */
  readonly guestAgentPing?: { [key: string]: string };
  /**
  * HTTPGet specifies the http request to perform.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#http_get DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#http_get}
  */
  readonly httpGet?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGet;
  /**
  * Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#initial_delay_seconds DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#initial_delay_seconds}
  */
  readonly initialDelaySeconds?: number;
  /**
  * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#period_seconds DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#period_seconds}
  */
  readonly periodSeconds?: number;
  /**
  * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#success_threshold DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#success_threshold}
  */
  readonly successThreshold?: number;
  /**
  * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#tcp_socket DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#tcp_socket}
  */
  readonly tcpSocket?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocket;
  /**
  * Number of seconds after which the probe times out. For exec probes the timeout fails the probe but does not terminate the command running on the guest. This means a blocking command can result in an increasing load on the guest. A small buffer will be added to the resulting workload exec probe to compensate for delays caused by the qemu guest exec mechanism. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#timeout_seconds DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#timeout_seconds}
  */
  readonly timeoutSeconds?: number;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exec: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExecToTerraform(struct!.exec),
    failure_threshold: cdktf.numberToTerraform(struct!.failureThreshold),
    guest_agent_ping: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.guestAgentPing),
    http_get: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetToTerraform(struct!.httpGet),
    initial_delay_seconds: cdktf.numberToTerraform(struct!.initialDelaySeconds),
    period_seconds: cdktf.numberToTerraform(struct!.periodSeconds),
    success_threshold: cdktf.numberToTerraform(struct!.successThreshold),
    tcp_socket: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocketToTerraform(struct!.tcpSocket),
    timeout_seconds: cdktf.numberToTerraform(struct!.timeoutSeconds),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exec: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExecToHclTerraform(struct!.exec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExec",
    },
    failure_threshold: {
      value: cdktf.numberToHclTerraform(struct!.failureThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    guest_agent_ping: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.guestAgentPing),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    http_get: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetToHclTerraform(struct!.httpGet),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGet",
    },
    initial_delay_seconds: {
      value: cdktf.numberToHclTerraform(struct!.initialDelaySeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.periodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    success_threshold: {
      value: cdktf.numberToHclTerraform(struct!.successThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tcp_socket: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocketToHclTerraform(struct!.tcpSocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocket",
    },
    timeout_seconds: {
      value: cdktf.numberToHclTerraform(struct!.timeoutSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbe | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.exec = this._exec?.internalValue;
    }
    if (this._failureThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.failureThreshold = this._failureThreshold;
    }
    if (this._guestAgentPing !== undefined) {
      hasAnyValues = true;
      internalValueResult.guestAgentPing = this._guestAgentPing;
    }
    if (this._httpGet?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpGet = this._httpGet?.internalValue;
    }
    if (this._initialDelaySeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.initialDelaySeconds = this._initialDelaySeconds;
    }
    if (this._periodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.periodSeconds = this._periodSeconds;
    }
    if (this._successThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.successThreshold = this._successThreshold;
    }
    if (this._tcpSocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tcpSocket = this._tcpSocket?.internalValue;
    }
    if (this._timeoutSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeoutSeconds = this._timeoutSeconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbe | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exec.internalValue = undefined;
      this._failureThreshold = undefined;
      this._guestAgentPing = undefined;
      this._httpGet.internalValue = undefined;
      this._initialDelaySeconds = undefined;
      this._periodSeconds = undefined;
      this._successThreshold = undefined;
      this._tcpSocket.internalValue = undefined;
      this._timeoutSeconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exec.internalValue = value.exec;
      this._failureThreshold = value.failureThreshold;
      this._guestAgentPing = value.guestAgentPing;
      this._httpGet.internalValue = value.httpGet;
      this._initialDelaySeconds = value.initialDelaySeconds;
      this._periodSeconds = value.periodSeconds;
      this._successThreshold = value.successThreshold;
      this._tcpSocket.internalValue = value.tcpSocket;
      this._timeoutSeconds = value.timeoutSeconds;
    }
  }

  // exec - computed: false, optional: true, required: false
  private _exec = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExecOutputReference(this, "exec");
  public get exec() {
    return this._exec;
  }
  public putExec(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeExec) {
    this._exec.internalValue = value;
  }
  public resetExec() {
    this._exec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get execInput() {
    return this._exec.internalValue;
  }

  // failure_threshold - computed: false, optional: true, required: false
  private _failureThreshold?: number; 
  public get failureThreshold() {
    return this.getNumberAttribute('failure_threshold');
  }
  public set failureThreshold(value: number) {
    this._failureThreshold = value;
  }
  public resetFailureThreshold() {
    this._failureThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get failureThresholdInput() {
    return this._failureThreshold;
  }

  // guest_agent_ping - computed: false, optional: true, required: false
  private _guestAgentPing?: { [key: string]: string }; 
  public get guestAgentPing() {
    return this.getStringMapAttribute('guest_agent_ping');
  }
  public set guestAgentPing(value: { [key: string]: string }) {
    this._guestAgentPing = value;
  }
  public resetGuestAgentPing() {
    this._guestAgentPing = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get guestAgentPingInput() {
    return this._guestAgentPing;
  }

  // http_get - computed: false, optional: true, required: false
  private _httpGet = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGetOutputReference(this, "http_get");
  public get httpGet() {
    return this._httpGet;
  }
  public putHttpGet(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeHttpGet) {
    this._httpGet.internalValue = value;
  }
  public resetHttpGet() {
    this._httpGet.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpGetInput() {
    return this._httpGet.internalValue;
  }

  // initial_delay_seconds - computed: false, optional: true, required: false
  private _initialDelaySeconds?: number; 
  public get initialDelaySeconds() {
    return this.getNumberAttribute('initial_delay_seconds');
  }
  public set initialDelaySeconds(value: number) {
    this._initialDelaySeconds = value;
  }
  public resetInitialDelaySeconds() {
    this._initialDelaySeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initialDelaySecondsInput() {
    return this._initialDelaySeconds;
  }

  // period_seconds - computed: false, optional: true, required: false
  private _periodSeconds?: number; 
  public get periodSeconds() {
    return this.getNumberAttribute('period_seconds');
  }
  public set periodSeconds(value: number) {
    this._periodSeconds = value;
  }
  public resetPeriodSeconds() {
    this._periodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get periodSecondsInput() {
    return this._periodSeconds;
  }

  // success_threshold - computed: false, optional: true, required: false
  private _successThreshold?: number; 
  public get successThreshold() {
    return this.getNumberAttribute('success_threshold');
  }
  public set successThreshold(value: number) {
    this._successThreshold = value;
  }
  public resetSuccessThreshold() {
    this._successThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get successThresholdInput() {
    return this._successThreshold;
  }

  // tcp_socket - computed: false, optional: true, required: false
  private _tcpSocket = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocketOutputReference(this, "tcp_socket");
  public get tcpSocket() {
    return this._tcpSocket;
  }
  public putTcpSocket(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecLivenessProbeTcpSocket) {
    this._tcpSocket.internalValue = value;
  }
  public resetTcpSocket() {
    this._tcpSocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tcpSocketInput() {
    return this._tcpSocket.internalValue;
  }

  // timeout_seconds - computed: false, optional: true, required: false
  private _timeoutSeconds?: number; 
  public get timeoutSeconds() {
    return this.getNumberAttribute('timeout_seconds');
  }
  public set timeoutSeconds(value: number) {
    this._timeoutSeconds = value;
  }
  public resetTimeoutSeconds() {
    this._timeoutSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeoutSecondsInput() {
    return this._timeoutSeconds;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultus {
  /**
  * Select the default network and add it to the multus-cni.io/default-network annotation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#default DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#default}
  */
  readonly default?: boolean | cdktf.IResolvable;
  /**
  * References to a NetworkAttachmentDefinition CRD object. Format: <networkName>, <namespace>/<networkName>. If namespace is not specified, VMI namespace is assumed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#network_name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#network_name}
  */
  readonly networkName: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultusToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultus | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default: cdktf.booleanToTerraform(struct!.default),
    network_name: cdktf.stringToTerraform(struct!.networkName),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultusToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultus | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default: {
      value: cdktf.booleanToHclTerraform(struct!.default),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    network_name: {
      value: cdktf.stringToHclTerraform(struct!.networkName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultusOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultus | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._default !== undefined) {
      hasAnyValues = true;
      internalValueResult.default = this._default;
    }
    if (this._networkName !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkName = this._networkName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultus | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._default = undefined;
      this._networkName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._default = value.default;
      this._networkName = value.networkName;
    }
  }

  // default - computed: false, optional: true, required: false
  private _default?: boolean | cdktf.IResolvable; 
  public get default() {
    return this.getBooleanAttribute('default');
  }
  public set default(value: boolean | cdktf.IResolvable) {
    this._default = value;
  }
  public resetDefault() {
    this._default = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultInput() {
    return this._default;
  }

  // network_name - computed: false, optional: false, required: true
  private _networkName?: string; 
  public get networkName() {
    return this.getStringAttribute('network_name');
  }
  public set networkName(value: string) {
    this._networkName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get networkNameInput() {
    return this._networkName;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPod {
  /**
  * IPv6 CIDR for the vm network. Defaults to fd10:0:2::/120 if not specified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#vm_i_pv6_network_cidr DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#vm_i_pv6_network_cidr}
  */
  readonly vmIPv6NetworkCidr?: string;
  /**
  * CIDR for vm network. Default 10.0.2.0/24 if not specified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#vm_network_cidr DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#vm_network_cidr}
  */
  readonly vmNetworkCidr?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPodToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPod | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    vm_i_pv6_network_cidr: cdktf.stringToTerraform(struct!.vmIPv6NetworkCidr),
    vm_network_cidr: cdktf.stringToTerraform(struct!.vmNetworkCidr),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPodToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPod | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    vm_i_pv6_network_cidr: {
      value: cdktf.stringToHclTerraform(struct!.vmIPv6NetworkCidr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vm_network_cidr: {
      value: cdktf.stringToHclTerraform(struct!.vmNetworkCidr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPodOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPod | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._vmIPv6NetworkCidr !== undefined) {
      hasAnyValues = true;
      internalValueResult.vmIPv6NetworkCidr = this._vmIPv6NetworkCidr;
    }
    if (this._vmNetworkCidr !== undefined) {
      hasAnyValues = true;
      internalValueResult.vmNetworkCidr = this._vmNetworkCidr;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPod | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._vmIPv6NetworkCidr = undefined;
      this._vmNetworkCidr = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._vmIPv6NetworkCidr = value.vmIPv6NetworkCidr;
      this._vmNetworkCidr = value.vmNetworkCidr;
    }
  }

  // vm_i_pv6_network_cidr - computed: false, optional: true, required: false
  private _vmIPv6NetworkCidr?: string; 
  public get vmIPv6NetworkCidr() {
    return this.getStringAttribute('vm_i_pv6_network_cidr');
  }
  public set vmIPv6NetworkCidr(value: string) {
    this._vmIPv6NetworkCidr = value;
  }
  public resetVmIPv6NetworkCidr() {
    this._vmIPv6NetworkCidr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vmIPv6NetworkCidrInput() {
    return this._vmIPv6NetworkCidr;
  }

  // vm_network_cidr - computed: false, optional: true, required: false
  private _vmNetworkCidr?: string; 
  public get vmNetworkCidr() {
    return this.getStringAttribute('vm_network_cidr');
  }
  public set vmNetworkCidr(value: string) {
    this._vmNetworkCidr = value;
  }
  public resetVmNetworkCidr() {
    this._vmNetworkCidr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vmNetworkCidrInput() {
    return this._vmNetworkCidr;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworks {
  /**
  * Represents the multus cni network.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#multus DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#multus}
  */
  readonly multus?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultus;
  /**
  * Network name. Must be a DNS_LABEL and unique within the vm. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Represents the stock pod network interface.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#pod DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#pod}
  */
  readonly pod?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPod;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    multus: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultusToTerraform(struct!.multus),
    name: cdktf.stringToTerraform(struct!.name),
    pod: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPodToTerraform(struct!.pod),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    multus: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultusToHclTerraform(struct!.multus),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultus",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pod: {
      value: dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPodToHclTerraform(struct!.pod),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPod",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworks | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._multus?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.multus = this._multus?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._pod?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.pod = this._pod?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworks | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._multus.internalValue = undefined;
      this._name = undefined;
      this._pod.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._multus.internalValue = value.multus;
      this._name = value.name;
      this._pod.internalValue = value.pod;
    }
  }

  // multus - computed: false, optional: true, required: false
  private _multus = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultusOutputReference(this, "multus");
  public get multus() {
    return this._multus;
  }
  public putMultus(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksMultus) {
    this._multus.internalValue = value;
  }
  public resetMultus() {
    this._multus.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get multusInput() {
    return this._multus.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // pod - computed: false, optional: true, required: false
  private _pod = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPodOutputReference(this, "pod");
  public get pod() {
    return this._pod;
  }
  public putPod(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksPod) {
    this._pod.internalValue = value;
  }
  public resetPod() {
    this._pod.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podInput() {
    return this._pod.internalValue;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworks[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecNetworksOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeExec {
  /**
  * Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#command DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeExecToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeExecToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeaders {
  /**
  * The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#name DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * The header field value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#value DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#value}
  */
  readonly value: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeadersToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeadersToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeadersOutputReference {
    return new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGet {
  /**
  * Host name to connect to, defaults to the pod IP. You probably want to set 'Host' in httpHeaders instead.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#host DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * Custom headers to set in the request. HTTP allows repeated headers.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#http_headers DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#http_headers}
  */
  readonly httpHeaders?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeaders[] | cdktf.IResolvable;
  /**
  * Path to access on the HTTP server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#path DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#port DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#port}
  */
  readonly port: string;
  /**
  * Scheme to use for connecting to the host. Defaults to HTTP.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#scheme DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    http_headers: cdktf.listMapper(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeadersToTerraform, false)(struct!.httpHeaders),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.stringToTerraform(struct!.port),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_headers: {
      value: cdktf.listMapperHcl(dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeadersToHclTerraform, false)(struct!.httpHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeadersList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._httpHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpHeaders = this._httpHeaders?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._httpHeaders.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._httpHeaders.internalValue = value.httpHeaders;
      this._path = value.path;
      this._port = value.port;
      this._scheme = value.scheme;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // http_headers - computed: false, optional: true, required: false
  private _httpHeaders = new DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeadersList(this, "http_headers", false);
  public get httpHeaders() {
    return this._httpHeaders;
  }
  public putHttpHeaders(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeHttpGetHttpHeaders[] | cdktf.IResolvable) {
    this._httpHeaders.internalValue = value;
  }
  public resetHttpHeaders() {
    this._httpHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpHeadersInput() {
    return this._httpHeaders.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: false, required: true
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeTcpSocket {
  /**
  * Optional: Host name to connect to, defaults to the pod IP.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#host DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/infrastructure_cluster_x_k8s_io_kubevirt_machine_v1alpha1_manifest#port DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1Manifest#port}
  */
  readonly port: string;
}

export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeTcpSocketToTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    port: cdktf.stringToTerraform(struct!.port),
  }
}


export function dataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeTcpSocketToHclTerraform(struct?: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeTcpSocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeTcpSocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SInfrastructureClusterXK8SIoKubevirtMachineV1Alpha1ManifestSpecVirtualMachineTemplateSpecTemplateSpecReadinessProbeTcpSocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._port = value.port;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // port - computed: false, optional: false, required: true
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
